<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0"
  xmlns:atom="http://www.w3.org/2005/Atom"
  xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>야망찬 개발자의 블로그</title>
    <link>https://sowon-dev.github.io/</link>
    
    <atom:link href="https://sowon-dev.github.io/rss2.xml" rel="self" type="application/rss+xml"/>
    
    <description>devlog</description>
    <pubDate>Wed, 18 Oct 2023 07:38:16 GMT</pubDate>
    <generator>http://hexo.io/</generator>
    
    <item>
      <title>[Moment.js] isSame 오늘날짜와 비교가 안되는 이유</title>
      <link>https://sowon-dev.github.io/2023/10/17/231018momentjs-issame/</link>
      <guid>https://sowon-dev.github.io/2023/10/17/231018momentjs-issame/</guid>
      <pubDate>Tue, 17 Oct 2023 22:05:03 GMT</pubDate>
      
      <description>&lt;p&gt;달력을 만들면서 오늘날짜와 일치하는 셀에는 음영을 넣고 싶었다.&lt;br&gt;여기서 잠깐🤚&lt;br&gt;모먼트js로 달력을 만들고싶다면 &lt;a href=&quot;https://sowon-dev.github.io/2022/08/30/220831js-calendar/&quot;&gt;포스팅:: 동적 달력(캘린더)만들기&lt;/a&gt;을 참조하면 된다.&lt;/p&gt;</description>
      
      
      
      <content:encoded><![CDATA[<p>달력을 만들면서 오늘날짜와 일치하는 셀에는 음영을 넣고 싶었다.<br>여기서 잠깐🤚<br>모먼트js로 달력을 만들고싶다면 <a href="https://sowon-dev.github.io/2022/08/30/220831js-calendar/">포스팅:: 동적 달력(캘린더)만들기</a>을 참조하면 된다.</p><a id="more"></a><h1 id="기존코드"><a href="#기존코드" class="headerlink" title="기존코드"></a>기존코드</h1><p>이번달 1일부터 for문을 돌면서 현재 날짜와 일치하면 class today를 추가해주는 코드를 구현했다. </p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> today = moment();</span><br><span class="line"><span class="keyword">const</span> firstDayOfMonth = moment(&#123;today.year(), today.month() + <span class="number">1</span>&#125;).startOf(<span class="string">'month'</span>);</span><br><span class="line"><span class="keyword">let</span> currentDate = firstDayOfMonth.clone().startOf(<span class="string">'week'</span>); <span class="comment">//달력의 현재 셀 날짜</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">let</span> i = <span class="number">0</span>; i &lt; <span class="number">7</span>; i++) &#123;</span><br><span class="line">  <span class="keyword">let</span> cell = $(<span class="string">"&lt;td&gt;&lt;/td&gt;"</span>);</span><br><span class="line">  </span><br><span class="line">  <span class="comment">// 오늘일자인 경우 class 추가하기</span></span><br><span class="line">  <span class="keyword">if</span>(currentDate.isSame(today)&#123;</span><br><span class="line">    cell.addClass(<span class="string">"today"</span>);</span><br><span class="line">  &#125;</span><br><span class="line">  </span><br><span class="line">  tableRow.append(cell);</span><br><span class="line">  currentDate.add(<span class="number">1</span>, <span class="string">'days'</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><br><br><br></p><h1 id="해결코드"><a href="#해결코드" class="headerlink" title="해결코드"></a>해결코드</h1><p>isSame은 연월일뿐만 아니라 시분초도 같이 확인한 후 같은지 아닌지 판단한다.<br>따라서 포맷도 <code>YYYY-MM-DD</code>로 맞춰주면서 시분초를 00으로 바꿔주는 <code>startOf(&#39;day&#39;)</code>를 사용하면 해결된다.</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 오늘일자인 경우 class 추가하기</span></span><br><span class="line"><span class="keyword">if</span>(moment(currentDate.startOf(<span class="string">'day'</span>), <span class="string">"YYYY-MM-DD"</span>).isSame(moment(today.startOf(<span class="string">'day'</span>), <span class="string">"YYYY-MM-DD"</span>)))&#123;</span><br><span class="line">  cell.addClass(<span class="string">"today"</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content:encoded>
      
      
      <category domain="https://sowon-dev.github.io/categories/JavaScript/">JavaScript</category>
      
      
      <category domain="https://sowon-dev.github.io/tags/Moment-js/">Moment.js</category>
      
      
      <comments>https://sowon-dev.github.io/2023/10/17/231018momentjs-issame/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>[HTML]IMG태그 기본이미지설정(DEFAULT IMG, ONERROR속성) 에러 해결</title>
      <link>https://sowon-dev.github.io/2023/10/15/231016imgtag-onerrer/</link>
      <guid>https://sowon-dev.github.io/2023/10/15/231016imgtag-onerrer/</guid>
      <pubDate>Sun, 15 Oct 2023 20:01:56 GMT</pubDate>
      
      <description>&lt;p&gt;이미지태그사용시 src경로에 이미지가 없다면 기본 이미지를 설정하고 싶었다.&lt;br&gt;찾아보니 onerror 속성을 찾아서 손쉽게 처리할 수 있었다. 그런데 여전히 디폴트이미지를 못 불러오는 에러가 발생했다.&lt;/p&gt;</description>
      
      
      
      <content:encoded><![CDATA[<p>이미지태그사용시 src경로에 이미지가 없다면 기본 이미지를 설정하고 싶었다.<br>찾아보니 onerror 속성을 찾아서 손쉽게 처리할 수 있었다. 그런데 여전히 디폴트이미지를 못 불러오는 에러가 발생했다.</p><a id="more"></a><h1 id="기존코드"><a href="#기존코드" class="headerlink" title="기존코드"></a>기존코드</h1><figure class="highlight jsp"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;img src=<span class="string">"/resources/custom/images/main_$&#123;idx&#125;.png"</span> onerror=<span class="string">"/resources/custom/images/main_default.png"</span> alt=<span class="string">"$&#123;name&#125;이미지"</span>&gt;</span><br></pre></td></tr></table></figure><p>잘했다고 생각했으나 여전히 이미지가 엑박이 떴다.<br>해당 경로에 이미지도 제대로 있는 걸 확인했는데 왜 onerror에서 설정한 경로의 기본이미지가 보이지않을까?</p><p><br><br><br></p><h1 id="해결코드"><a href="#해결코드" class="headerlink" title="해결코드"></a>해결코드</h1><figure class="highlight jsp"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;img src=<span class="string">"/resources/custom/images/main_$&#123;idx&#125;.png"</span> onerror=<span class="string">"this.src='/resources/custom/images/main_default.png'"</span> alt=<span class="string">"$&#123;name&#125; 아이콘"</span>&gt;</span><br></pre></td></tr></table></figure><p>onerror는 함수가 들어가는 곳으로 src속성과는 다르다. 따라서 그냥 경로를 입력하는 것이 아니라 함수로 입력해야한다.<br>따라서 <code>this.src=</code>를 추가하여 함수로 디폴트png가 있는 src로 연결하도록 바꿔주니 원하는대로 정상작동했다.</p><p>해결!</p><p><br><br><br></p><h1 id="참고"><a href="#참고" class="headerlink" title="참고"></a>참고</h1><ul><li><a href="https://www.w3schools.com/jsref/event_onerror.asp">onerror Event</a></li></ul>]]></content:encoded>
      
      
      <category domain="https://sowon-dev.github.io/categories/HTML-CSS/">HTML&amp;CSS</category>
      
      
      <category domain="https://sowon-dev.github.io/tags/HTML-CSS/">HTML&amp;CSS</category>
      
      
      <comments>https://sowon-dev.github.io/2023/10/15/231016imgtag-onerrer/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>[ajax]분명 success인데 왜 계속 error로 가는걸까?</title>
      <link>https://sowon-dev.github.io/2023/09/10/230911ajax-sucess-error/</link>
      <guid>https://sowon-dev.github.io/2023/09/10/230911ajax-sucess-error/</guid>
      <pubDate>Sun, 10 Sep 2023 15:39:57 GMT</pubDate>
      
      <description>&lt;p&gt;DB저장도 잘되고 controller를 디버그에서 확인해보니 result값도 정상적으로 잘 작동되었는데 화면에서만 오면 ajax에서 success를 타지않고 error로 빠져버렸다.&lt;br&gt;왜일까?&lt;/p&gt;</description>
      
      
      
      <content:encoded><![CDATA[<p>DB저장도 잘되고 controller를 디버그에서 확인해보니 result값도 정상적으로 잘 작동되었는데 화면에서만 오면 ajax에서 success를 타지않고 error로 빠져버렸다.<br>왜일까?</p><a id="more"></a><p><br><br><br></p><h1 id="문제와-원인"><a href="#문제와-원인" class="headerlink" title="문제와 원인"></a>문제와 원인</h1><ul><li><p>controller 코드</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@PostMapping</span>(value = <span class="string">"/admin/new"</span>)</span><br><span class="line"><span class="function"><span class="keyword">public</span> BooleanAndMessageResult <span class="title">save</span><span class="params">(HttpServletRequest request, RedirectAttributes redirectAttributes, @RequestBody List&lt;Admin&gt; list)</span> </span>&#123;</span><br><span class="line">BooleanAndMessageResult result = <span class="keyword">new</span> BooleanAndMessageResult();</span><br><span class="line">Site site = (Site) request.getAttribute(<span class="string">"site"</span>);</span><br><span class="line"><span class="keyword">for</span> (Admin a : list) &#123;</span><br><span class="line">a.setSiteid(site.getSiteid());</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">result.setResult(<span class="keyword">true</span>);</span><br><span class="line">result.setMessage(<span class="string">"정상적으로 등록 되었습니다."</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">try</span> &#123;</span><br><span class="line">adminService.insertAdminList(list);</span><br><span class="line">&#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">result.setResult(<span class="keyword">false</span>);</span><br><span class="line">result.setMessage(<span class="string">"등록에 실패 하였습니다."</span>);</span><br><span class="line">LOGGER.error(<span class="string">"error : "</span>, e);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> result;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>js코드</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line">$.confirm(&#123;</span><br><span class="line">theme: <span class="string">'supervan'</span>,</span><br><span class="line">title: <span class="string">'운영정보관리 저장'</span>,</span><br><span class="line">content: <span class="string">'저장하시겠습니까?'</span>,</span><br><span class="line">confirmButton: <span class="string">'예'</span>,</span><br><span class="line">cancelButton: <span class="string">'아니오'</span>,</span><br><span class="line">confirm: <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;        </span><br><span class="line">$.ajax(&#123;</span><br><span class="line">type: <span class="string">"POST"</span></span><br><span class="line">, <span class="attr">url</span>: <span class="string">"/admin/new"</span></span><br><span class="line">, <span class="attr">contentType</span> : <span class="string">"application/json; charset:utf-8"</span></span><br><span class="line">, <span class="attr">data</span>: <span class="built_in">JSON</span>.stringify(jList)</span><br><span class="line">, <span class="attr">dataType</span>: <span class="string">'json'</span></span><br><span class="line">, <span class="attr">success</span>: <span class="function"><span class="keyword">function</span>(<span class="params">data</span>)</span>&#123;</span><br><span class="line"><span class="keyword">if</span>(data.result == <span class="literal">true</span>)&#123;</span><br><span class="line">alert(<span class="string">"저장에 성공했습니다."</span>);</span><br><span class="line">setTimeout(<span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;location.reload(<span class="literal">true</span>);&#125;, <span class="number">2000</span>);</span><br><span class="line">&#125; <span class="keyword">else</span> <span class="keyword">if</span>(data.result == <span class="literal">false</span>)&#123;</span><br><span class="line">alert(data.message);</span><br><span class="line"><span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">, <span class="attr">error</span>: <span class="function"><span class="keyword">function</span>(<span class="params">request,status,error</span>)</span>&#123;  </span><br><span class="line">alert(<span class="string">"에러가 발생했습니다. 새로고침합니다."</span>);</span><br><span class="line">location.href = <span class="string">"/admin/infosetting"</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;);</span><br><span class="line">&#125;,</span><br><span class="line">cancel: <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;&#125;</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure></li></ul><p>위 코드는 한 가지 잘못된 점이 있다.</p><p><br><br></p><h2 id="원인-ResponseBody-누락"><a href="#원인-ResponseBody-누락" class="headerlink" title="원인: @ResponseBody 누락"></a>원인: @ResponseBody 누락</h2><p>@ResponseBody 어노테이션을 이용하면 자바 객체를 HTTP 응답 분문의 객체로 변환하여 클라이언트에 전송 할 수 있다.<br>body에 리턴값을 담아주지 않았기때문에 ajax의 success가 아닌 error로 빠진것이다.</p><p><br><br><br></p><h1 id="해결코드"><a href="#해결코드" class="headerlink" title="해결코드"></a>해결코드</h1><ul><li><p>controller코드</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@PostMapping</span>(value = <span class="string">"/admin/new"</span>)</span><br><span class="line"><span class="meta">@ResponseBody</span> <span class="comment">// 까먹자말고 추가</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> BooleanAndMessageResult <span class="title">save</span><span class="params">(HttpServletRequest request, RedirectAttributes redirectAttributes, @RequestBody List&lt;Admin&gt; list)</span> </span>&#123;</span><br><span class="line">BooleanAndMessageResult result = <span class="keyword">new</span> BooleanAndMessageResult();</span><br><span class="line">Site site = (Site) request.getAttribute(<span class="string">"site"</span>);</span><br><span class="line"><span class="keyword">for</span> (Admin a : list) &#123;</span><br><span class="line">a.setSiteid(site.getSiteid());</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">result.setResult(<span class="keyword">true</span>);</span><br><span class="line">result.setMessage(<span class="string">"정상적으로 등록 되었습니다."</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">try</span> &#123;</span><br><span class="line">adminService.insertAdminList(list);</span><br><span class="line">&#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">result.setResult(<span class="keyword">false</span>);</span><br><span class="line">result.setMessage(<span class="string">"등록에 실패 하였습니다."</span>);</span><br><span class="line">LOGGER.error(<span class="string">"error : "</span>, e);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> result;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>js코드</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line">$.confirm(&#123;</span><br><span class="line">theme: <span class="string">'supervan'</span>,</span><br><span class="line">title: <span class="string">'운영정보관리 저장'</span>,</span><br><span class="line">content: <span class="string">'저장하시겠습니까?'</span>,</span><br><span class="line">confirmButton: <span class="string">'예'</span>,</span><br><span class="line">cancelButton: <span class="string">'아니오'</span>,</span><br><span class="line">confirm: <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;        </span><br><span class="line">$.ajax(&#123;</span><br><span class="line">type: <span class="string">"POST"</span></span><br><span class="line">, <span class="attr">url</span>: <span class="string">"/admin/new"</span></span><br><span class="line">, <span class="attr">contentType</span> : <span class="string">"application/json; charset:utf-8"</span></span><br><span class="line">, <span class="attr">data</span>: <span class="built_in">JSON</span>.stringify(jList)</span><br><span class="line">, <span class="attr">dataType</span>: <span class="string">'json'</span></span><br><span class="line">, <span class="attr">success</span>: <span class="function"><span class="keyword">function</span>(<span class="params">data</span>)</span>&#123;</span><br><span class="line"><span class="keyword">if</span>(data.result == <span class="literal">true</span>)&#123;</span><br><span class="line">alert(<span class="string">"저장에 성공했습니다."</span>);</span><br><span class="line">setTimeout(<span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;location.reload(<span class="literal">true</span>);&#125;, <span class="number">2000</span>);</span><br><span class="line">&#125; <span class="keyword">else</span> <span class="keyword">if</span>(data.result == <span class="literal">false</span>)&#123;</span><br><span class="line">alert(data.message);</span><br><span class="line"><span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">, <span class="attr">error</span>: <span class="function"><span class="keyword">function</span>(<span class="params">request,status,error</span>)</span>&#123;  </span><br><span class="line">alert(<span class="string">"에러가 발생했습니다. 새로고침합니다."</span>);</span><br><span class="line">location.href = <span class="string">"/admin/infosetting"</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;);</span><br><span class="line">&#125;,</span><br><span class="line">cancel: <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;&#125;</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure></li></ul><p><br><br></p><h2 id="그래도-해결이-안된다면"><a href="#그래도-해결이-안된다면" class="headerlink" title="그래도 해결이 안된다면?"></a>그래도 해결이 안된다면?</h2><p>ajax에서 잘못된 dataType설정했을 가능성이 높다!<br>jQuery ajax의 setting 중 dataType은 response를 어떤 데이터 형식으로 파싱할 지를 설정하는 것이다.<br><code>dataType: &#39;json&#39;</code>으르 설정했기에 리턴타입을 json으로 주어야하는데 단순 String타입으로 준건 아닌지 체크해보자.<br>데이터형식이 맞지않으면 ajax의 success가 아닌 error로 빠진다.</p>]]></content:encoded>
      
      
      <category domain="https://sowon-dev.github.io/categories/JavaScript/">JavaScript</category>
      
      
      <category domain="https://sowon-dev.github.io/tags/ajax/">ajax</category>
      
      
      <comments>https://sowon-dev.github.io/2023/09/10/230911ajax-sucess-error/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>[MySQL/MariaDB] 트리메뉴 WITH RECURSIVE로 정렬하기</title>
      <link>https://sowon-dev.github.io/2023/08/21/230822withrecursive-treemenu/</link>
      <guid>https://sowon-dev.github.io/2023/08/21/230822withrecursive-treemenu/</guid>
      <pubDate>Mon, 21 Aug 2023 22:31:43 GMT</pubDate>
      
      <description>&lt;p&gt;트리구조의 메뉴를 select하는 과정에서 1뎁스가 10개가 넘어가니 문제가 발생했다.&lt;/p&gt;</description>
      
      
      
      <content:encoded><![CDATA[<p>트리구조의 메뉴를 select하는 과정에서 1뎁스가 10개가 넘어가니 문제가 발생했다.</p><a id="more"></a><h1 id="문제"><a href="#문제" class="headerlink" title="문제"></a>문제</h1><ul><li>기존코드<figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> SITEMENUID, PARENTID, SEQ, FULLSEQ</span><br><span class="line"><span class="keyword">FROM</span> (</span><br><span class="line"> <span class="keyword">SELECT</span> <span class="string">'1'</span> <span class="keyword">AS</span> <span class="keyword">DEPTH</span></span><br><span class="line"> , <span class="string">'00_00_00'</span> <span class="keyword">AS</span> FULLSEQ</span><br><span class="line"> , A1.PARENTID</span><br><span class="line"> , A1.SITEMENUID</span><br><span class="line"> , A1.SEQ</span><br><span class="line"><span class="keyword">FROM</span> tb_site_menu A1</span><br><span class="line"><span class="keyword">UNION</span> <span class="keyword">ALL</span>   </span><br><span class="line"><span class="keyword">SELECT</span> <span class="string">'2'</span> <span class="keyword">AS</span> <span class="keyword">DEPTH</span></span><br><span class="line"> , <span class="keyword">CONCAT</span>(A2.SEQ,<span class="string">'_'</span>,A1.SEQ) <span class="keyword">AS</span> FULLSEQ</span><br><span class="line"> , A2.PARENTID</span><br><span class="line"> , A2.SITEMENUID</span><br><span class="line"> , A2.SEQ</span><br><span class="line"><span class="keyword">FROM</span> tb_site_menu A1</span><br><span class="line"><span class="keyword">INNER</span> <span class="keyword">JOIN</span> tb_site_menu A2</span><br><span class="line"><span class="keyword">ON</span> A1.SITEMENUID = A2.PARENTID</span><br><span class="line">    <span class="keyword">UNION</span> <span class="keyword">ALL</span> </span><br><span class="line"><span class="keyword">SELECT</span> <span class="string">'3'</span> <span class="keyword">AS</span> <span class="keyword">DEPTH</span></span><br><span class="line">, <span class="keyword">CONCAT</span>(A2.SEQ,<span class="string">'_'</span>,A1.SEQ,<span class="string">'_'</span>,A3.SEQ) <span class="keyword">AS</span> FULLSEQ</span><br><span class="line">, A3.PARENTID</span><br><span class="line">, A3.SITEMENUID</span><br><span class="line">, A3.SEQ</span><br><span class="line"><span class="keyword">FROM</span> tb_site_menu A1</span><br><span class="line"><span class="keyword">INNER</span> <span class="keyword">JOIN</span> tb_site_menu A2</span><br><span class="line"><span class="keyword">ON</span> A1.SITEMENUID = A2.PARENTID</span><br><span class="line"><span class="keyword">INNER</span> <span class="keyword">JOIN</span> tb_site_menu A3</span><br><span class="line"><span class="keyword">ON</span> A2.SITEMENUID = A3.PARENTID</span><br><span class="line">)  TBL</span><br><span class="line"><span class="keyword">ORDER</span> <span class="keyword">BY</span> FULLSEQ;</span><br></pre></td></tr></table></figure></li></ul><p>1번 다음에 2번이 와야하는데 VARCHAR라서 1다음에 10이 와버렸다.</p><ul><li>콘솔<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">&lt;1뎁스-2뎁스-3뎁스&gt;</span><br><span class="line">00_00_00</span><br><span class="line">1_01</span><br><span class="line">1_02_01</span><br><span class="line">1_02_02</span><br><span class="line">1_03</span><br><span class="line">10_01</span><br><span class="line">10_02</span><br><span class="line">2_01_01</span><br><span class="line">2_01_02</span><br><span class="line">2_02</span><br></pre></td></tr></table></figure></li></ul><p><br><br><br></p><h1 id="LPAD로-해결"><a href="#LPAD로-해결" class="headerlink" title="LPAD로 해결"></a>LPAD로 해결</h1><p>팀장님이 자리수를 맞추면 해결되는 문제라고 알려주셨다.</p><ul><li><p>LPAD추가된 코드</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> SITEMENUID, PARENTID, SEQ, FULLSEQ</span><br><span class="line"><span class="keyword">FROM</span> (</span><br><span class="line"> <span class="keyword">SELECT</span> <span class="string">'1'</span> <span class="keyword">AS</span> <span class="keyword">DEPTH</span></span><br><span class="line"> , <span class="string">'00_00_00'</span> <span class="keyword">AS</span> FULLSEQ</span><br><span class="line"> , A1.PARENTID</span><br><span class="line"> , A1.SITEMENUID</span><br><span class="line"> , A1.SEQ</span><br><span class="line"><span class="keyword">FROM</span> tb_site_menu A1</span><br><span class="line"><span class="keyword">UNION</span> <span class="keyword">ALL</span>   </span><br><span class="line"><span class="keyword">SELECT</span> <span class="string">'2'</span> <span class="keyword">AS</span> <span class="keyword">DEPTH</span></span><br><span class="line"> <span class="comment">-- , CONCAT(A2.SEQ,'_',A1.SEQ) AS FULLSEQ</span></span><br><span class="line"> , <span class="keyword">CONCAT</span>(<span class="keyword">LPAD</span>(A2.SEQ, <span class="number">2</span> , <span class="string">'0'</span>),<span class="string">'_'</span>,<span class="keyword">LPAD</span>(A1.SEQ, <span class="number">2</span> , <span class="string">'0'</span>)) <span class="keyword">AS</span> FULLSEQ</span><br><span class="line"> , A2.PARENTID</span><br><span class="line"> , A2.SITEMENUID</span><br><span class="line"> , A2.SEQ</span><br><span class="line"><span class="keyword">FROM</span> tb_site_menu A1</span><br><span class="line"><span class="keyword">INNER</span> <span class="keyword">JOIN</span> tb_site_menu A2</span><br><span class="line"><span class="keyword">ON</span> A1.SITEMENUID = A2.PARENTID</span><br><span class="line">    <span class="keyword">UNION</span> <span class="keyword">ALL</span> </span><br><span class="line"><span class="keyword">SELECT</span> <span class="string">'3'</span> <span class="keyword">AS</span> <span class="keyword">DEPTH</span></span><br><span class="line"><span class="comment">-- , CONCAT(A2.SEQ,'_',A1.SEQ,'_',A3.SEQ) AS FULLSEQ</span></span><br><span class="line">, <span class="keyword">CONCAT</span>(<span class="keyword">LPAD</span>(A2.SEQ, <span class="number">2</span> , <span class="string">'0'</span>),<span class="string">'_'</span>,<span class="keyword">LPAD</span>(A1.SEQ, <span class="number">2</span> , <span class="string">'0'</span>),<span class="string">'_'</span>,<span class="keyword">LPAD</span>(A3.SEQ, <span class="number">2</span> , <span class="string">'0'</span>)) <span class="keyword">AS</span> FULLSEQ</span><br><span class="line">, A3.PARENTID</span><br><span class="line">, A3.SITEMENUID</span><br><span class="line">, A3.SEQ</span><br><span class="line"><span class="keyword">FROM</span> tb_site_menu A1</span><br><span class="line"><span class="keyword">INNER</span> <span class="keyword">JOIN</span> tb_site_menu A2</span><br><span class="line"><span class="keyword">ON</span> A1.SITEMENUID = A2.PARENTID</span><br><span class="line"><span class="keyword">INNER</span> <span class="keyword">JOIN</span> tb_site_menu A3</span><br><span class="line"><span class="keyword">ON</span> A2.SITEMENUID = A3.PARENTID</span><br><span class="line">)  TBL</span><br><span class="line"><span class="keyword">ORDER</span> <span class="keyword">BY</span> FULLSEQ;</span><br></pre></td></tr></table></figure></li><li><p>콘솔</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">&lt;1뎁스-2뎁스-3뎁스&gt;</span><br><span class="line">00_00_00</span><br><span class="line">01_01</span><br><span class="line">01_02_01</span><br><span class="line">01_02_02</span><br><span class="line">01_03</span><br><span class="line">02_01_01</span><br><span class="line">02_01_02</span><br><span class="line">02_02</span><br><span class="line">10_01</span><br><span class="line">10_02</span><br></pre></td></tr></table></figure></li></ul><p>원하는대로 잘 출력!!!</p><p><br><br><br></p><h1 id="더나은-방법-with-recursive"><a href="#더나은-방법-with-recursive" class="headerlink" title="더나은 방법: with recursive"></a>더나은 방법: with recursive</h1><p>팀장님께서 LPAD 대신 with recursive를 써서 쿼리를 더 간단하게 만들수있다고 알려주셨다.</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">with</span> <span class="keyword">recursive</span> menuTree <span class="keyword">as</span> (</span><br><span class="line"><span class="keyword">SELECT</span> <span class="number">1</span> <span class="keyword">AS</span> <span class="keyword">DEPTH</span></span><br><span class="line">, <span class="keyword">cast</span>(<span class="string">'00'</span> <span class="keyword">as</span> <span class="built_in">VARCHAR</span>(<span class="number">256</span>)) <span class="keyword">AS</span> FULLSEQ</span><br><span class="line">, A1.PARENTID</span><br><span class="line">, A1.SITEMENUID</span><br><span class="line">, A1.SEQ</span><br><span class="line"><span class="keyword">FROM</span> tb_site_menu A1</span><br><span class="line"><span class="keyword">UNION</span> <span class="keyword">ALL</span></span><br><span class="line"><span class="keyword">SELECT</span> parent.DEPTH + <span class="number">1</span> <span class="keyword">AS</span> <span class="keyword">DEPTH</span></span><br><span class="line">, <span class="keyword">CONCAT</span>(parent.SEQ, <span class="string">'-'</span>, <span class="keyword">LPAD</span>(child.SEQ, <span class="number">2</span>, <span class="string">'0'</span>)) <span class="keyword">AS</span> FULLSEQ</span><br><span class="line">, child.PARENTID</span><br><span class="line">, child.SITEMENUID</span><br><span class="line">, child.SEQ</span><br><span class="line"><span class="keyword">FROM</span> menuTree <span class="keyword">parent</span></span><br><span class="line"><span class="keyword">JOIN</span> tb_site_menu <span class="keyword">child</span></span><br><span class="line"><span class="keyword">ON</span> parent.SITEMENUID = child.PARENTID</span><br><span class="line">)</span><br><span class="line"><span class="keyword">SELECT</span> * <span class="keyword">FROM</span> menuTree <span class="keyword">ORDER</span> <span class="keyword">BY</span> FULLSEQ;</span><br></pre></td></tr></table></figure><p>와 역시 팀장님 최고다…</p><p><br><br><br></p><h1 id="참고"><a href="#참고" class="headerlink" title="참고"></a>참고</h1><ul><li>팀장님 지식</li><li><a href="https://sowon-dev.github.io/2021/10/19/211020SQL-recurisve/">WITH RECURSIVE 초간단 설명</a></li></ul>]]></content:encoded>
      
      
      <category domain="https://sowon-dev.github.io/categories/Database/">Database</category>
      
      <category domain="https://sowon-dev.github.io/categories/Database/MySQL/">MySQL</category>
      
      
      <category domain="https://sowon-dev.github.io/tags/MariaDB/">MariaDB</category>
      
      
      <comments>https://sowon-dev.github.io/2023/08/21/230822withrecursive-treemenu/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>org.springframework.beans.factory.BeanCreationException: Error creating bean with name 해결 의외의 방법</title>
      <link>https://sowon-dev.github.io/2023/08/10/230811jre-jdk/</link>
      <guid>https://sowon-dev.github.io/2023/08/10/230811jre-jdk/</guid>
      <pubDate>Thu, 10 Aug 2023 20:35:47 GMT</pubDate>
      
      <description>&lt;p&gt;잘 되던 maven프로젝트가 refresh만 하면 BeanCreationException을 내며 서버런에 실패했다.&lt;/p&gt;</description>
      
      
      
      <content:encoded><![CDATA[<p>잘 되던 maven프로젝트가 refresh만 하면 BeanCreationException을 내며 서버런에 실패했다.</p><a id="more"></a><h1 id="임시방편"><a href="#임시방편" class="headerlink" title="임시방편"></a>임시방편</h1><p>임시방편으로 BeanCreationException이 나는 경우 <code>Project &gt; Clean</code> 후 서버 재시작하곤 했는데 여간 귀찮고 시간이 많이 드는 일이 아닐 수 없다.</p><p><br><br><br></p><h1 id="의외의-해결방법"><a href="#의외의-해결방법" class="headerlink" title="의외의 해결방법"></a>의외의 해결방법</h1><p>성과장님이 JRE 부분을 확인해주셨다.<br><code>Window &gt; Preferences &gt; Java &gt; Installed JREs</code>에서 경로를 jdk로 잡았었는데 그걸 jdk 하위 jre폴더로 잡아보라고 해주셨다.<br>그리고 놀랍게도 해결!<br>원인은 정확히는 모르겠으나… 일주일 내내 구글링해도해도 절대 해결되지않던 이놈의 BeanCreationException 오류를 해결했다!</p><p><br><br><br></p><h1 id="JRE-VS-JDK"><a href="#JRE-VS-JDK" class="headerlink" title="JRE VS JDK"></a>JRE VS JDK</h1><p>JDK가 JRE를 포함하고 있다.</p><h2 id="JDK-Java-Development-Kit-란"><a href="#JDK-Java-Development-Kit-란" class="headerlink" title="JDK(Java Development Kit)란?"></a>JDK(Java Development Kit)란?</h2><ul><li>JDK는 자바 개발키트(Java Development Kit)의 약자</li><li>JDK안에는 개발 시 필요한 라이브러리들과 javac, javadoc 등의 개발 도구들을 포함되어 있다.</li><li>개발을 하려면 당연히 실행도 시켜줘야 하기 때문에 JRE (Java Runtime Environment)도 함께 포함되어 있습니다.</li></ul><p><br><br></p><h2 id="JRE-Java-Runtime-Environment-란"><a href="#JRE-Java-Runtime-Environment-란" class="headerlink" title="JRE(Java Runtime Environment)란?"></a>JRE(Java Runtime Environment)란?</h2><ul><li>JRE는 자바 실행 환경(Java Runtime Environment)의 약자</li><li>자바로 만들어진 프로그램을 실행시키는데 필요한 라이브러리들과 각종 API, 그리고 자바 가상 머신 (JVM)이 포함</li><li>개발(쓰기)은 안되고 실행(읽기)만 된다</li></ul><br># 참고- 성과장님 지식- [자바 JDK, JRE의 차이점(JDK란? JRE란?)](https://coding-factory.tistory.com/826)]]></content:encoded>
      
      
      <category domain="https://sowon-dev.github.io/categories/Spring/">Spring</category>
      
      
      <category domain="https://sowon-dev.github.io/tags/%EC%98%A4%EB%A5%98%EC%9D%BC%EC%A7%80/">오류일지</category>
      
      
      <comments>https://sowon-dev.github.io/2023/08/10/230811jre-jdk/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>[MySQL/MariaDB] ON DUPLICATE KEY UPDATE</title>
      <link>https://sowon-dev.github.io/2023/08/01/230802mysql-on-duplicate-key-update/</link>
      <guid>https://sowon-dev.github.io/2023/08/01/230802mysql-on-duplicate-key-update/</guid>
      <pubDate>Tue, 01 Aug 2023 20:41:32 GMT</pubDate>
      
      <description>&lt;p&gt;SQL 쿼리 작성시 PK키가 중복되는 경우 지정한 데이터만 INSERT가 아닌 UPDATE 시킬 수는 없을까?&lt;br&gt;ON DUPLICATE KEY UPDATE를 사용하면 된다.&lt;/p&gt;</description>
      
      
      
      <content:encoded><![CDATA[<p>SQL 쿼리 작성시 PK키가 중복되는 경우 지정한 데이터만 INSERT가 아닌 UPDATE 시킬 수는 없을까?<br>ON DUPLICATE KEY UPDATE를 사용하면 된다.</p><a id="more"></a><h1 id="ON-DUPLICATE-KEY-UPDATE"><a href="#ON-DUPLICATE-KEY-UPDATE" class="headerlink" title="ON DUPLICATE KEY UPDATE"></a>ON DUPLICATE KEY UPDATE</h1><p>INSERT시 PK나 UNIQUE KEY가 중복인 경우 원하는 컬럼만 UPDATE하고 중복되지 않은 경우에는 INSERT된다.</p><p><br><br><br></p><h1 id="예시코드"><a href="#예시코드" class="headerlink" title="예시코드"></a>예시코드</h1><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- 테이블생성</span></span><br><span class="line"> <span class="keyword">CREATE</span> <span class="keyword">TABLE</span> tb_user (</span><br><span class="line"> user_id <span class="built_in">INT</span>(<span class="number">11</span>) <span class="keyword">NOT</span> <span class="literal">NULL</span> AUTO_INCREMENT PRIMARY <span class="keyword">KEY</span></span><br><span class="line">    , <span class="keyword">name</span> <span class="built_in">VARCHAR</span>(<span class="number">20</span>) <span class="keyword">NOT</span> <span class="literal">NULL</span></span><br><span class="line">    , mobile <span class="built_in">VARCHAR</span>(<span class="number">20</span>) <span class="keyword">NOT</span> <span class="literal">NULL</span></span><br><span class="line">    , address <span class="built_in">VARCHAR</span>(<span class="number">50</span>) <span class="keyword">DEFAULT</span> <span class="literal">NULL</span></span><br><span class="line">    , reg_dt <span class="built_in">DATE</span>()</span><br><span class="line">, update_dt <span class="built_in">DATE</span>()</span><br><span class="line">  ) <span class="keyword">ENGINE</span>=<span class="keyword">INNODB</span> <span class="keyword">DEFAULT</span> <span class="keyword">CHARSET</span>=utf8 </span><br><span class="line"></span><br><span class="line"><span class="comment">-- 제약조건</span></span><br><span class="line"> <span class="keyword">ALTER</span> <span class="keyword">TABLE</span> tb_user <span class="keyword">ADD</span> <span class="keyword">UNIQUE</span> (<span class="keyword">name</span>, mobile);</span><br></pre></td></tr></table></figure><p>테이블 tb_user에서 pk는 user_id이고 AUTO_INCREMENT이고 mobile이 UNIQUE KEY인 경우를 예시로 해보자.<br>이름과 휴대전화번호가 쌍으로 없는 경우 INSERT하고, 존재하는 경우 주소만 UPDATE하는 쿼리는 아래와 같다.</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> tb_user</span><br><span class="line">(</span><br><span class="line"><span class="keyword">name</span>,</span><br><span class="line">mobile,</span><br><span class="line">address,</span><br><span class="line">reg_dt</span><br><span class="line">) <span class="keyword">VALUES</span> (</span><br><span class="line"><span class="string">'김테스트'</span>, </span><br><span class="line"><span class="string">'010-1234-1234,</span></span><br><span class="line"><span class="string">'</span>서울 강남구<span class="string">',</span></span><br><span class="line"><span class="string">now()</span></span><br><span class="line"><span class="string">) ON DUPLICATE KEY UPDATE </span></span><br><span class="line"><span class="string">  address = #&#123;address&#125;,</span></span><br><span class="line"><span class="string">  update_dt = now()</span></span><br></pre></td></tr></table></figure>]]></content:encoded>
      
      
      <category domain="https://sowon-dev.github.io/categories/Database/">Database</category>
      
      <category domain="https://sowon-dev.github.io/categories/Database/MySQL/">MySQL</category>
      
      
      <category domain="https://sowon-dev.github.io/tags/MariaDB/">MariaDB</category>
      
      
      <comments>https://sowon-dev.github.io/2023/08/01/230802mysql-on-duplicate-key-update/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>[JavaScript/jQuery]제이쿼리 선택자(Selector) 비교</title>
      <link>https://sowon-dev.github.io/2023/07/16/230717js-jquery/</link>
      <guid>https://sowon-dev.github.io/2023/07/16/230717js-jquery/</guid>
      <pubDate>Sun, 16 Jul 2023 19:33:41 GMT</pubDate>
      
      <description>&lt;p&gt;VanillaJS와 jQuery는 최대 10배 속도차이가 발생난다고 한다.&lt;/p&gt;</description>
      
      
      
      <content:encoded><![CDATA[<p>VanillaJS와 jQuery는 최대 10배 속도차이가 발생난다고 한다.</p><a id="more"></a><p>그래서 이번에 손에 익힐겸 jQuery보다 VanillaJS를 사용하려고 노력해봤다. 제일 헷갈리는 부분은 선택자부분이었다.</p><h1 id="선택자-Selector"><a href="#선택자-Selector" class="headerlink" title="선택자(Selector)"></a>선택자(Selector)</h1><table><thead><tr><th align="center">JavaScript</th><th align="center">jQuery</th></tr></thead><tbody><tr><td align="center">document.getElementById(아이디명)</td><td align="center">$(#아이디명)</td></tr><tr><td align="center">document.getElementsByClassName(클래스명)</td><td align="center">$(.클래스명)</td></tr><tr><td align="center">document.getElementsByTagName(태그명)</td><td align="center">$(태그명)</td></tr></tbody></table><ul><li>querySelector: 매칭된 첫번째 element 반환, 조회값 없을땐 <code>null</code> 반환</li><li>querySelectorAll: 매칭된 모든 element를 NodeList로 반환, 조회값 없을땐 <code>[]</code> 반환</li></ul><p><br><br><br></p><h1 id="코드"><a href="#코드" class="headerlink" title="코드"></a>코드</h1><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 모든 요소</span></span><br><span class="line">$(<span class="string">"*"</span>)</span><br><span class="line"><span class="built_in">document</span>.querySelectorAll(<span class="string">"*"</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment">// ID명이 password인 요소 선택 </span></span><br><span class="line">$(<span class="string">"#password"</span>)</span><br><span class="line"><span class="built_in">document</span>.querySelector(<span class="string">"#password"</span>)</span><br><span class="line"><span class="built_in">document</span>.getElementById(<span class="string">'password'</span>)</span><br><span class="line"><span class="built_in">window</span>[<span class="string">'password'</span>]</span><br><span class="line"></span><br><span class="line"><span class="comment">// Class 명이 'btn'인 요소 선택</span></span><br><span class="line">$(<span class="string">".btn"</span>)</span><br><span class="line"><span class="built_in">document</span>.querySelectorAll(<span class="string">".btn"</span>)</span><br><span class="line"><span class="built_in">document</span>.getElementsByClassName(<span class="string">'btn'</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment">// attribute요소 선택</span></span><br><span class="line">$(<span class="string">'a[target=_blank]'</span>)</span><br><span class="line"><span class="built_in">document</span>.querySelectorAll(<span class="string">'a[target=_blank]'</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment">// input의 value값이 'address'인 요소 선택</span></span><br><span class="line">$(<span class="string">"input[value='address']"</span>)</span><br><span class="line"><span class="built_in">document</span>.querySelector(<span class="string">"input[value='address']"</span>)</span><br></pre></td></tr></table></figure><p><br><br><br></p><h1 id="참고"><a href="#참고" class="headerlink" title="참고"></a>참고</h1><ul><li><a href="https://github.com/camsong/You-Dont-Need-jQuery">You-Dont-Need-jQuery 깃헙 리포</a></li></ul>]]></content:encoded>
      
      
      <category domain="https://sowon-dev.github.io/categories/JavaScript/">JavaScript</category>
      
      
      <category domain="https://sowon-dev.github.io/tags/jQuery/">jQuery</category>
      
      <category domain="https://sowon-dev.github.io/tags/%EC%B0%A8%EC%9D%B4/">차이</category>
      
      <category domain="https://sowon-dev.github.io/tags/VanillaJS/">VanillaJS</category>
      
      
      <comments>https://sowon-dev.github.io/2023/07/16/230717js-jquery/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>[톰캣Tomcat]SSL이 뭐길래(ft.HTTPS와 비교, 차이점)</title>
      <link>https://sowon-dev.github.io/2023/07/12/230713-server-redirectport443/</link>
      <guid>https://sowon-dev.github.io/2023/07/12/230713-server-redirectport443/</guid>
      <pubDate>Wed, 12 Jul 2023 19:48:06 GMT</pubDate>
      
      <description>&lt;p&gt;톰캣에서 SSL을 적용했는데 개발 중에는 적용된 HTTPS를 없애고 HTTP로만 통신하고싶어서 &lt;code&gt;server.xml&lt;/code&gt;에서 포트를 변경했다.&lt;/p&gt;</description>
      
      
      
      <content:encoded><![CDATA[<p>톰캣에서 SSL을 적용했는데 개발 중에는 적용된 HTTPS를 없애고 HTTP로만 통신하고싶어서 <code>server.xml</code>에서 포트를 변경했다.</p><a id="more"></a><h1 id="코드"><a href="#코드" class="headerlink" title="코드"></a>코드</h1><p>SSL을 미적용하기 위해서 redirectPort포트를 443에서 8443으로 변경했다.</p><ul><li>server.xml<figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">// SSL적용</span><br><span class="line"><span class="tag">&lt;<span class="name">Connector</span> <span class="attr">connectionTimeout</span>=<span class="string">"20000"</span> <span class="attr">port</span>=<span class="string">"80"</span> <span class="attr">protocol</span>=<span class="string">"HTTP/1.1"</span> <span class="attr">redirectPort</span>=<span class="string">"443"</span> /&gt;</span></span><br><span class="line"></span><br><span class="line">// SSL미적용</span><br><span class="line"><span class="tag">&lt;<span class="name">Connector</span> <span class="attr">connectionTimeout</span>=<span class="string">"20000"</span> <span class="attr">port</span>=<span class="string">"8080"</span> <span class="attr">protocol</span>=<span class="string">"HTTP/1.1"</span> <span class="attr">redirectPort</span>=<span class="string">"8443"</span> /&gt;</span></span><br></pre></td></tr></table></figure></li></ul><p>해결은 간단하게 되었지만 SSL이 단순히 인증서라고 생각하고있었는데 정확히 무엇인지 알고싶어졌다.</p><p><br><br><br></p><h1 id="기본부터-하자-HTTP-VS-HTTPS"><a href="#기본부터-하자-HTTP-VS-HTTPS" class="headerlink" title="기본부터 하자! HTTP VS HTTPS"></a>기본부터 하자! HTTP VS HTTPS</h1><p>HTTP는 Hypertext Transfer Protocol의 약자이며 하이퍼텍스트란 링크와 링크로 이루어진 텍스트를 의미하며 그 중 대표적인 것이 HTML이다.<br>즉, Hypertext 인 HTML을 전송하기 위한 통신규약을 의미한다.<br>HTTPS에서 마지막의 S는 Over Secure Socket Layer의 약자로 보안이 강화된 HTTP이다. </p><p><img src="https://media.geeksforgeeks.org/wp-content/uploads/20211117141004/HTTPSdrawio-660x368.png" alt=""><br>HTTP는 암호화되지 않은 방법으로 데이터를 전송하기 때문에 서버와 클라이언트가 주고 받는 메시지를 빼앗기가 쉽다.<br>예를들어 로그인을 위해서 서버로 비밀번호를 전송하거나, 또는 중요한 기밀 문서를 열람하는 과정에서 악의적인 감청이나 데이터의 변조등이 일어날 수 있다. 이를 보안한 것이 HTTPS다.<br>이 블로그도 보안(Secure)된 HTML인 <code>https://sowon-dev.github.io/</code>이다.</p><p><br><br><br></p><h1 id="HTTPS-VS-SSL"><a href="#HTTPS-VS-SSL" class="headerlink" title="HTTPS VS SSL"></a>HTTPS VS SSL</h1><p>SSL는 Secure Socket Layer의 약어로 암호화 소켓층이다.<br><img src="https://wpmudev.com/blog/wp-content/uploads/2021/11/004-https-stack-diagram-vJGB-1050x609.png" alt="https://wpmudev.com/blog/securing-website-https-ssl/"><br>SSL이라는 통신 방법 위에서 동작하는 서비스 중에 하나가 HTTP이다. 그리고 HTTP가 SSL을 이용하면 HTTPS가 된다.</p><p><br><br><br></p><h1 id="SSL-VS-TLS"><a href="#SSL-VS-TLS" class="headerlink" title="SSL VS TLS"></a>SSL VS TLS</h1><p>같은 말!<br>TLS 1.0은 SSL 3.0을 따른다.</p><p><br><br><br></p><h1 id="참고"><a href="#참고" class="headerlink" title="참고"></a>참고</h1><ul><li><a href="https://www.geeksforgeeks.org/difference-between-http-and-https/">https://www.geeksforgeeks.org/difference-between-http-and-https/</a></li><li><a href="https://opentutorials.org/course/228/4894">생활코딩 - HTTPS와 SSL 인증서</a></li></ul>]]></content:encoded>
      
      
      <category domain="https://sowon-dev.github.io/categories/Server/">Server</category>
      
      
      <category domain="https://sowon-dev.github.io/tags/%EC%B0%A8%EC%9D%B4/">차이</category>
      
      
      <comments>https://sowon-dev.github.io/2023/07/12/230713-server-redirectport443/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>[바닐라JS/Pure JS]iframe 내 태그에 접근하고 싶을때(선택자)</title>
      <link>https://sowon-dev.github.io/2023/07/08/230709iframe-contentwindow/</link>
      <guid>https://sowon-dev.github.io/2023/07/08/230709iframe-contentwindow/</guid>
      <pubDate>Sat, 08 Jul 2023 21:39:21 GMT</pubDate>
      
      <description>&lt;p&gt;자주 보는 사이트 중 table의 첫번째 tr을 숨기고 싶어서 스크립트 코드를 만들었다.&lt;/p&gt;</description>
      
      
      
      <content:encoded><![CDATA[<p>자주 보는 사이트 중 table의 첫번째 tr을 숨기고 싶어서 스크립트 코드를 만들었다.</p><a id="more"></a><p>해당 사이트 HTML 구성이 어떻게 되어있는지 몰라서 차근차근 뜯어보았는데<br>iframe 하위에 iframe을 또 부르고 그 하위에 table이 있고 그 하위에 내가 숨기고싶은 tr이 있는 구조였다.</p><h1 id="코드"><a href="#코드" class="headerlink" title="코드"></a>코드</h1><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">iframe</span> <span class="attr">id</span>=<span class="string">"sub2"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">iframe</span> <span class="attr">id</span>=<span class="string">"ifrm"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">table</span> <span class="attr">id</span>=<span class="string">"tableList"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">thead</span>&gt;</span></span><br><span class="line">// 중략</span><br><span class="line"><span class="tag">&lt;/<span class="name">thead</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">tbody</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">tr</span>&gt;</span>첫번째 - 숨김처리 하고싶다<span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">tr</span>&gt;</span>두번째<span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">tr</span>&gt;</span>세번째<span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">tbody</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">table</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">iframe</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">iframe</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br></pre></td></tr></table></figure><p>HTML구조를 최대한 간략하게 작성해보았고 스크립트는 아래와 같이 만들어봤다.</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 첫번째 tr 숨기기</span></span><br><span class="line"><span class="built_in">document</span>.getElementById(<span class="string">"sub2"</span>).contentWindow.document.getElementById(<span class="string">"ifrm"</span>).contentWindow.document.getElementById(<span class="string">"tableList"</span>).querySelector(<span class="string">"tbody &gt; tr"</span>).style.display = <span class="string">"none"</span>;</span><br></pre></td></tr></table></figure><p><br><br><br></p><h1 id="개선-필요점"><a href="#개선-필요점" class="headerlink" title="개선 필요점"></a>개선 필요점</h1><p>크롬 브라우저에서 테스트하면 가끔 <code>TypeError: Cannot read properties of null (reading &#39;contentWindow&#39;)</code> 에러가 발생한다. 어떻게 해결해야하는지 모르겠다. 이 부분 개선필요하다.</p><p><br><br><br></p><h1 id="팀장님-꿀팁🍯"><a href="#팀장님-꿀팁🍯" class="headerlink" title="팀장님 꿀팁🍯"></a>팀장님 꿀팁🍯</h1><p>크롬브라우저에선 개발자도구를 통해 1초만에 js선택자코드를 복사할수있다.<br>F12에서 요소탭의 HTML코드에서 원하는 HTML태그를 우클릭한 후 복사 &gt; JS경로 복사를 선택하면 자동으로 js선택자코드가 클립보드에 복사된다! 그래서 복붙만 해주면 간편하게 이용하면 끝!</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// JS경로 복사를 활용한 간단 버전 </span></span><br><span class="line"><span class="built_in">document</span>.querySelector(<span class="string">"#tableList &gt; tbody &gt; tr:nth-child(1)"</span>).style.display = <span class="string">"none"</span>;</span><br></pre></td></tr></table></figure><p>잘 적용은 되나 가끔 <code>TypeError: Cannot read properties of null (reading &#39;contentWindow&#39;)</code> 에러가 여전히 발생한다. 어떻게 해결할수있을까…</p>]]></content:encoded>
      
      
      <category domain="https://sowon-dev.github.io/categories/JavaScript/">JavaScript</category>
      
      
      <category domain="https://sowon-dev.github.io/tags/VanillaJS/">VanillaJS</category>
      
      
      <comments>https://sowon-dev.github.io/2023/07/08/230709iframe-contentwindow/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>[구글애드센스]수익손실위험 ads.txt파일 문제를 해결해야합니다.(ft.Hexo헥소블로그)</title>
      <link>https://sowon-dev.github.io/2023/07/02/230703ads/</link>
      <guid>https://sowon-dev.github.io/2023/07/02/230703ads/</guid>
      <pubDate>Sun, 02 Jul 2023 22:36:43 GMT</pubDate>
      
      <description>&lt;p&gt;오랜만에 들어간 애드센스에서  &lt;code&gt;수익 손실 위험 - 수익에 심각한 영향을 미치지 않도록 사이트에서 발견된 ads.txt 파일 문제를 해결해야 합니다.&lt;/code&gt; 경고메시지를 확인했다.&lt;br&gt;&lt;code&gt;지금 해결하기&lt;/code&gt;를 클릭해봐도 아무런 반응이 없었다.&lt;/p&gt;</description>
      
      
      
      <content:encoded><![CDATA[<p>오랜만에 들어간 애드센스에서  <code>수익 손실 위험 - 수익에 심각한 영향을 미치지 않도록 사이트에서 발견된 ads.txt 파일 문제를 해결해야 합니다.</code> 경고메시지를 확인했다.<br><code>지금 해결하기</code>를 클릭해봐도 아무런 반응이 없었다.</p><a id="more"></a><p><img src="/img/230630ads1.PNG" alt="경고 메시지"></p><p><code>자세히 알아보기</code>를 클릭했더니 안내 페이지가 나왔다.<br>안내페이지 그대로 이행했다. 완벽히 해결 된 후 글을 쓰고 싶어서 며칠을 기다렸다가 드디어 오늘에서야 포스팅을 할 수 있게 되었다!</p><p><br><br><br></p><h1 id="타임라인"><a href="#타임라인" class="headerlink" title="타임라인"></a>타임라인</h1><ul><li>230630 문제 발견 및 ads.txt파일 추가 후 배포</li><li>주말이라 체크하는 거 깜박함…</li><li>230703 문제 해결 완료</li></ul><p>구글측 설명으로는 72시간이면 반영이 된다고 한다.<br>72시간이 걸리는 이유는 구글봇이 돌아다니면서 찾아야한다고!</p><p><br><br><br></p><h1 id="문제발견"><a href="#문제발견" class="headerlink" title="문제발견"></a>문제발견</h1><p><img src="/img/230630ads2.PNG" alt=""></p><p>노란 동그라미에서 알 수 있듯 Ads.txt상태가 <code>찾을 수 없음</code> 이기에 경고메시지가 보였던 것이었다.</p><p><br><br><br></p><h1 id="문제해결"><a href="#문제해결" class="headerlink" title="문제해결"></a>문제해결</h1><p><code>지금 해결하기</code>를 클릭해봐도 아무런 반응이 없었기에 <code>자세히 알아보기</code>를 클릭했다.</p><p><img src="/img/230630ads3.PNG" alt="자세히알아보기"></p><p>귀찮지않을까 했는데 생각보다 간단하고 참 쉬웠다.</p><p><br><br></p><h2 id="해결방법"><a href="#해결방법" class="headerlink" title="해결방법"></a>해결방법</h2><ol><li>root경로에 ads.txt파일 신규생성</li><li>신규 파일에 아래 코드 입력 <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">google.com, pub-본인게시자코드, DIRECT, f08c47fec0942fa0</span><br></pre></td></tr></table></figure></li><li>잘 되었는지 블로그뒤에 <code>/ads.txt</code>로 2번에서 작성한 코드가 리턴되는 지 확인하기</li><li>끝!</li></ol><p><br><br><br></p><h1 id="해결"><a href="#해결" class="headerlink" title="해결"></a>해결</h1><p>타임라인에서 말한 그대로 230630에 최상위 경로에 ads.txt 파일명으로 신규 파일을 생성했고 게시자코드를 확인하여 기입한 후 배포를 진행했다.<br>그리고 블로그 <a href="https://sowon-dev.github.io/ads.txt">https://sowon-dev.github.io/ads.txt</a> 를 브라우저 주소창에 입력하여 정상적으로 호출되는 지 확인했다.</p><p><img src="/img/230703ads4.PNG" alt="해결인증샷"></p><p>그리고 230703 오늘에서야 구글애드센스에 들어가봤는데 아래처럼 Ads.txt상태가 <code>승인됨</code>으로 변경되었고 더이상 경고메시지도 안나온다!<br>해결!</p>]]></content:encoded>
      
      
      <category domain="https://sowon-dev.github.io/categories/Journal/">Journal</category>
      
      
      <category domain="https://sowon-dev.github.io/tags/Hexo/">Hexo</category>
      
      <category domain="https://sowon-dev.github.io/tags/%EA%B5%AC%EA%B8%80%EC%95%A0%EB%93%9C%EC%84%BC%EC%8A%A4/">구글애드센스</category>
      
      
      <comments>https://sowon-dev.github.io/2023/07/02/230703ads/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>[jQuery] jsTree 검색추가하기</title>
      <link>https://sowon-dev.github.io/2023/06/26/230627jstree/</link>
      <guid>https://sowon-dev.github.io/2023/06/26/230627jstree/</guid>
      <pubDate>Mon, 26 Jun 2023 19:42:12 GMT</pubDate>
      
      <description>&lt;p&gt;jsTree는 제이쿼리 플러그인으로 손쉽게 트리구조를 만들 수 있는 라이브러리이다.&lt;/p&gt;</description>
      
      
      
      <content:encoded><![CDATA[<p>jsTree는 제이쿼리 플러그인으로 손쉽게 트리구조를 만들 수 있는 라이브러리이다.</p><a id="more"></a><p>jsTree 사용법은 매우 간단한 편이라 <a href="https://www.jstree.com/api/">jstree 공식 docs</a>를 참고하면 된다.</p><h1 id="검색기능-추가"><a href="#검색기능-추가" class="headerlink" title="검색기능 추가"></a>검색기능 추가</h1><p>plugins부분에 search를 추가하고 검색창에 keyup이벤트로 search()를 호출하면 된다.<br><code>show_only_matches</code> 속성은 디폴트가 false인데 나는 true로 하고싶어서 true로 주었다. 해당 속성은 이름에도 알 수 있듯 검색시 매치되는 노드만 보여준다.</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> $testTree = $(<span class="string">'#testTree'</span>);</span><br><span class="line"></span><br><span class="line">$testTree.jstree(&#123;</span><br><span class="line">    <span class="string">'core'</span> : &#123;</span><br><span class="line">        <span class="string">'data'</span> : data,</span><br><span class="line">        <span class="string">"themes"</span>:&#123;</span><br><span class="line">            <span class="string">"icons"</span>:<span class="literal">false</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="string">"search"</span>: &#123;</span><br><span class="line">        <span class="string">"show_only_matches"</span>: <span class="literal">true</span>,</span><br><span class="line">        <span class="string">"show_only_matches_children"</span>: <span class="literal">true</span></span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="string">"plugins"</span> : [<span class="string">"search"</span>]</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line">$(<span class="string">'#search_input'</span>).keyup(debounce(<span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line"><span class="keyword">var</span> v = $(<span class="string">'#search_input'</span>).val().trim();</span><br><span class="line">$testTree.jstree(<span class="literal">true</span>).search(v);</span><br><span class="line">&#125;, <span class="number">50</span>));</span><br></pre></td></tr></table></figure><p>Easy<br>Peasy<br>Lemon Squeezy🍋</p>]]></content:encoded>
      
      
      <category domain="https://sowon-dev.github.io/categories/JavaScript/">JavaScript</category>
      
      
      <category domain="https://sowon-dev.github.io/tags/jQuery/">jQuery</category>
      
      
      <comments>https://sowon-dev.github.io/2023/06/26/230627jstree/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>아파치와 톰캣 분리한다고요?(ft. Web Service Architecture 차이)</title>
      <link>https://sowon-dev.github.io/2023/06/25/230626webserver-vs-was/</link>
      <guid>https://sowon-dev.github.io/2023/06/25/230626webserver-vs-was/</guid>
      <pubDate>Sun, 25 Jun 2023 19:47:55 GMT</pubDate>
      
      <description>&lt;p&gt;오늘 커피챗에서 이번 프로젝트 서버 설계에 대한 이야기가 나왔다. 아파치와 톰캣을 분리한다고 하셨다. &lt;/p&gt;</description>
      
      
      
      <content:encoded><![CDATA[<p>오늘 커피챗에서 이번 프로젝트 서버 설계에 대한 이야기가 나왔다. 아파치와 톰캣을 분리한다고 하셨다. </p><a id="more"></a><p>가볍게 스쳐 지나간 주제지만 <a href="https://sowon-dev.github.io/2022/09/05/220906Tomcat-vs-Apatch/">아파치 vs 톰캣 포스팅</a>이 떠오르면서 분리하면 어떻게 서버가 도는 건지 궁금해졌다.</p><h1 id="Web-Service-Architecture-종류"><a href="#Web-Service-Architecture-종류" class="headerlink" title="Web Service Architecture 종류"></a>Web Service Architecture 종류</h1><ul><li>Client -&gt; WAS -&gt; DB</li><li>Client -&gt; Web Server -&gt; DB</li><li>Client -&gt; Web Server -&gt; WAS -&gt; DB</li></ul><p>가장 많이 사용하는건 1번 WAS이다. 왜냐하면 WAS가 Web Server의 기능을 대부분 수행할 수 있기때문이다.<br>그럼에도 불구하고 이번 프로젝트에서 3번을 사용한다고 한다.</p><p><br><br><br></p><h1 id="왜-Web-Server와-WAS를-분리하는-걸까"><a href="#왜-Web-Server와-WAS를-분리하는-걸까" class="headerlink" title="왜 Web Server와 WAS를 분리하는 걸까?"></a>왜 Web Server와 WAS를 분리하는 걸까?</h1><ol><li>보안강화: WAS는 DB와 바로 연결되기때문에 WEB SERVER와 WAS를 분리하여 WEB SERVER를 외부서버에 두고 WAS와 DB서버를 내부 서버에 두면 보안을 강화할 수 있다.</li><li>서버부하방지: WAS는 DB조회나 서비스로직을 처리하느라 항상 바쁘기에 단순한 정적페이지는 WEB SERVER를 이용하면 빠르게 사용자에게 보여주고 WAS 부하를 방지할 수 있다.</li><li>로드밸런싱을 위한 여러 대 WAS 연결 가능</li><li>여러 웹 어플리케이션 서비스 가능: 예를들어 PHP APPLICATION과 JAVA APPLICATION 함께 사용 가능하다.</li></ol><p>이번 프로젝트는 사이트가 많은 편인데 정적 페이지도 많으므로 서버 부하가 예상되기에 WEB SERVER를 WAS앞에 두고 DB나 서비스로직이 필요할때마다 WAS를 호출하는 형태로 사용하기 위해 분리한다고 하셨다.<br>아하~ 유레카😎</p><p><br><br><br></p><h1 id="웹서버-WEB-SERVER-VS-웹어플리케이션서버-WAS-Web-Application-Server"><a href="#웹서버-WEB-SERVER-VS-웹어플리케이션서버-WAS-Web-Application-Server" class="headerlink" title="웹서버(WEB SERVER) VS 웹어플리케이션서버(WAS, Web Application Server)"></a><a href="https://sowon-dev.github.io/2020/10/04/201005jspProcessVSThreadNWebServerVSWAS/#%EC%9B%B9%EC%84%9C%EB%B2%84-WEB-SERVER-VS-%EC%9B%B9%EC%96%B4%ED%94%8C%EB%A6%AC%EC%BC%80%EC%9D%B4%EC%85%98%EC%84%9C%EB%B2%84-WAS-Web-Application-Server">웹서버(WEB SERVER) VS 웹어플리케이션서버(WAS, Web Application Server)</a></h1><p>기본적인 차이점이다.</p><ul><li>웹서버 : DB사용 불가능<ul><li>클라이언트측 정적데이터</li><li>웹 브라우저 클라이언트로부터 HTTP 요청을 받아 정적인 컨텐츠(.html .jpeg .css 등)를 제공하는 컴퓨터 프로그램</li><li>Web Server의 예 : Apache Server, Nginx, IIS(Windows 전용 Web 서버) 등</li></ul></li><li>WAS : DB사용 가능<ul><li>서버측 동적데이터 사용</li><li>DB 조회나 다양한 로직 처리를 요구하는 동적인 컨텐츠를 제공하기 위해 만들어진 Application Server</li><li>WAS의 예 : Ex) Tomcat, JBoss, Jeus, Web Sphere 등</li></ul></li></ul><p><br><br><br></p><h1 id="참고"><a href="#참고" class="headerlink" title="참고"></a>참고</h1><ul><li>송과장님 지식</li><li><a href="https://sowon-dev.github.io/2020/10/04/201005jspProcessVSThreadNWebServerVSWAS/#%EC%9B%B9%EC%84%9C%EB%B2%84-WEB-SERVER-VS-%EC%9B%B9%EC%96%B4%ED%94%8C%EB%A6%AC%EC%BC%80%EC%9D%B4%EC%85%98%EC%84%9C%EB%B2%84-WAS-Web-Application-Server">웹서버(WEB SERVER) VS 웹어플리케이션서버(WAS, Web Application Server)</a></li><li><a href="https://sowon-dev.github.io/2022/09/05/220906Tomcat-vs-Apatch/">아파치 vs 톰캣 같은 거 아냐? 차이점</a></li><li><a href="https://gmlwjd9405.github.io/2018/10/27/webserver-vs-was.html">HeeJeong Kwon - Web Server와 WAS의 차이와 웹 서비스 구조</a></li></ul>]]></content:encoded>
      
      
      <category domain="https://sowon-dev.github.io/categories/Server/">Server</category>
      
      
      <category domain="https://sowon-dev.github.io/tags/%EC%98%A4%EB%8A%98%EB%98%90%EB%AA%BB%EC%95%8C%EC%95%84%EB%93%A3%EA%B3%A0%EB%A7%90%EC%95%98%EC%8A%B5%EB%8B%88%EB%8B%A4/">오늘또못알아듣고말았습니다</category>
      
      <category domain="https://sowon-dev.github.io/tags/%EC%B0%A8%EC%9D%B4/">차이</category>
      
      
      <comments>https://sowon-dev.github.io/2023/06/25/230626webserver-vs-was/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>[JAVA/Spring]BeanUtils</title>
      <link>https://sowon-dev.github.io/2023/06/20/230621beanutils/</link>
      <guid>https://sowon-dev.github.io/2023/06/20/230621beanutils/</guid>
      <pubDate>Tue, 20 Jun 2023 23:30:42 GMT</pubDate>
      
      <description>&lt;p&gt;이렇게 좋은 유틸이 있었다니 왜 몰랐지?!&lt;br&gt;클래스들을 서로 복사하는 작업을 해야하는데 그때마다 엄청난 set때문에 가독성도 떨어지고 코드도 길어지고 참 마음에 안들었다.&lt;br&gt;차장님이 쓴 코드를 읽을 기회가 있었는데 BeanUtil를 이용해서 한 줄로 간결하게 짜여진 코드를 보고 감동했다!&lt;/p&gt;</description>
      
      
      
      <content:encoded><![CDATA[<p>이렇게 좋은 유틸이 있었다니 왜 몰랐지?!<br>클래스들을 서로 복사하는 작업을 해야하는데 그때마다 엄청난 set때문에 가독성도 떨어지고 코드도 길어지고 참 마음에 안들었다.<br>차장님이 쓴 코드를 읽을 기회가 있었는데 BeanUtil를 이용해서 한 줄로 간결하게 짜여진 코드를 보고 감동했다!</p><a id="more"></a><p>유레카! 내가 찾던 것이 바로 이거야!<br>그래서 BeanUtils에 대해 공부해봤다.</p><h1 id="Class-BeanUtils"><a href="#Class-BeanUtils" class="headerlink" title="Class BeanUtils"></a>Class BeanUtils</h1><p>스프링에서 기본으로 제공해주는 메소드로서 객체를 쉽고 간결하게 복사할 수 있다. 너무너무 편하다!</p><ul><li>패키지: org.springframework.beans</li></ul><p><br><br><br></p><h1 id="기본형"><a href="#기본형" class="headerlink" title="기본형"></a>기본형</h1><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">copyProperties(Object source, Object target)</span><br><span class="line">source - 원본 객체</span><br><span class="line">target - 복사 객체</span><br></pre></td></tr></table></figure><ul><li>source에는 setter메소드 필수</li><li>target에는 getter메소드 필수</li></ul><p>동일한 필드명만 복사가 된다.</p><p><br><br><br></p><h1 id="예시"><a href="#예시" class="headerlink" title="예시"></a>예시</h1><p>이제 예시를 살펴보자<br>아래처럼 2개의 객체가 있다. 교수객체 중 특정 객체는 면접관객체로 복사해야한다고 가정해보자.</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@SpringBootApplication</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">SimpleTestApplication</span> </span>&#123;</span><br><span class="line"><span class="meta">@Data</span> <span class="meta">@AllArgsConstructor</span></span><br><span class="line"><span class="keyword">static</span> <span class="class"><span class="keyword">class</span> <span class="title">Professor</span> </span>&#123;</span><br><span class="line"><span class="keyword">private</span> String name;</span><br><span class="line"><span class="keyword">private</span> String major;</span><br><span class="line"><span class="keyword">private</span> String hp;</span><br><span class="line"><span class="keyword">private</span> <span class="keyword">int</span> professorId;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Data</span></span><br><span class="line"><span class="keyword">static</span> <span class="class"><span class="keyword">class</span> <span class="title">Interviewer</span> </span>&#123;</span><br><span class="line"><span class="keyword">private</span> String name;</span><br><span class="line"><span class="keyword">private</span> String major;</span><br><span class="line"><span class="keyword">private</span> String hp;</span><br><span class="line"><span class="keyword">private</span> <span class="keyword">int</span> interviewerId;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">SpringApplication.run(SimpleTestApplication<span class="class">.<span class="keyword">class</span>, <span class="title">args</span>)</span>;</span><br><span class="line"></span><br><span class="line">Professor p1 = <span class="keyword">new</span> Professor(<span class="string">"김노동"</span>, <span class="string">"건축학"</span>, <span class="string">"010-1234-1234"</span>, <span class="number">111</span>);</span><br><span class="line">System.out.println(p1.toString());</span><br><span class="line"><span class="comment">//결과: Professor(name=김노동, major=건축학, hp=010-1234-1234, professorId=111)</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 1. Setter 사용하기</span></span><br><span class="line">Interviewer a = <span class="keyword">new</span> Interviewer();</span><br><span class="line">a.setName(p1.getName());</span><br><span class="line">a.setMajor(p1.getMajor());</span><br><span class="line">a.setHp(p1.getHp());</span><br><span class="line">System.out.println(a.toString());</span><br><span class="line"><span class="comment">//결과: Interviewer(name=김노동, major=건축학, hp=010-1234-1234, interviewerId=0)</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 2. BeanUtils.copyProperties()사용: 동일한 필드 전체 복사</span></span><br><span class="line">Interviewer b = <span class="keyword">new</span> Interviewer();</span><br><span class="line">BeanUtils.copyProperties(p1, b);</span><br><span class="line">System.out.println(b.toString());</span><br><span class="line"><span class="comment">//결과: Interviewer(name=김노동, major=건축학, hp=010-1234-1234, interviewerId=0)</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 3. BeanUtils.copyProperties()사용: p1의 name필드를 제외한 채 c로 복사</span></span><br><span class="line">Interviewer c = <span class="keyword">new</span> Interviewer();</span><br><span class="line">BeanUtils.copyProperties(p1, c, <span class="string">"name"</span>); <span class="comment">//name속성은 무시</span></span><br><span class="line">System.out.println(c.toString());</span><br><span class="line"><span class="comment">//결과: Interviewer(name=null, major=건축학, hp=010-1234-1234, interviewerId=0)</span></span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>1번 Setter를 이용하는 방법은 직관적이나 코드가 길어져서 필드가 많을 경우 가독성이 매우 떨어진다.<br>이땐 2번처럼 <code>BeanUtils.copyProperties()</code>을 사용하면 동일한 필드명은 복사가 된다!<br>만약 특정 필드를 빼고 싶다면 3번처럼 ignoreProperties 를 사용하면 된다.</p><p><br><br><br></p><h1 id="참고"><a href="#참고" class="headerlink" title="참고"></a>참고</h1><ul><li><a href="https://docs.spring.io/spring-framework/docs/current/javadoc-api/org/springframework/beans/BeanUtils.html">docs.spring.io/spring-framework</a></li></ul>]]></content:encoded>
      
      
      <category domain="https://sowon-dev.github.io/categories/Spring/">Spring</category>
      
      
      
      <comments>https://sowon-dev.github.io/2023/06/20/230621beanutils/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>[HEXO]링크공유하기 버튼을 헥소블로그에 커스텀하게 적용하기(ft.AddToAny)</title>
      <link>https://sowon-dev.github.io/2023/06/19/230620addtoany/</link>
      <guid>https://sowon-dev.github.io/2023/06/19/230620addtoany/</guid>
      <pubDate>Mon, 19 Jun 2023 19:34:06 GMT</pubDate>
      
      <description>&lt;p&gt;Hexo를 이용해서 간편하게 개발블로그를 운영하고 있다.&lt;br&gt;블로그의 좋은 글을 편하게 공유해갈 수 있는 링크 공유하기 버튼을 만들고 싶었다.&lt;/p&gt;</description>
      
      
      
      <content:encoded><![CDATA[<p>Hexo를 이용해서 간편하게 개발블로그를 운영하고 있다.<br>블로그의 좋은 글을 편하게 공유해갈 수 있는 링크 공유하기 버튼을 만들고 싶었다.</p><a id="more"></a><p>Hexo에선 이미 다양한 플러그인을 제공한다.<br>내가 이용중인 Icarus 테마에서는 아래와 같이 총 5가지 공유 플러그인을 제공한다. 다른 플러그인을 원하면 설치해서 사용하면 된다,</p><ol><li>AddThis</li><li>AddToAny</li><li>Baidu Share</li><li>Share.js</li><li>ShareThis</li></ol><p>이 5가지 중 나는 AddToAny의 디자인이 마음에 들었기에 이걸 선택했다.<br>나머지 4가지 공유 플러그인에 대한 자세한 내용은 <a href="http://ppoffice.github.io/hexo-theme-icarus/Plugins/Share/icarus-user-guide-share-buttons/">Icarus User Guide - Share Buttons</a>에서 확인할 수 있다.</p><p><br><br><br></p><h1 id="적용하기"><a href="#적용하기" class="headerlink" title="적용하기"></a>적용하기</h1><p>아래 경로의 config파일에서 <code>share</code>를 검색한 뒤 <code>AddToAny</code>를 기입해준다.</p><ul><li>경로: <code>../themes/hexo-theme-icarus/_config.yml</code></li></ul><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Share plugin configurations</span></span><br><span class="line"><span class="comment"># https://ppoffice.github.io/hexo-theme-icarus/categories/Plugins/Share/</span></span><br><span class="line"><span class="attr">share:</span></span><br><span class="line">    <span class="attr">type:</span> <span class="string">addtoany</span> <span class="comment">#원하는 공유플러그인 기입</span></span><br><span class="line">    <span class="comment"># URL to the ShareThis share plugin script</span></span><br><span class="line">    <span class="attr">install_url:</span> <span class="string">''</span></span><br></pre></td></tr></table></figure><p>이렇게 설정만 하더라도 바로 공유버튼이 생기는 걸 알 수 있다.<br>디폴트대로 이용해도 되지만 블로그의 재미는 커스텀 아니겠는 가.<br>커스텀하는 방법도 <a href="https://www.addtoany.com/buttons/customize/">AddToAny의 공식문서</a>를 따라하면 금방이다.</p><p><br><br><br></p><h1 id="addtoany-jsx-생성하기"><a href="#addtoany-jsx-생성하기" class="headerlink" title="addtoany.jsx 생성하기"></a>addtoany.jsx 생성하기</h1><p>커스텀하기위해서는 아래 share폴더 하위에 addtoany.jsx 파일을 생성해야한다.</p><ul><li>경로: ../themes/hexo-theme-icarus/layout/share/addtoany.jsx</li></ul><p>그리고 생성한 파일에 커스텀한 코드를 입력해준다.<br>커스텀 코드는 <a href="https://www.addtoany.com/buttons/customize/">AddToAny의 공식문서</a>를 참고하면 된다.</p><p>이건 참고용 내 커스텀 코드!</p><figure class="highlight jsx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * AddToAny share buttons JSX component.</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@module </span>view/share/addtoany</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">const</span> &#123; Component, Fragment &#125; = <span class="built_in">require</span>(<span class="string">'inferno'</span>);</span><br><span class="line"><span class="keyword">const</span> &#123; cacheComponent &#125; = <span class="built_in">require</span>(<span class="string">'hexo-component-inferno/lib/util/cache'</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * AddToAny share buttons JSX component.</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@see </span>https://www.addtoany.com/buttons/</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@example</span></span></span><br><span class="line"><span class="comment"> * &lt;AddToAny /&gt;</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">AddToAny</span> <span class="keyword">extends</span> <span class="title">Component</span> </span>&#123;</span><br><span class="line">    render() &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="xml"><span class="tag">&lt;<span class="name">Fragment</span>&gt;</span></span></span><br><span class="line">&lt;div class="a2a_kit a2a_kit_size_32 a2a_default_style" style="display:flex; justify-content:center;" data-a2a-icon-color="lightseagreen"&gt;</span><br><span class="line">&lt;a class="a2a_dd" href="https://www.addtoany.com/share"&gt;&lt;/a&gt;</span><br><span class="line">&lt;a class="a2a_button_copy_link"&gt;&lt;/a&gt;</span><br><span class="line">&lt;a class="a2a_button_facebook"&gt;&lt;/a&gt;</span><br><span class="line"><span class="xml"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line">&lt;script&gt;</span><br><span class="line">var a2a_config = a2a_config || &#123;&#125;;</span><br><span class="line">a2a_config.locale = "ko";</span><br><span class="line">a2a_config.num_services = 2;</span><br><span class="line"><span class="xml"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">script</span> <span class="attr">async</span> <span class="attr">src</span>=<span class="string">"https://static.addtoany.com/menu/page.js"</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span></span><br><span class="line"><span class="xml">        <span class="tag">&lt;/<span class="name">Fragment</span>&gt;</span></span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Cacheable AddToAny share buttons JSX component.</span></span><br><span class="line"><span class="comment"> * &lt;p&gt;</span></span><br><span class="line"><span class="comment"> * This class is supposed to be used in combination with the &lt;code&gt;locals&lt;/code&gt; hexo filter</span></span><br><span class="line"><span class="comment"> * (&#123;<span class="doctag">@link </span>module:hexo/filter/locals&#125;).</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@see </span>module:util/cache.cacheComponent</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@example</span></span></span><br><span class="line"><span class="comment"> * &lt;AddToAny.Cacheable /&gt;</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line">AddToAny.Cacheable = cacheComponent(AddToAny, <span class="string">'share.addtoany'</span>, props =&gt; &#123;</span><br><span class="line">    <span class="keyword">return</span> &#123;&#125;;</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line"><span class="built_in">module</span>.exports = AddToAny;</span><br></pre></td></tr></table></figure><p>적용 끝!</p>]]></content:encoded>
      
      
      <category domain="https://sowon-dev.github.io/categories/HTML-CSS/">HTML&amp;CSS</category>
      
      
      <category domain="https://sowon-dev.github.io/tags/Hexo/">Hexo</category>
      
      
      <comments>https://sowon-dev.github.io/2023/06/19/230620addtoany/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>[HEXO]링크 미리보기 이미지 변경하기(ft.Open Graph)</title>
      <link>https://sowon-dev.github.io/2023/06/13/230614opengrap-img/</link>
      <guid>https://sowon-dev.github.io/2023/06/13/230614opengrap-img/</guid>
      <pubDate>Tue, 13 Jun 2023 19:31:39 GMT</pubDate>
      
      <description>&lt;p&gt;내 블로그글의 링크를 복사하여 카카오톡에 공유하는데 미리보기 이미지가 hexo-theme-icarus 이었다.&lt;br&gt;이 부분을 커스텀하고 싶어서 head 소스에서 찾아보니 Open Graph가 담당하고 있었다.&lt;/p&gt;</description>
      
      
      
      <content:encoded><![CDATA[<p>내 블로그글의 링크를 복사하여 카카오톡에 공유하는데 미리보기 이미지가 hexo-theme-icarus 이었다.<br>이 부분을 커스텀하고 싶어서 head 소스에서 찾아보니 Open Graph가 담당하고 있었다.</p><a id="more"></a><h1 id="메타태그란"><a href="#메타태그란" class="headerlink" title="메타태그란?"></a>메타태그란?</h1><p>메타태그는 HEAD사이에 작성하는 웹사이트의 안내자이다.<br>대부분의 포털사이트는 웹 사이트의 제목, 태그의 내용, 본문의 첫 100여 단어등을 검색한 후 사용자의 검색어와 비교해서 검색 결과를 나열해준다.</p><ul><li>참고: <a href="https://sowon-dev.github.io/2020/07/09/200710webi/">meta태그, 내부링크, id와 name속성의 차이</a></li><li>개념글로 강추: <a href="https://blog.ab180.co/posts/open-graph-as-a-website-preview">링크의 미리보기 제목, 설명, 이미지를 결정하는 open graph 태그</a></li></ul><p>메타태그를 편하게 사용할 수 있도록 정의해놓은 프로토콜이 바로 Open Graph이다.</p><p><br><br><br></p><h1 id="Open-Graph"><a href="#Open-Graph" class="headerlink" title="Open Graph"></a>Open Graph</h1><p>Open Graph는 HTML 파일의 메타정보를 쉽게 표시하기 위해서 메타정보에 해당하는 제목, 종류, 이미지, url 등 다양한 요소들을 통일해서 사용할 수 있도록 정의해놓은 프로토콜이다.</p><table><thead><tr><th align="center">오픈그래프 기본 태그</th><th align="left">설명</th></tr></thead><tbody><tr><td align="center">og:title</td><td align="left">사이트의 제목</td></tr><tr><td align="center">og:type</td><td align="left">사이트의 종류(<a href="https://ogp.me/#types">참고링크: type에 들어갈 수 있는 값</a>)</td></tr><tr><td align="center">og:image</td><td align="left">사이트 링크 미리보기 이미지</td></tr><tr><td align="center">og:url</td><td align="left">사이트의 대표 url</td></tr></tbody></table><p><br><br><br></p><h1 id="헥소블로그에-적용하기"><a href="#헥소블로그에-적용하기" class="headerlink" title="헥소블로그에 적용하기"></a>헥소블로그에 적용하기</h1><p>미리보기 이미지를 하나로 고정하고 싶다면 아래와 같은 config.yml 파일에서 <code>open_graph:</code> 하위 <code>image:</code>를 찾은 뒤 그 옆에  <code>/img/고정이미지이름.png</code>를 입력하면 된다.</p><ul><li>config.yml<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line">head:</span><br><span class="line">    # URL or path to the website's icon</span><br><span class="line">    favicon: /img/star.svg</span><br><span class="line">    # Open Graph metadata</span><br><span class="line">    # https://hexo.io/docs/helpers.html#open-graph</span><br><span class="line">    open_graph:</span><br><span class="line">        # Page title (og:title) (optional)</span><br><span class="line">        # You should leave this blank for most of the time</span><br><span class="line">        title: </span><br><span class="line">        # Page type (og:type) (optional)</span><br><span class="line">        # You should leave this blank for most of the time</span><br><span class="line">        type: article</span><br><span class="line">        # Page URL (og:url) (optional)</span><br><span class="line">        # You should leave this blank for most of the time</span><br><span class="line">        url: </span><br><span class="line">        # Page cover (og:image) (optional)</span><br><span class="line">        # You should leave this blank for most of the time</span><br><span class="line">        image: /img/고정이미지이름.png</span><br><span class="line">        # Site name (og:site_name) (optional)</span><br><span class="line">        # You should leave this blank for most of the time</span><br><span class="line">        site_name: </span><br><span class="line">        # Page author (article:author) (optional)</span><br><span class="line">        # You should leave this blank for most of the time</span><br><span class="line">        author: sowon-dev</span><br></pre></td></tr></table></figure></li></ul><p><br><br><br></p><h1 id="해결"><a href="#해결" class="headerlink" title="해결"></a>해결</h1><p>하지만 나는 썸네일이 있는 게시글은 썸네일이 미리보기 이미지로 보이고 썸네일이 없다면 내가 지정한 기본 이미지로 보이고 싶었다.<br>따라서 config.yml 파일의 <code>open_graph:</code> 하위 <code>image:</code> 를 다시 공백으로 한 뒤</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line">head:</span><br><span class="line">    # URL or path to the website's icon</span><br><span class="line">    favicon: /img/star.svg</span><br><span class="line">    # Open Graph metadata</span><br><span class="line">    # https://hexo.io/docs/helpers.html#open-graph</span><br><span class="line">    open_graph:</span><br><span class="line">        # Page title (og:title) (optional)</span><br><span class="line">        # You should leave this blank for most of the time</span><br><span class="line">        title: </span><br><span class="line">        # Page type (og:type) (optional)</span><br><span class="line">        # You should leave this blank for most of the time</span><br><span class="line">        type: article</span><br><span class="line">        # Page URL (og:url) (optional)</span><br><span class="line">        # You should leave this blank for most of the time</span><br><span class="line">        url: </span><br><span class="line">        # Page cover (og:image) (optional)</span><br><span class="line">        # You should leave this blank for most of the time</span><br><span class="line">        image: </span><br><span class="line">        # Site name (og:site_name) (optional)</span><br><span class="line">        # You should leave this blank for most of the time</span><br><span class="line">        site_name: </span><br><span class="line">        # Page author (article:author) (optional)</span><br><span class="line">        # You should leave this blank for most of the time</span><br><span class="line">        author: sowon-dev</span><br></pre></td></tr></table></figure><p>아래 경로의  <code>og_image.png</code> 찾은 뒤 내가 원하는 이미지로 바꿔치기 해주면 해결!</p><ul><li>경로: public/img/og_image.png</li></ul><p><br><br><br></p><h1 id="카카오톡-미리보기에는-여전히-반영이-안된다면"><a href="#카카오톡-미리보기에는-여전히-반영이-안된다면" class="headerlink" title="카카오톡 미리보기에는 여전히 반영이 안된다면?"></a>카카오톡 미리보기에는 여전히 반영이 안된다면?</h1><p>카카오톡에서 만든 공유 디버거에 해당 글 주소를 입력하면 OG(Open Graph) 프로토콜을 통해 파싱하고 스크랩 결과도 친절하게 알려준다.<br>여기서 캐시 초기화를 누르면 카카오톡 미리보기가 반영된다!</p><ul><li><a href="https://developers.kakao.com/tool/debugger/sharing">공유 디버거</a></li></ul><p>카카오 천재들….덕분에 넘 편하다</p><p><br><br><br></p><h1 id="참고"><a href="#참고" class="headerlink" title="참고"></a>참고</h1><ul><li><a href="https://hexo.io/docs/helpers.html#open-graph">hexo 공식문서 open-graph</a></li><li><a href="https://ogp.me/">The Open Graph protocol 공식문서</a></li></ul>]]></content:encoded>
      
      
      <category domain="https://sowon-dev.github.io/categories/HTML-CSS/">HTML&amp;CSS</category>
      
      
      <category domain="https://sowon-dev.github.io/tags/Hexo/">Hexo</category>
      
      
      <comments>https://sowon-dev.github.io/2023/06/13/230614opengrap-img/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>[OS/WINDOW]포트가 이미 사용중이라고 서버런이 안될때 포트 확인하는 방법</title>
      <link>https://sowon-dev.github.io/2023/06/12/230613netstat/</link>
      <guid>https://sowon-dev.github.io/2023/06/12/230613netstat/</guid>
      <pubDate>Mon, 12 Jun 2023 19:24:42 GMT</pubDate>
      
      <description>&lt;p&gt;오랜만에 프로젝트 셋팅하는데 다른 곳에서는 서버 사용하고 있지 않은데도 포트 80이 이미 사용중이라고 서버 런에 계속 실패했다.&lt;br&gt;구글링하다가도 잘 모르겠어서 결국 쏭과장님에게 도움을 요청했고 1분만에 찾아주셨다.&lt;br&gt;세상에 천재는 참 많다.&lt;/p&gt;</description>
      
      
      
      <content:encoded><![CDATA[<p>오랜만에 프로젝트 셋팅하는데 다른 곳에서는 서버 사용하고 있지 않은데도 포트 80이 이미 사용중이라고 서버 런에 계속 실패했다.<br>구글링하다가도 잘 모르겠어서 결국 쏭과장님에게 도움을 요청했고 1분만에 찾아주셨다.<br>세상에 천재는 참 많다.</p><a id="more"></a><h1 id="1-1-현재-사용중인-포트-확인하기"><a href="#1-1-현재-사용중인-포트-확인하기" class="headerlink" title="1-1 현재 사용중인 포트 확인하기"></a>1-1 현재 사용중인 포트 확인하기</h1><p><code>Win(윈도우키) + R</code> 후 열기 인풋란에 <code>cmd</code>입력해서 윈도우 명령프롬프트 창을 연다.<br>아래 명령어를 입력하면 현재 사용중인 포트 전부를 확인할 수 있다.</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">netstat -ano</span><br></pre></td></tr></table></figure><p><br><br><br></p><h1 id="1-2-현재-사용중인-포트-중-특정-포트만-확인하기"><a href="#1-2-현재-사용중인-포트-중-특정-포트만-확인하기" class="headerlink" title="1-2 현재 사용중인 포트 중 특정 포트만 확인하기"></a>1-2 현재 사용중인 포트 중 특정 포트만 확인하기</h1><p>아래 명령어를 입력하고 찾고싶은 포트번호를 입력하면 된다.<br>예를 들어 <code>8080</code>이 들어간 모든 포트를 리스트업해보고싶다면 <code>netstat -ano | findstr &quot;8080&quot;</code>를 입력한다.</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">netstat -ano | findstr &quot;포트번호&quot;</span><br><span class="line"></span><br><span class="line">&#x2F;&#x2F; 포트 8080 예시</span><br><span class="line">netstat -ano | findstr &quot;8080&quot;</span><br></pre></td></tr></table></figure><p>검색결과가 없으면 사용중인 포트가 아니다.</p><table><thead><tr><th align="center">포트상태</th><th align="center">의미</th></tr></thead><tbody><tr><td align="center">LISTENING</td><td align="center">열린 포트</td></tr><tr><td align="center">CLOSED</td><td align="center">연결이 닫힌 포트</td></tr><tr><td align="center">ESTABLISHED</td><td align="center">연결 중인 포트</td></tr></tbody></table><p>포트상태가 <code>LISTENING</code> 이면 사용중인 포트이다. 사용중이라면 PID를 기억해놓는다.</p><p><br><br><br></p><h1 id="2-작업관리자를-통해서-해당-포트를-사용중인-서비스-종료"><a href="#2-작업관리자를-통해서-해당-포트를-사용중인-서비스-종료" class="headerlink" title="2 작업관리자를 통해서 해당 포트를 사용중인 서비스 종료"></a>2 작업관리자를 통해서 해당 포트를 사용중인 서비스 종료</h1><p><code>Ctrl + Shift + ESC</code>를 통해 작업관리자를 연다.<br><code>세부정보</code>탭을 클릭하면 PID를 확인할 수 있다.<br>동일한 PID 서비스를 찾은 뒤 우클릭해서 <code>작업끝내기</code>를 클릭하면 해결!</p><p><br><br><br></p><h1 id="3-근본원인-찾기-gt-IIS"><a href="#3-근본원인-찾기-gt-IIS" class="headerlink" title="3 근본원인 찾기 -&gt; IIS"></a>3 근본원인 찾기 -&gt; IIS</h1><p>일시적인 해결책말고 좀 더 근본적인 원인을 찾아봤다.<br>문제의 원인은 IIS서비스가 자동실행이 되어 80포트를 사용하고 있었기에 톰캣이 80포트로 실행이 안됐었다.<br>따라서 IIS를 종료해주었다.</p><p><br><br><br></p><h1 id="4-IIS-종료하기"><a href="#4-IIS-종료하기" class="headerlink" title="4 IIS 종료하기"></a>4 IIS 종료하기</h1><p><code>Win(윈도우키) + R</code> 후 열기 인풋란에 <code>iis</code>입력해서 IIS 관리자 창을 연다.<br>왼쪽 <code>연결</code> 패널에서 내 컴퓨터를 더블클릭하면 <code>애플리케이션 풀</code>과 <code>사이트</code>가 하위목록으로 나온다.<br>이 중 <code>사이트</code>를 클릭한 뒤 <code>바인딩</code> 열에 80포트가 있는 지 확인하고 해당 행을 클릭한 뒤 우클릭 혹은 오른쪽 <code>작업</code>패널에서 <code>웹사이트관리 - 중지</code>해주면 된다.<br>해결~!</p><p><br><br><br></p><h1 id="참고"><a href="#참고" class="headerlink" title="참고"></a>참고</h1><ul><li>송과장님 지식</li><li>구글링</li></ul>]]></content:encoded>
      
      
      <category domain="https://sowon-dev.github.io/categories/Operating-Systeming/">Operating Systeming</category>
      
      
      <category domain="https://sowon-dev.github.io/tags/Tomcat/">Tomcat</category>
      
      <category domain="https://sowon-dev.github.io/tags/Port/">Port</category>
      
      <category domain="https://sowon-dev.github.io/tags/%EC%98%A4%EB%A5%98%EC%9D%BC%EC%A7%80/">오류일지</category>
      
      
      <comments>https://sowon-dev.github.io/2023/06/12/230613netstat/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>블록체인구축프로젝트를 끝내며 내가 배운 것</title>
      <link>https://sowon-dev.github.io/2023/06/06/230607prjtreview9/</link>
      <guid>https://sowon-dev.github.io/2023/06/06/230607prjtreview9/</guid>
      <pubDate>Tue, 06 Jun 2023 16:34:42 GMT</pubDate>
      
      <description>&lt;p&gt;처음 해보는 대규모 파견 프로젝트! 파견도 처음이었고 블록체인, 앱, 웹, 운영등 다양한 분야의 개발자들과 협업하는 것도 처음이었다. 7개월간 모든 것이 신기하고 재미있었다.&lt;br&gt;이번 프로젝트에서는 꼭 웹 백엔드를 맡고싶었는데 팀장님이 믿고 맡겨주셨다! 감사합니다 팀장님!&lt;/p&gt;</description>
      
      
      
      <content:encoded><![CDATA[<p>처음 해보는 대규모 파견 프로젝트! 파견도 처음이었고 블록체인, 앱, 웹, 운영등 다양한 분야의 개발자들과 협업하는 것도 처음이었다. 7개월간 모든 것이 신기하고 재미있었다.<br>이번 프로젝트에서는 꼭 웹 백엔드를 맡고싶었는데 팀장님이 믿고 맡겨주셨다! 감사합니다 팀장님!</p><a id="more"></a><p>외부 API와 연동API를 개발하면서 다른 개발자가 써놓은 API명세서 읽고 이해하고 수정사항 요청하는 것도 재밌는 경험이었다.<br>외부 API팀에서 RestAPI로 설계하셨다고했는데 몇몇 delete메서드에 body param을 넣으셔서 “Restful하지않은데 그냥 해주신 그대로 저도 연계API만들면 될까요?”하고 말씀드렸더니 고려해보시곤 path variable만 받는 걸로 수정해주셨다.뭔가 뿌듯~! 제대로 RestAPI를 이해하고 있구나 나자신 칭찬해!</p><p>대부분 나보다 연차가 많으신 시니어개발자분들과 협업하면서 많은 것을 배울 수 있었다. good example이 많았지만 bad example도 있다. 파견이 처음인 나에겐 여러모로 모든 해결과정들이 큰 도움이 되었다. 특히 업무를 대하는 태도와 갑사를 대하는 자세에 대해 많이 배웠다. 찐 어른들… 유연하게 대처하는 자세가 멋있었다.</p><p><br><br></p><h1 id="keep"><a href="#keep" class="headerlink" title="keep"></a>keep</h1><p>현재 만족하고 있는 부분과 계속해서 이어갔으면 하는 부분</p><ol><li><code>레거시 코드를 분석하고 리팩토링하는 능력</code> <ul><li>레거시 프로젝트를 고도화하면서 블록체인시스템을 추가하는 프로젝트였기에 레거시 코드를 정확히 읽고 추가 및 수정해서 기존 기능은 문제 없이 사용할 수 있어야하는 것이 이번 작업의 핵심이었다. 처음 해보는 금융관련 도메인이었는데 평소 은행, 증권사 앱을 많이 사용해서 그런지 친숙하게 느껴졌다. 다양한 분야에 관심을 가지고 있어야겠다는 생각이 들었다. </li></ul></li><li><code>다른 분야 개발자와 협업하는 능력</code> <ul><li>처음에는 용어 정리도 안되고 동일한 내용을 다른 명칭을 사용해서 소통에 혼선이 있었는데 시간을 내어 타 팀 개발자분들과 용어를 맞추고 공통코드 및 공통 용어 적립한 뒤에는 의사소통이 원활하게 이루어졌다.</li></ul></li><li><code>프로젝트 전체를 보는 눈</code> <ul><li>요구사항 기능을 내 서비스에서만 생각하지않고 타팀 프로세스까지 고려할 수 있게 되었다. 예를 들어, 구매하기기능을 구현할때 내가 담당한 서비스 로직에서만 국한된게 아니라 타팀 서비스에선 해당 기능이 어떻게 구현되는 지까지 고려하여 내 서비스를 설계하다보니 처음에는 너무 헷갈렸는데 나중에는 자연스럽게 프로젝트 전체 흐름을 이해할 수 있게 되었고 아직 정의되지 않은 부분은 확장성있게 짤 수 있게 되었다.</li></ul></li><li><code>확장성있는 공통함수 설계 능력</code> <ul><li>외부연계API를 만들면서 중복코드를 최대한 없애면서도 언제 생길지 모르는 갑사의 추가 요구사항에 대비해 확장성있게 공통함수로 정의하는데 각고의 노력을 기울였다. 노력이 빛을 봤는지 대부분의 추가, 수정사항에서도 공통함수를 건들이는 일 없이 잘 처리할 수 있었다.팀장님이 잠깐 해당 코드 리뷰도 해주셨는데 은근 튼튼하게 잘 짰다고 칭찬해주셨다. 전부 팀장님한테 배운건데도 칭찬해주셔서 뿌듯했다. 팀장님의 칭찬은 날 춤추게 해~💃</li></ul></li><li><code>잘잘못따지기 전에 버그부터 해결하는 마인드</code> <ul><li>이번 프로젝트에서는 개발시간이 턱없이 부족했기에 시간단축이 생명이었는데 많은 개발자들이 한 리포에 커밋을 하다보니 잘못된 커밋이나 머지, 엘리야스실수등으로 인해 런타임오류가 발생해 원인을 찾느라 시간을 많이 쓰게 되었다. 이때 잘잘못을 따지고 싶은 마음을 굴뚝같았지만 잘잘못을 따지기보단 일단 빨리 해결부터 하자 마인드가 확고해졌다. 누가 잘못 커밋했는 지 파헤치기전에 일단 버그부터 잡았다. 이는 차장님의 영향이 컸다. 누군지 잡아낸다고 하시면서도 “지금 알아서 뭐하겠어~ 귀찮다~” 하며 버그부터 잡는 모습이 크게 와닿았기때문이다. 앞으로도 해결부터하는 개발자가 되어야지!</li></ul></li><li><code>json 다루는 능력</code><ul><li>objectMapper와 Gson 통해서 자유자재로 json과 객체를 만들 수 있게 되었다. </li></ul></li><li><code>double과 float 변환시 부동소수점 오류</code><ul><li>해당 문제가 있는지도 몰랐는데 이번에 금융프로젝트를 하면서 돈에 민감하다보니 자연스레 주의깊게 구분해서 쓰게 되었다. </li><li>관련 포스팅: <a href="https://sowon-dev.github.io/2023/05/21/230522bigdecimal/">float, double 소수점 오류(부동소수점) 해결하기</a></li></ul></li><li><code>RestTemplate을 통한 외부API통신 자신감</code><ul><li>외부API 통신을 위해 RestTemplate 자유자재로 사용하였고 제네릭 클래스 오류를 해결했다. </li><li>관련 포스팅1: <a href="https://sowon-dev.github.io/2022/12/09/221210spring-resttemplate/">제네릭과 ParameterizedTypeReference</a></li><li>관련 포스팅2: <a href="https://sowon-dev.github.io/2022/12/20/221221java-responseentity-refactoring/">ResponseEntity 코드리뷰</a></li></ul></li></ol><p><br><br><br></p><h1 id="Problem"><a href="#Problem" class="headerlink" title="Problem"></a>Problem</h1><p>개선이 필요하다고 생각되는 부분</p><ol><li><code>다중 팝업 jsp화면 구현시 속도 개선 필요</code><ul><li>백엔드 작업하다가 화면에 도움이 필요하여 jsp화면 몇개를 만들었다. 다중 팝업에 데이터를 제이쿼리로만 이동 시켜야해서 굉장히 재미없었다. 흥미를 못 느끼다보니 속도가 늦어졌고 결국 맡았던 3개 화면 중 1개를 다 끝내지 못해서 결국 차장님이 도와주셨고 나는 기능테스트에 투입되어 버그를 잡았다. 아무리 흥미가 없더라도 맡은 업무는 빠르게 쳐내야하는데 이 부분이 개선되어야한다.</li></ul></li><li><code>파일서비스를 욕심내지 못한 것</code> <ul><li>기능테스트에 치여서 파일서비스 개발에 욕심을 내지 못했다. 잘 만들려면 한도끝도없이 잘 만들어 낼 수 있는 부분인다. File 클래스를 다뤄본 적이 거의 없어서 한 번은 꼭 필요한 부분이다.</li></ul></li><li><code>객체는 어디까지 확장되어야할까?</code> <ul><li>VO객체를 어디까지 확장해야하는 지가 제일 어려웠다. 기획이 수시로 변경되고 DB테이블에 컬럼들이 추가,수정,삭제되면서 서비스별로 나눠놨던 VO의 경계가 흐려졌다. 언제나 그렇듯 완벽하게 설계된 채 시작하는 프로젝트는 없으니까 유연하게 한 개의 VO에 다 담아야하는 지, 중간에 새로운 기준으로 다시 VO를 나눠야하는 지 아니면 속편하게 HashMap을 쓸 지 고민스러웠다. 한 번 바뀌면 화면 파라미터명부터 controller, xml까지 다 변경해야하니 여간 번거로운게 아니였다. 팀장님께 질문드리니 프로젝트에 맞게 설계하면 된다고 하셨는데 아직 많은 프로젝트를 만나보지 않아서 그런지 감이 잡히질 않는다. </li></ul></li><li><code>CUD 쿼리 전 set으로 코드 가독성 하락</code> <ul><li>CUD 쿼리 전 dto를 set하는 코드가 너무 길어져서 가독성이 떨어졌다. set하면서도 항상 바꾸고 싶었는데 어떻게 해야할 지 알 수가 없었다.</li></ul></li></ol><p><br><br><br></p><h1 id="Try"><a href="#Try" class="headerlink" title="Try"></a>Try</h1><p>Problem의 해결책이 될 수 있는 부분</p><ol><li><code>다중팝업 jsp화면을 다루는 연습할 것</code>: 테이블이 각 화면마다 있는 다중 팝업데이터 다루는 연습이 필요하다.</li><li><code>파일서비스 따로 만들어볼 것</code>: 깃헙 리포생성해서 File객체로 오픈소스도움없이 파일 업로드/다운로드 서비스를 따로 만들어봐야겠다. 멀티파트써서 이미지랑 텍스트 다 되게끔 만들어봐야겠다.</li><li><code>설계에 관한 글과 책을 찾아 읽어볼 것</code></li><li><code>BeanUtils를 적극 활용할 것</code>: 차장님 코드를 살펴보는데 <a href="https://docs.spring.io/spring-framework/docs/current/javadoc-api/org/springframework/beans/BeanUtils.html">Class BeanUtils</a>을 이용하여 간편하게 set을 한 줄로 끝낸 코드를 보고 감탄했다. 사막에서 오아시스를 발견한 기분이었다. 내가 찾던 게 바로 이거! 역시 간절히 원하니까 보였다.<ol><li>관련 포스팅: <a href="https://sowon-dev.github.io/2023/06/20/230621beanutils/">BeanUtils</a></li></ol></li></ol><p><br><br><br></p><h1 id="관련-포스팅"><a href="#관련-포스팅" class="headerlink" title="관련 포스팅"></a>관련 포스팅</h1><ul><li><a href="https://sowon-dev.github.io/2022/12/09/221210spring-resttemplate/">제네릭과 ParameterizedTypeReference</a></li><li><a href="https://sowon-dev.github.io/2022/12/20/221221java-responseentity-refactoring/">ResponseEntity 코드리뷰</a></li><li><a href="https://sowon-dev.github.io/2023/04/06/230407removeduplicatevalueinlist/">List에서 중복값을 제외하는 방법2가지</a></li><li><a href="https://sowon-dev.github.io/2023/02/06/230207stringvalueof-vs-tostring/">String.valueOf() vs toString() 차이 알고쓰자</a></li><li><a href="https://sowon-dev.github.io/2023/02/13/230214integervalueof/">ClassCastException발생 Java.lang.Integer cannot be case to Java.lang.String 해결방법(ft. ChatGPT)</a></li><li><a href="https://sowon-dev.github.io/2023/02/16/230217MVPpattern/">MVC패턴과 MVP패턴 차이</a></li><li><a href="https://sowon-dev.github.io/2023/03/02/230303malformedjsonexception/">MalformedJsonException 에러해결</a></li><li><a href="https://sowon-dev.github.io/2023/03/12/230313autowirederror/">no qualifying bean of type available: expected at least 1 bean which qualifies as autowire candidate 오류해결</a></li><li><a href="https://sowon-dev.github.io/2023/04/09/230410kafka/">Kafka(카프카)가 뭐길래(개념, 정의)</a></li><li><a href="https://sowon-dev.github.io/2023/04/10/230411deeplink/">deeplink가 뭐길래(개념, 정의)</a></li><li><a href="https://sowon-dev.github.io/2023/04/25/230426datepicker-error-in-modal/">팝업(모달)창에서 datepicker 적용 안되는 오류 해결법</a></li><li><a href="https://sowon-dev.github.io/2023/05/09/230509double-NaN/">Double/Float 변환시 ClassCastException오류 NaN 해결</a></li><li><a href="https://sowon-dev.github.io/2023/05/21/230522bigdecimal/">float, double 소수점 오류(부동소수점) 해결하기</a></li></ul>]]></content:encoded>
      
      
      <category domain="https://sowon-dev.github.io/categories/Journal/">Journal</category>
      
      <category domain="https://sowon-dev.github.io/categories/Journal/%ED%9A%8C%EA%B3%A0%EB%A1%9D/">회고록</category>
      
      
      <category domain="https://sowon-dev.github.io/tags/%ED%9A%8C%EA%B3%A0%EB%A1%9D/">회고록</category>
      
      
      <comments>https://sowon-dev.github.io/2023/06/06/230607prjtreview9/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>[JAVA] float, double 소수점 오류(부동소수점) 해결하기</title>
      <link>https://sowon-dev.github.io/2023/05/21/230522bigdecimal/</link>
      <guid>https://sowon-dev.github.io/2023/05/21/230522bigdecimal/</guid>
      <pubDate>Sun, 21 May 2023 21:42:19 GMT</pubDate>
      
      <description>&lt;p&gt;사용자가 기입한 확률을 DB에 넣고 싶었다.&lt;br&gt;자세히 말하자면 사용자가 2라고 입력하면 백분율로 환산하여 DB에는 0.02로 넣고싶었다.&lt;br&gt;그런데 입력된 DB 값을 보니 0.02가 아닌  0.019999999999999999…로 되어있었다.&lt;br&gt;난 정확히 0.02를 넣고싶었는데 무엇이 잘못된걸까?&lt;/p&gt;</description>
      
      
      
      <content:encoded><![CDATA[<p>사용자가 기입한 확률을 DB에 넣고 싶었다.<br>자세히 말하자면 사용자가 2라고 입력하면 백분율로 환산하여 DB에는 0.02로 넣고싶었다.<br>그런데 입력된 DB 값을 보니 0.02가 아닌  0.019999999999999999…로 되어있었다.<br>난 정확히 0.02를 넣고싶었는데 무엇이 잘못된걸까?</p><a id="more"></a><h1 id="상황"><a href="#상황" class="headerlink" title="상황"></a>상황</h1><p>마리아DB를 사용하고 있고 Data Type은 float이다.<br>VO는 Double형을 선언했다.</p><ul><li>기존코드<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Data</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Testvo</span></span>&#123;</span><br><span class="line">  Double rate;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul><p><br><br><br></p><h1 id="문제-원인"><a href="#문제-원인" class="headerlink" title="문제 원인"></a>문제 원인</h1><p>컴퓨터의 메모리는 한정적이라 실수의 소숫점 표현에 제한이 있을 수 밖에 없고 이로인해 소수점이하 계산 오차가 발생한다.<br>이를 해결하기 위해서는 2가지 방법이 있다.</p><ol><li>int, long 정수형타입 치환</li><li>BigDecimal 클래스 사용</li></ol><p>계속 소수점을 이용해야했기에 2번방법을 사용했다.</p><p><br><br><br></p><h1 id="BigDecimal-클래스-사용한-사칙연산-간단-예시"><a href="#BigDecimal-클래스-사용한-사칙연산-간단-예시" class="headerlink" title="BigDecimal 클래스 사용한 사칙연산 간단 예시"></a>BigDecimal 클래스 사용한 사칙연산 간단 예시</h1><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">BigDecimal a = <span class="keyword">new</span> BigDecimal(<span class="string">"7"</span>);</span><br><span class="line">BigDecimal a = <span class="keyword">new</span> BigDecimal(<span class="string">"3"</span>);</span><br><span class="line"></span><br><span class="line">a.add(b);</span><br><span class="line">= <span class="number">10</span></span><br><span class="line"></span><br><span class="line">a.subtract(b)</span><br><span class="line">= <span class="number">4</span></span><br><span class="line"></span><br><span class="line">a.multiply(b);</span><br><span class="line">= <span class="number">21</span></span><br><span class="line"></span><br><span class="line">a.divide(b);</span><br><span class="line">= <span class="number">2.3333</span>...</span><br></pre></td></tr></table></figure><p>다른 사칙연산과 달리 나눗셈을 하기 위해서는 <code>setScale()</code>을 사용해야 정확한 소수점 연산이 가능하다.</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="function">BigDecimal <span class="title">setScale</span><span class="params">(<span class="keyword">int</span> newScale)</span></span>;</span><br><span class="line"><span class="function">BigDecimal <span class="title">setScale</span><span class="params">(<span class="keyword">int</span> newScale, <span class="keyword">int</span> roundingMode)</span></span>;</span><br><span class="line"><span class="function">BigDecimal <span class="title">setScale</span><span class="params">(<span class="keyword">int</span> newScale, RoundingMode mode)</span></span>;</span><br></pre></td></tr></table></figure><p>첫번째 파라미터는 표시하고자하는 소수점의 자릿수이고<br>두번째 파라미터는 라운딩모드이고 라운딩모드 상수값은 아래와 같다.</p><table><thead><tr><th align="center">RoudingMode의 상수</th><th align="left">설명</th></tr></thead><tbody><tr><td align="center">CELING</td><td align="left">올림</td></tr><tr><td align="center">FLOOR</td><td align="left">내림</td></tr><tr><td align="center">UP</td><td align="left">양수일 때는 올림, 음수일 때는 내림</td></tr><tr><td align="center">DOWN</td><td align="left">양수일 때는 내림, 음수일 때는 올림</td></tr><tr><td align="center">HALF_UP</td><td align="left">5기준으로 반올림(5이상 올림, 5미만 버림)</td></tr><tr><td align="center">HALF_EVEN</td><td align="left">반올림 자리의 값이 짝수면 HALF_DOWN, 홀수면 HALF_UP</td></tr><tr><td align="center">HALF_DOWN</td><td align="left">6기준으로 반올림(6이상 올림, 6미만 버림)</td></tr><tr><td align="center">UNNECESSARY</td><td align="left">나눗셈의 결과가 딱 떨어지는 수가 아니면, ArithmeticException발생</td></tr></tbody></table><p><br><br><br></p><h1 id="해결코드"><a href="#해결코드" class="headerlink" title="해결코드"></a>해결코드</h1><ul><li>Service 코드</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">BigDecimal feeRate = <span class="keyword">new</span> BigDecimal(vo.getRate());</span><br><span class="line">r.setSacle(<span class="number">6</span>, RoudingMode.HALE_UP);</span><br></pre></td></tr></table></figure><p>해결!</p><p><br><br><br></p><h1 id="참고"><a href="#참고" class="headerlink" title="참고"></a>참고</h1><ul><li><a href="https://inpa.tistory.com/entry/JAVA-%E2%98%95-%EC%8B%A4%EC%88%98-%ED%91%9C%ED%98%84%EB%B6%80%EB%8F%99-%EC%86%8C%EC%88%98%EC%A0%90-%EC%9B%90%EB%A6%AC-%ED%95%9C%EB%88%88%EC%97%90-%EC%9D%B4%ED%95%B4%ED%95%98%EA%B8%B0#:~:text=double%EA%B3%BC%20float%EC%9D%98%20%EB%B9%84%EA%B5%90%EC%97%B0%EC%82%B0%20%EB%AC%B8%EC%A0%9C,-%EC%8B%A4%EC%88%98%EB%A5%BC%20%EB%8D%94%ED%95%98%EA%B1%B0%EB%82%98&text=%EC%9E%90%EB%B0%94%EC%9D%98%20float%EB%8A%94%204,%EA%B0%80%20%EB%B0%9C%EC%83%9D%ED%95%9C%EB%8B%A4%EB%8A%94%20%EC%A0%90%EC%9D%B4%EB%8B%A4.">Inpa Dev - 소수 정확히 계산하는 방법</a></li><li><a href="https://blog.naver.com/passionisall/222139065323">작은거인 - 부동소수점의 문제점과 해결책 (BigDecimal의 필요성)</a></li></ul>]]></content:encoded>
      
      
      <category domain="https://sowon-dev.github.io/categories/JAVA/">JAVA</category>
      
      
      
      <comments>https://sowon-dev.github.io/2023/05/21/230522bigdecimal/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>[JS/jQuery]정규표현식 숫자 소수둘째자리까지 적용하기</title>
      <link>https://sowon-dev.github.io/2023/05/11/230512regex-seconddigit-decimalpoint/</link>
      <guid>https://sowon-dev.github.io/2023/05/11/230512regex-seconddigit-decimalpoint/</guid>
      <pubDate>Thu, 11 May 2023 20:55:13 GMT</pubDate>
      
      <description>&lt;p&gt;input태그에 소수점 둘째자리까지만 받고 싶었다. input number 타입을 쓰고 step=”0.01”을 쓰는 방법도 있지만 input타입을 text로 써야하는 상황이라 그냥 정규식을 사용했다.&lt;/p&gt;</description>
      
      
      
      <content:encoded><![CDATA[<p>input태그에 소수점 둘째자리까지만 받고 싶었다. input number 타입을 쓰고 step=”0.01”을 쓰는 방법도 있지만 input타입을 text로 써야하는 상황이라 그냥 정규식을 사용했다.</p><a id="more"></a><h1 id="숫자-소수점-둘째짜리만-입력허용하는-경우"><a href="#숫자-소수점-둘째짜리만-입력허용하는-경우" class="headerlink" title="숫자 소수점 둘째짜리만 입력허용하는 경우"></a>숫자 소수점 둘째짜리만 입력허용하는 경우</h1><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"text"</span> <span class="attr">id</span>=<span class="string">"price"</span> <span class="attr">val</span>=<span class="string">"0"</span> /&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">$(<span class="string">"#price"</span>).keyup(<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line"><span class="keyword">let</span> price = $(<span class="keyword">this</span>).val();</span><br><span class="line"><span class="keyword">const</span> regex = <span class="regexp">/(^/</span>d+$)|(^d&#123;<span class="number">1</span>,&#125;.\d&#123;<span class="number">0</span>,<span class="number">2</span>&#125;$)/g;</span><br><span class="line"><span class="keyword">let</span> resultPrice = price.replace(regex, <span class="string">""</span>);</span><br><span class="line">$(<span class="keyword">this</span>).val(resultPrice);</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><p><br><br><br></p><h1 id="숫자입력만-허용하는-경우"><a href="#숫자입력만-허용하는-경우" class="headerlink" title="숫자입력만 허용하는 경우"></a>숫자입력만 허용하는 경우</h1><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"text"</span> <span class="attr">id</span>=<span class="string">"price"</span> <span class="attr">val</span>=<span class="string">"0"</span> /&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">$(<span class="string">"#price"</span>).keyup(<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line"><span class="keyword">let</span> price = $(<span class="keyword">this</span>).val();</span><br><span class="line"><span class="keyword">const</span> regex = <span class="regexp">/[^0-9]/g</span>;</span><br><span class="line"><span class="keyword">let</span> resultPrice = price.replace(regex, <span class="string">""</span>);</span><br><span class="line">$(<span class="keyword">this</span>).val(resultPrice);</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><p>이렇게 처리한다면 input태그에 숫자가 아닌 문자는 입력이 아예 안된다!</p>]]></content:encoded>
      
      
      <category domain="https://sowon-dev.github.io/categories/JavaScript/">JavaScript</category>
      
      
      <category domain="https://sowon-dev.github.io/tags/%EC%A0%95%EA%B7%9C%ED%91%9C%ED%98%84%EC%8B%9D/">정규표현식</category>
      
      
      <comments>https://sowon-dev.github.io/2023/05/11/230512regex-seconddigit-decimalpoint/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>count(**)와 count(1) 그리고 count(컬럼명) 차이</title>
      <link>https://sowon-dev.github.io/2023/05/10/230511-count/</link>
      <guid>https://sowon-dev.github.io/2023/05/10/230511-count/</guid>
      <pubDate>Wed, 10 May 2023 18:47:21 GMT</pubDate>
      
      <description>&lt;p&gt;SQL에서 count를 셀때 3가지 방법으로 나타낼 수 있다.&lt;/p&gt;</description>
      
      
      
      <content:encoded><![CDATA[<p>SQL에서 count를 셀때 3가지 방법으로 나타낼 수 있다.</p><a id="more"></a><ol><li>count(*)</li><li>count(1)</li><li>count(컬럼명)</li></ol><h1 id="count-vs-count-1"><a href="#count-vs-count-1" class="headerlink" title="count(*) vs count(1)"></a>count(*) vs count(1)</h1><p>사실 둘 사이에는 아무런 차이도 없다.<br>동일하게 동작하는 걸 알 수 있다.<br>다만 가독성을 위해 <code>count(*)</code> 사용하는 것을 좋다고 한다.</p><p><br><br><br></p><h1 id="count-vs-count-컬럼명"><a href="#count-vs-count-컬럼명" class="headerlink" title="count(*) vs count(컬럼명)"></a>count(*) vs count(컬럼명)</h1><ul><li><code>COUNT(*)</code>는 레코드 갯수 전체를 카운트</li><li><code>COUNT(column_name)</code> 컬럼이 null이 아닌 경우 레코드 갯수를 카운트 </li></ul>]]></content:encoded>
      
      
      <category domain="https://sowon-dev.github.io/categories/Database/">Database</category>
      
      
      <category domain="https://sowon-dev.github.io/tags/%EC%B0%A8%EC%9D%B4/">차이</category>
      
      
      <comments>https://sowon-dev.github.io/2023/05/10/230511-count/#disqus_thread</comments>
      
    </item>
    
  </channel>
</rss>
