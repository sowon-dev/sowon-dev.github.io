<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0"
  xmlns:atom="http://www.w3.org/2005/Atom"
  xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>야망찬 개발자의 블로그</title>
    <link>https://sowon-dev.github.io/</link>
    
    <atom:link href="https://sowon-dev.github.io/rss2.xml" rel="self" type="application/rss+xml"/>
    
    <description></description>
    <pubDate>Fri, 25 Sep 2020 02:29:41 GMT</pubDate>
    <generator>http://hexo.io/</generator>
    
    <item>
      <title>[ITWILL : JSP] JSP전체목록List</title>
      <link>https://sowon-dev.github.io/2020/11/17/jspList/</link>
      <guid>https://sowon-dev.github.io/2020/11/17/jspList/</guid>
      <pubDate>Tue, 17 Nov 2020 00:00:00 GMT</pubDate>
      
      <description>&lt;h2 id=&quot;🌷프로그래밍기초&quot;&gt;&lt;a href=&quot;#🌷프로그래밍기초&quot; class=&quot;headerlink&quot; title=&quot;🌷프로그래밍기초&quot;&gt;&lt;/a&gt;🌷프로그래밍기초&lt;/h2&gt;&lt;ol&gt;
&lt;li&gt;&lt;a href=&quot;https://sowon-dev.github.io/2020/05/28/200528jspi/&quot;&gt;프로그래밍기초이론, 하드웨어 vs 소프트웨어 vs 펌웨어, 기억장치, 클라이언트 vs 서버&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&quot;🌷JS기초&quot;&gt;&lt;a href=&quot;#🌷JS기초&quot; class=&quot;headerlink&quot; title=&quot;🌷JS기초&quot;&gt;&lt;/a&gt;🌷JS기초&lt;/h2&gt;&lt;ol&gt;
&lt;li&gt;&lt;a href=&quot;https://sowon-dev.github.io/2020/06/01/200601jspi/&quot;&gt;JS기초이론, Compile VS Interprete, 변수, js라이브러리,객체타입&lt;/a&gt;</description>
      
      
      
      <content:encoded><![CDATA[<h2 id="🌷프로그래밍기초"><a href="#🌷프로그래밍기초" class="headerlink" title="🌷프로그래밍기초"></a>🌷프로그래밍기초</h2><ol><li><a href="https://sowon-dev.github.io/2020/05/28/200528jspi/">프로그래밍기초이론, 하드웨어 vs 소프트웨어 vs 펌웨어, 기억장치, 클라이언트 vs 서버</a></li></ol><h2 id="🌷JS기초"><a href="#🌷JS기초" class="headerlink" title="🌷JS기초"></a>🌷JS기초</h2><ol><li><a href="https://sowon-dev.github.io/2020/06/01/200601jspi/">JS기초이론, Compile VS Interprete, 변수, js라이브러리,객체타입</a><a id="more"></a></li><li><a href="https://sowon-dev.github.io/2020/06/02/200602jspi/">JS를 문서에 나타내는 3가지방법, undefined VS null, 백의자리 Math.floor(), 복합대입연산자로table생성, A++과 ++A차이점, ==과===차이점, 논리표</a></li><li><a href="https://sowon-dev.github.io/2020/06/03/200603jspi/">JAVA SE/EE/ME 차이점, JAVA EE 설정. Tomcat 설치및설정, 이클립스 단축키</a></li><li><a href="https://sowon-dev.github.io/2020/06/04/200604jspi/">아이디와 비번입력, 새로고침location.reload(), 주석한번에 단축키, switch문 출력문 한줄리팩토링</a></li><li><a href="https://sowon-dev.github.io/2020/06/09/200609jspi/">반복문 for 순서 자세히, 개발자 도구로 디버깅, 기본 반복문암기, for문과 if문의 자리바꿈에 따른 변화, 반복문의 전위연산 VS 후위연산, do while문</a></li><li><a href="https://sowon-dev.github.io/2020/06/11/200611jspi/">무한반복문, 보조제어(break와continue)문, 익명함수, 재귀함수, 지역변수를 전역에서 사용하는 방법, 내장함수</a></li></ol><h2 id="🌷JS기초-객체-내장객체-브라우저객체모델-BOM-문서객체모델-DOM"><a href="#🌷JS기초-객체-내장객체-브라우저객체모델-BOM-문서객체모델-DOM" class="headerlink" title="🌷JS기초 : 객체 (내장객체, 브라우저객체모델(BOM), 문서객체모델(DOM))"></a>🌷JS기초 : 객체 (내장객체, 브라우저객체모델(BOM), 문서객체모델(DOM))</h2><ol><li><a href="https://sowon-dev.github.io/2020/06/12/200612jspi/">Object객체 전체개념, tv채널객체함수, new를 쓰고 안쓰고의 차이</a></li><li><a href="https://sowon-dev.github.io/2020/06/12/200612jspi2/">Date객체 자세히, 디데이구하는 함수</a></li><li><a href="https://sowon-dev.github.io/2020/06/15/200615jspi/">Array객체 (for ~ in구문, join(), reverse(), sort())</a></li><li><a href="https://sowon-dev.github.io/2020/06/15/200615jspi2/">String객체, 짤라오는 함수 4종류 .substring(), slice(), substr(), charAt(), .indexOf()와 .lastIndexOf()차이, .concat(), .split(), ID자릿수를 제한하는 이메일 유효성검사</a></li><li><a href="https://sowon-dev.github.io/2020/06/15/200615jspi3/">이벤트리스너와 이벤트핸들러, 브라우저객체모델, window객체전체</a></li><li><a href="https://sowon-dev.github.io/2020/06/16/200616jspi/">브라우저객체모델안의 Document객체 (bgColor와 fgColor사용,  img태그에 접근하여 속성 사용, 랜덤 img 출력하기)</a></li><li><a href="https://sowon-dev.github.io/2020/06/16/200616jspi2/">브라우저객체모델안의 location객체</a></li><li><a href="https://sowon-dev.github.io/2020/06/17/200617jspi/">브라우저객체모델안의 history객체, screen객체, navigator객체</a></li><li><a href="https://sowon-dev.github.io/2020/06/17/200617jspi2/">문서 객체 모델안의 form태그, 페이지이동방식(get과 post), focus() vs blur() vs select()</a></li><li><a href="https://sowon-dev.github.io/2020/06/18/200618jspi/">문서 객체 모델안의 if문에 return;의 역할, radio태그, checkbox태그</a></li></ol><h2 id="🌷JS실습"><a href="#🌷JS실습" class="headerlink" title="🌷JS실습"></a>🌷JS실습</h2><ol><li><a href="https://sowon-dev.github.io/2020/06/22/200622jspi/">js로 간단한 회원가입페이지 작성하기</a></li></ol><h2 id="🌷JSP기초"><a href="#🌷JSP기초" class="headerlink" title="🌷JSP기초"></a>🌷JSP기초</h2><ol><li><a href="https://sowon-dev.github.io/2020/06/22/200622jspi2/">JSP 첫 프로젝트 톰캣과 연결</a></li><li><a href="https://sowon-dev.github.io/2020/06/23/200623jspi/">JSP 주석과 JSP directive, JSP 스크립트 요소</a></li><li><a href="https://sowon-dev.github.io/2020/06/24/200624jspi/">JAVA DATATYPE, Integer.parseInt(문자열), 동일한 파라미터의 값을 가지는 데이터가 여러개있을 경우 변수로 가져오기</a></li><li><a href="https://sowon-dev.github.io/2020/07/15/200715jspi2/">커넥션풀(Connection Pool)</a></li><li><a href="https://sowon-dev.github.io/2020/07/16/200716jspi/">Wrapper클래스, 오토 박싱과 오토 언박싱, hierarchy확인법</a></li><li><a href="https://sowon-dev.github.io/2020/09/23/200923jspi-2/">자바 클래스(객체) vs 추상클래스 vs 인터페이스</a></li></ol><h2 id="🌷JSP기초-내장객체-중-영역객체"><a href="#🌷JSP기초-내장객체-중-영역객체" class="headerlink" title="🌷JSP기초 : 내장객체 중 영역객체"></a>🌷JSP기초 : 내장객체 중 영역객체</h2><ol><li><a href="https://sowon-dev.github.io/2020/06/23/200623jspi2/">내장객체</a></li><li><a href="https://sowon-dev.github.io/2020/06/24/200624jspi2/">영역객체scope</a></li><li><a href="https://sowon-dev.github.io/2020/06/25/200625jspi/">영역객체 안에서 사용하는 속성(Attribute), 링크이동 방법별 전달가능한 영역(scope)</a></li><li><a href="https://sowon-dev.github.io/2020/06/25/200625jspi2/">JSP 디렉티브(directive) 중 include VS 액션태그 include, jspf확장자 파일</a></li><li><a href="https://sowon-dev.github.io/2020/06/29/200629jspi/">세션(Session)</a></li><li><a href="https://sowon-dev.github.io/2020/06/29/200629jspi2/">==과 str.equals(str2) 차이, 객체와 클래스</a></li><li><a href="https://sowon-dev.github.io/2020/07/01/200701jspi/">쿠키(Cookie)</a></li></ol><h2 id="🌷MySQL"><a href="#🌷MySQL" class="headerlink" title="🌷MySQL"></a>🌷MySQL</h2><ol><li><a href="https://sowon-dev.github.io/2020/06/30/200701jspi2/">MYSQL 설치, MYSQL환경변수설정, cmd에서 명령어 잘못입력해서 mysql못빠져나갈때</a></li><li><a href="https://sowon-dev.github.io/2020/07/01/200702jspi/">MYSQL 접속순서, DB명령어, 테이블명령어, 데이터명령어</a></li><li><a href="https://sowon-dev.github.io/2020/07/01/200702jspi2/">MySQL 한글깨짐현상 두가지 해결방법 : cmd와 Workbench, 이클립스와 MYSQL연결</a></li></ol><h2 id="🌷JDBC"><a href="#🌷JDBC" class="headerlink" title="🌷JDBC"></a>🌷JDBC</h2><ol><li><a href="https://sowon-dev.github.io/2020/07/03/200703jspi/">JDBC활용 - import쓰는 이유, form페이지로 받은 데이터를 DB에 insert하는 방법</a></li><li><a href="https://sowon-dev.github.io/2020/07/03/200703jspi2/">JDBC활용 - JAVA에서 DB 정보 지우기 2가지방법</a></li><li><a href="https://sowon-dev.github.io/2020/07/06/200706jspi/">JDBC활용 - DB에서 고객정보를 불러와서 HTML테이블에 담기</a></li><li><a href="https://sowon-dev.github.io/2020/07/06/200706jspi2/">JDBC활용 - TIMESTAMP주의점, JDBC에서 데이터처리</a></li><li><a href="https://sowon-dev.github.io/2020/07/07/200707jspi/">JDBC활용 - 회원정보수정페이지만들기</a></li><li><a href="https://sowon-dev.github.io/2020/07/08/200708jspi/">JDBC활용 - 회원목록출력하는데 관리자는 빼고 출력하기, 자바 에러 두종류</a></li></ol><h2 id="🌷JAVABEAN"><a href="#🌷JAVABEAN" class="headerlink" title="🌷JAVABEAN"></a>🌷JAVABEAN</h2><ol><li><a href="https://sowon-dev.github.io/2020/07/09/200709jspi/">Javabean : 기초</a></li><li><a href="https://sowon-dev.github.io/2020/07/09/200709jspi2/">자바빈 실습1 : 회원가입페이지만들기</a></li><li><a href="https://sowon-dev.github.io/2020/07/14/200714jspi/">자바빈 실습2 : 로그인 및 로그아웃페이지만들기</a></li><li><a href="https://sowon-dev.github.io/2020/07/14/200714jspi2/">자바빈 실습3 : 회원정보조회 및 수정페이지만들기</a></li><li><a href="https://sowon-dev.github.io/2020/07/15/200715jspi/">자바빈 실습4 : web.xml, 회원정보삭제페이지</a></li><li><a href="https://sowon-dev.github.io/2020/07/15/200715jspi3/">자바빈 실습5 : 관리자만 확인할 수 있는 회원목록페이지만들기</a></li><li><a href="https://sowon-dev.github.io/2020/07/20/200720jspi2/">자바빈 실습6 : 게시판만들기(글쓰기)</a></li><li><a href="https://sowon-dev.github.io/2020/07/21/200721jspi/">자바빈 실습7 : 게시판만들기(글 총 갯수, 글목록, 페이징처리)</a></li><li><a href="https://sowon-dev.github.io/2020/07/22/200722jspi/">자바빈 실습8 : 게시판만들기(글내용보기, 글수정하기)</a></li><li><a href="https://sowon-dev.github.io/2020/07/23/200723jspi/">자바빈 실습9 : 게시판만들기(글삭제하기)</a></li><li><a href="https://sowon-dev.github.io/2020/07/23/200723jspi2/">자바빈 실습10 : 게시판만들기(답글쓰기)</a></li></ol><h2 id="🌷파일업로드와-다운로드-기능-구현"><a href="#🌷파일업로드와-다운로드-기능-구현" class="headerlink" title="🌷파일업로드와 다운로드 기능 구현"></a>🌷파일업로드와 다운로드 기능 구현</h2><ol><li><a href="https://sowon-dev.github.io/2020/07/27/200727jspi/">자바빈 실습11 : MultipartRequest클래스</a></li><li><a href="https://sowon-dev.github.io/2020/07/27/200727jspi2/">자바빈 실습12 : 파일업로드</a></li><li><a href="https://sowon-dev.github.io/2020/07/27/200727jspi3/">자바빈 실습13 : 파일다운로드</a></li><li><a href="https://sowon-dev.github.io/2020/07/28/200728jspi/">자바빈 실습14 : ServletContext 사용하여 파일업로드와 다운로드</a></li></ol><h2 id="🌷자료구조"><a href="#🌷자료구조" class="headerlink" title="🌷자료구조"></a>🌷자료구조</h2><ol><li><a href="https://sowon-dev.github.io/2020/07/16/200716jspi2/">자료구조1 : Collections Framwork(Set계열, List계열)</a></li><li><a href="https://sowon-dev.github.io/2020/07/20/200720jspi/">자료구조2 : Stack클래스, Queue인터페이스, Map인터페이스</a></li></ol><h2 id="🌷model1-홈페이지만들기"><a href="#🌷model1-홈페이지만들기" class="headerlink" title="🌷model1 홈페이지만들기"></a>🌷model1 홈페이지만들기</h2><ol><li><a href="https://sowon-dev.github.io/2020/07/29/200729jspi/">홈페이지만들기1 : 프로젝트 시작 설정 및 자바빈생성과 DB연결</a></li><li><a href="https://sowon-dev.github.io/2020/07/30/200730jspi/">홈페이지만들기2 : 아이디중복체크 포함한 회원가입기능 구현</a></li><li><a href="https://sowon-dev.github.io/2020/07/30/200730jspi2/">홈페이지만들기3 : 로그인/로그아웃 기능 구현</a></li><li><a href="https://sowon-dev.github.io/2020/08/03/200803jspi/">홈페이지만들기4 : 게시판글쓰기구현</a></li><li><a href="https://sowon-dev.github.io/2020/08/04/200804jspi/">홈페이지만들기5 : 게시판에 글목록표시구현</a></li></ol><h2 id="🌷JQuery"><a href="#🌷JQuery" class="headerlink" title="🌷JQuery"></a>🌷JQuery</h2><ol><li><a href="https://sowon-dev.github.io/2020/08/04/200804jspi2/">JQuery1 : JQuery 사용설정, 선택자, css()</a></li><li><a href="https://sowon-dev.github.io/2020/08/05/200805jspi/">JQuery2 : attr(), html()와 text(), append()와 prepend()</a></li><li><a href="https://sowon-dev.github.io/2020/08/05/200805jspi2/">JQuery3 : setInterval()와 clearInteval(), CDATA VS PCDATA</a></li><li><a href="https://sowon-dev.github.io/2020/08/06/200806jspi/">JQuery4 : click(), bind(), event.preventDefault(), unbind(), keyup(), 유효성체크(자바스크립트 vs 제이쿼리)</a></li><li><a href="https://sowon-dev.github.io/2020/08/06/200806jspi2/">JQuery5 : 유효성체크(자바스크립트 vs 제이쿼리), 제이쿼리 기본효과</a></li><li><a href="https://sowon-dev.github.io/2020/08/07/200807jspi/">JQuery6 : innerfade 라이브러리, animate(속성, 속도, 콜백함수)</a></li></ol><h2 id="🌷Ajax"><a href="#🌷Ajax" class="headerlink" title="🌷Ajax"></a>🌷Ajax</h2><ol><li><a href="https://sowon-dev.github.io/2020/08/07/200807jspi2/">Ajax : Ajax특징, XMLHttpRequest클래스, txt 페이지 처리</a></li><li><a href="https://sowon-dev.github.io/2020/08/10/200810jspi/">Ajax : xml처리, json처리</a></li><li><a href="https://sowon-dev.github.io/2020/08/10/200810jspi2/">Ajax : DB데이터를 불러와서 json형태로 변경하여 출력하기</a></li></ol><h2 id="🌷JSTL과-EL"><a href="#🌷JSTL과-EL" class="headerlink" title="🌷JSTL과 EL"></a>🌷JSTL과 EL</h2><ol><li><a href="https://sowon-dev.github.io/2020/08/11/200811jspi/">JSTL과 EL : JSTL과 EL개념, CORE 라이브러리(out)</a></li><li><a href="https://sowon-dev.github.io/2020/08/11/200811jspi2/">JSTL과 EL : CORE 라이브러리(set)</a></li><li><a href="https://sowon-dev.github.io/2020/08/12/200812jspi/">JSTL과 EL : CORE 라이브러리(if, forEach, forTokens, choose)</a></li><li><a href="https://sowon-dev.github.io/2020/08/12/200812jspi2/">JSTL과 EL : fmt 라이브러리(formatDate, formatNumber)</a></li><li><a href="https://sowon-dev.github.io/2020/08/13/200813jspi/">JSTL과 EL : EL태그로 동일한 name의 파라미터를 EL태그로 쉽게 가져오기</a></li><li><a href="https://sowon-dev.github.io/2020/08/14/200814jspi/">JSTL과 EL : EL태그 연산자</a></li><li><a href="https://sowon-dev.github.io/2020/08/14/200814jspi2/">EL과 Servlet : RequestDispatcher.forward 로 페이지 이동 후 데이터별 출력방법</a></li></ol><h2 id="🌷model2-MVC패턴-쇼핑몰만들기"><a href="#🌷model2-MVC패턴-쇼핑몰만들기" class="headerlink" title="🌷model2(MVC패턴) 쇼핑몰만들기"></a>🌷model2(MVC패턴) 쇼핑몰만들기</h2><ol><li><a href="https://sowon-dev.github.io/2020/08/17/200817jspi/">Servlet : Servlet용어정리, model1과 model2(MVC구조) 개발방식 비교</a></li></ol><h3 id="쇼핑몰회원관리"><a href="#쇼핑몰회원관리" class="headerlink" title="쇼핑몰회원관리"></a>쇼핑몰회원관리</h3><ol><li><a href="https://sowon-dev.github.io/2020/08/17/200817jspi2/">Servlet회원관리1: 기본설정 및 가상주소생성</a></li><li><a href="https://sowon-dev.github.io/2020/08/19/200819jspi/">Servlet회원관리2: 회원가입</a></li><li><a href="https://sowon-dev.github.io/2020/08/19/200819jspi2/">Servlet회원관리3: 로그인</a></li><li><a href="https://sowon-dev.github.io/2020/08/19/200819jspi3/">Servlet회원관리4: 메인페이지와 로그아웃</a></li><li><a href="https://sowon-dev.github.io/2020/08/27/200827jspi/">Servlet회원관리5: 회원정보조회</a></li><li><a href="https://sowon-dev.github.io/2020/08/27/200827jspi2/">Servlet회원관리6: 회원탈퇴</a></li><li><a href="https://sowon-dev.github.io/2020/08/31/200831jspi/">Servlet회원관리7: 회원전체목록조회(관리자기능)</a></li></ol><h3 id="게시판"><a href="#게시판" class="headerlink" title="게시판"></a>게시판</h3><ol><li><a href="https://sowon-dev.github.io/2020/08/31/200831jspi2/">Servlet게시판1: 기초</a></li><li><a href="https://sowon-dev.github.io/2020/09/01/200901jspi/">Servlet게시판2: 게시판 글쓰기</a></li><li><a href="https://sowon-dev.github.io/2020/09/01/200901jspi2/">Servlet게시판3: 게시판 리스트·게시글전체목록·페이징처리</a></li><li><a href="https://sowon-dev.github.io/2020/09/03/200903jspi/">Servlet게시판4: 글 내용보기</a></li><li><a href="https://sowon-dev.github.io/2020/09/03/200903jspi2/">Servlet게시판5: 글 수정하기</a></li><li><a href="https://sowon-dev.github.io/2020/09/07/200907jspi/">Servlet게시판6: 글 삭제하기</a></li><li><a href="https://sowon-dev.github.io/2020/09/07/200907jspi2/">Servlet게시판7: 답글하기</a></li><li><a href="https://sowon-dev.github.io/2020/09/07/200907jspi3/">Servlet게시판8: 파일업로드·파일보기</a></li></ol><h3 id="관리자전용-상품목록과-등록게시판"><a href="#관리자전용-상품목록과-등록게시판" class="headerlink" title="관리자전용 상품목록과 등록게시판"></a>관리자전용 상품목록과 등록게시판</h3><ol><li><a href="https://sowon-dev.github.io/2020/09/07/200907jspi4/">Servlet관리자전용상품1 : 기초</a></li><li><a href="https://sowon-dev.github.io/2020/09/07/200907jspi5/">Servlet관리자전용상품2 : 상품등록</a></li><li><a href="https://sowon-dev.github.io/2020/09/08/200908jspi/">Servlet관리자전용상품3 : 상품목록·상품리스트</a></li><li><a href="https://sowon-dev.github.io/2020/09/09/200909jspi/">Servlet관리자전용상품4 : 상품수정·인기상품처리</a></li><li><a href="https://sowon-dev.github.io/2020/09/09/200909jspi2/">Servlet관리자전용상품5 : 상품삭제</a></li></ol><h3 id="일반유저용-상품목록"><a href="#일반유저용-상품목록" class="headerlink" title="일반유저용 상품목록"></a>일반유저용 상품목록</h3><ol><li><a href="https://sowon-dev.github.io/2020/09/10/200910jspi/">Servlet일반상품1 : 기초</a></li><li><a href="https://sowon-dev.github.io/2020/09/10/200910jspi2/">Servlet일반상품2 : 카테고리별 상품목록·상품리스트</a></li><li><a href="https://sowon-dev.github.io/2020/09/15/200915jspi/">Servlet일반상품3 : 상품상세정보</a></li></ol><h3 id="장바구니"><a href="#장바구니" class="headerlink" title="장바구니"></a>장바구니</h3><ol><li><a href="https://sowon-dev.github.io/2020/09/15/200915jspi2/">Servlet장바구니1 : 기초</a></li><li><a href="https://sowon-dev.github.io/2020/09/15/200915jspi3basket/">Servlet장바구니2 : 장바구니에 담기</a></li><li><a href="https://sowon-dev.github.io/2020/09/15/200915jspi4/">Servlet장바구니3 : 장바구니리스트, 장바구니에서 상품삭제</a></li></ol><h3 id="구매하기"><a href="#구매하기" class="headerlink" title="구매하기"></a>구매하기</h3><ol><li><a href="https://sowon-dev.github.io/2020/09/16/200916jspi/">Servlet구매하기1 : 기초</a></li><li><a href="https://sowon-dev.github.io/2020/09/17/200917jspi/">Servlet구매하기2 : 구매하기</a></li><li><a href="https://sowon-dev.github.io/2020/09/22/200922jspi/">Servlet구매하기3 : 주문목록</a></li><li><a href="https://sowon-dev.github.io/2020/09/22/200922jspi2/">Servlet구매하기4 : 주문상세정보페이지</a></li></ol><h3 id="관리자용-주문리스트"><a href="#관리자용-주문리스트" class="headerlink" title="관리자용 주문리스트"></a>관리자용 주문리스트</h3><ol><li><a href="https://sowon-dev.github.io/2020/09/23/200923jspi/">Servlet관리자용주문목록1 : 기초</a></li><li><a href="https://sowon-dev.github.io/2020/09/23/200923jspi-1/">Servlet관리자용주문목록2 : 고객주문목록</a></li><li>🌟<a href="https://sowon-dev.github.io/2020/09/23/200923jspi-3/">Servlet관리자용주문목록3 : 고객주문목록에서 주문 상태 및 운송장정보 변경</a></li><li><a href="https://sowon-dev.github.io/2020/09/24/200924jspi/">Servlet관리자용주문목록4 : 고객주문목록에서 삭제</a></li></ol><h2 id="🌷스프링프레임워크"><a href="#🌷스프링프레임워크" class="headerlink" title="🌷스프링프레임워크"></a>🌷스프링프레임워크</h2>]]></content:encoded>
      
      
      <category domain="https://sowon-dev.github.io/categories/JSP/">JSP</category>
      
      
      <category domain="https://sowon-dev.github.io/tags/ITWILL-JAVA/">ITWILL(JAVA)</category>
      
      <category domain="https://sowon-dev.github.io/tags/List/">List</category>
      
      
      <comments>https://sowon-dev.github.io/2020/11/17/jspList/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>[ITWILL : Android] Android전체목록List</title>
      <link>https://sowon-dev.github.io/2020/11/16/androidList/</link>
      <guid>https://sowon-dev.github.io/2020/11/16/androidList/</guid>
      <pubDate>Mon, 16 Nov 2020 00:43:20 GMT</pubDate>
      
      <description>&lt;h2 id=&quot;🍫안드로이드기초&quot;&gt;&lt;a href=&quot;#🍫안드로이드기초&quot; class=&quot;headerlink&quot; title=&quot;🍫안드로이드기초&quot;&gt;&lt;/a&gt;🍫안드로이드기초&lt;/h2&gt;&lt;ol&gt;
&lt;li&gt;&lt;a href=&quot;https://sowon-dev.github.io/2020/09/09/200909and/&quot;&gt;안드로이드 다운로드, 기본개념, 프로젝트 기본순서, 액티비티생명주기, 로그캣&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://sowon-dev.github.io/2020/09/28/200928and//&quot;&gt;안드로이드 4대 컴포넌트&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;</description>
      
      
      
      <content:encoded><![CDATA[<h2 id="🍫안드로이드기초"><a href="#🍫안드로이드기초" class="headerlink" title="🍫안드로이드기초"></a>🍫안드로이드기초</h2><ol><li><a href="https://sowon-dev.github.io/2020/09/09/200909and/">안드로이드 다운로드, 기본개념, 프로젝트 기본순서, 액티비티생명주기, 로그캣</a></li><li><a href="https://sowon-dev.github.io/2020/09/28/200928and//">안드로이드 4대 컴포넌트</a></li></ol><a id="more"></a><h2 id="🍫화면구성"><a href="#🍫화면구성" class="headerlink" title="🍫화면구성"></a>🍫화면구성</h2><ol><li><a href="https://sowon-dev.github.io/2020/09/10/200910and/">안드로이드 컴파운드버튼, 이미지넣기</a></li><li><a href="https://sowon-dev.github.io/2020/09/23/200923and/">레이아웃종류 및 레이아웃 안에서 자주 사용되는 속성</a></li><li><a href="https://sowon-dev.github.io/2020/09/23/200923and-1/">고급위젯</a></li><li><a href="https://sowon-dev.github.io/2020/09/23/200923and-2/">옵션메뉴, 컨텍스트메뉴, 토스트</a></li></ol><h2 id="🍫기능"><a href="#🍫기능" class="headerlink" title="🍫기능"></a>🍫기능</h2><ol><li><a href="https://sowon-dev.github.io/2020/09/24/200924and/">안드로이드 파일처리</a></li></ol>]]></content:encoded>
      
      
      <category domain="https://sowon-dev.github.io/categories/Android/">Android</category>
      
      
      <category domain="https://sowon-dev.github.io/tags/ITWILL-JAVA/">ITWILL(JAVA)</category>
      
      <category domain="https://sowon-dev.github.io/tags/List/">List</category>
      
      
      <comments>https://sowon-dev.github.io/2020/11/16/androidList/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>[ITWILL : DB] DB전체목록List</title>
      <link>https://sowon-dev.github.io/2020/11/16/DBList/</link>
      <guid>https://sowon-dev.github.io/2020/11/16/DBList/</guid>
      <pubDate>Mon, 16 Nov 2020 00:00:00 GMT</pubDate>
      
      <description>&lt;h2 id=&quot;🌱리눅스와-SQL&quot;&gt;&lt;a href=&quot;#🌱리눅스와-SQL&quot; class=&quot;headerlink&quot; title=&quot;🌱리눅스와 SQL&quot;&gt;&lt;/a&gt;🌱리눅스와 SQL&lt;/h2&gt;&lt;ol&gt;
&lt;li&gt;&lt;a href=&quot;https://sowon-dev.github.io/2020/06/01/200602dbi/&quot;&gt;간단 리눅스명령어(복붙포함), Oracle 명령어, DB작동방법, 접속순서&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://sowon-dev.github.io/2020/06/15/200616dbi/&quot;&gt;virtualBox로 가상컴퓨터만들어서 리눅스Linux 설치하기&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://sowon-dev.github.io/2020/06/18/200619dbi/&quot;&gt;CUI환경 VS GUI환경, 리눅스명령어자세히, vi단축키&lt;/a&gt;</description>
      
      
      
      <content:encoded><![CDATA[<h2 id="🌱리눅스와-SQL"><a href="#🌱리눅스와-SQL" class="headerlink" title="🌱리눅스와 SQL"></a>🌱리눅스와 SQL</h2><ol><li><a href="https://sowon-dev.github.io/2020/06/01/200602dbi/">간단 리눅스명령어(복붙포함), Oracle 명령어, DB작동방법, 접속순서</a></li><li><a href="https://sowon-dev.github.io/2020/06/15/200616dbi/">virtualBox로 가상컴퓨터만들어서 리눅스Linux 설치하기</a></li><li><a href="https://sowon-dev.github.io/2020/06/18/200619dbi/">CUI환경 VS GUI환경, 리눅스명령어자세히, vi단축키</a><a id="more"></a></li><li><a href="https://sowon-dev.github.io/2020/07/09/200710dbi/">SQL DEVELOPER사용방법</a></li></ol><h2 id="🌱DB와-SQL개념"><a href="#🌱DB와-SQL개념" class="headerlink" title="🌱DB와 SQL개념"></a>🌱DB와 SQL개념</h2><ol><li><a href="https://sowon-dev.github.io/2020/05/28/200529dbi/">DB기초이론, DBMS</a></li><li><a href="https://sowon-dev.github.io/2020/06/05/200602dbi2/">데이터베이스기초활용</a></li><li><a href="https://sowon-dev.github.io/2020/06/05/200605dbi/">DDL vs DML vs DCL</a></li><li><a href="https://sowon-dev.github.io/2020/06/07/200608dbi/">제약조건의 컬럼레벨과 테이블레벨문법, 제약조건 5가지, 버퍼에 있는 자주 사용할 쿼리구문을 저장하는 방법</a></li><li><a href="https://sowon-dev.github.io/2020/06/09/200610dbi/">select as from where, order by, 동일유저 동시접속 가능, 트랜잭션 commit과 rollback</a></li><li><a href="https://sowon-dev.github.io/2020/07/16/200717dbi/">트랜잭션(Transaction), 치환변수, save명령어, 리소스부족에러발생시</a></li><li><a href="https://sowon-dev.github.io/2020/08/03/200804dbi/">Data Dictionary</a></li></ol><h2 id="🌱Select-구문"><a href="#🌱Select-구문" class="headerlink" title="🌱Select 구문"></a>🌱Select 구문</h2><ol><li><a href="https://sowon-dev.github.io/2020/06/22/200623dbi/">Select 구문을 사용한 데이터 검색, null VS 0 VS 공백, Distinct</a></li><li><a href="https://sowon-dev.github.io/2020/06/25/200626dbi/">테이블 전체목록조회, 테이블구조조회, WHERE(조건문)절</a></li><li><a href="https://sowon-dev.github.io/2020/06/25/200626dbi2/">Order by 정렬</a></li></ol><h2 id="🌱단일행함수"><a href="#🌱단일행함수" class="headerlink" title="🌱단일행함수"></a>🌱단일행함수</h2><ol><li><a href="https://sowon-dev.github.io/2020/06/30/200630dbi/">단일행함수 : 문자함수</a></li><li><a href="https://sowon-dev.github.io/2020/06/30/200630dbi2/">단일행함수 : 숫자함수, 날짜함수</a></li><li><a href="https://sowon-dev.github.io/2020/06/30/200630dbi3/">단일행함수 : 변환함수, 일반함수</a></li><li><a href="https://sowon-dev.github.io/2020/08/10/200811dbi/">단일행함수 : 조건부 표현식</a></li></ol><h2 id="🌱여러행함수"><a href="#🌱여러행함수" class="headerlink" title="🌱여러행함수"></a>🌱여러행함수</h2><ol><li><a href="https://sowon-dev.github.io/2020/06/30/200630dbi4/">여러행함수 : 그룹함수</a></li><li><a href="https://sowon-dev.github.io/2020/07/07/200707dbi/">여러행함수 : Group by절, Having절</a></li></ol><h2 id="🌱중요-구문"><a href="#🌱중요-구문" class="headerlink" title="🌱중요 구문"></a>🌱중요 구문</h2><ol><li><a href="https://sowon-dev.github.io/2020/07/09/200710dbi2/">JOIN</a></li><li><a href="https://sowon-dev.github.io/2020/07/13/200714dbi/">Subquery1: Subquery개념, 중첩Subquery</a></li><li><a href="https://sowon-dev.github.io/2020/08/23/200824dbi/">Subquery2: Inlineview, Scalar Subquery</a></li><li><a href="https://sowon-dev.github.io/2020/08/24/200825dbi/">Subquery3: exists연산자, not exists연산자</a></li><li><a href="https://sowon-dev.github.io/2020/08/24/200825dbi/">Subquery4: with절</a></li><li><a href="https://sowon-dev.github.io/2020/07/28/200729dbi3/">SQL 기억해야 할 쿼리</a></li><li><a href="https://sowon-dev.github.io/2020/08/19/200820dbi/">Top-N분석</a></li></ol><h2 id="🌱데이터조작어-DML-데이터정의어-DDL"><a href="#🌱데이터조작어-DML-데이터정의어-DDL" class="headerlink" title="🌱데이터조작어 (DML) / 데이터정의어 (DDL)"></a>🌱데이터조작어 (DML) / 데이터정의어 (DDL)</h2><ol><li><a href="https://sowon-dev.github.io/2020/07/14/200714dbi2/">데이터조작어DML : insert/update/delete구문</a></li><li><a href="https://sowon-dev.github.io/2020/07/20/200721dbi/">데이터정의어DDL : table 생성 table 복사, varchar2와 varchar와 char비교</a></li><li><a href="https://sowon-dev.github.io/2020/07/23/200724dbi/">데이터정의어DDL : 테이블수정(컬럼수정, 제약조건수정, 컬럼명수정, 제약조건명수정), 테이블명변경, 테이블삭제, 테이블절단, truncate과 delete과 drop차이</a></li></ol><h2 id="🌱SQL의-OBJECT-종류"><a href="#🌱SQL의-OBJECT-종류" class="headerlink" title="🌱SQL의 OBJECT 종류"></a>🌱SQL의 OBJECT 종류</h2><ol><li><a href="https://sowon-dev.github.io/2020/07/27/200728dbi/">SQL의 OBJECT종류 : view</a></li><li><a href="https://sowon-dev.github.io/2020/07/28/200729dbi/">SQL의 OBJECT종류 : 시퀀스(Sequence)</a></li><li><a href="https://sowon-dev.github.io/2020/07/28/200729dbi2/">SQL의 OBJECT종류 : 인덱스(Index), 시노님(Synonym)</a></li></ol><h2 id="🌱DB구조"><a href="#🌱DB구조" class="headerlink" title="🌱DB구조"></a>🌱DB구조</h2><ol><li><a href="https://sowon-dev.github.io/2020/08/25/200826dbi/">Oracle DB구조1 : Database</a></li><li><a href="https://sowon-dev.github.io/2020/08/27/200828dbi/">Oracle DB구조2 : Instance의 SGA메모리구조</a></li><li><a href="https://sowon-dev.github.io/2020/08/31/200831dbi/">Oracle DB구조3 : Instance의 Background process</a></li><li><a href="https://sowon-dev.github.io/2020/08/31/200901dbi2/">Oracle DB구조4 : 구조 완벽정리, 상활별 오라클 DB 순서</a></li></ol><h2 id="🌱DB구현-및-관리"><a href="#🌱DB구현-및-관리" class="headerlink" title="🌱DB구현 및 관리"></a>🌱DB구현 및 관리</h2><ol><li><a href="https://sowon-dev.github.io/2020/09/09/200911dbi/">Oracle DB생성방법 2가지, Oracle DB Tool, Parameterfile 유형</a></li><li><a href="https://sowon-dev.github.io/2020/09/14/200914dbi/">오라클의 Database 켜고 끄기</a></li><li><a href="https://sowon-dev.github.io/2020/09/18/200918dbi/">오라클의 Datafile 관리하기</a></li><li><a href="https://sowon-dev.github.io/2020/09/21/200921dbi/">DB유저관리 : user 생성, 권한부여</a></li><li><a href="https://sowon-dev.github.io/2020/09/22/200922dbi/">데이터충돌, DeadLock</a></li><li><a href="https://sowon-dev.github.io/2020/09/22/200922dbi2/">DB fail 유형</a></li><li><a href="https://sowon-dev.github.io/2020/09/28/200928dbi/">Controlfile다중화, Redoligfile다중화</a></li></ol>]]></content:encoded>
      
      
      <category domain="https://sowon-dev.github.io/categories/Database/">Database</category>
      
      <category domain="https://sowon-dev.github.io/categories/Database/Oracle/">Oracle</category>
      
      
      <category domain="https://sowon-dev.github.io/tags/ITWILL-JAVA/">ITWILL(JAVA)</category>
      
      <category domain="https://sowon-dev.github.io/tags/Oracle/">Oracle</category>
      
      <category domain="https://sowon-dev.github.io/tags/List/">List</category>
      
      
      <comments>https://sowon-dev.github.io/2020/11/16/DBList/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>[국비교육 IT팀프로젝트]1.팀플주제구상(feat.입문자를 위한 팀협업도구추천)</title>
      <link>https://sowon-dev.github.io/2020/10/02/201002team/</link>
      <guid>https://sowon-dev.github.io/2020/10/02/201002team/</guid>
      <pubDate>Fri, 02 Oct 2020 00:26:31 GMT</pubDate>
      
      <description>&lt;h2 id=&quot;팀프로젝트&quot;&gt;&lt;a href=&quot;#팀프로젝트&quot; class=&quot;headerlink&quot; title=&quot;팀프로젝트&quot;&gt;&lt;/a&gt;팀프로젝트&lt;/h2&gt;&lt;p&gt;학원에서 다음주부터 팀프로젝트를 진행한다고 한다. 팀프로젝트는 개인프로젝트와 달리 굉장히 신경써야 할 부분이 많다.&lt;br&gt;그걸 어떻게 아느냐고?&lt;br&gt;나는 경영학도로서 대학 4년을 내내 수강했던 거의 모든 강의에서 팀 프로젝트 했기때문에 이런 사람, 저런 사람 그리고 &lt;a href=&quot;https://www.korean.go.kr/front/onlineQna/onlineQnaView.do?mn_id=216&amp;qna_seq=153673&quot;&gt;볼 꼴, 못 볼 꼴&lt;/a&gt;을 다봤다. &lt;/p&gt;</description>
      
      
      
      <content:encoded><![CDATA[<h2 id="팀프로젝트"><a href="#팀프로젝트" class="headerlink" title="팀프로젝트"></a>팀프로젝트</h2><p>학원에서 다음주부터 팀프로젝트를 진행한다고 한다. 팀프로젝트는 개인프로젝트와 달리 굉장히 신경써야 할 부분이 많다.<br>그걸 어떻게 아느냐고?<br>나는 경영학도로서 대학 4년을 내내 수강했던 거의 모든 강의에서 팀 프로젝트 했기때문에 이런 사람, 저런 사람 그리고 <a href="https://www.korean.go.kr/front/onlineQna/onlineQnaView.do?mn_id=216&qna_seq=153673">볼 꼴, 못 볼 꼴</a>을 다봤다. </p><a id="more"></a><p>따라서 팀프로젝트에는 자신있다!<br>지치질 않을 자신!<br>좋든 안 좋든 이 모든 경험이 직장생활에서 좋은 거름이 되어줄 것이라 믿어 의심치않는다.<br>전 직장에서도 그 거름으로 탄탄히 성장했기 때문이다.<br>이번에도 잘해보자!</p><p><br><br><br></p><h2 id="조편성"><a href="#조편성" class="headerlink" title="조편성"></a>조편성</h2><p>조 구성은 학원에서 진행해준다고 한다.<br>내가 직접 하고 싶었는데 수준에 맞춰(?) 고루 팀원을 구성한다고 한다.<br>학원 수강기간내내 찜해둔 몇몇 친구들과 함께 하고싶었는데… 쳇-<br>나처럼 열정가득한 사람들과 함께 했으면 좋겠다.<br>팀프로젝트가 개인프로젝트로 변질되기도 하는데 이번에는 팀원 다 잘 참여하여 모두 좋은 결과를 가져갔으면 좋겠다.<br>팀플을 하면 갠플과 다른 배울 점이 있으니까!</p><p><br><br><br></p><h2 id="팀프로젝트주제"><a href="#팀프로젝트주제" class="headerlink" title="팀프로젝트주제"></a>팀프로젝트주제</h2><p>아직 팀도 구성이 안되었지만 나는 팀플주제를 고민하고있다.<br>준비없는 첫 회의는 폭망의 지름길이다.<br>나라도 주제를 몇가지 준비해서 침묵을 깨고 성공적인 팀플을 해보려고한다.<br>내 목표는 첫 회의때 주제선정완료와 업무배분까지 끝내고 싶다. 간절🙏</p><p>팀프로젝트 주제로는 레퍼런스가 많은 주제가 좋다.<br>왜냐하면 찾아볼 수 있는 레퍼런스가 많아야 팀원들이 포기하지않고 끝까지 함께 나아갈 수 있기때문이다.</p><ul><li>주제<ol><li>패션 쇼핑몰</li><li>인강사이트(결제포함)</li><li>예매사이트(영화, 숙박)</li></ol></li></ul><p><br><br><br></p><h2 id="팀협업도구"><a href="#팀협업도구" class="headerlink" title="팀협업도구"></a>팀협업도구</h2><p>팀 협업도구를 꽤 오랫동안 찾아보았다.<br>Trello, 잔디, 지라, 깃헙 등등 다양한 팀협업도구들이 존재했다.<br>난 실무에서 사용하는 협업툴을 미리 써보고싶다.<br>지난번 <a href="https://sowon-dev.github.io/2020/09/21/200921opemsource/#%EC%A7%80%EB%9D%BC">프론트앤드 직무멘토링때 들었던 지라</a>를 사용해보고싶어졌다.<br>혼자서 조금 테스트 해봤는데 이전에 개인프로젝트할때 적용해보았던 <a href="https://sowon-dev.github.io/2020/08/26/200826girlsInTech/#%F0%9F%8D%80-%ED%94%84%EB%A1%9C%EC%A0%9D%ED%8A%B8-%ED%98%91%EC%97%85%EB%8F%84%EA%B5%AC">Azure DevOps</a>와 비슷했다.<br>이러한 협업툴이 필요한 이유는 한 눈에 내가 뭘 해야하고 뭘 했는지 탁탁 보이기때문이다.<br>개인프로젝트때에도 큰 효과가 있었는테 팀플이면 그 효과가 더욱더 클 것이다.</p><p>현재 학원에서 깃헙을 아는 사람들도 거의 없어서 (강사님이 깃헙 사용해보았는지 물어봐서 거수를 했는데 나만 손들었다…) 브랜치를 나눠서 내가 체크하고 merge하는 식으로 진행해야 할 것 같다. 꼬이면 답도 없기때문에…</p><ul><li>깃헙 : 백업</li><li><del>지라 : 커뮤니케이션</del></li></ul><p><br><br><br></p><h2 id="커뮤니케이션-툴과-관련하여-멘토님의-조언"><a href="#커뮤니케이션-툴과-관련하여-멘토님의-조언" class="headerlink" title="커뮤니케이션 툴과 관련하여 멘토님의 조언"></a>커뮤니케이션 툴과 관련하여 멘토님의 조언</h2><p>컨트리뷰톤때 만난 멘토님께서 내 블로그글을 보시더니 좋은 팀협업도구와 팀협업에 관해 몇가지 조언을 해주셨다.<br>멘토님은 그저 빛…☀️<br>난 참 운도 좋고 인복이 많은 것 같다.🤗</p><p>나도 팀원들이 깃헙도 처음인데 지라도 쓰자고하면 혼돈일까봐 고민했던 부분인데 어떻게 그 부분을 정확히 캐치해내시고 입문자에게 딱 맞는 간단한 협업툴을 소개해주셨다.<br>천사인게 틀림없어…☀️아멘</p><blockquote><p>레파지토리에 프로젝트라는 곳이 있는데 지라처럼 칸반 형식으로 프로젝트 관리를 할 수 있어요. 여기서 만들고 바로 이슈로 등록도 가능하고요, <a href="https://chrome.google.com/webstore/detail/zenhub-for-github/ogcgkffhplmphkaahpmffcafajaocjbd/related?hl=ko">젠허브</a>라고 크롬 확장 플러그인으로 제공하는게 있는데 프로젝트보다 조금 더 많은 기능을 제공해요.<br>지라는 너무 오버스펙이 될 수도 있어서 첨언 드린건데 다행이네요<br>생각보다 지라가 쓰기 더 까다로울 수 있어서 좀 더 라이트한 버전의 뭔가를 쓰는게 좋을거 같아요. 트렐로, 노션에이나 깃헙 모두 이슈에 코멘트를 단다던가 할 수 있어요.<br>출처 : 멘토님의 경험</p></blockquote><p>또 멘토님이 팀플에서 활용했던 Commit &amp; PR &amp; Branch Rule를 레퍼런스로 알려주셨다.<br>협업에 대해 자세하게 배울 수 있는 유익한 시간이었다.<br>특히 커밋룰은 간과하기 쉬운데 세부사항을 알 수 있어 정말 좋았다.</p><p><br><br><br></p><h3 id="Github의-Projects-사용기"><a href="#Github의-Projects-사용기" class="headerlink" title="Github의 Projects 사용기"></a>Github의 Projects 사용기</h3><p>저런 형식을 뭐라고 부르는 지 몰랐는데 칸반형식이라고 부르는 구나. 또 하나 배웠다.</p><p><img src="https://kanbanize.com/wp-content/uploads/website-images/kanban-resources/Kanban_board_elements.png" alt="한글인줄알았지만 영어로 Kanban board"></p><p>배운 건 바로 써먹어봐야지!<br>팀원들에게 추천을 하려면 내가 먼저 잘 알아야하므로 알려주신 내용 <a href="https://github.com/sowon-dev/AlgorithmStudy_Java/projects/1">바로 내 레포에 적용</a>해보았다.</p><p><img src="/img/201003githubProjects.PNG" alt="To do list 형식으로 적용한 모습"></p><p>완벽해!<br>Simple is the BEST!!!👍</p><p><br><br><br></p><h2 id="ZenHub-사용기"><a href="#ZenHub-사용기" class="headerlink" title="ZenHub 사용기"></a>ZenHub 사용기</h2><p>말씀해주신 ZenHub도 적용해보았다.<br>ZenHub는 로드맵과 리포트기능이 아주 매력적이다.</p><ul><li>매력포인트<ul><li>리포트기능</li><li>DATE를 설정가능한 로드맵기능</li><li>ZenHub크롬확장자를 다운로드 하지않았다면 Zenhub탭이 다른 사용자에게는 보이지않는다. ZenHub유저끼리는 보인다!</li></ul></li></ul><p><img src="/img/201003zenhub1.PNG" alt="칸반기능"><br><img src="/img/201003zenhub2.PNG" alt="로드맵기능"></p>]]></content:encoded>
      
      
      <category domain="https://sowon-dev.github.io/categories/Journal/">Journal</category>
      
      <category domain="https://sowon-dev.github.io/categories/Journal/Team-Project/">Team Project</category>
      
      
      <category domain="https://sowon-dev.github.io/tags/Journal/">Journal</category>
      
      
      <comments>https://sowon-dev.github.io/2020/10/02/201002team/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>오픈소스컨트리뷰톤2020 수상후기</title>
      <link>https://sowon-dev.github.io/2020/10/01/200929opensource/</link>
      <guid>https://sowon-dev.github.io/2020/10/01/200929opensource/</guid>
      <pubDate>Thu, 01 Oct 2020 23:37:06 GMT</pubDate>
      
      <description>&lt;h2 id=&quot;오픈소스컨트리뷰톤2020-멘티-참여후기&quot;&gt;&lt;a href=&quot;#오픈소스컨트리뷰톤2020-멘티-참여후기&quot; class=&quot;headerlink&quot; title=&quot;오픈소스컨트리뷰톤2020 멘티 참여후기&quot;&gt;&lt;/a&gt;오픈소스컨트리뷰톤2020 멘티 참여후기&lt;/h2&gt;&lt;p&gt;내가 참여한 &lt;strong&gt;모던자바스크립트 프로젝트&lt;/strong&gt;가 장려상을 수상했다!👑&lt;br&gt;참여하는 것만으로도 영광이었는데 이렇게 상까지 받게되니 정말 기쁘다.&lt;/p&gt;</description>
      
      
      
      <content:encoded><![CDATA[<h2 id="오픈소스컨트리뷰톤2020-멘티-참여후기"><a href="#오픈소스컨트리뷰톤2020-멘티-참여후기" class="headerlink" title="오픈소스컨트리뷰톤2020 멘티 참여후기"></a>오픈소스컨트리뷰톤2020 멘티 참여후기</h2><p>내가 참여한 <strong>모던자바스크립트 프로젝트</strong>가 장려상을 수상했다!👑<br>참여하는 것만으로도 영광이었는데 이렇게 상까지 받게되니 정말 기쁘다.</p><a id="more"></a><p>그동안 배운 것들은 정리해보았다.</p><ol><li>컨트리뷰톤기간동안 진행된 모든 회의에 참여하여 깃과 깃허브사용법등 깊이있는 버전관리지식과 오픈소스생태계 지식을 얻을 수 있었다.</li><li>다양한 분야의 컨트리뷰터분들이 유용한 현직자 팁을 매회의때마다 공유해주셨다. 책에서는 배울 수 없는 살아있는 지식을 많이 습득할 수 있었다.</li><li>평일 아침마다 진행되는 스터디에 참여하여 자극을 받고 유익했던 스터디내용을 공유할 수 있었다.</li><li>매주 화요일 저녁에 진행되는 스터디에 참여하여 직접 퀴즈를 내봄으로써 모던자바스크립트에 대한 깊이 있는 지식을 쌓는 것은 물론 <a href="https://github.com/sowon-dev/modernJsStudy">저장소를 직접 운영</a>해보았다.</li><li>🌟좋은 사람들을 많이 만났다.🌟</li></ol><p><img src="https://www.oss.kr/storage/app/public/thumbnails/21/39/spill_800x800_ee77335ae2f3ada2ef06ba731852ae2b96cd2f54.jpg" alt="출처 : https://www.oss.kr/contributhon_notice/show/bf01f047-eb8e-429a-a986-3560bf6d691e?page=1"></p><p><br><br><br></p><h2 id="스터디-레포지토리-운영-후기"><a href="#스터디-레포지토리-운영-후기" class="headerlink" title="스터디 레포지토리 운영 후기"></a>스터디 레포지토리 운영 후기</h2><p><a href="https://ko.javascript.info/">모던 자바스크립트 튜토리얼</a>자료가 정말 좋아서 완독을 목표로 오픈소스컨트리뷰톤기간동안 같이 스터디할 분들을 모집했다.<br>Zoom회의를 통해 목표와 공부방법설정을 진행하였다.<br>이걸 기록해놓으면 좋겠다는 생각에 레포지토리를 생성해서 활용하자고 제안하였고 스터디원분들이 다 좋다고 하셔서 말을 꺼낸 내가 운영하게 되었다!<br>한 명과의 레포관리만 해보았지 이렇게 여러명에서 사용하게 될 레포를 관리하는 건 처음이라 신났다.<br>깃허브 레포에서 사용하지못했던 많은 기능이 있었기에 이참에 열심히 활용해봐야겠야겠다고 생각했다.</p><ol><li>레포생성하기</li><li>스터디원 contributors로 추가하기</li><li>첫 회의때 이야기 나누었던 부분을 리드미작성하기<br><img src="/img/201003readme.PNG" alt="리드미"></li><li>위키활용하기<ul><li>위키를 활용하기 위해 어떤 정보를 작성할까 고민했다. 그러다 회의록을 작성하면 좋겠다는 생각이 들었다. 사정이 있어 지난 스터디에 참석 못 한 스터디원들에게도 위키를 통해 정보를 공유하여 다음 스터디참석에 원활하게끔 만들 수 있을 것 같았다.</li><li>어떤 사람이 참석했는지 출석부를 만들면 좋겠다고 생각했는데 우리 스터디 규정중에 퀴즈제출을 활용하면 좋겠다는 생각이 들었다. 더불어 퀴즈를 기준으로 퀴즈 모음을 만들어 한 눈에 퀴즈와 풀이를 볼 수 있게끔 하고싶었다. 그래서 퀴즈리스트를 만들어서 제출자 아이디와 퀴즈, 풀이를 함께 링크를 걸어 한 눈에 파악할 수 있도록하고 출석체크까지 겸 했다.</li></ul></li><li>이슈템플릿 만들기<ul><li>퀴즈나 전반적인 스터디 질문에 대비하여 이슈템플릿도 만들어보았다. 질문은 다 줌미팅에서 해결했기에 결과적으로는 아무도 사용하지 않았지만ㅋㅋㅋ<br><img src="/img/201003issuetemplete.PNG" alt="이슈템플릿"></li></ul></li></ol><p>그렇게 탄생한 <a href="https://github.com/sowon-dev/modernJsStudy">모던JS스터디레포</a>!<br>한 달동안 직접 담당하여 운영해보니 깃헙의 매력에 푹 빠져버렸다.<br>이렇게 숨은 기능이 많을 줄이야!<br>다음에도 꼭 컨트리뷰톤에 참여하고싶다.<br>내가 직접 멘토가 되는 그날이 오기를 소망해본다!</p>]]></content:encoded>
      
      
      <category domain="https://sowon-dev.github.io/categories/%EC%98%A4%ED%94%88%EC%86%8C%EC%8A%A4%EC%BB%A8%ED%8A%B8%EB%A6%AC%EB%B7%B0%ED%86%A42020/">오픈소스컨트리뷰톤2020</category>
      
      
      <category domain="https://sowon-dev.github.io/tags/Review/">Review</category>
      
      <category domain="https://sowon-dev.github.io/tags/Journal/">Journal</category>
      
      
      <comments>https://sowon-dev.github.io/2020/10/01/200929opensource/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>인텔리제이 윈도우 단축키 표</title>
      <link>https://sowon-dev.github.io/2020/09/30/201001journal/</link>
      <guid>https://sowon-dev.github.io/2020/09/30/201001journal/</guid>
      <pubDate>Wed, 30 Sep 2020 07:57:03 GMT</pubDate>
      
      <description>&lt;h2 id=&quot;IntelliJ-window-단축키&quot;&gt;&lt;a href=&quot;#IntelliJ-window-단축키&quot; class=&quot;headerlink&quot; title=&quot;IntelliJ window 단축키&quot;&gt;&lt;/a&gt;IntelliJ window 단축키&lt;/h2&gt;&lt;p&gt;이클립스로 개발공부를 해왔지만 스프링을 공부하면서 좋다는 소문만 들었던 인텔리제이 커뮤니티버전을 다운로드받았다.&lt;br&gt;나도 인텔리제이쓴다!!하며 &lt;a href=&quot;http://color-themes.com/?view=index&quot;&gt;color scheme&lt;/a&gt;도 고르고 룰루랄라 시작했는데..&lt;/p&gt;</description>
      
      
      
      <content:encoded><![CDATA[<h2 id="IntelliJ-window-단축키"><a href="#IntelliJ-window-단축키" class="headerlink" title="IntelliJ window 단축키"></a>IntelliJ window 단축키</h2><p>이클립스로 개발공부를 해왔지만 스프링을 공부하면서 좋다는 소문만 들었던 인텔리제이 커뮤니티버전을 다운로드받았다.<br>나도 인텔리제이쓴다!!하며 <a href="http://color-themes.com/?view=index">color scheme</a>도 고르고 룰루랄라 시작했는데..</p><a id="more"></a><p><strong>이런!</strong><br>단축키가 달라서 코딩속도가 엄청 느리다…답답해!!!!!!!!<br>스스로 너무 답답해서 인텔리 윈도우용 단축키를 정리해나가고자한다.</p><p><br><br><br></p><h2 id="인텔리제이-단축키-정리표"><a href="#인텔리제이-단축키-정리표" class="headerlink" title="인텔리제이 단축키 정리표"></a>인텔리제이 단축키 정리표</h2><table><thead><tr><th align="center">카테고리</th><th align="center">Action</th><th align="left">단축키</th></tr></thead><tbody><tr><td align="center">이동</td><td align="center">줄이동</td><td align="left">Alt + Shift + ↑↓</td></tr><tr><td align="center"></td><td align="center">한줄 아래로 복붙</td><td align="left">Ctrl + d</td></tr><tr><td align="center"></td><td align="center">코드 한 줄 삭제</td><td align="left">Ctrl + y</td></tr><tr><td align="center"></td><td align="center">파일 가장 위, 아래로 이동</td><td align="left">Ctrl + Home, End</td></tr><tr><td align="center">자동완성</td><td align="center">괄호안에서 <code>;</code>로 코드완성하기</td><td align="left">Ctrl + Shift + Enter</td></tr><tr><td align="center"></td><td align="center">변수 추출하기</td><td align="left">Ctrl + Alt + v</td></tr><tr><td align="center"></td><td align="center">생성자,Getter와Setter,메서드 오버라이딩 자동완성</td><td align="left">Alt + Insert</td></tr><tr><td align="center"></td><td align="center">자바클래스 main메서드 자동생성</td><td align="left">psvm + Tab</td></tr><tr><td align="center"></td><td align="center">System.out.println(); 자동완성</td><td align="left">sout + Tab</td></tr><tr><td align="center"></td><td align="center">System.out.printf(“”); 자동완성</td><td align="left">so + Tab</td></tr><tr><td align="center">수정</td><td align="center">동일한 변수명 한꺼번에 수정</td><td align="left">변수명에서 Shift + F6</td></tr><tr><td align="center">실행</td><td align="center">런</td><td align="left">Ctrl + Shift + F10</td></tr><tr><td align="center"></td><td align="center">이전실행을 재실행</td><td align="left">Shift + F10</td></tr></tbody></table><p><br><br><br></p><h2 id="🔑이동"><a href="#🔑이동" class="headerlink" title="🔑이동"></a>🔑이동</h2><ul><li>줄이동 :  Alt + Shift + ↑↓</li><li>한줄 아래로 복붙 : Ctrl + d</li><li>코드 한줄 삭제 : Ctrl + y</li><li>파일 가장 위, 아래로 이동 : Ctrl + Home, End </li></ul><p><br><br><br></p><h2 id="🔑자동완성"><a href="#🔑자동완성" class="headerlink" title="🔑자동완성"></a>🔑자동완성</h2><ul><li>괄호안에서 <code>;</code>로 코드완성하기 : Ctrl + Shift + Enter</li><li>변수 추출하기 :  Ctrl + Alt + v</li><li>생성자,Getter와Setter,메서드 오버라이딩등 자동생성 : Alt + Insert</li><li>자바클래스 main메서드 자동생성 : psvm + Tab</li><li>System.out.println(); 자동완성 : sout + Tab</li><li>System.out.printf(“”); 자동완성 : so + Tab</li></ul><p><br><br><br></p><h2 id="🔑수정"><a href="#🔑수정" class="headerlink" title="🔑수정"></a>🔑수정</h2><ul><li>동일한 변수명 한꺼번에 수정 : 변수명에서 Shift + F6</li></ul><p><br><br><br></p><h2 id="🔑실행"><a href="#🔑실행" class="headerlink" title="🔑실행"></a>🔑실행</h2><ul><li>런 : Ctrl + Shift + F10</li><li>이전실행을 재실행 : Shift + F10</li></ul><p><br><br><br></p><h2 id="추천-플러그인"><a href="#추천-플러그인" class="headerlink" title="추천 플러그인"></a>추천 플러그인</h2><ul><li>presentaion Assistant : 화면 하단에 단축키 알려준다.</li></ul><p><br><br><br></p><h2 id="IntelliJ-VSCode-Eclipse-Visual-Studio-단축키-비교"><a href="#IntelliJ-VSCode-Eclipse-Visual-Studio-단축키-비교" class="headerlink" title="IntelliJ, VSCode, Eclipse, Visual Studio 단축키 비교"></a>IntelliJ, VSCode, Eclipse, Visual Studio 단축키 비교</h2><ul><li><a href="https://okdevtv.com/mib/intellij/shortcuts">https://okdevtv.com/mib/intellij/shortcuts</a></li></ul>]]></content:encoded>
      
      
      <category domain="https://sowon-dev.github.io/categories/Journal/">Journal</category>
      
      
      <category domain="https://sowon-dev.github.io/tags/Journal/">Journal</category>
      
      <category domain="https://sowon-dev.github.io/tags/IntelliJ/">IntelliJ</category>
      
      
      <comments>https://sowon-dev.github.io/2020/09/30/201001journal/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>(JAVA 자바)시간 입력받아 그대로 출력하기</title>
      <link>https://sowon-dev.github.io/2020/09/29/200930al-2/</link>
      <guid>https://sowon-dev.github.io/2020/09/29/200930al-2/</guid>
      <pubDate>Tue, 29 Sep 2020 08:06:15 GMT</pubDate>
      
      <description>&lt;h2 id=&quot;문제-기초-입출력-시간-입력받아-그대로-출력하기&quot;&gt;&lt;a href=&quot;#문제-기초-입출력-시간-입력받아-그대로-출력하기&quot; class=&quot;headerlink&quot; title=&quot;문제 : [기초-입출력] 시간 입력받아 그대로 출력하기&quot;&gt;&lt;/a&gt;문제 : [기초-입출력] 시간 입력받아 그대로 출력하기&lt;/h2&gt;&lt;p&gt;시(hour)와 분(minute)이 “:” 으로 구분된 형식에 맞추어 시간이 입력될 때, 그대로 출력하는 연습을 해보자.&lt;/p&gt;</description>
      
      
      
      <content:encoded><![CDATA[<h2 id="문제-기초-입출력-시간-입력받아-그대로-출력하기"><a href="#문제-기초-입출력-시간-입력받아-그대로-출력하기" class="headerlink" title="문제 : [기초-입출력] 시간 입력받아 그대로 출력하기"></a>문제 : [기초-입출력] 시간 입력받아 그대로 출력하기</h2><p>시(hour)와 분(minute)이 “:” 으로 구분된 형식에 맞추어 시간이 입력될 때, 그대로 출력하는 연습을 해보자.</p><a id="more"></a><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//입력예시</span></span><br><span class="line"><span class="number">3</span>:<span class="number">16</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//출력예시</span></span><br><span class="line"><span class="number">3</span>:<span class="number">16</span></span><br></pre></td></tr></table></figure><p><br><br><br></p><h2 id="코드1-nextLine-이용"><a href="#코드1-nextLine-이용" class="headerlink" title="코드1 : nextLine()이용"></a>코드1 : nextLine()이용</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> java.util.Scanner;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Main</span> </span>&#123;</span><br><span class="line">  <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">    Scanner scan = <span class="keyword">new</span> Scanner(System.in);</span><br><span class="line">String time = scan.nextLine();</span><br><span class="line">scan.close();</span><br><span class="line">System.out.printf(<span class="string">"%s"</span>, time);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><br><br><br></p><h2 id="코드2-Integer-parseInt-이용"><a href="#코드2-Integer-parseInt-이용" class="headerlink" title="코드2 : Integer.parseInt()이용"></a>코드2 : Integer.parseInt()이용</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> java.util.Scanner;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Main</span> </span>&#123;</span><br><span class="line">  <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">    Scanner sc = <span class="keyword">new</span> Scanner(System.in);</span><br><span class="line">    String str = sc.next();</span><br><span class="line">    sc.close();</span><br><span class="line"></span><br><span class="line">    String[] time = str.split(<span class="string">":"</span>);</span><br><span class="line">    System.out.printf(<span class="string">"%d:%d"</span>, Integer.parseInt(time[<span class="number">0</span>]), Integer.parseInt(time[<span class="number">1</span>]));</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><br><br><br></p><h2 id="코드3-Integer-valueOf-이용"><a href="#코드3-Integer-valueOf-이용" class="headerlink" title="코드3 : Integer.valueOf()이용"></a>코드3 : Integer.valueOf()이용</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> java.util.Scanner;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Main</span> </span>&#123;</span><br><span class="line">  <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">    Scanner sc = <span class="keyword">new</span> Scanner(System.in);</span><br><span class="line">    String str = sc.next();</span><br><span class="line">    String[] time = str.split(<span class="string">":"</span>);</span><br><span class="line">    sc.close();</span><br><span class="line"></span><br><span class="line">    System.out.printf(<span class="string">"%d:%d"</span>, Integer.valueOf(time[<span class="number">0</span>]),Integer.valueOf(time[<span class="number">1</span>]));</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><br><br><br></p><h2 id="세-코드-비교"><a href="#세-코드-비교" class="headerlink" title="세 코드 비교"></a>세 코드 비교</h2><p>Scanner를 close 유무로 수행시간과 메모리 차이가 발생한다.</p><table><thead><tr><th align="center"></th><th align="center">nextLine()</th><th align="center">Integer.parseInt()</th><th align="center">Integer.valueOf()</th></tr></thead><tbody><tr><td align="center">close 전 수행시간</td><td align="center">109ms</td><td align="center">110ms</td><td align="center">109ms</td></tr><tr><td align="center">close 후 수행시간</td><td align="center">109ms</td><td align="center">114ms</td><td align="center">113ms</td></tr><tr><td align="center">close 전 메모리</td><td align="center">14960kb</td><td align="center">15028kb</td><td align="center">15004kb</td></tr><tr><td align="center">close 후 메모리</td><td align="center">14972kb</td><td align="center">14976kb</td><td align="center">14972kb</td></tr></tbody></table><p><br><br><br></p><h2 id="next-와-nextLine-차이"><a href="#next-와-nextLine-차이" class="headerlink" title="next()와 nextLine()차이"></a>next()와 nextLine()차이</h2><ol><li>next() : 공백을 기준으로 입력.</li><li>nextLine() : 한 라인을 기준으로 입력.<ul><li>따라서 split()하기 좋음.</li></ul></li></ol><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//입력값 가나다 라 마 바 사 일때</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//next() 사용</span></span><br><span class="line">String n = sc.next(); </span><br><span class="line">System.out.println(n);</span><br><span class="line"></span><br><span class="line"><span class="comment">//nextLine() 사용 </span></span><br><span class="line">String nl = sc.nextLine(); </span><br><span class="line">System.out.println(nl);</span><br><span class="line"></span><br><span class="line"><span class="comment">//출력값</span></span><br><span class="line">가나다 </span><br><span class="line">가나다 라 마 바 사</span><br></pre></td></tr></table></figure><p><img src="/img/nextNnextLine.PNG" alt="출처: https://www.geeksforgeeks.org/difference-between-next-and-nextline-methods-in-java/"></p><p><br><br><br></p><h2 id="parseInt-valueOf의-차이"><a href="#parseInt-valueOf의-차이" class="headerlink" title="parseInt, valueOf의 차이"></a>parseInt, valueOf의 차이</h2><blockquote><ul><li>parseInt : 리턴타입 기본 자료형</li><li>valueOf : 리턴타입 객체</li><li>valueOf는 결국 parseInt를 호출하는 형태이다. 문자열을 변환할 때 객체로 받아서 사용하느냐, 기본 자료형으로 받아서 사용하느냐의 차이다.<br>출처 : <a href="https://brunch.co.kr/@artiveloper/11">https://brunch.co.kr/@artiveloper/11</a></li></ul></blockquote>]]></content:encoded>
      
      
      <category domain="https://sowon-dev.github.io/categories/Algorithm/">Algorithm</category>
      
      
      <category domain="https://sowon-dev.github.io/tags/CodeUp100/">CodeUp100</category>
      
      
      <comments>https://sowon-dev.github.io/2020/09/29/200930al-2/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>(JAVA 자바)실수 1개 입력받아 그대로 출력하기</title>
      <link>https://sowon-dev.github.io/2020/09/29/200930al/</link>
      <guid>https://sowon-dev.github.io/2020/09/29/200930al/</guid>
      <pubDate>Tue, 29 Sep 2020 08:05:01 GMT</pubDate>
      
      <description>&lt;h2 id=&quot;문제-기초-입출력-실수-1개-입력받아-그대로-출력하기&quot;&gt;&lt;a href=&quot;#문제-기초-입출력-실수-1개-입력받아-그대로-출력하기&quot; class=&quot;headerlink&quot; title=&quot;문제 : [기초-입출력] 실수 1개 입력받아 그대로 출력하기&quot;&gt;&lt;/a&gt;문제 : [기초-입출력] 실수 1개 입력받아 그대로 출력하기&lt;/h2&gt;&lt;p&gt;실수형(float)로 변수를 선언하고 그 변수에 실수값을 저장한 후&lt;br&gt;저장되어 있는 실수값을 출력해보자.&lt;/p&gt;</description>
      
      
      
      <content:encoded><![CDATA[<h2 id="문제-기초-입출력-실수-1개-입력받아-그대로-출력하기"><a href="#문제-기초-입출력-실수-1개-입력받아-그대로-출력하기" class="headerlink" title="문제 : [기초-입출력] 실수 1개 입력받아 그대로 출력하기"></a>문제 : [기초-입출력] 실수 1개 입력받아 그대로 출력하기</h2><p>실수형(float)로 변수를 선언하고 그 변수에 실수값을 저장한 후<br>저장되어 있는 실수값을 출력해보자.</p><a id="more"></a><p><br><br><br></p><h2 id="내코드"><a href="#내코드" class="headerlink" title="내코드"></a>내코드</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> java.util.Scanner;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Main</span> </span>&#123;</span><br><span class="line">  <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">float</span> x;</span><br><span class="line">    Scanner sc = <span class="keyword">new</span> Scanner(System.in);</span><br><span class="line">    x = sc.nextFloat();</span><br><span class="line">    System.out.print(x);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//입력값 1.414213일때 출력값</span></span><br><span class="line"><span class="number">1.414213</span></span><br></pre></td></tr></table></figure><p>출력값확인하고 코드소슽 틀렸는데 테스트값이 일치하지않았다. 통과못한 테스트값을 보니 아래 테스트를 통과하지 못했다.<br>아래와 같은 출력값이 나와야하는데 내 코드 결과는 <code>1.56</code>이었다.</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//입력값 1.560000일때 출력값</span></span><br><span class="line"><span class="number">1.560000</span></span><br></pre></td></tr></table></figure><p><br><br><br></p><h2 id="재시도하여-성공한-코드"><a href="#재시도하여-성공한-코드" class="headerlink" title="재시도하여 성공한 코드"></a>재시도하여 성공한 코드</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> java.util.Scanner;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Main</span> </span>&#123;</span><br><span class="line">  <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">float</span> x;</span><br><span class="line">    Scanner sc = <span class="keyword">new</span> Scanner(System.in);</span><br><span class="line">    x = sc.nextFloat();</span><br><span class="line">    sc.close(); <span class="comment">//효율을 위해 꼭 자원해제</span></span><br><span class="line">    System.out.printf(<span class="string">"%f\n"</span>, x);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//입력값 1.414213일때 출력값</span></span><br><span class="line"><span class="number">1.414213</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//입력값 1.560일때 출력값</span></span><br><span class="line"><span class="number">1.560000</span></span><br></pre></td></tr></table></figure><p><br><br><br></p><h2 id="배운-지식"><a href="#배운-지식" class="headerlink" title="배운 지식"></a>배운 지식</h2><p>정수나 문자는 전혀 상관없지만 소수점이하 자릿수가 있는 경우에는 소수점이하 자릿수까지 표현가능하다.<br>아래 코드처럼 다양한 소수점을 표현할 수 있다.<br>이때 잘린 소수점이 있다면 <strong>반올림</strong>된다.</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">System.out.println(x);</span><br><span class="line">System.out.printf(<span class="string">"%.1f\n"</span>, x);</span><br><span class="line">System.out.printf(<span class="string">"%.3f\n"</span>, x);</span><br><span class="line">System.out.printf(<span class="string">"%f\n"</span>, x);</span><br><span class="line"></span><br><span class="line"><span class="comment">//입력값 1.560일때 출력값</span></span><br><span class="line"><span class="number">1.56</span></span><br><span class="line"><span class="number">1.6</span></span><br><span class="line"><span class="number">1.560</span></span><br><span class="line"><span class="number">1.560000</span></span><br></pre></td></tr></table></figure>]]></content:encoded>
      
      
      <category domain="https://sowon-dev.github.io/categories/Algorithm/">Algorithm</category>
      
      
      <category domain="https://sowon-dev.github.io/tags/CodeUp100/">CodeUp100</category>
      
      
      <comments>https://sowon-dev.github.io/2020/09/29/200930al/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>(JAVA 자바)문자 1개 입력받아 그대로 출력하기</title>
      <link>https://sowon-dev.github.io/2020/09/29/200930al-1/</link>
      <guid>https://sowon-dev.github.io/2020/09/29/200930al-1/</guid>
      <pubDate>Tue, 29 Sep 2020 08:00:20 GMT</pubDate>
      
      <description>&lt;h2 id=&quot;문제-기초-입출력-문자-1개-입력받아-그대로-출력하기&quot;&gt;&lt;a href=&quot;#문제-기초-입출력-문자-1개-입력받아-그대로-출력하기&quot; class=&quot;headerlink&quot; title=&quot;문제 : [기초-입출력] 문자 1개 입력받아 그대로 출력하기&quot;&gt;&lt;/a&gt;문제 : [기초-입출력] 문자 1개 입력받아 그대로 출력하기&lt;/h2&gt;&lt;p&gt;문자형(char)으로 변수를 하나 선언하고, 변수에 문자를 저장한 후 변수에 저장되어 있는 문자를 그대로 출력해보자.&lt;/p&gt;</description>
      
      
      
      <content:encoded><![CDATA[<h2 id="문제-기초-입출력-문자-1개-입력받아-그대로-출력하기"><a href="#문제-기초-입출력-문자-1개-입력받아-그대로-출력하기" class="headerlink" title="문제 : [기초-입출력] 문자 1개 입력받아 그대로 출력하기"></a>문제 : [기초-입출력] 문자 1개 입력받아 그대로 출력하기</h2><p>문자형(char)으로 변수를 하나 선언하고, 변수에 문자를 저장한 후 변수에 저장되어 있는 문자를 그대로 출력해보자.</p><a id="more"></a><p><br><br><br></p><h2 id="코드"><a href="#코드" class="headerlink" title="코드"></a>코드</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> java.util.Scanner;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Main</span> </span>&#123;</span><br><span class="line">  <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">char</span> x;</span><br><span class="line">    Scanner sc = <span class="keyword">new</span> Scanner(System.in);</span><br><span class="line">    x = sc.next().charAt(<span class="number">0</span>);</span><br><span class="line">    sc.close(); <span class="comment">//효율을 위해 꼭 자원해제</span></span><br><span class="line">    System.out.print(x);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><br><br><br></p><h2 id="배운-지식"><a href="#배운-지식" class="headerlink" title="배운 지식"></a>배운 지식</h2><blockquote><p>Scanner class in Java supports nextInt(), nextLong(), nextDouble() etc. But there is no nextChar()</p><ul><li>To create an object of Scanner class, we usually pass the predefined object System.in, which represents the standard input stream. We may pass an object of class File if we want to read input from a file.</li><li>To read numerical values of a certain data type XYZ, the function to use is nextXYZ(). For example, to read a value of type short, we can use nextShort()</li><li>To read strings, we use nextLine().</li><li>To read a single character, we use next().charAt(0). next() function returns the next token/word in the input as a string and charAt(0) function returns the first character in that string.<br>출처 : <a href="https://www.geeksforgeeks.org/scanner-class-in-java/">https://www.geeksforgeeks.org/scanner-class-in-java/</a></li></ul></blockquote>]]></content:encoded>
      
      
      <category domain="https://sowon-dev.github.io/categories/Algorithm/">Algorithm</category>
      
      
      <category domain="https://sowon-dev.github.io/tags/CodeUp100/">CodeUp100</category>
      
      
      <comments>https://sowon-dev.github.io/2020/09/29/200930al-1/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>자바 코딩테스트 공부방법 및 추천사이트</title>
      <link>https://sowon-dev.github.io/2020/09/28/200929codingTest/</link>
      <guid>https://sowon-dev.github.io/2020/09/28/200929codingTest/</guid>
      <pubDate>Mon, 28 Sep 2020 15:18:16 GMT</pubDate>
      
      <description>&lt;h2 id=&quot;코딩테스트-사이트&quot;&gt;&lt;a href=&quot;#코딩테스트-사이트&quot; class=&quot;headerlink&quot; title=&quot;코딩테스트 사이트&quot;&gt;&lt;/a&gt;코딩테스트 사이트&lt;/h2&gt;&lt;p&gt;최근 코딩테스트를 할 수 있는 많은 사이트가 생겼다.&lt;br&gt;차근차근 단계를 올려가며 코딩테스트를 준비하고자한다.&lt;/p&gt;</description>
      
      
      
      <content:encoded><![CDATA[<h2 id="코딩테스트-사이트"><a href="#코딩테스트-사이트" class="headerlink" title="코딩테스트 사이트"></a>코딩테스트 사이트</h2><p>최근 코딩테스트를 할 수 있는 많은 사이트가 생겼다.<br>차근차근 단계를 올려가며 코딩테스트를 준비하고자한다.</p><a id="more"></a><ol><li>코드업 기초 100제 <a href="https://codeup.kr/problemsetsol.php?psid=23">https://codeup.kr/problemsetsol.php?psid=23</a></li><li>구름레벨 <a href="https://level.goorm.io/">https://level.goorm.io/</a></li><li>leetcode <a href="https://leetcode.com/problemset/top-100-liked-questions/">https://leetcode.com/problemset/top-100-liked-questions/</a></li><li>코딜리티 <a href="https://app.codility.com/programmers/">https://app.codility.com/programmers/</a></li><li>해커링크 <a href="https://www.hackerrank.com/">https://www.hackerrank.com/</a></li><li>백준온라인저지 <a href="https://www.acmicpc.net/workbook/view/1152">https://www.acmicpc.net/workbook/view/1152</a></li><li>프로그래머스 <a href="https://www.welcomekakao.com/learn/challenges?tab=all_challenges">https://www.welcomekakao.com/learn/challenges?tab=all_challenges</a>    </li></ol><p><br><br><br></p><h2 id="코딩테스트를-위한-알고리즘-공부순서"><a href="#코딩테스트를-위한-알고리즘-공부순서" class="headerlink" title="코딩테스트를 위한 알고리즘 공부순서"></a>코딩테스트를 위한 알고리즘 공부순서</h2><p>알고리즘 공부로 끝나는 것이 아니라 기록을 위해 <a href="https://github.com/sowon-dev/AlgorithmStudy_Java">레포지토리</a>를 생성하였다.</p><ol><li>코드업 기초 100제 <a href="https://codeup.kr/problemsetsol.php?psid=23">https://codeup.kr/problemsetsol.php?psid=23</a></li><li>백준온라인저지 그리디 <a href="https://www.acmicpc.net/problemset?search=greedy">https://www.acmicpc.net/problemset?search=greedy</a></li><li>탐색 알고리즘 (완전탐색 / BFS /DFS)</li><li>기본 동적 프로그래밍</li></ol><p><br><br><br></p><h2 id="레벨별-코딩테스트-준비방법"><a href="#레벨별-코딩테스트-준비방법" class="headerlink" title="레벨별 코딩테스트 준비방법"></a>레벨별 코딩테스트 준비방법</h2><blockquote><p>만약 기존 프로그래밍을 해왔던 분 이거나 위 페이지에서의 3단계 문제가 쉬운 분 에겐 <a href="https://www.acmicpc.net/step">백준 알고리즘의 2~3단계 이후 난이도</a>를 추천합니다.<br>또한 최종적으로 대기업 코딩테스트를 목표로 하신다면 <a href="https://www.welcomekakao.com/learn/challenges?tab=all_challenges">프로그래머스의 2단계 정도</a>는 쉽게 푸실수 있다면(웬만하면 문제당 30분 이내로 정답을 띄우면) 도전할 만 하다고 생각합니다.<br>참고로 중소기업 코딩테스트와 대기업 코딩테스트는 중소기업 코딩테스트가 근소하게 어려운 느낌입니다. 아무래도 실무적인 부분이 많이 들어갔기 때문인듯 합니다. 대기업은 코테 이후, 기술면접이 어려우므로 대기업 레벨 이라 하여 어렵다고 지례 짐작하시면 안됩니다. (삼성전자 기준이며 카카오는 조금 더 어렵습니다, 카카오는 통과해본적이 없어서 이후는 모르겠네요)<br>진행하시다 막힐경우 프로그래머스 기준 3~4단계 까지의 문제는 본 카페에 글을 올려주시면 도와드릴 수 있습니다. (정답을 100% 알려드리는게 아니라 같이 고민할 수 있다는 것 입니다…) 언어는 c/c++, java, python 으로 제한하려 합니다.<br>출처 : <a href="http://cafe.daum.net/cjgreen2006/AZdl/3?svc=cafeapi">http://cafe.daum.net/cjgreen2006/AZdl/3?svc=cafeapi</a></p></blockquote><p><br><br><br></p><h2 id="대기업-IT직군-코딩테스트-합격을-위한-현실적이고-직관적인-공부-순서"><a href="#대기업-IT직군-코딩테스트-합격을-위한-현실적이고-직관적인-공부-순서" class="headerlink" title="대기업 IT직군 코딩테스트 합격을 위한 현실적이고 직관적인 공부 순서"></a>대기업 IT직군 코딩테스트 합격을 위한 현실적이고 직관적인 공부 순서</h2><blockquote><p><a href="https://www.acmicpc.net/blog/view/7">코드포스 블루 레벨</a> 정도면 국내 코테에서 떨어질 일은 없다.<br>영상 간단 정리.</p><ol><li>프로그래밍 언어 때기. (C# / 파이썬 / 자바 등)</li></ol><ul><li>동빈나(본인)은 C++ / 파이썬을 추천. 파이썬으로 시작해도 불이익이 크지 않다. 미래를 위해 C++도 좋다.</li></ul><ol start="2"><li>코드업 기초 100제 공부.</li><li>백준 온라인 저지 알고리즘 공부.</li></ol><ul><li>그리디 알고리즘</li><li>탐색 알고리즘 (완전탐색 / BFS /DFS)</li><li>기본 동적 프로그래밍</li><li>그래프 이론</li><li>중급 / 고급 동적 프로그래밍</li><li>문자열</li></ul><ol start="4"><li>고급 알고리즘은 대기업 코테용으로 공부할 필요가 없다.</li><li>코드포스 블루 레벨 정도면 국내 코테에서 떨어질 일은 없다.</li></ol><ul><li>그리디 / 동적 프로그래밍 / 탐색 정도면 블루 레벨 가능</li></ul><ol start="6"><li>삼성 역량 테스트 B형 정도면 국내 대기업 IT 직군에 취업할 수 있다.</li><li>연구직이나 대학원 진학을 꿈군다면 고급 알고리즘 공부는 필요하다.</li><li>대기업 공체는 문제 수와 관계 없이 절반 이상 맞추면 대기업에 합격하는 추세다. 완벽할 정도로 공부할 필요 없다.</li><li>공부 루트를 알면 굳이 학원을 다닐 필요가 없다.</li><li>삼성전자 역량 테스트는 백준 사이트에서 확인 가능. 카카오 테스트는 프로그래머스에서 확인 가능.</li><li>유튜브에서 동빈나(본인) 알고리즘 강의 절반을 듣고 백준 알고리즘 풀고 삼성 문제 풀면 충분하다.<br>출처 : <a href="https://youtu.be/ukkLCl9yBvE">https://youtu.be/ukkLCl9yBvE</a></li></ol></blockquote><p><br><br><br></p><h2 id="Scanner보다는-BufferedReader-StringTokenizer를-쓰는-이유"><a href="#Scanner보다는-BufferedReader-StringTokenizer를-쓰는-이유" class="headerlink" title="Scanner보다는 BufferedReader, StringTokenizer를 쓰는 이유"></a>Scanner보다는 BufferedReader, StringTokenizer를 쓰는 이유</h2><p>출처 : <a href="https://sangwoo0727.github.io/java/JAVA-20_input/">https://sangwoo0727.github.io/java/JAVA-20_input/</a></p>]]></content:encoded>
      
      
      <category domain="https://sowon-dev.github.io/categories/Journal/">Journal</category>
      
      
      <category domain="https://sowon-dev.github.io/tags/Journal/">Journal</category>
      
      <category domain="https://sowon-dev.github.io/tags/ITWILL-JAVA/">ITWILL(JAVA)</category>
      
      
      <comments>https://sowon-dev.github.io/2020/09/28/200929codingTest/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>Controlfile다중화, Redologfile다중화, 데이터베이스로그모드</title>
      <link>https://sowon-dev.github.io/2020/09/28/200928dbi/</link>
      <guid>https://sowon-dev.github.io/2020/09/28/200928dbi/</guid>
      <pubDate>Mon, 28 Sep 2020 04:57:08 GMT</pubDate>
      
      <description>&lt;h2 id=&quot;Controlfile다중화&quot;&gt;&lt;a href=&quot;#Controlfile다중화&quot; class=&quot;headerlink&quot; title=&quot;Controlfile다중화&quot;&gt;&lt;/a&gt;Controlfile다중화&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://sowon-dev.github.io/2020/08/25/200826dbi/#Control-file&quot;&gt;Controlfile&lt;/a&gt;은  DB당 하나만 존재하면 됨.&lt;ul&gt;
&lt;li&gt;컨트롤파일이 날라갔다 = DB가 날라갔다, 컨트롤파일이 과거로 되돌아가는 것 = DB가 과거로 되돌아 가는 것</description>
      
      
      
      <content:encoded><![CDATA[<h2 id="Controlfile다중화"><a href="#Controlfile다중화" class="headerlink" title="Controlfile다중화"></a>Controlfile다중화</h2><ul><li><a href="https://sowon-dev.github.io/2020/08/25/200826dbi/#Control-file">Controlfile</a>은  DB당 하나만 존재하면 됨.<ul><li>컨트롤파일이 날라갔다 = DB가 날라갔다, 컨트롤파일이 과거로 되돌아가는 것 = DB가 과거로 되돌아 가는 것<a id="more"></a></li><li>이렇듯 너무나 중요한 Control file은 백업으로는 역부족하여 데이터손실이 날 수 있으므로 Control file다중화를 통해서 동시 운영하는 것을 권장.</li></ul></li><li>Control file다중화<ul><li>최대 8개까지 다중화 기능이 제공되고 오라클 3개 권장</li><li>다중화가 많을 수록 안정성&#24;, 성능&#8595; (3개든 5개든 다중화 갯수만큼 동시에 기록해야해서 성능떨어짐)</li><li>다중화가 적을 수록 안정성&#8595;, 성능&#24;</li><li>다중화시킬때는 경로를 나눠서 운영해야함. 예를 들어 c드라이브와 d드라이브에 하나씩.</li></ul></li></ul><p><br><br><br></p><h3 id="현재-controlfile-정보조회"><a href="#현재-controlfile-정보조회" class="headerlink" title="현재 controlfile 정보조회"></a>현재 controlfile 정보조회</h3><ul><li>controlfile은 다른 경로로 다중화해야지 안정성&#24;</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">//현재 controlfile정보조회</span><br><span class="line">SQL&gt; select name </span><br><span class="line">SQL&gt; from v<span class="variable">$controlfile</span>;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">NAME</span><br><span class="line">--------------------------------------------------------------------------------</span><br><span class="line">/u01/app/oracle/oradata/ORCL/controlfile/o1_mf_fwvn95xm_.ctl</span><br><span class="line">/u01/app/oracle/fast_recovery_area/orcl/ORCL/controlfile/o1_mf_fwvn96cd_.ctl</span><br></pre></td></tr></table></figure><p><br><br><br></p><h3 id="다중화-순서"><a href="#다중화-순서" class="headerlink" title="다중화 순서"></a>다중화 순서</h3><ol><li>DB에 Controlfile 추가<ul><li>지금 두개 등록되어있다고 하나만 등록하게되면 2개에서 1개로 바뀌어버린다. =&gt; 3개로 다중화하고싶다면 3개 다 작성해야한다.</li><li>scope옵션 3가지<ul><li>memory : 지금 당장 적용. 현재 DB의 parameter 만 수정하며, spfile 은 수정하지 않는다. 재시작 하면 원래 spfile 설정값으로 돌아간다. 3번째 컨트롤파일 추가하는 과정에서는 현재 3번째 컨트롤파일을 존재하지않기때문에 현 시점에서 사용 불가능.</li><li>both : 현재 DB 의 parameter 와 spfile 모두 수정한다. default 값. 3번째 컨트롤파일 추가하는 과정에서는 현재 3번째 컨트롤파일을 존재하지않기때문에 현 시점에서 사용 불가능.</li><li>spfile : Spfile만 수정한다. (정적인 파라미터 수정에서는 필수다)</li></ul></li></ul></li><li>DB 종료<ul><li><code>SQL&gt; ! -&gt; 작업후 -&gt; $&gt; exit</code>: 지금 sys접속된 상태에서 잠시 나갔다가 다시 들어오는 명령어</li><li><code>SQL&gt; exit -&gt; 작업후 -&gt; $&gt;sqlplus &quot;sys/oracle as sysdba&quot;</code> : 아예 DB나간 뒤 다시 접속</li></ul></li><li>OS에 Controlfile 추가</li><li>DB 시작<ul><li>정상적으로 처리되는 경우 아무런 출력 값이 나타나지않는다.</li><li>에러발생하는 경우<ul><li>Error의 의미는 mount가 되지 않았다는 의미</li><li>파라미터(<code>SQL&gt; show parameter control_files;</code>)를 확인하여 오타난 부분을 찾은 뒤 1번부터 다시 진행한다.</li></ul></li></ul></li><li>다중화가 잘 되었는지 확인(DB가 open되어 있어야 확인가능)</li></ol><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><span class="line">//1.DB에 Controlfile 추가(다중화)</span><br><span class="line">SQL&gt; alter system <span class="built_in">set</span> control_files=</span><br><span class="line"><span class="string">'/u01/app/oracle/oradata/ORCL/controlfile/o1_mf_fwvn95xm_.ctl'</span>,</span><br><span class="line"><span class="string">'/u01/app/oracle/fast_recovery_area/orcl/ORCL/controlfile/o1_mf_fwvn96cd_.ctl'</span>,</span><br><span class="line"><span class="string">'/home/oracle/control103.ctl'</span></span><br><span class="line">scope = spfile;</span><br><span class="line"></span><br><span class="line">System altered.</span><br><span class="line"></span><br><span class="line">//2.DB 종료</span><br><span class="line">SQL&gt; shut immediate</span><br><span class="line"></span><br><span class="line">Database closed.</span><br><span class="line">Database dismounted.</span><br><span class="line">ORACLE instance shut down.</span><br><span class="line"></span><br><span class="line">SQL&gt; ! (지금 sys접속된 상태에서 잠시 나갔다가 다시 들어오는 명령어)</span><br><span class="line">또는 SQL&gt; <span class="built_in">exit</span> (아예 DB나간 뒤 다시 접속)</span><br><span class="line"></span><br><span class="line">//3.OS에 Controlfile 추가</span><br><span class="line">[oracle@localhost ~]$ <span class="built_in">cd</span> /u01/app/oracle/oradata/ORCL/controlfile/</span><br><span class="line">[oracle@localhost controlfile]$ cp o1_mf_fwvn95xm_.ctl /home/oracle/control103.ctl</span><br><span class="line"></span><br><span class="line">$&gt; <span class="built_in">exit</span></span><br><span class="line"></span><br><span class="line">//4.DB 시작</span><br><span class="line">SQL&gt; startup</span><br><span class="line"></span><br><span class="line">//정상적으로 처리되는 경우 아무런 출력값이 나타나지않는다.</span><br><span class="line">//4-1. DB시작시 에러발생하는 경우</span><br><span class="line">SQL&gt; startup</span><br><span class="line">=&gt; Error</span><br><span class="line">//Error의 의미는 mount가 되지 않았다는 의미</span><br><span class="line">//이럴결우 파라미터를 확인하여서 오타난 부분을 찾은 뒤 1번부터 다시 진행한다.</span><br><span class="line">SQL&gt; show parameter control_files;</span><br><span class="line"></span><br><span class="line">//5.Controlfile다중화확인 (3개인지 확인!)</span><br><span class="line">SQL&gt; select name from v<span class="variable">$controlfile</span>;</span><br><span class="line">NAME</span><br><span class="line">--------------------------------------------------------------------------------</span><br><span class="line">/u01/app/oracle/oradata/ORCL/controlfile/o1_mf_fwvn95xm_.ctl</span><br><span class="line">/u01/app/oracle/fast_recovery_area/orcl/ORCL/controlfile/o1_mf_fwvn96cd_.ctl</span><br><span class="line">/home/oracle/control103.ctl</span><br></pre></td></tr></table></figure><ul><li><a href="https://sowon-dev.github.io/2020/09/14/200914dbi/#%EC%A7%80%EA%B8%88-%EC%96%B4%EB%94%94%EA%B9%8C%EC%A7%80-%EC%BC%9C%EC%A0%B8%EC%9E%88%EB%8A%94%EC%A7%80-%ED%99%95%EC%9D%B8%ED%95%98%EB%8A%94-%EB%AA%85%EB%A0%B9%EC%96%B4">참고로 DB 켜져있는 지 확인</a><ul><li>결과값이 open이면 인스턴스 생성완료 = DB가 켜짐</li><li>다른 결과값은 링크 확인할 것.    </li></ul></li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">SQL&gt; select status from v<span class="variable">$instance</span>;</span><br><span class="line"></span><br><span class="line">STATUS</span><br><span class="line">------------------------</span><br><span class="line">OPEN</span><br></pre></td></tr></table></figure><p><br><br><br></p><h2 id="Redologfile다중화"><a href="#Redologfile다중화" class="headerlink" title="Redologfile다중화"></a>Redologfile다중화</h2><ul><li><a href="https://sowon-dev.github.io/2020/08/25/200826dbi/#online-Redo-log-files">Redologfile</a>은 DB에서발생된 변경 작업의 로그정보(Redo data)가 기록된 공간</li><li>다중화 개수 제한 없음</li><li>다중화가 많을 수록 안정성&#24;, 성능&#8595;</li><li>로그스위칭 : 순환형으로 관리되는 파일로 덮어써진다.<ul><li>그룹번호는 항상 <strong>순차적</strong>이어야 로그스위칭이 정상적으로 일어난다.</li></ul></li><li>새로 추가할 그룸 멤버들은 기존에 있는 멤버와 같은 size이어야한다. =&gt; 다중화시 굳이 명시할 필요가 없어서 해당 명령어가 없다.</li><li>그룹안의 멤버수는 서로 동일하거나 비슷하게 디자인한다. </li></ul><p><br><br><br></p><h3 id="Redologfile-확인-쿼리구문-두가지로-확인해야한다"><a href="#Redologfile-확인-쿼리구문-두가지로-확인해야한다" class="headerlink" title="Redologfile 확인 : 쿼리구문 두가지로 확인해야한다."></a>Redologfile 확인 : 쿼리구문 두가지로 확인해야한다.</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line">SQL&gt; select group#, members </span><br><span class="line">  2  from v$log;</span><br><span class="line"></span><br><span class="line">    GROUP#    MEMBERS</span><br><span class="line">---------- ----------</span><br><span class="line"> 1    2</span><br><span class="line"> 2    2</span><br><span class="line"> 3    2</span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line">SQL&gt; select group#, member</span><br><span class="line">  1  from v$logfile</span><br><span class="line">  2  order by group# ;</span><br><span class="line">  </span><br><span class="line">    GROUP# MEMBER</span><br><span class="line">---------- ------------------------------</span><br><span class="line"> 1 &#x2F;u01&#x2F;app&#x2F;oracle&#x2F;oradata&#x2F;ORCL&#x2F;o</span><br><span class="line">   nlinelog&#x2F;o1_mf_1_fwvn9ddb_.log</span><br><span class="line"></span><br><span class="line"> 1 &#x2F;u01&#x2F;app&#x2F;oracle&#x2F;fast_recovery_</span><br><span class="line">   area&#x2F;orcl&#x2F;ORCL&#x2F;onlinelog&#x2F;o1_mf</span><br><span class="line">   _1_fwvn9o6v_.log</span><br><span class="line"></span><br><span class="line"> 2 &#x2F;u01&#x2F;app&#x2F;oracle&#x2F;oradata&#x2F;ORCL&#x2F;o</span><br><span class="line">   nlinelog&#x2F;o1_mf_2_fwvn9ddv_.log</span><br><span class="line"></span><br><span class="line"> 2 &#x2F;u01&#x2F;app&#x2F;oracle&#x2F;fast_recovery_</span><br><span class="line"></span><br><span class="line">    GROUP# MEMBER</span><br><span class="line">---------- ------------------------------</span><br><span class="line">   area&#x2F;orcl&#x2F;ORCL&#x2F;onlinelog&#x2F;o1_mf</span><br><span class="line">   _2_fwvn9l85_.log</span><br><span class="line"></span><br><span class="line"> 3 &#x2F;u01&#x2F;app&#x2F;oracle&#x2F;oradata&#x2F;ORCL&#x2F;o</span><br><span class="line">   nlinelog&#x2F;o1_mf_3_fwvn9t6z_.log</span><br><span class="line"></span><br><span class="line"> 3 &#x2F;u01&#x2F;app&#x2F;oracle&#x2F;fast_recovery_</span><br><span class="line">   area&#x2F;orcl&#x2F;ORCL&#x2F;onlinelog&#x2F;o1_mf</span><br><span class="line">   _3_fwvn9xf6_.log</span><br><span class="line"></span><br><span class="line">6 rows selected.</span><br></pre></td></tr></table></figure><p><br><br><br></p><h3 id="다중화-순서-1"><a href="#다중화-순서-1" class="headerlink" title="다중화 순서"></a>다중화 순서</h3><ol><li>redo log group 추가</li><li>redo log member 추가<ul><li>멤버 만들고 싶은 그룹만 만들어도 된다. ex to group 1과 to group 3만 생성 가능</li><li>하지만 실무에선 그룹별 멤버수를 동일하게 관리하는 편이다.</li></ul></li></ol><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">//1.redo <span class="built_in">log</span> group 추가</span><br><span class="line">SQL&gt; ed</span><br><span class="line">  1  alter database add logfile group 4</span><br><span class="line">  2  (<span class="string">'/u01/app/oracle/oradata/ORCL/onlinelog/redo4a.log'</span>,</span><br><span class="line">  3  <span class="string">'/u01/app/oracle/fast_recovery_area/orcl/ORCL/onlinelog/redo4b.log'</span>)</span><br><span class="line">  4* size 50M</span><br><span class="line">SQL&gt; /</span><br><span class="line"></span><br><span class="line">Database altered.</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">//2.redo <span class="built_in">log</span> member 추가</span><br><span class="line">SQL&gt; ed</span><br><span class="line">  1  alter database add logfile member</span><br><span class="line">  2  <span class="string">'/u01/app/oracle/oradata/ORCL/datafile/redo1c.log'</span> to group 1,</span><br><span class="line">  3  <span class="string">'/u01/app/oracle/oradata/ORCL/datafile/redo2c.log'</span> to group 2,</span><br><span class="line">  4  <span class="string">'/u01/app/oracle/oradata/ORCL/datafile/redo3c.log'</span> to group 3,</span><br><span class="line">  5* <span class="string">'/u01/app/oracle/oradata/ORCL/datafile/redo4c.log'</span> to group 4</span><br><span class="line">SQL&gt; /</span><br><span class="line">alter database add logfile member</span><br></pre></td></tr></table></figure><p><br><br><br></p><h2 id="Database-log-mode"><a href="#Database-log-mode" class="headerlink" title="Database log mode"></a>Database log mode</h2><ul><li><a href="https://sowon-dev.github.io/2020/08/25/200826dbi/#Archived-log-files-option">Database log mode</a>는 2가지가 있다<ol><li>Noarchive log mode : redologfile에 로그스위치 발생시 순환하면서 덮어씀</li><li>Archive log mode : redologfile에 로그스위치 발생시 offline 복사본 생성함. 즉 archive log file 운영함</li></ol></li></ul><p><br><br><br></p><h3 id="DB-log-mode-조회"><a href="#DB-log-mode-조회" class="headerlink" title="DB log mode 조회"></a>DB log mode 조회</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">//첫번째 조회방법</span><br><span class="line">SQL&gt; select log_mode from v<span class="variable">$database</span>;</span><br><span class="line"></span><br><span class="line">LOG_MODE</span><br><span class="line">------------------------</span><br><span class="line">NOARCHIVELOG</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">//두번째 조회방법</span><br><span class="line">SQL&gt; archive <span class="built_in">log</span> list</span><br><span class="line">Database <span class="built_in">log</span> mode       No Archive Mode</span><br><span class="line">Automatic archival       Disabled</span><br><span class="line">Archive destination       USE_DB_RECOVERY_FILE_DEST</span><br><span class="line">Oldest online <span class="built_in">log</span> sequence     36</span><br><span class="line">Current <span class="built_in">log</span> sequence       38</span><br></pre></td></tr></table></figure><p><br><br><br></p><h3 id="순서"><a href="#순서" class="headerlink" title="순서"></a>순서</h3><ol><li>DB 종료</li><li>DB MOUNT</li><li>DB LOG MODE 설정<ul><li><code>SQL&gt; alter database archivelog;</code> : Archive log mode모드로 변경</li><li><code>SQL&gt; alter database noarchivelog;</code> : Noarchive log mode로 변경</li></ul></li><li>DB OPEN</li><li>처리결과확인</li></ol><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line">//1. DB 종료</span><br><span class="line">SQL&gt; shut immediate  </span><br><span class="line"></span><br><span class="line">Database closed.</span><br><span class="line">Database dismounted.</span><br><span class="line">ORACLE instance shut down.</span><br><span class="line"></span><br><span class="line">//2. DB MOUNT</span><br><span class="line">SQL&gt; startup mount</span><br><span class="line"></span><br><span class="line">ORACLE instance started.</span><br><span class="line">Total System Global Area  838860800 bytes</span><br><span class="line">Fixed Size    8626240 bytes</span><br><span class="line">Variable Size  620761024 bytes</span><br><span class="line">Database Buffers  201326592 bytes</span><br><span class="line">Redo Buffers    8146944 bytes</span><br><span class="line">Database mounted.</span><br><span class="line"></span><br><span class="line">//3. DB LOG MODE 설정</span><br><span class="line">SQL&gt; alter database archivelog;</span><br><span class="line">또는</span><br><span class="line">SQL&gt; alter database noarchivelog;</span><br><span class="line"></span><br><span class="line">Database altered.</span><br><span class="line"></span><br><span class="line">//4. DB OPEN</span><br><span class="line">SQL&gt; alter database open;</span><br><span class="line"></span><br><span class="line">Database altered.</span><br><span class="line"></span><br><span class="line">//5. 처리결과확인</span><br><span class="line">SQL&gt; archive <span class="built_in">log</span> list</span><br><span class="line"></span><br><span class="line">Database <span class="built_in">log</span> mode       Archive Mode</span><br><span class="line">Automatic archival       Enabled</span><br><span class="line">Archive destination       USE_DB_RECOVERY_FILE_DEST</span><br><span class="line">Oldest online <span class="built_in">log</span> sequence     36</span><br><span class="line">Next <span class="built_in">log</span> sequence to archive   38</span><br><span class="line">Current <span class="built_in">log</span> sequence       38</span><br></pre></td></tr></table></figure>]]></content:encoded>
      
      
      <category domain="https://sowon-dev.github.io/categories/Database/">Database</category>
      
      <category domain="https://sowon-dev.github.io/categories/Database/Oracle/">Oracle</category>
      
      
      <category domain="https://sowon-dev.github.io/tags/TIL/">TIL</category>
      
      <category domain="https://sowon-dev.github.io/tags/ITWILL-JAVA/">ITWILL(JAVA)</category>
      
      <category domain="https://sowon-dev.github.io/tags/Oracle/">Oracle</category>
      
      
      <comments>https://sowon-dev.github.io/2020/09/28/200928dbi/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>안드로이드 4대 컴포넌트</title>
      <link>https://sowon-dev.github.io/2020/09/28/200928and/</link>
      <guid>https://sowon-dev.github.io/2020/09/28/200928and/</guid>
      <pubDate>Mon, 28 Sep 2020 00:03:49 GMT</pubDate>
      
      <description>&lt;h2 id=&quot;안드로이드의-4대-컴포넌트&quot;&gt;&lt;a href=&quot;#안드로이드의-4대-컴포넌트&quot; class=&quot;headerlink&quot; title=&quot;안드로이드의 4대 컴포넌트&quot;&gt;&lt;/a&gt;안드로이드의 4대 컴포넌트&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;액티비티 : 화면을 구성하는 가장 기본적인 컴포넌트&lt;/li&gt;
&lt;li&gt;서비스 : 눈에 보이는 화면(액티비티)과 상관없이 백그라운드에서 동작하는 컴포넌트</description>
      
      
      
      <content:encoded><![CDATA[<h2 id="안드로이드의-4대-컴포넌트"><a href="#안드로이드의-4대-컴포넌트" class="headerlink" title="안드로이드의 4대 컴포넌트"></a>안드로이드의 4대 컴포넌트</h2><ul><li>액티비티 : 화면을 구성하는 가장 기본적인 컴포넌트</li><li>서비스 : 눈에 보이는 화면(액티비티)과 상관없이 백그라운드에서 동작하는 컴포넌트<a id="more"></a></li><li>브로드캐스트 리시버(Broadacast Receiver) : 응용 프로그램이나 장치에 메세지를 전달하면 발생하면 반응</li><li>콘텐트 프로바이더(Content Provider) : 응용 프로그램 사이에 데이터를 공유하기 위한 컴포넌트</li></ul><p><img src="https://food4ithought.files.wordpress.com/2018/09/android-components1.jpg" alt="출처: https://food4ithought.com/2018/09/26/android-application-components/"></p><p><img src="https://t1.daumcdn.net/cfile/tistory/256AA04257CD776F07" alt="출처: https://nive.tistory.com/45"></p><ul><li>인텐트(intent) : 안드로이드 4대 컴포넌트가 서로 데이터를 주고받기 위한 메세지 객체.</li></ul><p><br><br><br></p><h2 id="인텐트"><a href="#인텐트" class="headerlink" title="인텐트"></a>인텐트</h2><h3 id="명시적-인텐트-Explicit-intent"><a href="#명시적-인텐트-Explicit-intent" class="headerlink" title="명시적 인텐트(Explicit intent)"></a>명시적 인텐트(Explicit intent)</h3><ul><li>타켓 컴포넌트(다른 액티비티)의 이름을 명확히 지정함</li><li>사용자가 새로운 액티비티를 직접 생성/호출시 사용</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//명시적인텐트를 사용하여 데이터 전달</span></span><br><span class="line"><span class="comment">//추가로 만든 secondActivity자바파일을 intent에 넣어서 mainActivity에 전달</span></span><br><span class="line">Intent i = <span class="keyword">new</span> Intent(getApplicationContext(), SecondActivity<span class="class">.<span class="keyword">class</span>)</span>;</span><br><span class="line">startActivity(i);</span><br></pre></td></tr></table></figure><p><img src="http://wiki.gurubee.net/download/attachments/26743584/one_way_activity02.png" alt="출처: http://wiki.gurubee.net/pages/viewpage.action?pageId=26743688"></p><p>순서</p><ol><li>putExtra()로 인텐트에 데이터 넣어서 </li><li>startActivity() 메소드 사용하여 인텐드를 다른 액티비티로 전달</li><li>getStringExtra(), getIntExtra(), getBooleanExtra()등으로 전달받은 데이터에 접근</li><li>finish()로 끝내기</li></ol><p>예시</p><ol><li><p>메인액티비티<br><img src="https://mblogthumb-phinf.pstatic.net/20160510_78/fnel7031_146286276627031YsF_PNG/%C0%CE%C5%D9%C6%AE_%282%29.png?type=w2" alt=""></p></li><li><p>새컨액티비티<br><img src="https://mblogthumb-phinf.pstatic.net/20160510_259/fnel7031_1462862981824JED8A_PNG/%25EC%2584%25B8%25EC%25BB%25A8%25EB%2593%259C%25EC%2595%25A1%25ED%258B%25B0%25EB%25B9%2584%25ED%258B%25B0.png?type=w800" alt=""></p></li></ol><p><br><br><br></p><h3 id="양방향-인텐트"><a href="#양방향-인텐트" class="headerlink" title="양방향 인텐트"></a>양방향 인텐트</h3><ul><li>메인엑티비티에서 세컨드 엑티비티로 데이터를 넘긴 후 세컨드 엑티비티에서 다시 메인 엑이티비로 데이터를 돌려줄 때 사용</li><li>putExtra()로 인텐트에 데이터 넣어서 전달</li><li>getExtra()로 전달받은 데이터 떠냄</li></ul><p><img src="http://wiki.gurubee.net/download/attachments/26743584/both_way_activity02.png" alt="출처: http://wiki.gurubee.net/pages/viewpage.action?pageId=26743688"></p><p>순서</p><ol><li>putExtra()로 인텐트에 데이터 넣어서</li><li>startActivityForResult() 메소드 사용하여 인텐드를 다른 액티비티로 전달하기</li><li>putExtra()에 메인액티비티에 돌려줄 인텐트를 생성하여 넣은 뒤</li><li>setResult()로 돌려주기</li><li>finish()로 끝내기</li><li>메인액티비티에서는 onActivityResult()메소드를 오버라이딩하고 오버라이딩된 메소드안에서 getStringExtra(), getIntExtra(), getBooleanExtra()등으로 전달받은 데이터에 접근하여 사용하기</li></ol><p>예시</p><ol><li>메인액티비티<br><img src="https://mblogthumb-phinf.pstatic.net/20160510_31/fnel7031_1462865487428LkToI_PNG/K-014.png?type=w2" alt=""></li><li>세컨액티비티<br><img src="https://mblogthumb-phinf.pstatic.net/20160510_234/fnel7031_14628657418170TR2p_PNG/K-015.png?type=w2" alt=""></li></ol><p><br><br><br></p><h3 id="암시적-인텐트-Implicit-Intent"><a href="#암시적-인텐트-Implicit-Intent" class="headerlink" title="암시적 인텐트(Implicit Intent)"></a>암시적 인텐트(Implicit Intent)</h3><ul><li>타켓컴포넌트의 클래스명이나 패지키명을 지정하지 않음</li><li>약속된 액션을 지정하여 안드로이드에서 제공하는 기존 응용 프로그램을 실행하는 방법</li></ul><p><img src="https://mblogthumb-phinf.pstatic.net/20160510_75/fnel7031_1462863644612rxWUM_PNG/%25EC%2595%2594%25EC%258B%259C%25EC%25A0%2581%25EC%259D%25B8%25ED%2585%2590%25ED%258A%25B8.png?type=w800" alt="출처: https://m.blog.naver.com/PostView.nhn?blogId=fnel7031&amp;logNo=220705998997&amp;proxyReferer=https:%2F%2Fwww.google.com%2F"></p><p>전화걸기 예시</p><ol><li>AndroidManifest파일<br><img src="https://mblogthumb-phinf.pstatic.net/20160510_65/fnel7031_14628638724572q5kS_PNG/K-005.png?type=w2" alt=""></li><li>메인액티비티<br><img src="https://mblogthumb-phinf.pstatic.net/20160510_240/fnel7031_1462864171632g8ba1_PNG/%25EB%25AC%25B5%25EC%258B%259C%25EC%25A0%2581%25EC%259D%25B8%25ED%2585%2590%25ED%258A%25B8.png?type=w800" alt=""></li></ol><p><br><br><br></p><h3 id="명시적-인텐트-vs-암시적인텐트"><a href="#명시적-인텐트-vs-암시적인텐트" class="headerlink" title="명시적 인텐트 vs 암시적인텐트"></a>명시적 인텐트 vs 암시적인텐트</h3><p><img src="https://img1.daumcdn.net/thumb/R1280x0/?scode=mtistory2&fname=http%3A%2F%2Fcfile21.uf.tistory.com%2Fimage%2F99AE364F5A445F0730C9E7" alt="출처: https://kutar37.tistory.com/entry/Android-INTENT-%EC%99%80-%EC%98%88%EC%A0%9C"></p><p>참고 : <a href="https://m.blog.naver.com/PostView.nhn?blogId=fnel7031&amp;logNo=220705998997&amp;proxyReferer=https:%2F%2Fwww.google.com%2F">https://m.blog.naver.com/PostView.nhn?blogId=fnel7031&amp;logNo=220705998997&amp;proxyReferer=https:%2F%2Fwww.google.com%2F</a></p>]]></content:encoded>
      
      
      <category domain="https://sowon-dev.github.io/categories/Android/">Android</category>
      
      
      <category domain="https://sowon-dev.github.io/tags/TIL/">TIL</category>
      
      <category domain="https://sowon-dev.github.io/tags/ITWILL-JAVA/">ITWILL(JAVA)</category>
      
      
      <comments>https://sowon-dev.github.io/2020/09/28/200928and/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>Servlet관리자용주문목록4 : 고객주문목록에서 삭제</title>
      <link>https://sowon-dev.github.io/2020/09/24/200924jspi/</link>
      <guid>https://sowon-dev.github.io/2020/09/24/200924jspi/</guid>
      <pubDate>Thu, 24 Sep 2020 04:58:02 GMT</pubDate>
      
      <description>&lt;h3 id=&quot;주문-목록-삭제&quot;&gt;&lt;a href=&quot;#주문-목록-삭제&quot; class=&quot;headerlink&quot; title=&quot;주문 목록 삭제&quot;&gt;&lt;/a&gt;주문 목록 삭제&lt;/h3&gt;&lt;ol&gt;
&lt;li&gt;/AdminOrderList.ao&lt;/li&gt;
&lt;li&gt;‘삭제’ 클릭 -&amp;gt; 페이지 이동( 가상주소 )&lt;ul&gt;
&lt;li&gt;주문번호 가지고 이동</description>
      
      
      
      <content:encoded><![CDATA[<h3 id="주문-목록-삭제"><a href="#주문-목록-삭제" class="headerlink" title="주문 목록 삭제"></a>주문 목록 삭제</h3><ol><li>/AdminOrderList.ao</li><li>‘삭제’ 클릭 -&gt; 페이지 이동( 가상주소 )<ul><li>주문번호 가지고 이동<a id="more"></a></li></ul></li><li>컨트롤러 -&gt; Action -&gt; DAO<ul><li>주문번호 사용해서 정보 삭제</li><li>delete 구문 사용</li></ul></li><li>리스트 페이지로 이동</li></ol><p><br><br><br></p><h2 id="AdminOrderFrontController-java의-doProcess-의-주소비교-후-처리부분에-코드-추가"><a href="#AdminOrderFrontController-java의-doProcess-의-주소비교-후-처리부분에-코드-추가" class="headerlink" title="AdminOrderFrontController.java의 doProcess()의 주소비교 후 처리부분에 코드 추가"></a><code>AdminOrderFrontController.java</code>의 doProcess()의 주소비교 후 처리부분에 코드 추가</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//주문목록에서 삭제</span></span><br><span class="line">&#125;<span class="keyword">else</span> <span class="keyword">if</span>(command.equals(<span class="string">"/AdminOrderDelete.ao"</span>))&#123;</span><br><span class="line">System.out.println(<span class="string">"C : AdminOrderDelete.ao 호출"</span>);</span><br><span class="line">action = <span class="keyword">new</span> AdminOrderDeleteAction();</span><br><span class="line"><span class="keyword">try</span>&#123; forward = action.execute(request, response);</span><br><span class="line">&#125;<span class="keyword">catch</span>(Exception e) &#123;e.printStackTrace();&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><br><br><br></p><h2 id="AdminOrderDeleteAction-java-생성"><a href="#AdminOrderDeleteAction-java-생성" class="headerlink" title="AdminOrderDeleteAction.java 생성"></a><code>AdminOrderDeleteAction.java</code> 생성</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">AdminOrderDeleteAction</span> <span class="keyword">implements</span> <span class="title">Action</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> ActionForward <span class="title">execute</span><span class="params">(HttpServletRequest request, HttpServletResponse response)</span> </span></span><br><span class="line"><span class="function"><span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line"><span class="comment">//한글처리</span></span><br><span class="line">request.setCharacterEncoding(<span class="string">"UTF-8"</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 관리자 ID해당하는 세션값 제어</span></span><br><span class="line">HttpSession session = request.getSession();</span><br><span class="line">String id = (String) session.getAttribute(<span class="string">"id"</span>);</span><br><span class="line">ActionForward forward = <span class="keyword">new</span> ActionForward();</span><br><span class="line"><span class="keyword">if</span>(id == <span class="keyword">null</span> || !id.equals(<span class="string">"admin"</span>))&#123;</span><br><span class="line">forward.setPath(<span class="string">"./MemberLogin.me"</span>);</span><br><span class="line">forward.setRedirect(<span class="keyword">true</span>);</span><br><span class="line"><span class="keyword">return</span> forward;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//전달정보 저장</span></span><br><span class="line">String trade_num = request.getParameter(<span class="string">"trade_num"</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">//DB처리</span></span><br><span class="line">AdminOrderDAO aodao = <span class="keyword">new</span> AdminOrderDAOImpl();</span><br><span class="line">aodao.deleteOrder(trade_num);</span><br><span class="line"></span><br><span class="line"><span class="comment">//페이지이동</span></span><br><span class="line">forward.setPath(<span class="string">"./AdminOrderList.ao"</span>);</span><br><span class="line">forward.setRedirect(<span class="keyword">true</span>);</span><br><span class="line"><span class="keyword">return</span> forward;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>여기서 삭제후에 삭제되었다는 알람이 떴으면 좋겠다. 그럴땐 js코드를 넣어주면 된다.</li><li>대신 기존에 썼던 페이지이동 코드(forward.setPath와 setRedirect)는 쓰지못한다. 리퀘스트안의 자바코드이기때문에 js보다 먼저 실행되기때문이다. js코드(location.href)를 사용하더라고 주소를 맵핑했기때문에 모델2구조는 유지된다.</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//처리결과를 js사용하여 페이지 이동</span></span><br><span class="line"><span class="comment">//인코딩</span></span><br><span class="line">response.setContentType(<span class="string">"text/html; charset=UTF-8"</span>);</span><br><span class="line"><span class="comment">//출력통로생성</span></span><br><span class="line">PrintWriter out = response.getWriter();</span><br><span class="line">out.print(<span class="string">"&lt;script&gt;"</span>);</span><br><span class="line">out.print(<span class="string">" alert('성공적으로 삭제되었습니다');"</span>);</span><br><span class="line">out.print(<span class="string">" location.href='./AdminOrderList.ao'"</span>);<span class="comment">//모델2유지됨</span></span><br><span class="line">out.print(<span class="string">"&lt;/script&gt;"</span>);</span><br><span class="line">out.close();</span><br><span class="line"></span><br><span class="line"><span class="comment">//페이지이동</span></span><br><span class="line"><span class="comment">//forward.setPath("./AdminOrderList.ao");</span></span><br><span class="line"><span class="comment">//forward.setRedirect(true);</span></span><br><span class="line"><span class="comment">//return forward;</span></span><br><span class="line"><span class="keyword">return</span> <span class="keyword">null</span>;</span><br></pre></td></tr></table></figure><p><br><br><br></p><h2 id="AdminOrderDAO-java-에-deleteOrder-메서드-코드-추가"><a href="#AdminOrderDAO-java-에-deleteOrder-메서드-코드-추가" class="headerlink" title="AdminOrderDAO.java 에 deleteOrder()메서드 코드 추가"></a><code>AdminOrderDAO.java</code> 에 deleteOrder()메서드 코드 추가</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">AdminOrderDAO</span> </span>&#123;</span><br><span class="line"><span class="comment">// 인터페이스안의 추상메서드이기때문에  </span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 관리자가 주문목록을 확인하는 기능 getAdminOrderList()</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> List <span class="title">getAdminOrderList</span><span class="params">()</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 주문번호를 이용하여 주문상태만 변경</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">updateOrder</span><span class="params">(String trade_num)</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 주문번호를 사용해서 주문상태,운송장번호 변경 가능</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">updateOrder</span><span class="params">(OrderDTO odto)</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 주문번호에 해당하는 주문정보(리스트 전체)를 가져오는 동작을 처리</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">abstract</span> List <span class="title">getAdminOrderDetail</span><span class="params">(String trade_num)</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 주문번호를 이용하여 삭제</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">deleteOrder</span><span class="params">(String trade_num)</span></span>;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><br><br><br></p><h2 id="AdminOrderDAOImpl-java에-deleteOrder-메서드-코드-추가"><a href="#AdminOrderDAOImpl-java에-deleteOrder-메서드-코드-추가" class="headerlink" title="AdminOrderDAOImpl.java에 deleteOrder()메서드 코드 추가"></a><code>AdminOrderDAOImpl.java</code>에 deleteOrder()메서드 코드 추가</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 주문삭제</span></span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">deleteOrder</span><span class="params">(String trade_num)</span> </span>&#123;</span><br><span class="line"><span class="keyword">try</span>&#123;</span><br><span class="line">getCon();</span><br><span class="line">sql=<span class="string">"delete from itwill_order where o_trade_num=?"</span>;</span><br><span class="line">pstmt = con.prepareStatement(sql);</span><br><span class="line">pstmt.setString(<span class="number">1</span>, trade_num);</span><br><span class="line">pstmt.executeUpdate();</span><br><span class="line">&#125;<span class="keyword">catch</span>(Exception e)&#123;</span><br><span class="line">e.printStackTrace();</span><br><span class="line">&#125;<span class="keyword">finally</span>&#123;</span><br><span class="line">closeDB();</span><br><span class="line">&#125;</span><br><span class="line">&#125;<span class="comment">//end of deleteOrder()</span></span><br></pre></td></tr></table></figure>]]></content:encoded>
      
      
      <category domain="https://sowon-dev.github.io/categories/JSP/">JSP</category>
      
      
      <category domain="https://sowon-dev.github.io/tags/TIL/">TIL</category>
      
      <category domain="https://sowon-dev.github.io/tags/ITWILL-JAVA/">ITWILL(JAVA)</category>
      
      
      <comments>https://sowon-dev.github.io/2020/09/24/200924jspi/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>안드로이드 파일처리</title>
      <link>https://sowon-dev.github.io/2020/09/24/200924and/</link>
      <guid>https://sowon-dev.github.io/2020/09/24/200924and/</guid>
      <pubDate>Thu, 24 Sep 2020 00:11:02 GMT</pubDate>
      
      <description>&lt;h2 id=&quot;내장메모리-파일-처리&quot;&gt;&lt;a href=&quot;#내장메모리-파일-처리&quot; class=&quot;headerlink&quot; title=&quot;내장메모리 파일 처리&quot;&gt;&lt;/a&gt;내장메모리 파일 처리&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;앱을 종료했다가 다시 실행할때 작업했던 부분에서 이어서 작업하고 싶은 경우에 사용한다.&lt;/li&gt;
&lt;li&gt;내장메모리의 위치 : &lt;code&gt;/data/data/패키지명/files&lt;/code&gt;폴더&lt;/li&gt;
&lt;li&gt;파일읽기 : &lt;code&gt;openFileInput()&lt;/code&gt; 메소드 사용 -&amp;gt; &lt;code&gt;FileInputStream&lt;/code&gt;을 반환한다. -&amp;gt; &lt;code&gt;write()&lt;/code&gt;메소드사용</description>
      
      
      
      <content:encoded><![CDATA[<h2 id="내장메모리-파일-처리"><a href="#내장메모리-파일-처리" class="headerlink" title="내장메모리 파일 처리"></a>내장메모리 파일 처리</h2><ul><li>앱을 종료했다가 다시 실행할때 작업했던 부분에서 이어서 작업하고 싶은 경우에 사용한다.</li><li>내장메모리의 위치 : <code>/data/data/패키지명/files</code>폴더</li><li>파일읽기 : <code>openFileInput()</code> 메소드 사용 -&gt; <code>FileInputStream</code>을 반환한다. -&gt; <code>write()</code>메소드사용<a id="more"></a></li><li>파일쓰기 : <code>openFileOutput()</code> 메소드 사용 -&gt; <code>FileOutputStream</code>을 반환한다. -&gt; <code>read()</code>메소드사용</li><li><a href="https://sowon-dev.github.io/2020/08/17/200817javai2/#I-O%ED%81%B4%EB%9E%98%EC%8A%A4%EC%9D%98-%EA%B5%AC%EC%A1%B0%EC%99%80-%EC%8A%A4%ED%8A%B8%EB%A6%BC-Stream">파일기반 입/출력처리 스트림이란</a></li><li>일반적인 절차<ol><li>openFileInput()와 openFileOutput()로 파일열기 -&gt;</li><li>write()와 read()로 파일 읽기/쓰기</li><li>close()로 꼭 닫기</li></ol></li></ul><p><br><br><br></p><h2 id="간단한-다이어리-만들기예시"><a href="#간단한-다이어리-만들기예시" class="headerlink" title="간단한 다이어리 만들기예시"></a>간단한 다이어리 만들기예시</h2><p><img src="/img/200924simplediary.gif" alt=""></p><h3 id="activity-main-xml코드"><a href="#activity-main-xml코드" class="headerlink" title="activity_main.xml코드"></a><code>activity_main.xml</code>코드</h3><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">LinearLayout</span> <span class="attr">xmlns:android</span>=<span class="string">"http://schemas.android.com/apk/res/android"</span></span></span><br><span class="line"><span class="tag">    <span class="attr">xmlns:app</span>=<span class="string">"http://schemas.android.com/apk/res-auto"</span></span></span><br><span class="line"><span class="tag">    <span class="attr">xmlns:tools</span>=<span class="string">"http://schemas.android.com/tools"</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:layout_width</span>=<span class="string">"match_parent"</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:layout_height</span>=<span class="string">"match_parent"</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:orientation</span>=<span class="string">"vertical"</span></span></span><br><span class="line"><span class="tag">    <span class="attr">tools:context</span>=<span class="string">".MainActivity"</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">DatePicker</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:id</span>=<span class="string">"@+id/datepicker"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:calendarViewShown</span>=<span class="string">"false"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:datePickerMode</span>=<span class="string">"spinner"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_width</span>=<span class="string">"match_parent"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_height</span>=<span class="string">"wrap_content"</span></span></span><br><span class="line"><span class="tag">        /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">EditText</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:id</span>=<span class="string">"@+id/edtdiary"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:background</span>=<span class="string">"@android:color/holo_blue_light"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:lines</span>=<span class="string">"8"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:textColor</span>=<span class="string">"@android:color/white"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_width</span>=<span class="string">"match_parent"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_height</span>=<span class="string">"wrap_content"</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">Button</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:id</span>=<span class="string">"@+id/btnw"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:enabled</span>=<span class="string">"false"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:text</span>=<span class="string">"다이어리쓰기"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_width</span>=<span class="string">"match_parent"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_height</span>=<span class="string">"wrap_content"</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">LinearLayout</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="MainActivity-java-코드"><a href="#MainActivity-java-코드" class="headerlink" title="MainActivity.java 코드"></a><code>MainActivity.java</code> 코드</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">MainActivity</span> <span class="keyword">extends</span> <span class="title">AppCompatActivity</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    DatePicker dp;</span><br><span class="line">    EditText edtDiary;</span><br><span class="line">    Button btnWrite;</span><br><span class="line">    String fileName;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onCreate</span><span class="params">(Bundle savedInstanceState)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">super</span>.onCreate(savedInstanceState);</span><br><span class="line">        setContentView(R.layout.activity_main);</span><br><span class="line">        setTitle(<span class="string">"간단한 일기장"</span>);</span><br><span class="line"></span><br><span class="line">        dp = (DatePicker) findViewById(R.id.datepicker);</span><br><span class="line">        edtDiary = (EditText) findViewById(R.id.edtdiary);</span><br><span class="line">        btnWrite = (Button) findViewById(R.id.btnw);</span><br><span class="line"></span><br><span class="line">        Calendar cal = Calendar.getInstance();</span><br><span class="line">        <span class="keyword">int</span> cYear = cal.get(Calendar.YEAR);</span><br><span class="line">        <span class="keyword">int</span> cMonth = cal.get(Calendar.MONTH);</span><br><span class="line">        <span class="keyword">int</span> cDay = cal.get(Calendar.DAY_OF_MONTH);</span><br><span class="line"></span><br><span class="line">        dp.init(cYear, cMonth, cDay, <span class="keyword">new</span> DatePicker.OnDateChangedListener() &#123;</span><br><span class="line">            <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onDateChanged</span><span class="params">(DatePicker view, <span class="keyword">int</span> year,</span></span></span><br><span class="line"><span class="function"><span class="params">                                      <span class="keyword">int</span> monthOfYear, <span class="keyword">int</span> dayOfMonth)</span> </span>&#123;</span><br><span class="line">                fileName = Integer.toString(year) + <span class="string">"_"</span></span><br><span class="line">                        + Integer.toString(monthOfYear + <span class="number">1</span>) + <span class="string">"_"</span></span><br><span class="line">                        + Integer.toString(dayOfMonth) + <span class="string">".txt"</span>;</span><br><span class="line">                String str = readDiary(fileName);</span><br><span class="line">                edtDiary.setText(str);</span><br><span class="line">                btnWrite.setEnabled(<span class="keyword">true</span>);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;);</span><br><span class="line"></span><br><span class="line">        <span class="comment">//다이어리쓰기</span></span><br><span class="line">        btnWrite.setOnClickListener(<span class="keyword">new</span> View.OnClickListener() &#123;</span><br><span class="line">            <span class="meta">@Override</span></span><br><span class="line">            <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onClick</span><span class="params">(View v)</span> </span>&#123;</span><br><span class="line">                <span class="keyword">try</span>&#123;</span><br><span class="line">                    FileOutputStream outfs = openFileOutput(fileName, Context.MODE_PRIVATE);</span><br><span class="line">                    String str = edtDiary.getText().toString();</span><br><span class="line">                    outfs.write(str.getBytes());</span><br><span class="line">                    outfs.close();</span><br><span class="line">                    Toast.makeText(getApplicationContext(), fileName+<span class="string">"이 저장됨"</span>, Toast.LENGTH_SHORT).show();</span><br><span class="line">                &#125;<span class="keyword">catch</span>(IOException e)&#123; &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//일기내용읽어서 반환</span></span><br><span class="line">    <span class="function">String <span class="title">readDiary</span><span class="params">(String fName)</span></span>&#123;</span><br><span class="line">        String diaryStr = <span class="keyword">null</span>;</span><br><span class="line">        FileInputStream infs;</span><br><span class="line">        <span class="keyword">try</span>&#123;</span><br><span class="line">            infs = openFileInput(fName);</span><br><span class="line">            <span class="keyword">byte</span>[] txt = <span class="keyword">new</span> <span class="keyword">byte</span>[<span class="number">500</span>];</span><br><span class="line">            infs.read(txt);</span><br><span class="line">            infs.close();</span><br><span class="line">            diaryStr = (<span class="keyword">new</span> String(txt)).trim();</span><br><span class="line">            btnWrite.setText(<span class="string">"일기 수정하기"</span>);</span><br><span class="line">        &#125;<span class="keyword">catch</span>(IOException e)&#123;</span><br><span class="line">            edtDiary.setHint(<span class="string">"일기를 쓰세요"</span>);</span><br><span class="line">            btnWrite.setText(<span class="string">"새로운 일기 저장"</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> diaryStr;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><br><br><br></p><h2 id="sd카드"><a href="#sd카드" class="headerlink" title="sd카드"></a>sd카드</h2><ul><li>읽기 전용 파일의 경우 프로젝트의 <code>/res/raw</code>폴더를 사용한다.</li><li>텍스트가 아닌 음악, 영상, 그림파을 등 응용프로그램은 안드로이드 SD카드에 저장하여 읽을 수 있다.</li><li>Device File Explorer에서 <code>/sdcard</code> 폴더 또는 <code>/storage/emulator/0</code> 폴더에 파일을 업도르하면 SD카드에 저장 된다.</li></ul>]]></content:encoded>
      
      
      <category domain="https://sowon-dev.github.io/categories/Android/">Android</category>
      
      
      <category domain="https://sowon-dev.github.io/tags/TIL/">TIL</category>
      
      <category domain="https://sowon-dev.github.io/tags/ITWILL-JAVA/">ITWILL(JAVA)</category>
      
      
      <comments>https://sowon-dev.github.io/2020/09/24/200924and/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>IT편집자 직무멘토링</title>
      <link>https://sowon-dev.github.io/2020/09/23/200923opensource/</link>
      <guid>https://sowon-dev.github.io/2020/09/23/200923opensource/</guid>
      <pubDate>Wed, 23 Sep 2020 12:23:12 GMT</pubDate>
      
      <description>&lt;h2 id=&quot;직무멘토링&quot;&gt;&lt;a href=&quot;#직무멘토링&quot; class=&quot;headerlink&quot; title=&quot;직무멘토링&quot;&gt;&lt;/a&gt;직무멘토링&lt;/h2&gt;&lt;p&gt;오늘은 현직 IT편집자로 재직중이신 컨트리뷰토너분의 멘토링을 들었다.&lt;br&gt;교육콘텐츠에 관심이 많았는데 멘토링덕분에 IT편집자가 무엇을 하는지 솔직담백하게 그리고 유쾌하게 들을 수 있었다.&lt;/p&gt;</description>
      
      
      
      <content:encoded><![CDATA[<h2 id="직무멘토링"><a href="#직무멘토링" class="headerlink" title="직무멘토링"></a>직무멘토링</h2><p>오늘은 현직 IT편집자로 재직중이신 컨트리뷰토너분의 멘토링을 들었다.<br>교육콘텐츠에 관심이 많았는데 멘토링덕분에 IT편집자가 무엇을 하는지 솔직담백하게 그리고 유쾌하게 들을 수 있었다.</p><a id="more"></a><p><br><br><br></p><h2 id="IT편집자"><a href="#IT편집자" class="headerlink" title="IT편집자"></a>IT편집자</h2><ul><li>업루량 : 1년에 MAX 4권</li><li>저자 설득의 과정 : 지식 나눔의 기쁨, 용돈, 조용하고 강력한 자기 PR</li><li>한빛이 제일 유명한 IT출판사. 덩치가 제일 큼</li></ul><p><br><br><br></p><h3 id="IT편집자가-하는-일"><a href="#IT편집자가-하는-일" class="headerlink" title="IT편집자가 하는 일"></a>IT편집자가 하는 일</h3><ul><li>저자 글스기 교육과 보조</li><li>실질적인 조언</li><li>아이디어기획, 저자와 컨택, 레이아웃부터 가격결정까지 전체를 다 함</li><li>10년정도 개발자하다가 편집자할 수 있음 제일 유명한 사람은 개앞맵시</li><li>편집자초봉 : </li><li>편집자 4년차가 3천만원정도 + 워라밸</li></ul><p><br><br><br></p><h2 id="출판과정"><a href="#출판과정" class="headerlink" title="출판과정"></a>출판과정</h2><ul><li>원고 &gt; 초고 &gt; 퇴고 : 7~80% 시간 할애</li><li>조판</li><li>하판</li></ul><p><br><br><br></p><h2 id="초보저자가-편집자를-만날-수-있는-방법"><a href="#초보저자가-편집자를-만날-수-있는-방법" class="headerlink" title="초보저자가 편집자를 만날 수 있는 방법"></a>초보저자가 편집자를 만날 수 있는 방법</h2><ul><li>아이디어 기획서를 이메일로 보내기</li><li>원고를 이메일로 보내기</li></ul><p><br><br><br></p><h2 id="Q-아이디어-기획서에-어떤-점들이-명시되어-있는-게-편집자의-눈에-딱-들어오나요"><a href="#Q-아이디어-기획서에-어떤-점들이-명시되어-있는-게-편집자의-눈에-딱-들어오나요" class="headerlink" title="Q.아이디어 기획서에 어떤 점들이 명시되어 있는 게 편집자의 눈에 딱 들어오나요?"></a>Q.아이디어 기획서에 어떤 점들이 명시되어 있는 게 편집자의 눈에 딱 들어오나요?</h2><blockquote><p>가장 중요한 것은 4단계정도의 목차. 자세한 목차야말로 눈에 띌 수 밖에 없음. 목차쓰는 거 은근 어려움. 1단원은 뭐뭐~ 2단원은 뭐뭐~ 등등 또는 네임드한 개발자가 되는 것</p></blockquote><p><br><br><br></p><h2 id="Q-책을-쓰려면-얼마나-알아야-할까요"><a href="#Q-책을-쓰려면-얼마나-알아야-할까요" class="headerlink" title="Q. 책을 쓰려면 얼마나 알아야 할까요?"></a>Q. 책을 쓰려면 얼마나 알아야 할까요?</h2><blockquote><p>1년차도 책을 쓸 수 있다. 실제로 1년차인데 책을 쓰고 계신 저자분들이 있다. 가지고 있는 지식을 잘 표현하는 것이 중요하다.</p></blockquote><p><br><br><br></p><h2 id="수익구조"><a href="#수익구조" class="headerlink" title="수익구조"></a>수익구조</h2><h3 id="종이책"><a href="#종이책" class="headerlink" title="종이책"></a>종이책</h3><ul><li>제작비 + 유통비 + 온/오프라인서점(교보/Yes24) + 저자 + 출판사 = 10 + 10 + 60 +10+ 10</li><li>저자의 인쇄가 10%면 굉장히 많이 받는 것이고 유시민작가도 10%를 max로 받았다. 초보저자인 경우 보통 8% 인쇄를 받는다.</li><li>cf) 교보문고 오프라인 매대 1자리는 한달에 30만원을 호가함</li></ul><h3 id="이북"><a href="#이북" class="headerlink" title="이북"></a>이북</h3><ul><li>이북은 종이책의 65~70%정도로 가격측정을 함.</li><li>저자는 총 판매금액의 25%를 받는다. 권당 금액을 매기지않고 총 판매금액으로 매긴다.</li></ul>]]></content:encoded>
      
      
      <category domain="https://sowon-dev.github.io/categories/%EC%98%A4%ED%94%88%EC%86%8C%EC%8A%A4%EC%BB%A8%ED%8A%B8%EB%A6%AC%EB%B7%B0%ED%86%A42020/">오픈소스컨트리뷰톤2020</category>
      
      
      <category domain="https://sowon-dev.github.io/tags/Review/">Review</category>
      
      <category domain="https://sowon-dev.github.io/tags/Journal/">Journal</category>
      
      
      <comments>https://sowon-dev.github.io/2020/09/23/200923opensource/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>Servlet관리자용주문목록3 : 고객주문목록에서 주문 상태 및 운송장정보 변경</title>
      <link>https://sowon-dev.github.io/2020/09/23/200923jspi-3/</link>
      <guid>https://sowon-dev.github.io/2020/09/23/200923jspi-3/</guid>
      <pubDate>Wed, 23 Sep 2020 08:34:21 GMT</pubDate>
      
      <description>&lt;h3 id=&quot;주문상태-운송장번호-수정-시나리오&quot;&gt;&lt;a href=&quot;#주문상태-운송장번호-수정-시나리오&quot; class=&quot;headerlink&quot; title=&quot;주문상태,운송장번호 수정 시나리오&quot;&gt;&lt;/a&gt;주문상태,운송장번호 수정 시나리오&lt;/h3&gt;&lt;ol&gt;
&lt;li&gt;페이지 요청 : /AdminOrderDetail.ao?trade_num=20200917-1&lt;/li&gt;
&lt;li&gt;주문상태, 운송장 번호 입력</description>
      
      
      
      <content:encoded><![CDATA[<h3 id="주문상태-운송장번호-수정-시나리오"><a href="#주문상태-운송장번호-수정-시나리오" class="headerlink" title="주문상태,운송장번호 수정 시나리오"></a>주문상태,운송장번호 수정 시나리오</h3><ol><li>페이지 요청 : /AdminOrderDetail.ao?trade_num=20200917-1</li><li>주문상태, 운송장 번호 입력 <a id="more"></a><ul><li>주문번호 저장해서 이동 (hidden)</li></ul></li><li>‘수정하기’ 버튼 클릭 -&gt; submit</li><li>수정할 페이지 이동 (+ 가상주소)<ul><li>주문상태, 운송장번호, 주문번호 </li></ul></li><li>컨트롤러 -&gt; Action -&gt; DAO<ol><li>DAO 이동시 (주문상태, 운송장번호, 주문번호 )포함 이동</li><li>update 구문사용 (주문상태,운송장번호 수정) 주문번호 - 조건절</li></ol></li><li>페이지 이동 (관리자 주문 리스트)</li></ol><p><br><br><br></p><h2 id="AdminOrderFrontController-java의-doProcess-의-주소비교-후-처리부분에-코드-추가"><a href="#AdminOrderFrontController-java의-doProcess-의-주소비교-후-처리부분에-코드-추가" class="headerlink" title="AdminOrderFrontController.java의 doProcess()의 주소비교 후 처리부분에 코드 추가"></a><code>AdminOrderFrontController.java</code>의 doProcess()의 주소비교 후 처리부분에 코드 추가</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//주문상태와 운송장번호  변경</span></span><br><span class="line">&#125;<span class="keyword">else</span> <span class="keyword">if</span>(command.equals(<span class="string">"/AdminOrderModify.ao"</span>))&#123;</span><br><span class="line">System.out.println(<span class="string">"C : AdminOrderModify.ao 호출"</span>);</span><br><span class="line">action = <span class="keyword">new</span> AdminOrderModifyAction();</span><br><span class="line"><span class="keyword">try</span>&#123; forward = action.execute(request, response);</span><br><span class="line">&#125;<span class="keyword">catch</span>(Exception e) &#123;e.printStackTrace();&#125;</span><br><span class="line"><span class="comment">//주문상태와 운송장번호  변경을 볼 수 있는 상세페이지</span></span><br><span class="line">&#125;<span class="keyword">else</span> <span class="keyword">if</span>(command.equals(<span class="string">"/AdminOrderDetail.ao"</span>))&#123;</span><br><span class="line">System.out.println(<span class="string">"C : AdminOrderDetails.ao 호출"</span>);</span><br><span class="line">action = <span class="keyword">new</span> AdminOrderDetailAction();</span><br><span class="line"><span class="keyword">try</span>&#123; forward = action.execute(request, response);</span><br><span class="line">&#125;<span class="keyword">catch</span>(Exception e) &#123;e.printStackTrace();&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><br><br><br></p><h2 id="AdminOrderModifyAction-java-생성"><a href="#AdminOrderModifyAction-java-생성" class="headerlink" title="AdminOrderModifyAction.java 생성"></a><code>AdminOrderModifyAction.java</code> 생성</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">AdminOrderModifyAction</span> <span class="keyword">implements</span> <span class="title">Action</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> ActionForward <span class="title">execute</span><span class="params">(HttpServletRequest request, HttpServletResponse response)</span> </span></span><br><span class="line"><span class="function"><span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line">System.out.println(<span class="string">"M : AdminOrderModifyAction의 execute() 호출"</span>);</span><br><span class="line"><span class="comment">//한글처리</span></span><br><span class="line">request.setCharacterEncoding(<span class="string">"UTF-8"</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 로그인 정보 (로그인 처리필요)</span></span><br><span class="line">HttpSession session = request.getSession();</span><br><span class="line">String id = (String) session.getAttribute(<span class="string">"id"</span>);</span><br><span class="line">ActionForward forward = <span class="keyword">new</span> ActionForward();</span><br><span class="line"><span class="keyword">if</span>(id == <span class="keyword">null</span> || !id.equals(<span class="string">"admin"</span>))&#123;</span><br><span class="line">forward.setPath(<span class="string">"./MemberLogin.me"</span>);</span><br><span class="line">forward.setRedirect(<span class="keyword">true</span>);</span><br><span class="line"><span class="keyword">return</span> forward;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//전달정보 파라미터값 저장</span></span><br><span class="line">String trade_num = request.getParameter(<span class="string">"trade_num"</span>);</span><br><span class="line"><span class="keyword">int</span> status = Integer.parseInt(request.getParameter(<span class="string">"status"</span>));</span><br><span class="line">String trans_num = request.getParameter(<span class="string">"trans_num"</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">//AdminOrderDAO 객체 생성 -&gt; 배송지 수정등을 가능하게 하면 받아야할 파라미터가 많아져서 비효율적이다.</span></span><br><span class="line"><span class="comment">//=&gt; DTO를 사용하면 한번에 들고 다닐 수 있다.</span></span><br><span class="line">OrderDTO odto = <span class="keyword">new</span> OrderDTO();</span><br><span class="line">odto.setO_trade_num(request.getParameter(<span class="string">"trade_num"</span>));</span><br><span class="line">odto.setO_status(Integer.parseInt(request.getParameter(<span class="string">"status"</span>)));</span><br><span class="line">odto.setO_trans_num(request.getParameter(<span class="string">"trans_num"</span>));</span><br><span class="line"></span><br><span class="line">AdminOrderDAO aodao = <span class="keyword">new</span> AdminOrderDAOImpl();</span><br><span class="line"><span class="comment">//aodao.updateOrder(trade_num); //주문상태만 단순변경하는 메서드</span></span><br><span class="line">aodao.updateOrder(odto); <span class="comment">//주문상태와 운송번호 같이 변경하는 메서드 +a 가능</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//페이지이동</span></span><br><span class="line">forward.setPath(<span class="string">"./AdminOrderList.ao"</span>);</span><br><span class="line">forward.setRedirect(<span class="keyword">true</span>);</span><br><span class="line"><span class="keyword">return</span> forward;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><br><br><br></p><h2 id="AdminOrderDAO-java에-updateOrder-메서드-코드-추가"><a href="#AdminOrderDAO-java에-updateOrder-메서드-코드-추가" class="headerlink" title="AdminOrderDAO.java에 updateOrder()메서드 코드 추가"></a><code>AdminOrderDAO.java</code>에 updateOrder()메서드 코드 추가</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">AdminOrderDAO</span> </span>&#123;</span><br><span class="line"><span class="comment">// 인터페이스안의 추상메서드이기때문에  </span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 관리자가 주문목록을 확인하는 기능 getAdminOrderList()</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> List <span class="title">getAdminOrderList</span><span class="params">()</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 주문번호를 이용하여 주문상태만 변경</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">updateOrder</span><span class="params">(String trade_num)</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 주문번호를 사용해서 주문상태,운송장번호 변경 가능</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">updateOrder</span><span class="params">(OrderDTO odto)</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 주문번호에 해당하는 주문정보(리스트 전체)를 가져오는 동작을 처리</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">abstract</span> List <span class="title">getAdminOrderDetail</span><span class="params">(String trade_num)</span></span>;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><br><br><br></p><h2 id="AdminOrderDAOImpl-java에-updateOrder-메서드-오버라이딩하여-코드-추가"><a href="#AdminOrderDAOImpl-java에-updateOrder-메서드-오버라이딩하여-코드-추가" class="headerlink" title="AdminOrderDAOImpl.java에 updateOrder()메서드 오버라이딩하여 코드 추가"></a><code>AdminOrderDAOImpl.java</code>에 updateOrder()메서드 오버라이딩하여 코드 추가</h2><ul><li><code>updateOrder(String trade_num)</code>메서드는 pstmt.setInt(1, 1)` 이렇게 작성하면 다른 옵션들은 처리를 고민해야한다.</li><li>1~5번까지(1-“발송준비” 2 - “발송완료” 3 - “배송중” 4 - “배송완료” 5 - “주문취소”) 모든 버튼을 다 만들어야할까? 따라서 이 코드는 매우 비효율적이다.</li><li>따라서 <code>updateOrder(OrderDTO odto)</code>메서드를 작성해야한다.</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//주문목록에서 주문상태만 단순 변경</span></span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">updateOrder</span><span class="params">(String trade_num)</span> </span>&#123;</span><br><span class="line"><span class="keyword">try</span>&#123;</span><br><span class="line">getCon();</span><br><span class="line">sql=<span class="string">"update itwill_order set o_status=? where o_trade_num=?"</span>;</span><br><span class="line">pstmt = con.prepareStatement(sql);</span><br><span class="line">pstmt.setInt(<span class="number">1</span>, <span class="number">1</span>); <span class="comment">//1-발송준비 2 - "발송완료" 3 - "배송중" 4 - "배송완료" 5 - "주문취소" </span></span><br><span class="line">pstmt.setString(<span class="number">2</span>, trade_num);</span><br><span class="line">pstmt.executeUpdate();</span><br><span class="line">&#125;<span class="keyword">catch</span>(Exception e)&#123;</span><br><span class="line">e.printStackTrace();</span><br><span class="line">&#125;<span class="keyword">finally</span>&#123;</span><br><span class="line">closeDB();</span><br><span class="line">&#125;</span><br><span class="line">&#125;<span class="comment">//end of updateOrder()</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//주문번호를 사용해서 주문상태, 운송장번호 수정 가능</span></span><br><span class="line"><span class="comment">//오버라이딩인 동시에  메서드 오버로딩</span></span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">updateOrder</span><span class="params">(OrderDTO odto)</span> </span>&#123;</span><br><span class="line"><span class="keyword">try</span>&#123;</span><br><span class="line">getCon();</span><br><span class="line">sql=<span class="string">"update itwill_order set o_status=?, o_trans_num=? where o_trade_num=?"</span>;</span><br><span class="line">pstmt = con.prepareStatement(sql);</span><br><span class="line">pstmt.setInt(<span class="number">1</span>, odto.getO_status());</span><br><span class="line">pstmt.setString(<span class="number">2</span>, odto.getO_trans_num());</span><br><span class="line">pstmt.setString(<span class="number">3</span>, odto.getO_trade_num());</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> num = pstmt.executeUpdate(); <span class="comment">//몇줄의 row가 변경되었는지를 int로 리턴해줌</span></span><br><span class="line">System.out.println(<span class="string">"DAO: 주문상태랑 운송장번호 수정: "</span>+num);</span><br><span class="line">&#125;<span class="keyword">catch</span>(Exception e)&#123;</span><br><span class="line">e.printStackTrace();</span><br><span class="line">&#125;<span class="keyword">finally</span>&#123;</span><br><span class="line">closeDB();</span><br><span class="line">&#125;</span><br><span class="line">&#125;<span class="comment">//end of updateOrderDetail()</span></span><br></pre></td></tr></table></figure><p><br><br><br></p><h2 id="admin-order-list-jsp-링크-수정"><a href="#admin-order-list-jsp-링크-수정" class="headerlink" title="admin_order_list.jsp 링크 수정"></a><code>admin_order_list.jsp</code> 링크 수정</h2><ul><li>수정버튼의 기존 코드 <code>&#39;./AdminOrderModify.ao?trade_num=&lt;%=odto.getO_trade_num()%&gt;&#39;</code>에서 <code>&#39;./AdminOrderDetail.ao?trade_num=&lt;%=odto.getO_trade_num()%&gt;&#39;</code>로 변경</li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">td</span>&gt;</span> <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"button"</span> <span class="attr">class</span>=<span class="string">"btn"</span> <span class="attr">value</span>=<span class="string">"수정"</span> </span></span><br><span class="line"><span class="tag"><span class="attr">onclick</span>=<span class="string">"location.href='./AdminOrderDetail.ao?trade_num=&lt;%=odto.getO_trade_num()%&gt;'"</span> &gt;</span></span><br><span class="line"> / </span><br><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"button"</span> <span class="attr">class</span>=<span class="string">"btn"</span> <span class="attr">value</span>=<span class="string">"삭제"</span> </span></span><br><span class="line"><span class="tag"><span class="attr">onclick</span>=<span class="string">"location.href="</span> &gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br></pre></td></tr></table></figure><p><br><br><br></p><h2 id="AdminOrderDetailAction-java-생성"><a href="#AdminOrderDetailAction-java-생성" class="headerlink" title="AdminOrderDetailAction.java 생성"></a><code>AdminOrderDetailAction.java</code> 생성</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">AdminOrderDetailAction</span> <span class="keyword">implements</span> <span class="title">Action</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> ActionForward <span class="title">execute</span><span class="params">(HttpServletRequest request, HttpServletResponse response)</span> </span></span><br><span class="line"><span class="function"><span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line"><span class="comment">// 한글처리</span></span><br><span class="line">request.setCharacterEncoding(<span class="string">"UTF-8"</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 관리자 ID해당하는 세션값 제어</span></span><br><span class="line">HttpSession session = request.getSession();</span><br><span class="line">String id = (String) session.getAttribute(<span class="string">"id"</span>);</span><br><span class="line">ActionForward forward = <span class="keyword">new</span> ActionForward();</span><br><span class="line"><span class="keyword">if</span>(id == <span class="keyword">null</span> || !id.equals(<span class="string">"admin"</span>))&#123;</span><br><span class="line">forward.setPath(<span class="string">"./MemberLogin.me"</span>);</span><br><span class="line">forward.setRedirect(<span class="keyword">true</span>);</span><br><span class="line"><span class="keyword">return</span> forward;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// trade_num 파라미터값 저장</span></span><br><span class="line">String trade_num = request.getParameter(<span class="string">"trade_num"</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 주문번호에 해당하는 정보를 전부 가져오는 동작을 처리 </span></span><br><span class="line">AdminOrderDAO aodao = <span class="keyword">new</span> AdminOrderDAOImpl();</span><br><span class="line"></span><br><span class="line"><span class="comment">// 주문정보를 저장</span></span><br><span class="line">request.setAttribute(<span class="string">"adminOrderdetailList"</span>, aodao.getAdminOrderDetail(trade_num));</span><br><span class="line"></span><br><span class="line"><span class="comment">// 페이지 이동 ("./adminorder/admin_order_modify.jsp")</span></span><br><span class="line">forward.setPath(<span class="string">"./adminorder/admin_order_modify.jsp"</span>);</span><br><span class="line">forward.setRedirect(<span class="keyword">false</span>);</span><br><span class="line"><span class="keyword">return</span> forward;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><br><br><br></p><h2 id="AdminOrderDAO-java에-getAdminOrderDetail-메서드-코드-추가"><a href="#AdminOrderDAO-java에-getAdminOrderDetail-메서드-코드-추가" class="headerlink" title="AdminOrderDAO.java에 getAdminOrderDetail()메서드 코드 추가"></a><code>AdminOrderDAO.java</code>에 getAdminOrderDetail()메서드 코드 추가</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">AdminOrderDAO</span> </span>&#123;</span><br><span class="line"><span class="comment">// 인터페이스안의 추상메서드이기때문에  </span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 관리자가 주문목록을 확인하는 기능 getAdminOrderList()</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> List <span class="title">getAdminOrderList</span><span class="params">()</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 주문번호를 이용하여 주문상태 변경</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">updateOrder</span><span class="params">(String trade_num)</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 주문번호에 해당하는 주문정보(리스트 전체)를 가져오는 동작을 처리</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">abstract</span> List <span class="title">getAdminOrderDetail</span><span class="params">(String trade_num)</span></span>;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><br><br><br></p><h2 id="AdminOrderDAOImpl-java에-getAdminOrderDetail-메서드-오버라이딩하여-코드-추가"><a href="#AdminOrderDAOImpl-java에-getAdminOrderDetail-메서드-오버라이딩하여-코드-추가" class="headerlink" title="AdminOrderDAOImpl.java에 getAdminOrderDetail()메서드 오버라이딩하여 코드 추가"></a><code>AdminOrderDAOImpl.java</code>에 getAdminOrderDetail()메서드 오버라이딩하여 코드 추가</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//주문번호에 해당하는 주문정보(리스트 전체)를 가져오는 동작을 처리</span></span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> List <span class="title">getAdminOrderDetail</span><span class="params">(String trade_num)</span> </span>&#123;</span><br><span class="line">List&lt;OrderDTO&gt; adminOrderdetailList = <span class="keyword">new</span> ArrayList&lt;OrderDTO&gt;();</span><br><span class="line"><span class="keyword">try</span>&#123;</span><br><span class="line">getCon();</span><br><span class="line">sql=<span class="string">"select * from itwill_order where o_trade_num=?"</span>;</span><br><span class="line">pstmt = con.prepareStatement(sql);</span><br><span class="line">pstmt.setString(<span class="number">1</span>, trade_num);</span><br><span class="line">rs = pstmt.executeQuery();</span><br><span class="line"><span class="keyword">while</span>(rs.next())&#123;</span><br><span class="line">OrderDTO odto = <span class="keyword">new</span> OrderDTO();</span><br><span class="line">odto.setO_date(rs.getDate(<span class="string">"o_date"</span>));</span><br><span class="line">odto.setO_g_amount(rs.getInt(<span class="string">"o_g_amount"</span>));</span><br><span class="line">odto.setO_g_color(rs.getString(<span class="string">"o_g_color"</span>));</span><br><span class="line">odto.setO_g_name(rs.getString(<span class="string">"o_g_name"</span>));</span><br><span class="line">odto.setO_g_num(rs.getInt(<span class="string">"o_g_num"</span>));</span><br><span class="line">odto.setO_g_size(rs.getString(<span class="string">"o_g_size"</span>));</span><br><span class="line">odto.setO_m_id(rs.getString(<span class="string">"o_m_id"</span>));</span><br><span class="line">odto.setO_receive_memo(rs.getString(<span class="string">"o_receive_memo"</span>));</span><br><span class="line">odto.setO_num(rs.getInt(<span class="number">1</span>)); <span class="comment">//컬럼명 대신 인덱스번호로도 가능</span></span><br><span class="line">odto.setO_receive_addr1(rs.getString(<span class="string">"o_receive_addr1"</span>));</span><br><span class="line">odto.setO_receive_addr2(rs.getString(<span class="string">"o_receive_addr2"</span>));</span><br><span class="line">odto.setO_receive_name(rs.getString(<span class="string">"o_receive_name"</span>));</span><br><span class="line">odto.setO_receive_phone(rs.getString(<span class="string">"o_receive_phone"</span>));</span><br><span class="line">odto.setO_status(rs.getInt(<span class="string">"o_status"</span>));</span><br><span class="line">odto.setO_sum_money(rs.getInt(<span class="string">"o_sum_money"</span>));</span><br><span class="line">odto.setO_trade_date(rs.getDate(<span class="string">"o_trade_date"</span>));</span><br><span class="line">odto.setO_trade_num(rs.getString(<span class="number">2</span>)); <span class="comment">//컬럼명 대신 인덱스번호로도 가능</span></span><br><span class="line">odto.setO_trade_payer(rs.getString(<span class="string">"o_trade_payer"</span>));</span><br><span class="line">odto.setO_trade_type(rs.getString(<span class="string">"o_trade_type"</span>));</span><br><span class="line">odto.setO_trans_num(rs.getString(<span class="string">"o_trans_num"</span>));</span><br><span class="line"></span><br><span class="line">adminOrderdetailList.add(odto);</span><br><span class="line">&#125;</span><br><span class="line">&#125;<span class="keyword">catch</span>(Exception e)&#123;</span><br><span class="line">e.printStackTrace();</span><br><span class="line">&#125;<span class="keyword">finally</span>&#123;</span><br><span class="line">closeDB();</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> adminOrderdetailList;</span><br><span class="line">&#125;<span class="comment">//end of getAdminOrderDetail()</span></span><br></pre></td></tr></table></figure><p><br><br><br></p><h2 id="admin-order-modify-jsp-생성"><a href="#admin-order-modify-jsp-생성" class="headerlink" title="admin_order_modify.jsp 생성"></a><code>admin_order_modify.jsp</code> 생성</h2><ul><li>금액에 천의 단위를 입력하고 싶으면 DecimalFormat 클래스를 사용하면 된다.<ul><li><code>DecimalFormat dc = new DecimalFormat(&quot;###,###,###,###,###원&quot;);</code></li></ul></li><li>테이블전체를 form태그로 감싸야한다.</li><li>AdminOrderDAO 객체 생성 -&gt; 폼태그로 전달받은 파라미터값을 리퀘스트파라미터로 받는다. -&gt; 배송지 수정들을 가능하게 하면 받아야할 파라미터가 많아져서 비효율적이다. 인자가 많아질수록 성능이 비효율적이다 =&gt; DTO를 사용하면 한번에 들고 다닐 수 있다.<ul><li>보통 인자는 4~5까지는 파라미터로 받고 그 이상인 경우는 DTO나 BEAN을 이용해야 성능이 좋다.</li></ul></li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">//전달정보 파라미터값 저장</span><br><span class="line">String trade_num = request.getParameter("trade_num");</span><br><span class="line">int status = Integer.parseInt(request.getParameter("status"));</span><br><span class="line">String trans_num = request.getParameter("trans_num");</span><br><span class="line"></span><br><span class="line">//AdminOrderDAO 객체 생성 -&gt; 배송지 수정들을 가능하게 하면 받아야할 파라미터가 많아져서 비효율적이다.</span><br><span class="line">//=&gt; DTO를 사용하면 한번에 들고 다닐 수 있다.</span><br><span class="line">OrderDTO odto = new OrderDTO();</span><br><span class="line">odto.setO_trade_num(request.getParameter("trade_num"));</span><br><span class="line">odto.setO_status(Integer.parseInt(request.getParameter("status")));</span><br><span class="line">odto.setO_trans_num(request.getParameter("trans_num"));</span><br></pre></td></tr></table></figure><ul><li>전체태그</li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">%</span></span></span><br><span class="line"><span class="tag">//한글처리</span></span><br><span class="line"><span class="tag"><span class="attr">request.setCharacterEncoding</span>("<span class="attr">UTF-8</span>");</span></span><br><span class="line"><span class="tag"></span></span><br><span class="line"><span class="tag">//전달된 값 저장</span></span><br><span class="line"><span class="tag"><span class="attr">String</span> <span class="attr">trade_num</span> = <span class="string">request.getParameter(</span>"<span class="attr">trade_num</span>");</span></span><br><span class="line">List&lt;OrderDTO&gt; adminOrderdetailList = (List&lt;OrderDTO&gt;) request.getAttribute("adminOrderdetailList");</span><br><span class="line"></span><br><span class="line">//공통항목을 처리하는 객체</span><br><span class="line">OrderDTO odto_total = adminOrderdetailList.get(0);</span><br><span class="line"></span><br><span class="line">//천의 단위 콤마</span><br><span class="line">DecimalFormat dc = new DecimalFormat("###,###,###,###,###원");</span><br><span class="line">%&gt;</span><br><span class="line"><span class="tag">&lt;<span class="name">form</span> <span class="attr">action</span>=<span class="string">"./AdminOrderModify.ao"</span> <span class="attr">method</span>=<span class="string">"post"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"hidden"</span> <span class="attr">name</span>=<span class="string">"trade_num"</span> <span class="attr">value</span>=<span class="string">"&lt;%=trade_num%&gt;"</span>&gt;</span> </span><br><span class="line"><span class="tag">&lt;<span class="name">table</span> <span class="attr">border</span>=<span class="string">"1"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">caption</span>&gt;</span>관리자 - 주문 상세보기 / 수정하기<span class="tag">&lt;/<span class="name">caption</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- 주문정보 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">th</span>&gt;</span>주문번호<span class="tag">&lt;/<span class="name">th</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">td</span> <span class="attr">colspan</span>=<span class="string">"4"</span>&gt;</span><span class="tag">&lt;<span class="name">%=trade_num</span> %&gt;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span>        </span><br><span class="line"><span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">th</span> <span class="attr">colspan</span>=<span class="string">"5"</span>&gt;</span>구매 상품 정보<span class="tag">&lt;/<span class="name">th</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">th</span>&gt;</span>상품명<span class="tag">&lt;/<span class="name">th</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">th</span>&gt;</span>수량<span class="tag">&lt;/<span class="name">th</span>&gt;</span>        </span><br><span class="line">   <span class="tag">&lt;<span class="name">th</span>&gt;</span>크기<span class="tag">&lt;/<span class="name">th</span>&gt;</span>        </span><br><span class="line">   <span class="tag">&lt;<span class="name">th</span>&gt;</span>색상<span class="tag">&lt;/<span class="name">th</span>&gt;</span>        </span><br><span class="line">   <span class="tag">&lt;<span class="name">th</span>&gt;</span>가격<span class="tag">&lt;/<span class="name">th</span>&gt;</span>        </span><br><span class="line"><span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">%</span></span></span><br><span class="line"><span class="tag"><span class="attr">int</span> <span class="attr">totalSum</span>=<span class="string">0;</span></span></span><br><span class="line"><span class="tag"><span class="attr">for</span>(<span class="attr">OrderDTO</span> <span class="attr">odto</span> <span class="attr">:</span> <span class="attr">adminOrderdetailList</span>)&#123;</span></span><br><span class="line"><span class="tag"><span class="attr">totalSum</span> += <span class="string">odto.getO_sum_money();</span></span></span><br><span class="line"><span class="tag">%&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">td</span>&gt;</span><span class="tag">&lt;<span class="name">%=odto.getO_g_name()</span> %&gt;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">td</span>&gt;</span><span class="tag">&lt;<span class="name">%=odto.getO_g_amount()</span> %&gt;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span>        </span><br><span class="line">   <span class="tag">&lt;<span class="name">td</span>&gt;</span><span class="tag">&lt;<span class="name">%=odto.getO_g_size()</span> %&gt;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span>        </span><br><span class="line">   <span class="tag">&lt;<span class="name">td</span>&gt;</span><span class="tag">&lt;<span class="name">%=odto.getO_g_color()</span> %&gt;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span>        </span><br><span class="line">   <span class="tag">&lt;<span class="name">td</span>&gt;</span><span class="tag">&lt;<span class="name">%=dc.format(odto.getO_sum_money())</span> %&gt;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span>        </span><br><span class="line"><span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">%&#125;</span> %&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- 배송지 정보 --&gt;</span></span><br><span class="line"> <span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">th</span> <span class="attr">colspan</span>=<span class="string">"5"</span>&gt;</span>배송지 정보<span class="tag">&lt;/<span class="name">th</span>&gt;</span></span><br><span class="line"> <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">th</span>&gt;</span>받는 사람<span class="tag">&lt;/<span class="name">th</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">th</span>&gt;</span>연락처<span class="tag">&lt;/<span class="name">th</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">th</span>&gt;</span>배송주소<span class="tag">&lt;/<span class="name">th</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">th</span>&gt;</span>세부 배송주소<span class="tag">&lt;/<span class="name">th</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">th</span>&gt;</span>요구사항<span class="tag">&lt;/<span class="name">th</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">td</span>&gt;</span><span class="tag">&lt;<span class="name">%=odto_total.getO_receive_name()</span> %&gt;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">td</span>&gt;</span><span class="tag">&lt;<span class="name">%=odto_total.getO_receive_phone()</span> %&gt;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">td</span>&gt;</span><span class="tag">&lt;<span class="name">%=odto_total.getO_receive_addr1()</span> %&gt;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">td</span>&gt;</span><span class="tag">&lt;<span class="name">%=odto_total.getO_receive_addr2()</span> %&gt;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">td</span>&gt;</span><span class="tag">&lt;<span class="name">%=odto_total.getO_receive_memo()</span> %&gt;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!-- 결제정보 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">th</span> <span class="attr">colspan</span>=<span class="string">"5"</span>&gt;</span>결제 정보<span class="tag">&lt;/<span class="name">th</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">th</span>&gt;</span>주문 합계 금액<span class="tag">&lt;/<span class="name">th</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">th</span>&gt;</span>결제 방법<span class="tag">&lt;/<span class="name">th</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">th</span>&gt;</span>입금자(구매자)<span class="tag">&lt;/<span class="name">th</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">th</span>&gt;</span>주문상태<span class="tag">&lt;/<span class="name">th</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">th</span>&gt;</span>운송장 번호<span class="tag">&lt;/<span class="name">th</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">tr</span>&gt;</span>   </span><br><span class="line"><span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">td</span>&gt;</span><span class="tag">&lt;<span class="name">%=dc.format(totalSum)</span>  %&gt;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">td</span>&gt;</span><span class="tag">&lt;<span class="name">%=odto_total.getO_trade_type()</span> %&gt;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">td</span>&gt;</span><span class="tag">&lt;<span class="name">%=odto_total.getO_trade_payer()</span> %&gt;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">td</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"pure-css-select-style theme-square"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">select</span> <span class="attr">name</span>=<span class="string">"status"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">"0"</span></span></span><br><span class="line">    &lt;% if(odto_total.getO_status() == 0)&#123;%&gt; selected &lt;%&#125; %&gt;</span><br><span class="line">    &gt;대기중<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">"1"</span></span></span><br><span class="line">    &lt;% if(odto_total.getO_status() == 1)&#123;%&gt; selected &lt;%&#125; %&gt;</span><br><span class="line">    &gt;발송준비<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">"2"</span></span></span><br><span class="line">    &lt;% if(odto_total.getO_status() == 2)&#123;%&gt; selected &lt;%&#125; %&gt;</span><br><span class="line">    &gt;발송완료<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">"3"</span></span></span><br><span class="line">    &lt;% if(odto_total.getO_status() == 3)&#123;%&gt; selected &lt;%&#125; %&gt;</span><br><span class="line">    &gt;배송중<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">"4"</span></span></span><br><span class="line">    &lt;% if(odto_total.getO_status() == 4)&#123;%&gt; selected &lt;%&#125; %&gt;</span><br><span class="line">    &gt;배송완료<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">"5"</span></span></span><br><span class="line">    &lt;% if(odto_total.getO_status() == 5)&#123;%&gt; selected &lt;%&#125; %&gt;</span><br><span class="line">    &gt;주문취소<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line"> <span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br><span class="line"> <span class="tag">&lt;/<span class="name">div</span>&gt;</span> </span><br><span class="line"><span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">td</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"text"</span> <span class="attr">name</span>=<span class="string">"trans_num"</span> <span class="attr">value</span>=<span class="string">"&lt;%=odto_total.getO_trans_num() %&gt;"</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">td</span> <span class="attr">colspan</span>=<span class="string">"3"</span>&gt;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">td</span> <span class="attr">colspan</span>=<span class="string">"2"</span>&gt;</span><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"submit"</span> <span class="attr">class</span>=<span class="string">"btn"</span> <span class="attr">value</span>=<span class="string">"수정"</span>&gt;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">table</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"button"</span> <span class="attr">class</span>=<span class="string">"btn"</span> <span class="attr">value</span>=<span class="string">"뒤로가기(js코드)"</span> <span class="attr">onclick</span>=<span class="string">"javascript:history.back()"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"button"</span> <span class="attr">class</span>=<span class="string">"btn"</span> <span class="attr">value</span>=<span class="string">"뒤로가기(history객체)"</span> <span class="attr">onclick</span>=<span class="string">"history.back()"</span>&gt;</span></span><br></pre></td></tr></table></figure>]]></content:encoded>
      
      
      <category domain="https://sowon-dev.github.io/categories/JSP/">JSP</category>
      
      
      <category domain="https://sowon-dev.github.io/tags/TIL/">TIL</category>
      
      <category domain="https://sowon-dev.github.io/tags/ITWILL-JAVA/">ITWILL(JAVA)</category>
      
      
      <comments>https://sowon-dev.github.io/2020/09/23/200923jspi-3/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>자바 클래스(객체) vs 추상클래스 vs 인터페이스</title>
      <link>https://sowon-dev.github.io/2020/09/23/200923jspi-2/</link>
      <guid>https://sowon-dev.github.io/2020/09/23/200923jspi-2/</guid>
      <pubDate>Wed, 23 Sep 2020 05:55:25 GMT</pubDate>
      
      <description>&lt;h2 id=&quot;클래스&quot;&gt;&lt;a href=&quot;#클래스&quot; class=&quot;headerlink&quot; title=&quot;클래스&quot;&gt;&lt;/a&gt;클래스&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;객체를 생성하기위한 클래스(설계도)&lt;/li&gt;
&lt;li&gt;사용하기위해서는 반드시 객체 생성 = 인스턴스화 = 메모리에 로드한다.</description>
      
      
      
      <content:encoded><![CDATA[<h2 id="클래스"><a href="#클래스" class="headerlink" title="클래스"></a>클래스</h2><ul><li>객체를 생성하기위한 클래스(설계도)</li><li>사용하기위해서는 반드시 객체 생성 = 인스턴스화 = 메모리에 로드한다.<a id="more"></a></li><li>구성요소 3가지<ul><li>변수 : 속성</li><li>메서드 : 동작</li><li>생성자 : 초기화</li></ul></li><li>상속 가능 : 확장 extends 사용가능 </li><li>관계 : 다중상속 불가</li><li>업캐스팅 가능</li></ul><p><br><br><br></p><h2 id="추상클래스"><a href="#추상클래스" class="headerlink" title="추상클래스"></a>추상클래스</h2><ul><li>클래스</li><li>구성요소 3가지<ul><li>변수</li><li>상수</li><li>일반메서드</li><li>추상메서드 </li><li>생성자 </li></ul></li><li>상속 가능</li><li>관계 : 다중상속 불가</li><li>업캐스팅 가능</li><li>추상클래시끼리 상속 가능? 가능 extends를 사용</li><li>상속 후 추상메서드 오버라이딩(구현)해서 사용해야한다.</li></ul><p><br><br><br></p><h2 id="인터페이스"><a href="#인터페이스" class="headerlink" title="인터페이스"></a>인터페이스</h2><ul><li>인터페이스는 클래스가 아니라서 구성요소가 다르다</li><li>구성요소 2가지<ul><li>상수 </li><li>추상메서드</li></ul></li><li>상속 가능 =&gt; 구현 implements 사용가능 </li><li>인터페이스끼리 상속 가능한가? 가능 extends를 사용</li><li>관계 : 다중구현 가능</li><li>추상메서드 : [public abstract]</li><li>인터페이스안의 <strong>모든 메서드의 접근지정자</strong>는 default가 아닌 <code>public</code>이다.</li><li>상속 후 추상메서드 오버라이딩(구현)해서 사용해야한다.</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// [] 대괄호는 생략이 가능하다는 의미이다.</span></span><br><span class="line"><span class="comment">// 추상메서드 선언방법 중 실무에서는 4번째방법으로 선언을 많이 한다</span></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">interface</span> <span class="title">A</span></span>&#123;</span><br><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> 변수명;</span><br><span class="line">[<span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span>] 변수명;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">abstract</span> <span class="title">method1</span><span class="params">()</span></span>;</span><br><span class="line">[<span class="keyword">public</span>] <span class="function"><span class="keyword">abstract</span> <span class="title">method1</span><span class="params">()</span></span>;</span><br><span class="line">[<span class="keyword">public</span> <span class="keyword">abstract</span>] method1();</span><br><span class="line"><span class="keyword">public</span> [<span class="keyword">abstract</span>] method1();</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><br><br><br></p><h2 id="비교표"><a href="#비교표" class="headerlink" title="비교표"></a>비교표</h2><table><thead><tr><th align="center">비교</th><th align="center">클래스</th><th align="center">추상클래스</th><th align="center">인터페이스</th></tr></thead><tbody><tr><td align="center">클래스인가?</td><td align="center">Y</td><td align="center">Y</td><td align="center">N</td></tr><tr><td align="center">구성요소</td><td align="center">변수, 메서드, 생성자</td><td align="center">변수, 상수, 일반메서드, 추상메서드, 생성자</td><td align="center">상수, 추상메서드</td></tr><tr><td align="center">관계</td><td align="center">다중상속 불가능</td><td align="center">다중상속 불가능</td><td align="center">다중구현 가능</td></tr><tr><td align="center">상속가능여부</td><td align="center">가능 extends(확장)</td><td align="center">가능 extends(확장)</td><td align="center">가능 implements(구현)</td></tr><tr><td align="center">업캐스팅가능여부</td><td align="center">Y</td><td align="center">Y</td><td align="center">Y</td></tr></tbody></table><ul><li>참고링크 <a href="https://sowon-dev.github.io/2020/07/15/200715javai/">기본클래스 이외에 자바 구성요소1 : 추상클래스, 인터페이스</a></li></ul>]]></content:encoded>
      
      
      <category domain="https://sowon-dev.github.io/categories/JSP/">JSP</category>
      
      
      <category domain="https://sowon-dev.github.io/tags/TIL/">TIL</category>
      
      <category domain="https://sowon-dev.github.io/tags/ITWILL-JAVA/">ITWILL(JAVA)</category>
      
      
      <comments>https://sowon-dev.github.io/2020/09/23/200923jspi-2/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>Servlet관리자용주문목록2 : 고객주문목록</title>
      <link>https://sowon-dev.github.io/2020/09/23/200923jspi-1/</link>
      <guid>https://sowon-dev.github.io/2020/09/23/200923jspi-1/</guid>
      <pubDate>Wed, 23 Sep 2020 05:14:46 GMT</pubDate>
      
      <description>&lt;h2 id=&quot;AdminOrderFrontController-java의-doProcess-의-주소비교-후-처리부분에-코드-추가&quot;&gt;&lt;a href=&quot;#AdminOrderFrontController-java의-doProcess-의-주소비교-후-처리부분에-코드-추가&quot; class=&quot;headerlink&quot; title=&quot;AdminOrderFrontController.java의 doProcess()의 주소비교 후 처리부분에 코드 추가&quot;&gt;&lt;/a&gt;&lt;code&gt;AdminOrderFrontController.java&lt;/code&gt;의 doProcess()의 주소비교 후 처리부분에 코드 추가&lt;/h2&gt;</description>
      
      
      
      <content:encoded><![CDATA[<h2 id="AdminOrderFrontController-java의-doProcess-의-주소비교-후-처리부분에-코드-추가"><a href="#AdminOrderFrontController-java의-doProcess-의-주소비교-후-처리부분에-코드-추가" class="headerlink" title="AdminOrderFrontController.java의 doProcess()의 주소비교 후 처리부분에 코드 추가"></a><code>AdminOrderFrontController.java</code>의 doProcess()의 주소비교 후 처리부분에 코드 추가</h2><a id="more"></a><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 주소에 따른 처리 구분 (주소 매핑후 이동)</span></span><br><span class="line"><span class="keyword">if</span>(command.equals(<span class="string">"/AdminOrderList.ao"</span>))&#123;</span><br><span class="line">action = <span class="keyword">new</span> AdminOrderListAction();</span><br><span class="line"><span class="keyword">try</span>&#123; forward = action.execute(request, response);</span><br><span class="line">&#125;<span class="keyword">catch</span>(Exception e) &#123;e.printStackTrace();&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><br><br><br></p><h2 id="AdminOrderListAction-java-생성"><a href="#AdminOrderListAction-java-생성" class="headerlink" title="AdminOrderListAction.java 생성"></a><code>AdminOrderListAction.java</code> 생성</h2><ul><li>if(id == null || id.equals(“admin”)) 에서 null을 먼저 비교해야한다. <code>id.equals(&quot;admin&quot;)</code> 비교하는 경우 id가 null일때 <code>id.equals(null)</code>이 실행되면서 에러가 발생한다. 따라서 <code>id == null</code>을 먼저 비교해야한다.</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">AdminOrderListAction</span> <span class="keyword">implements</span> <span class="title">Action</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> ActionForward <span class="title">execute</span><span class="params">(HttpServletRequest request, HttpServletResponse response)</span> </span></span><br><span class="line"><span class="function"><span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line"><span class="comment">// 한글처리</span></span><br><span class="line">request.setCharacterEncoding(<span class="string">"UTF-8"</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 관리자 ID해당하는 세션값 제어</span></span><br><span class="line">HttpSession session = request.getSession();</span><br><span class="line">String id = (String) session.getAttribute(<span class="string">"id"</span>);</span><br><span class="line">ActionForward forward = <span class="keyword">new</span> ActionForward();</span><br><span class="line"><span class="keyword">if</span>(id == <span class="keyword">null</span> || !id.equals(<span class="string">"admin"</span>))&#123;</span><br><span class="line">forward.setPath(<span class="string">"./MemberLogin.me"</span>);</span><br><span class="line">forward.setRedirect(<span class="keyword">true</span>);</span><br><span class="line"><span class="keyword">return</span> forward;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// AdminOrderDAO 객체 생성 -&gt; 저장 한 줄 코딩</span></span><br><span class="line">AdminOrderDAO aodao = <span class="keyword">new</span> AdminOrderDAOImpl(); <span class="comment">//업캐스팅</span></span><br><span class="line">request.setAttribute(<span class="string">"AdminOrderList"</span>, aodao.getAdminOrderList());</span><br><span class="line"></span><br><span class="line"><span class="comment">// 페이지 이동</span></span><br><span class="line">forward.setPath(<span class="string">"./adminorder/admin_order_list.jsp"</span>);</span><br><span class="line">forward.setRedirect(<span class="keyword">false</span>);</span><br><span class="line"><span class="keyword">return</span> forward;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><br><br><br></p><h2 id="AdminOrderDAOImpl-java에-getAdminOrderList-메서드-코드-추가"><a href="#AdminOrderDAOImpl-java에-getAdminOrderList-메서드-코드-추가" class="headerlink" title="AdminOrderDAOImpl.java에 getAdminOrderList()메서드 코드 추가"></a><code>AdminOrderDAOImpl.java</code>에 getAdminOrderList()메서드 코드 추가</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 주문목록 가져오기</span></span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> List <span class="title">getAdminOrderList</span><span class="params">()</span> </span>&#123;</span><br><span class="line">List AdminOrderList = <span class="keyword">new</span> ArrayList();</span><br><span class="line"><span class="keyword">try</span> &#123; </span><br><span class="line">getCon();</span><br><span class="line">sql=<span class="string">"select o_trade_num,o_g_name,o_g_amount,o_g_size,o_g_color,"</span></span><br><span class="line">+ <span class="string">"sum(o_sum_money) as o_sum_money,"</span></span><br><span class="line">+ <span class="string">"o_trade_type,o_trans_num,o_date,o_status,o_m_id "</span></span><br><span class="line">+ <span class="string">"from itwill_order "</span></span><br><span class="line">+ <span class="string">"group by o_trade_num "</span></span><br><span class="line">+ <span class="string">"order by o_trade_num"</span>;</span><br><span class="line">pstmt = con.prepareStatement(sql);</span><br><span class="line">rs = pstmt.executeQuery();</span><br><span class="line"><span class="keyword">while</span>(rs.next())&#123;</span><br><span class="line">OrderDTO odto = <span class="keyword">new</span> OrderDTO();</span><br><span class="line">odto.setO_date(rs.getDate(<span class="string">"o_date"</span>));</span><br><span class="line">odto.setO_g_amount(rs.getInt(<span class="string">"o_g_amount"</span>));</span><br><span class="line">odto.setO_g_color(rs.getString(<span class="string">"o_g_color"</span>));</span><br><span class="line">odto.setO_g_name(rs.getString(<span class="string">"o_g_name"</span>));</span><br><span class="line">odto.setO_g_size(rs.getString(<span class="string">"o_g_size"</span>));</span><br><span class="line">odto.setO_trade_num(rs.getString(<span class="string">"o_trade_num"</span>));</span><br><span class="line">odto.setO_trans_num(rs.getString(<span class="string">"o_trans_num"</span>));</span><br><span class="line">odto.setO_sum_money(rs.getInt(<span class="string">"o_sum_money"</span>));</span><br><span class="line">odto.setO_status(rs.getInt(<span class="string">"o_status"</span>));</span><br><span class="line">odto.setO_trade_type(rs.getString(<span class="string">"o_trade_type"</span>));</span><br><span class="line">odto.setO_m_id(rs.getString(<span class="string">"o_m_id"</span>));</span><br><span class="line"></span><br><span class="line">AdminOrderList.add(odto);</span><br><span class="line">&#125;</span><br><span class="line">&#125;<span class="keyword">catch</span>(Exception e)&#123;</span><br><span class="line">e.printStackTrace();</span><br><span class="line">&#125; <span class="keyword">finally</span> &#123;</span><br><span class="line">closeDB();</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> AdminOrderList;</span><br><span class="line">&#125;<span class="comment">//end of getAdminOrderList()</span></span><br></pre></td></tr></table></figure><p><br><br><br></p><h2 id="admin-order-list-jsp-생성"><a href="#admin-order-list-jsp-생성" class="headerlink" title="admin_order_list.jsp 생성"></a><code>admin_order_list.jsp</code> 생성</h2><ul><li>if-else보다 swith가 더 효율적이다. if-else는 모든 연산을 다 해야하니까</li><li>if-else를 쓸꺼면 꼭 else를 챙겨야한다. 모든 예외상황을 다 관리해야하니까</li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">%</span></span></span><br><span class="line"><span class="tag"><span class="attr">System.out.println</span>("<span class="attr">V</span> <span class="attr">:</span> 관리자 주문목록 처리 페이지");</span></span><br><span class="line">List&lt;OrderDTO&gt; adminOrderList = (List&lt;OrderDTO&gt;) request.getAttribute("adminOrderList");</span><br><span class="line">%&gt;</span><br><span class="line"><span class="tag">&lt;<span class="name">table</span> <span class="attr">border</span>=<span class="string">"1"</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">td</span>&gt;</span>주문번호<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">td</span>&gt;</span>주문자<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">td</span>&gt;</span>결재방법<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">td</span>&gt;</span>주문금액<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">td</span>&gt;</span>주문상태<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">td</span>&gt;</span>주문일시<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">td</span>&gt;</span>수정  / 삭제<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">%</span></span></span><br><span class="line"><span class="tag">  <span class="attr">for</span>(<span class="attr">OrderDTO</span> <span class="attr">odto:adminOrderList</span>)&#123;</span></span><br><span class="line"><span class="tag">  %&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">td</span>&gt;</span><span class="tag">&lt;<span class="name">%=odto.getO_trade_num()</span> %&gt;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">td</span>&gt;</span><span class="tag">&lt;<span class="name">%=odto.getO_m_id()</span> %&gt;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">td</span>&gt;</span><span class="tag">&lt;<span class="name">%=odto.getO_trade_type()</span> %&gt;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">td</span>&gt;</span><span class="tag">&lt;<span class="name">%=odto.getO_sum_money()</span> %&gt;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">%</span></span></span><br><span class="line"><span class="tag">// <span class="attr">if-else</span>보다 <span class="attr">swith</span>가 더 효율적이다<span class="attr">.</span> <span class="attr">if-else</span>는 모든 연산을 다 해야하니까</span></span><br><span class="line"><span class="tag">// <span class="attr">if-else</span>를 쓸꺼면 꼭 <span class="attr">else</span>를 챙겨야한다<span class="attr">.</span> 모든 예외상황을 다 관리해야하니까</span></span><br><span class="line"><span class="tag"><span class="attr">String</span> <span class="attr">status</span> = <span class="string">""</span>;</span></span><br><span class="line"><span class="tag"><span class="attr">if</span>(<span class="attr">odto.getO_status</span>() == <span class="string">0)&#123;</span> <span class="attr">status</span>=<span class="string">"대기중"</span>; &#125;</span></span><br><span class="line"><span class="tag"><span class="attr">else</span> <span class="attr">if</span>(<span class="attr">odto.getO_status</span>() == <span class="string">1)&#123;</span> <span class="attr">status</span>=<span class="string">"발송준비"</span>; &#125;</span></span><br><span class="line"><span class="tag"><span class="attr">else</span> <span class="attr">if</span>(<span class="attr">odto.getO_status</span>() == <span class="string">2)&#123;</span> <span class="attr">status</span>=<span class="string">"발송완료"</span>; &#125;</span></span><br><span class="line"><span class="tag"><span class="attr">else</span> <span class="attr">if</span>(<span class="attr">odto.getO_status</span>() == <span class="string">3)&#123;</span> <span class="attr">status</span>=<span class="string">"배송중"</span>; &#125;</span></span><br><span class="line"><span class="tag"><span class="attr">else</span> <span class="attr">if</span>(<span class="attr">odto.getO_status</span>() == <span class="string">4)&#123;</span> <span class="attr">status</span>=<span class="string">"배송완료"</span>; &#125;</span></span><br><span class="line"><span class="tag"><span class="attr">else</span> <span class="attr">if</span>(<span class="attr">odto.getO_status</span>() == <span class="string">5)&#123;</span> <span class="attr">status</span>=<span class="string">"주문취소"</span>; &#125;</span></span><br><span class="line"><span class="tag"><span class="attr">else</span>&#123; <span class="attr">status</span>=<span class="string">"문제발생"</span>; &#125; </span></span><br><span class="line"><span class="tag">%&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">td</span>&gt;</span> <span class="tag">&lt;<span class="name">%=status</span> %&gt;</span> <span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">td</span>&gt;</span> <span class="tag">&lt;<span class="name">%=odto.getO_date()</span> %&gt;</span> <span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">td</span>&gt;</span> <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"button"</span> <span class="attr">class</span>=<span class="string">"btn"</span> <span class="attr">value</span>=<span class="string">"수정"</span> </span></span><br><span class="line"><span class="tag">    <span class="attr">onclick</span>=<span class="string">"location.href='./AdminOrderModify.ao?trade_num=&lt;%=odto.getO_trade_num()%&gt;'"</span> &gt;</span></span><br><span class="line">     / </span><br><span class="line">    <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"button"</span> <span class="attr">class</span>=<span class="string">"btn"</span> <span class="attr">value</span>=<span class="string">"삭제"</span> </span></span><br><span class="line"><span class="tag">    <span class="attr">onclick</span>=<span class="string">"location.href="</span> &gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">%</span></span></span><br><span class="line"><span class="tag">  &#125;</span></span><br><span class="line"><span class="tag">  %&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">table</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"button"</span> <span class="attr">class</span>=<span class="string">"btn"</span> <span class="attr">value</span>=<span class="string">"메인페이지로"</span> <span class="attr">onclick</span>=<span class="string">"location.href='./Main.me'"</span>&gt;</span></span><br></pre></td></tr></table></figure>]]></content:encoded>
      
      
      <category domain="https://sowon-dev.github.io/categories/JSP/">JSP</category>
      
      
      <category domain="https://sowon-dev.github.io/tags/TIL/">TIL</category>
      
      <category domain="https://sowon-dev.github.io/tags/ITWILL-JAVA/">ITWILL(JAVA)</category>
      
      
      <comments>https://sowon-dev.github.io/2020/09/23/200923jspi-1/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>Servlet관리자용주문목록1 : 기초</title>
      <link>https://sowon-dev.github.io/2020/09/23/200923jspi/</link>
      <guid>https://sowon-dev.github.io/2020/09/23/200923jspi/</guid>
      <pubDate>Wed, 23 Sep 2020 05:01:01 GMT</pubDate>
      
      <description>&lt;h2 id=&quot;web-xml’에-코드-추가&quot;&gt;&lt;a href=&quot;#web-xml’에-코드-추가&quot; class=&quot;headerlink&quot; title=&quot;`web.xml’에 코드 추가&quot;&gt;&lt;/a&gt;`web.xml’에 코드 추가&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;&lt;code&gt;web.xml&lt;/code&gt; 코드 수정 후 꼭 서버 실행 후 주소창에 &lt;code&gt;test.bo&lt;/code&gt;해서 흰 화면이 뜨는지 확인하고 코딩할 것&lt;/li&gt;
&lt;li&gt;흰화면이 안뜨면 &lt;code&gt;web.xml&lt;/code&gt; 설정이 잘못되었다는 의미임.</description>
      
      
      
      <content:encoded><![CDATA[<h2 id="web-xml’에-코드-추가"><a href="#web-xml’에-코드-추가" class="headerlink" title="`web.xml’에 코드 추가"></a>`web.xml’에 코드 추가</h2><ul><li><code>web.xml</code> 코드 수정 후 꼭 서버 실행 후 주소창에 <code>test.bo</code>해서 흰 화면이 뜨는지 확인하고 코딩할 것</li><li>흰화면이 안뜨면 <code>web.xml</code> 설정이 잘못되었다는 의미임.<a id="more"></a></li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- Model2 주문리스트(관리자용) --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">servlet</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">servlet-name</span>&gt;</span>AdminOrderFrontController<span class="tag">&lt;/<span class="name">servlet-name</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">servlet-class</span>&gt;</span>com.itwillbs.admin.order.action.AdminOrderFrontController<span class="tag">&lt;/<span class="name">servlet-class</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">servlet</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">servlet-mapping</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">servlet-name</span>&gt;</span>AdminOrderFrontController<span class="tag">&lt;/<span class="name">servlet-name</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">url-pattern</span>&gt;</span>*.ao<span class="tag">&lt;/<span class="name">url-pattern</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">servlet-mapping</span>&gt;</span></span><br></pre></td></tr></table></figure><p><br><br><br></p><h2 id="AdminOrderFrontController-java의-doProcess-의-주소비교-후-처리부분에-코드-추가"><a href="#AdminOrderFrontController-java의-doProcess-의-주소비교-후-처리부분에-코드-추가" class="headerlink" title="AdminOrderFrontController.java의 doProcess()의 주소비교 후 처리부분에 코드 추가"></a><code>AdminOrderFrontController.java</code>의 doProcess()의 주소비교 후 처리부분에 코드 추가</h2><!-- more --><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">OrderFrontController</span> <span class="keyword">extends</span> <span class="title">HttpServlet</span> </span>&#123;</span><br><span class="line"><span class="comment">// 일반 클래스를 서블릿을 상속해서 컨트롤러 역활 할수있도록 설정</span></span><br><span class="line"><span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">doProcess</span><span class="params">(HttpServletRequest request, HttpServletResponse response)</span></span></span><br><span class="line"><span class="function"><span class="keyword">throws</span> ServletException, IOException </span>&#123;</span><br><span class="line">System.out.println(<span class="string">"doProcess() 호출 (페이지 GET/POST방식 모두 사용호출)"</span>);</span><br><span class="line"><span class="comment">// 주소 비교 (주소 매핑)</span></span><br><span class="line">System.out.println(<span class="string">"--------------@ 주소 계산 @-------------"</span>);</span><br><span class="line"><span class="comment">// 프로젝트명 + 주소</span></span><br><span class="line">String requestURI = request.getRequestURI();</span><br><span class="line">System.out.println(<span class="string">" requestURI : "</span> + requestURI);</span><br><span class="line"><span class="comment">// 프로젝트명</span></span><br><span class="line">String contextPath = request.getContextPath();</span><br><span class="line">System.out.println(<span class="string">" contextPath : "</span> + contextPath);</span><br><span class="line"><span class="comment">// 가상주소</span></span><br><span class="line">String command = requestURI.substring(contextPath.length());</span><br><span class="line">System.out.println(<span class="string">" command(가상주소) : "</span> + command);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">System.out.println(<span class="string">"--------------@ 주소 비교후 처리 @-------------"</span>);</span><br><span class="line">Action action = <span class="keyword">null</span>;</span><br><span class="line">ActionForward forward = <span class="keyword">null</span>;</span><br><span class="line"><span class="comment">// 주소에 따른 처리 구분 (주소 매핑후 이동)</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">System.out.println(<span class="string">"-----------------@ 페이지 이동 @--------------"</span>);</span><br><span class="line"><span class="keyword">if</span>(forward != <span class="keyword">null</span>)&#123; <span class="comment">// 이동할 정보가 있다</span></span><br><span class="line"><span class="keyword">if</span>(forward.isRedirect())&#123; <span class="comment">// true - sendRedirect()</span></span><br><span class="line"><span class="comment">// 가상주소(.bo -&gt; .bo), 화면전환(주소변경,화면 변경)</span></span><br><span class="line">System.out.println(<span class="string">"C : "</span>+forward.getPath()+<span class="string">"주소로 이동(Redirect)"</span>);</span><br><span class="line">response.sendRedirect(forward.getPath());</span><br><span class="line">&#125;<span class="keyword">else</span>&#123; <span class="comment">// false - forward()</span></span><br><span class="line">System.out.println(<span class="string">"C : "</span>+forward.getPath()+<span class="string">"주소로 이동(forward)"</span>);</span><br><span class="line"><span class="comment">// 가상주소 -&gt; 실제페이지 (.bo -&gt; .jsp) + reqeust 객체 정보를 가지고 이동</span></span><br><span class="line">RequestDispatcher dis =</span><br><span class="line">request.getRequestDispatcher(forward.getPath());</span><br><span class="line">dis.forward(request, response);</span><br><span class="line">&#125;</span><br><span class="line">&#125;<span class="comment">//end of 페이지이동</span></span><br><span class="line"></span><br><span class="line">&#125;<span class="comment">//end of doProcess</span></span><br><span class="line"></span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">doGet</span><span class="params">(HttpServletRequest req, HttpServletResponse resp)</span> </span></span><br><span class="line"><span class="function"><span class="keyword">throws</span> ServletException, IOException </span>&#123;</span><br><span class="line">System.out.println(<span class="string">"doGet() 호출 (페이지 GET방식 호출)"</span>);</span><br><span class="line">doProcess(req, resp);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">doPost</span><span class="params">(HttpServletRequest req, HttpServletResponse resp)</span> </span></span><br><span class="line"><span class="function"><span class="keyword">throws</span> ServletException, IOException </span>&#123;</span><br><span class="line">System.out.println(<span class="string">"doPost() 호출 (페이지 POST방식 호출)"</span>);</span><br><span class="line">doProcess(req, resp);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><br><br><br></p><h2 id="Action-java-생성"><a href="#Action-java-생성" class="headerlink" title="Action.java 생성"></a><code>Action.java</code> 생성</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">Action</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 상수,추상메서드</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 추상메서드 -&gt; 서브클래스들 한태 강제성 부여</span></span><br><span class="line"><span class="comment">// =&gt; 개발 형식의 통일(틀이 정해짐)</span></span><br><span class="line"><span class="comment">// =&gt; 객체간의 관계가 약화됨 =&gt; 각각의 객체가 해당 동작만 처리/제어</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// Action 페이지의 동작을 미리 선언해서 사용</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> ActionForward <span class="title">execute</span><span class="params">(HttpServletRequest request,</span></span></span><br><span class="line"><span class="function"><span class="params">HttpServletResponse response)</span> <span class="keyword">throws</span> Exception</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><br><br><br></p><h2 id="ActionForward-java-생성"><a href="#ActionForward-java-생성" class="headerlink" title="ActionForward.java 생성"></a><code>ActionForward.java</code> 생성</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">ActionForward</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="comment">//1.외부접근 못하도록 이동할 페이지와 이동할 방식 멤버변수 생성</span></span><br><span class="line"><span class="keyword">private</span> String path;</span><br><span class="line"><span class="keyword">private</span> <span class="keyword">boolean</span> isRedirect;</span><br><span class="line"><span class="comment">// true면 sendRedirect방식으로 이동</span></span><br><span class="line"><span class="comment">//사용처: 주소와 화면의 전환이 동시에 일어날때 (가상주소 -&gt; 가상주소로 )</span></span><br><span class="line"><span class="comment">// false면  forward방식으로 이동</span></span><br><span class="line"><span class="comment">//사용처: 주소는 그대로인데 화면이 바뀔때 (가상주소에서 jsp보여줌)</span></span><br><span class="line"><span class="comment">//2. getter setter생성</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> String <span class="title">getPath</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="keyword">return</span> path;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setPath</span><span class="params">(String path)</span> </span>&#123;</span><br><span class="line"><span class="keyword">this</span>.path = path;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">isRedirect</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="keyword">return</span> isRedirect;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setRedirect</span><span class="params">(<span class="keyword">boolean</span> isRedirect)</span> </span>&#123;</span><br><span class="line"><span class="keyword">this</span>.isRedirect = isRedirect;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//3.toString</span></span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> String <span class="title">toString</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="keyword">return</span> <span class="string">"ActionForward [path="</span> + path + <span class="string">", isRedirect="</span> + isRedirect + <span class="string">"]"</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><br><br><br></p><h2 id="AdminOrderDAO-java-인터페이스-생성"><a href="#AdminOrderDAO-java-인터페이스-생성" class="headerlink" title="AdminOrderDAO.java 인터페이스 생성"></a><code>AdminOrderDAO.java</code> 인터페이스 생성</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">AdminOrderDAO</span> </span>&#123;</span><br><span class="line"><span class="comment">// 인터페이스안의 추상메서드이기때문에  </span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 관리자가 주문목록을 확인하는 기능 getAdminOrderList()</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> List <span class="title">getAdminOrderList</span><span class="params">()</span></span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><br><br><br></p><h2 id="AdminOrderDAOImpl-java-클래스-생성"><a href="#AdminOrderDAOImpl-java-클래스-생성" class="headerlink" title="AdminOrderDAOImpl.java 클래스 생성"></a><code>AdminOrderDAOImpl.java</code> 클래스 생성</h2><ul><li>위에서 만든 인터페이스를 상속받아서 DAO클래스를 만든다.</li><li>DB연결메서드 생성</li><li>자원해제 메서드 생성</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">AdminOrderDAOImpl</span> <span class="keyword">implements</span> <span class="title">AdminOrderDAO</span> </span>&#123;</span><br><span class="line">Connection con = <span class="keyword">null</span>;</span><br><span class="line">PreparedStatement pstmt = <span class="keyword">null</span>;</span><br><span class="line">ResultSet rs = <span class="keyword">null</span>;</span><br><span class="line">String sql = <span class="string">""</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 디비 연결</span></span><br><span class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">getCon</span><span class="params">()</span> <span class="keyword">throws</span> Exception</span>&#123;</span><br><span class="line"><span class="comment">// 커넥션 풀</span></span><br><span class="line">Context init = <span class="keyword">new</span> InitialContext();</span><br><span class="line">DataSource ds = (DataSource) init.lookup(<span class="string">"java:comp/env/jdbc/model2DB"</span>);</span><br><span class="line">con = ds.getConnection();</span><br><span class="line">System.out.println(<span class="string">"DAO : 디비연결 완료 "</span>+con);</span><br><span class="line">&#125;<span class="comment">//end of getCon()</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 디비 자원해제</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">closeDB</span><span class="params">()</span></span>&#123;</span><br><span class="line"><span class="keyword">try</span> &#123;</span><br><span class="line"><span class="keyword">if</span>(rs != <span class="keyword">null</span>) &#123;rs.close();&#125;</span><br><span class="line"><span class="keyword">if</span>(pstmt != <span class="keyword">null</span>) &#123;pstmt.close(); &#125;</span><br><span class="line"><span class="keyword">if</span>(con != <span class="keyword">null</span>) &#123;con.close(); &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">catch</span> (SQLException e) &#123;</span><br><span class="line">e.printStackTrace();</span><br><span class="line">&#125; </span><br><span class="line">&#125;<span class="comment">//end of closeDB()</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content:encoded>
      
      
      <category domain="https://sowon-dev.github.io/categories/JSP/">JSP</category>
      
      
      <category domain="https://sowon-dev.github.io/tags/TIL/">TIL</category>
      
      <category domain="https://sowon-dev.github.io/tags/ITWILL-JAVA/">ITWILL(JAVA)</category>
      
      
      <comments>https://sowon-dev.github.io/2020/09/23/200923jspi/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>옵션메뉴, 컨텍스트메뉴, 토스트</title>
      <link>https://sowon-dev.github.io/2020/09/23/200923and-2/</link>
      <guid>https://sowon-dev.github.io/2020/09/23/200923and-2/</guid>
      <pubDate>Wed, 23 Sep 2020 03:03:19 GMT</pubDate>
      
      <description>&lt;h2 id=&quot;메뉴&quot;&gt;&lt;a href=&quot;#메뉴&quot; class=&quot;headerlink&quot; title=&quot;메뉴&quot;&gt;&lt;/a&gt;메뉴&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;사용자가 여러 개 중 하나를 선택하도록 하여 사용자의 명령을 받아들이는 간편한 방식.&lt;/li&gt;
&lt;li&gt;안드로이드메뉴 종류 : 옵션메뉴, 컨텍스트 메뉴&lt;/li&gt;
&lt;li&gt;종류별로 xml과 함께이용하거나 xml없이 자바코드만으로도 만들 수 있다</description>
      
      
      
      <content:encoded><![CDATA[<h2 id="메뉴"><a href="#메뉴" class="headerlink" title="메뉴"></a>메뉴</h2><ul><li>사용자가 여러 개 중 하나를 선택하도록 하여 사용자의 명령을 받아들이는 간편한 방식.</li><li>안드로이드메뉴 종류 : 옵션메뉴, 컨텍스트 메뉴</li><li>종류별로 xml과 함께이용하거나 xml없이 자바코드만으로도 만들 수 있다<a id="more"></a></li></ul><h3 id="옵션메뉴-xml이용"><a href="#옵션메뉴-xml이용" class="headerlink" title="옵션메뉴 : xml이용"></a>옵션메뉴 : xml이용</h3><ul><li>키패드의 메뉴 버튼을 누를때 나타난다</li><li>작성 순서<ol><li><code>res</code>에 menu폴더와 menu1.xml파일 생성 후 메뉴 코딩</li><li>자바코딩 : onCreateOptionMenu()메소드 오버라이딩</li><li>자바코딩 : onOptionItemSelected() 메소드 오버라이딩</li></ol></li></ul><p><img src="https://blog.kakaocdn.net/dn/utf31/btqvEHplMmn/D7nze9mMvmmjwmHX3bPdt0/img.png" alt="https://lktprogrammer.tistory.com/161"></p><ul><li><a href="https://lktprogrammer.tistory.com/161">위의 예제코드 보기: 안드로이드 - 옵션 메뉴 (Option Menu) 구현 방법 - Lkt_Programmer</a></li></ul><p><br><br><br></p><h3 id="컨텍스트-메뉴-xml이용"><a href="#컨텍스트-메뉴-xml이용" class="headerlink" title="컨텍스트 메뉴 : xml이용"></a>컨텍스트 메뉴 : xml이용</h3><ul><li>위젯을 롱클릭했을때 화면 중앙에 나타난다.</li><li>windows 팝업창과 비슷</li><li>작성순서<ol><li><code>res</code>에 menu폴더와 menu1.xml파일 생성 후 메뉴 코딩</li><li>자바코딩 : onCreate()안에 registerForContextMenu()로 위젯등록</li><li>자바코딩 : onCreateContextMenu()메소드 오버라이딩<ul><li>위젯별로 별도의 파일을 만들어야한다.</li><li>if문을 통해 위젯별 컨텍스트 메뉴를 등록해야한다.</li></ul></li><li>자바코딩 : onContextItemSelected() 메소드 오버라이딩</li></ol></li></ul><p><img src="/img/200923contextmenu1.PNG" alt=""></p><p><img src="/img/200923contextmenu2.PNG" alt=""></p><h4 id="activity-main-xml-코드-작성"><a href="#activity-main-xml-코드-작성" class="headerlink" title="activity_main.xml 코드 작성"></a><code>activity_main.xml</code> 코드 작성</h4><ul><li>소스코드 생략</li></ul><h4 id="menu1-xml-생성-및-코드작성"><a href="#menu1-xml-생성-및-코드작성" class="headerlink" title="menu1.xml 생성 및 코드작성"></a><code>menu1.xml</code> 생성 및 코드작성</h4><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">menu</span> <span class="attr">xmlns:android</span>=<span class="string">"http://schemas.android.com/apk/res/android"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">item</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:id</span>=<span class="string">"@+id/itemRed"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:title</span>=<span class="string">"빨간 배경"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">item</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">item</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:id</span>=<span class="string">"@+id/itemBlue"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:title</span>=<span class="string">"파란 배경"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">item</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">item</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:id</span>=<span class="string">"@+id/itemRGreen"</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:title</span>=<span class="string">"초록 배경"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">item</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">item</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:id</span>=<span class="string">"@+id/itemOrig"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:title</span>=<span class="string">"배경 초기화"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">item</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">menu</span>&gt;</span></span><br></pre></td></tr></table></figure><h4 id="menu2-xml-생성-및-코드작성"><a href="#menu2-xml-생성-및-코드작성" class="headerlink" title="menu2.xml 생성 및 코드작성"></a><code>menu2.xml</code> 생성 및 코드작성</h4><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">menu</span> <span class="attr">xmlns:android</span>=<span class="string">"http://schemas.android.com/apk/res/android"</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">item</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:id</span>=<span class="string">"@+id/subRotate"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:title</span>=<span class="string">"버튼 90도 회전"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">item</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">item</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:id</span>=<span class="string">"@+id/subSize"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:title</span>=<span class="string">"버튼 3배로 확대"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">item</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">item</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:id</span>=<span class="string">"@+id/subSize2"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:title</span>=<span class="string">"버튼 원래대로"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">item</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">menu</span>&gt;</span></span><br></pre></td></tr></table></figure><h4 id="MainActivity-java-자바코딩"><a href="#MainActivity-java-자바코딩" class="headerlink" title="MainActivity.java 자바코딩"></a><code>MainActivity.java</code> 자바코딩</h4><ul><li>전역변수 생략</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">onCreate</span><span class="params">(Bundle savedInstanceState)</span> </span>&#123;</span><br><span class="line"><span class="keyword">super</span>.onCreate(savedInstanceState);</span><br><span class="line">setContentView(R.layout.activity_main);</span><br><span class="line">setTitle(<span class="string">"배경색바꾸기(컨텍스트 메뉴활용)"</span>);</span><br><span class="line">baseLayout = (LinearLayout) findViewById(R.id.baseLayout);</span><br><span class="line">button1 = (Button) findViewById(R.id.button1);</span><br><span class="line">button2 = (Button) findViewById(R.id.button2);</span><br><span class="line"><span class="comment">//버튼 2개를 컨택스트메뉴에 등록하기</span></span><br><span class="line">registerForContextMenu(button1);</span><br><span class="line">registerForContextMenu(button2);</span><br><span class="line">&#125;<span class="comment">//end of onCreate()</span></span><br><span class="line"></span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onCreateContextMenu</span><span class="params">(ContextMenu menu, View v,</span></span></span><br><span class="line"><span class="function"><span class="params">ContextMenu.ContextMenuInfo menuInfo)</span> </span>&#123;</span><br><span class="line"><span class="comment">//view는 롱클릭한 위젯</span></span><br><span class="line"><span class="keyword">super</span>.onCreateContextMenu(menu, v, menuInfo);</span><br><span class="line">MenuInflater mi = getMenuInflater();</span><br><span class="line"><span class="keyword">if</span>(v == button1)&#123;</span><br><span class="line">menu.setHeaderTitle(<span class="string">"배경색 변경"</span>);</span><br><span class="line">mi.inflate(R.menu.menu1, menu);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> (v == button2)&#123;</span><br><span class="line">mi.inflate(R.menu.menu2, menu);</span><br><span class="line">&#125;</span><br><span class="line">&#125;<span class="comment">//end of ContextMenu()</span></span><br><span class="line"></span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">onContextItemSelected</span><span class="params">(@NonNull MenuItem item)</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="keyword">switch</span> (item.getItemId())&#123;</span><br><span class="line"><span class="keyword">case</span> R.id.itemRed: baseLayout.setBackgroundColor(Color.RED);</span><br><span class="line"><span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line"><span class="keyword">case</span> R.id.itemBlue: baseLayout.setBackgroundColor(Color.BLUE);</span><br><span class="line"><span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line"><span class="keyword">case</span> R.id.itemRGreen: baseLayout.setBackgroundColor(Color.GREEN);</span><br><span class="line"><span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line"><span class="keyword">case</span> R.id.itemOrig: baseLayout.setBackgroundColor(Color.TRANSPARENT);</span><br><span class="line"><span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line"><span class="keyword">case</span> R.id.subRotate: button2.setRotation(<span class="number">90</span>);</span><br><span class="line"><span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line"><span class="keyword">case</span> R.id.subSize: button2.setScaleX(<span class="number">3</span>);</span><br><span class="line"><span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line"><span class="keyword">case</span> R.id.subSize2:</span><br><span class="line">button2.setScaleX(<span class="number">1</span>);</span><br><span class="line">button2.setRotation(<span class="number">0</span>);</span><br><span class="line"><span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><br><br><br></p><h2 id="인플레이터-Inflater"><a href="#인플레이터-Inflater" class="headerlink" title="인플레이터(Inflater)"></a>인플레이터(Inflater)</h2><blockquote><p>인플레이터는 자전거 등의 공기 펌프라는 뜻으로 풍선에 바람을 넣어서 실제 객체를 만들어 사용한다는 의미이다.<br>정적으로 존재하는 xml을 java코드에서 가져와서 실제 객체로 만들어 사용하는 것이다.<br>메뉴 인플레이터 : 메뉴xml파일을 java코드에 가져와 사용하는 것<br>레이아웃 인플레이터 : 레이아웃xml을 java코드에 가져와 사용하는 것<br>출처 : Android Studio를 활용한 안드로이드 프로그래밍 5판 p287</p></blockquote><p><br><br><br></p><h2 id="토스트"><a href="#토스트" class="headerlink" title="토스트"></a>토스트</h2><ul><li>화면에 잠깐 나타났다가 사라지는 메시지</li><li>기본적인 사용형태<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Toast.makeText(Context context, String message, <span class="keyword">int</span> duratioin).show();</span><br></pre></td></tr></table></figure></li><li>duratioin 속성 : LENGTH_SHORT와 LENGTH_LONG 둘 중 하나를 사용</li><li>setGravity(int gravity, int xOffset, int yOffset) 메서드<ul><li>gravity 선택값 : TOP, LEFT, RIGTH, BOTTOM, CENTER</li><li>Offset은 떨어진 거리를 나타냄</li></ul></li></ul><p><img src="/img/200923toastex.gif" alt=""></p><h3 id="activity-main-xml-코드-작성-1"><a href="#activity-main-xml-코드-작성-1" class="headerlink" title="activity_main.xml 코드 작성"></a><code>activity_main.xml</code> 코드 작성</h3><ul><li>소스코드 생략</li></ul><h3 id="toast2-xml-생성-및-코드-작성"><a href="#toast2-xml-생성-및-코드-작성" class="headerlink" title="toast2.xml 생성 및 코드 작성"></a><code>toast2.xml</code> 생성 및 코드 작성</h3><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">LinearLayout</span> <span class="attr">xmlns:android</span>=<span class="string">"http://schemas.android.com/apk/res/android"</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:orientation</span>=<span class="string">"vertical"</span> <span class="attr">android:layout_width</span>=<span class="string">"match_parent"</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:layout_height</span>=<span class="string">"match_parent"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">ImageView</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:src</span>=<span class="string">"@drawable/oreo"</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:layout_width</span>=<span class="string">"wrap_content"</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:layout_height</span>=<span class="string">"100dp"</span>/&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">LinearLayout</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="MainActivity-java-자바코딩-1"><a href="#MainActivity-java-자바코딩-1" class="headerlink" title="MainActivity.java 자바코딩"></a><code>MainActivity.java</code> 자바코딩</h3><ul><li>전역변수 생략</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">onCreate</span><span class="params">(Bundle savedInstanceState)</span> </span>&#123;</span><br><span class="line"><span class="keyword">super</span>.onCreate(savedInstanceState);</span><br><span class="line">setContentView(R.layout.activity_main);</span><br><span class="line">setTitle(<span class="string">"사용자 정보 입력"</span>);</span><br><span class="line">tvName = (TextView) findViewById(R.id.tvName);</span><br><span class="line">tvEmail = (TextView) findViewById(R.id.tvEmail);</span><br><span class="line">btn1 = (Button) findViewById(R.id.btn1);</span><br><span class="line"></span><br><span class="line">btn1.setOnClickListener(<span class="keyword">new</span> View.OnClickListener() &#123;</span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onClick</span><span class="params">(View v)</span> </span>&#123;</span><br><span class="line">dlgV = (View) View.inflate(MainActivity.<span class="keyword">this</span>, R.layout.dialog, <span class="keyword">null</span>);</span><br><span class="line">AlertDialog.Builder dlg = <span class="keyword">new</span> AlertDialog.Builder(MainActivity.<span class="keyword">this</span>);</span><br><span class="line">dlg.setTitle(<span class="string">"사용자 정보 입력"</span>);</span><br><span class="line">dlg.setIcon(R.drawable.ic_menu_allfriends);</span><br><span class="line">dlg.setView(dlgV);</span><br><span class="line">dlg.setPositiveButton(<span class="string">"확인"</span>, <span class="keyword">new</span> DialogInterface.OnClickListener() &#123;</span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onClick</span><span class="params">(DialogInterface dialog, <span class="keyword">int</span> which)</span> </span>&#123;</span><br><span class="line">dlgEdtName = (EditText) dlgV.findViewById(R.id.dlgEdt1);</span><br><span class="line">dlgEdtEmail = (EditText) dlgV.findViewById(R.id.dlgEdt2);</span><br><span class="line">tvName.setText(dlgEdtName.getText().toString());</span><br><span class="line">tvEmail.setText(dlgEdtEmail.getText().toString());</span><br><span class="line">&#125;</span><br><span class="line">&#125;);</span><br><span class="line">dlg.setNegativeButton(<span class="string">"취소"</span>, <span class="keyword">new</span> DialogInterface.OnClickListener() &#123;</span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onClick</span><span class="params">(DialogInterface dialog, <span class="keyword">int</span> which)</span> </span>&#123;</span><br><span class="line">Toast toast = <span class="keyword">new</span> Toast(MainActivity.<span class="keyword">this</span>);</span><br><span class="line">toastV = (View) View.inflate(MainActivity.<span class="keyword">this</span>,</span><br><span class="line">R.layout.toast1, <span class="keyword">null</span>);</span><br><span class="line">toastText = (TextView) toastV.findViewById(R.id.toastText1);</span><br><span class="line">toastText.setText(<span class="string">"취소했습니다"</span>);</span><br><span class="line">toast.setView(toastV);</span><br><span class="line">toast.show();</span><br><span class="line">&#125;</span><br><span class="line">&#125;);</span><br><span class="line">dlg.show();</span><br><span class="line">&#125;</span><br><span class="line">&#125;);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content:encoded>
      
      
      <category domain="https://sowon-dev.github.io/categories/Android/">Android</category>
      
      
      <category domain="https://sowon-dev.github.io/tags/TIL/">TIL</category>
      
      <category domain="https://sowon-dev.github.io/tags/ITWILL-JAVA/">ITWILL(JAVA)</category>
      
      
      <comments>https://sowon-dev.github.io/2020/09/23/200923and-2/#disqus_thread</comments>
      
    </item>
    
  </channel>
</rss>
