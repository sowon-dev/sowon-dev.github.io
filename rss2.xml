<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0"
  xmlns:atom="http://www.w3.org/2005/Atom"
  xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>야망찬 개발자의 블로그</title>
    <link>https://sowon-dev.github.io/</link>
    
    <atom:link href="https://sowon-dev.github.io/rss2.xml" rel="self" type="application/rss+xml"/>
    
    <description></description>
    <pubDate>Thu, 10 Dec 2020 09:57:22 GMT</pubDate>
    <generator>http://hexo.io/</generator>
    
    <item>
      <title>JDC 첨단과학단지 입주기업과 함께하는 디지털잡페어</title>
      <link>https://sowon-dev.github.io/2020/12/09/201210digitalJobFair/</link>
      <guid>https://sowon-dev.github.io/2020/12/09/201210digitalJobFair/</guid>
      <pubDate>Wed, 09 Dec 2020 22:48:40 GMT</pubDate>
      
      <description>&lt;h2 id=&quot;디지털잡페어-소개&quot;&gt;&lt;a href=&quot;#디지털잡페어-소개&quot; class=&quot;headerlink&quot; title=&quot;디지털잡페어 소개&quot;&gt;&lt;/a&gt;디지털잡페어 소개&lt;/h2&gt;&lt;p&gt;&lt;img src=&quot;https://www.jeju-sp.com/files/editor/aea51e21-8c0d-40f5-9c09-6c6d69cc2838.gif&quot; alt=&quot;&quot;&gt;&lt;/p&gt;</description>
      
      
      
      <content:encoded><![CDATA[<h2 id="디지털잡페어-소개"><a href="#디지털잡페어-소개" class="headerlink" title="디지털잡페어 소개"></a>디지털잡페어 소개</h2><p><img src="https://www.jeju-sp.com/files/editor/aea51e21-8c0d-40f5-9c09-6c6d69cc2838.gif" alt=""></p><a id="more"></a><p><br><br><br></p><h2 id="후기"><a href="#후기" class="headerlink" title="후기"></a>후기</h2><p>이 좋은 잡페어를 왜 많은 예비 개발자들이 안 듣는 걸까?<br>정말 귀중한 시간이었다.<br>특히 다른 사람의 포트폴리오를 볼 수 있는 경험이 신입 개발자로선 쉽지않은데 포트폴리오를 페이스북과 아마존다니는 개발자분들이 리뷰와 첨삭까지 해주신다. 정말 많이 배울 수 있었다.<br>나도 용기낼까하다가 망설였는데 용기내서 신청하신 분도 정말 대단하다! 싸피하시는 거 같던데 역시 잘하시는 분이었어…..</p><p>민창현연사님의 직업을 대하는 자세가 인샆깊었다. 그는 사용자가 원하는 것을 어떻게 잘 제공할 수 있는지를 많이 생각한다고 했다. 난 지금은 내가 필요해서 웹클리핑프로젝트를 진행중인데 다음에는 더 많은 고객의 니즈를 제공할 수 있는 사이트를 만들고 싶다.</p><p>이준호대표님은 회사는 제너럴리스트보단 스페셜리스트를 더 찾는다며 그 이유를 설명해주셨는데 그 설명이 참 와닿았다. 스페셜리스트가 되기위해 노력해야겠다.</p><p>마지막에 이호준대표님이 해주신 말은 공감을 넘어 참 감동적이었다.</p><blockquote><p>보석이 흙속에 묻혀있다고해서 보석이 아닌게 아닙니다.<br>여러분이 취업이 잘 안되는 것은 시대가 그런 것이지 여러분의 탓이 아닙니다. 취업이 안된다고 좌절하지 않으셨으면 좋겠습니다.<br>by 바울랩 이호준대표</p></blockquote><p>이호준대표님은 제코베에서 뵙고 완전 팬이 되어버렸다. 세상에 이렇게 따뜻한 사장님도 있구나 하는 생각이 들었다.<br>정말 직원을 생각하고 또 배움을 원하는 사람들을 성심성의껏 도와주시는 분이다.<br>참 의미 있는 삶이다. 나도 그렇게 살고싶다.<br>내 직업이 남에게 직접적으로 도움이 되는 삶.<br>정말 직업만족도 최상일 듯!</p><p><br><br><br></p><h2 id="강연내용-중-인상깊었던-내용"><a href="#강연내용-중-인상깊었던-내용" class="headerlink" title="강연내용 중 인상깊었던 내용"></a>강연내용 중 인상깊었던 내용</h2><h2 id="Q-주니어-레벨에게-바라는-점"><a href="#Q-주니어-레벨에게-바라는-점" class="headerlink" title="Q. 주니어 레벨에게 바라는 점"></a>Q. 주니어 레벨에게 바라는 점</h2><ul><li>&lt;바울랩 이호준대표&gt;<blockquote><p>사실과 의견을 구분할 수 있는 솔직함이 중요하다<br>상황을 예로 들자면 주니어 개발자분에게 프로젝트 시작했는 지라고 물었을때 아직 안 했다면 안했다고 솔직하게 답변하는 분이 좋다.<br>조직이 필요한 일을 아직까지 안했다고 안좋게 생각할 수 있지만 시작하지않았다고 솔직하게 말함으로써 앞으로 어떻게 해야할지 대표입장에서 플래닝할 수 있기때문이다.</p></blockquote></li></ul><ul><li>&lt;재이랩스 이준호대표&gt;<blockquote><p>스타트업은 열정있는 주니어 개발자분이 좋다. 몸사리기보단 의견이 부딪히더라도 자신의 의견을 피력해야한다. 열정있는 분은 제재라도 시킬 수 있지만 열정이 없는 분은 열정을 끌어올려드릴수가없다.</p></blockquote></li></ul><ul><li>&lt;아마존 민창현 개발자&gt;<blockquote><p>최근 주니어에 대한 부정적인 일을 겪고있다. 조직은 프로젝트 플래닝을 하고 난이도에 따라 업무분장을 한다. 주니어에게 적당한 난이도의 업무를 줬는데 한 번도 해본적없어서 못하겠다고 했다. -&gt; 주니어레벨에 잘 할 수 있는 일을 플래닝해서줬음에도 못하겠다는 말을 들었을때 굉장히 힘들었다.<br>자신에게 주어진 일을 잘 맡아서 해줬으면 좋겠다. 만약 못하겠다면 팀장이나 시니어와 면담을 해서 조직에 해가 되지않도록 조치해야한다.<br>또 회의때 주니어는 자신의 의견을 잘 내지못한다. 만약 주니어가 팀회의에서 적절한 자신의 의견을 낸다면 이 사람이 얼마나 공부했는 지를 느낄수있어서 좋다.</p></blockquote></li></ul><ul><li>&lt;페이스북 김종욱개발자&gt;<blockquote><p>페이스북은 4개 축으로 인턴을 평가하여 입사제의를 한다. 코딩실력, 문제해결능력, 학습속도 등이 있다. 이 중 주니어레벨에서 가장 중요한 것은 학습속도라고 생각한다. 기술은 진화하고 변화한다. 필요한 기술을 얼마나 빨리 익히는 지가 중요하다. 더불어 질문을 잘 하는 것도 중요하다. 모르는 부분을 직면했을때마다 물어보는 것이 아니라 하루이상 고민했던 질문만 시니어에게 물어보는 것이 좋다.</p></blockquote></li></ul><p><br><br><br></p><h2 id="Q-해외취업-계기"><a href="#Q-해외취업-계기" class="headerlink" title="Q. 해외취업 계기"></a>Q. 해외취업 계기</h2><ul><li>&lt;아마존 민창현 개발자&gt;<blockquote><p>개발자들이 모여서 개발자영어스터디를 하는데 그곳에서 정보를 얻고 아마존 하이어링이벤트에 참여하게 되었다.</p></blockquote></li></ul><p>이전에 민창현님 강연을 들은 적이 있어서 어떤 식으로 창현님이 입사하셨는지 잘 알고있다. 정말 좋은 강연이었다. 이번에도 역시 좋은 말씀 많이 해주셔서 많이 배웠다.<br><a href="https://sowon-dev.github.io/2020/10/03/201004amazon/">민창현님 Amazon 개발자가 말해주는 해외취업 웨비나 후기 바로가기</a></p><ul><li>&lt;페이스북 김종욱개발자&gt;<blockquote><p>네이버 다니는 중에 구글 면접을 보고 재택으로 일하는 걸 찾다가 페이스북에서 연락이 와서<br>페이스북코리아 1년이상 다니다가 글로벌지사로 옮기게되었다.<br>글로벌회사들은 채용절차가 정형화되어있기때문에 미리 준비를 할 수 있다. 따라서 한 번 시도해보는 것이 제일 중요하다.<br>해외기업은 한국기업보다 다양성을 더욱 존중하기때문에 여성분들도 꼭 도전했으면 좋겠다.</p></blockquote></li></ul>]]></content:encoded>
      
      
      <category domain="https://sowon-dev.github.io/categories/Lectures-Seminars/">Lectures &amp; Seminars</category>
      
      
      <category domain="https://sowon-dev.github.io/tags/Review/">Review</category>
      
      
      <comments>https://sowon-dev.github.io/2020/12/09/201210digitalJobFair/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>dataStructureList전체목록List</title>
      <link>https://sowon-dev.github.io/2020/12/06/dataStructureList/</link>
      <guid>https://sowon-dev.github.io/2020/12/06/dataStructureList/</guid>
      <pubDate>Sun, 06 Dec 2020 19:11:56 GMT</pubDate>
      
      <description>&lt;h2 id=&quot;🗃️생활코딩-자료구조&quot;&gt;&lt;a href=&quot;#🗃️생활코딩-자료구조&quot; class=&quot;headerlink&quot; title=&quot;🗃️생활코딩 자료구조&quot;&gt;&lt;/a&gt;🗃️생활코딩 자료구조&lt;/h2&gt;&lt;ol&gt;
&lt;li&gt;&lt;a href=&quot;https://sowon-dev.github.io/2020/12/06/201207dataStructure1/&quot;&gt;자료구조와 알고리즘 차이, 배열&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;</description>
      
      
      
      <content:encoded><![CDATA[<h2 id="🗃️생활코딩-자료구조"><a href="#🗃️생활코딩-자료구조" class="headerlink" title="🗃️생활코딩 자료구조"></a>🗃️생활코딩 자료구조</h2><ol><li><a href="https://sowon-dev.github.io/2020/12/06/201207dataStructure1/">자료구조와 알고리즘 차이, 배열</a></li></ol><a id="more"></a><h2 id="🗃️ITWILL자료구조"><a href="#🗃️ITWILL자료구조" class="headerlink" title="🗃️ITWILL자료구조"></a>🗃️ITWILL자료구조</h2><ol><li><a href="https://sowon-dev.github.io/2020/07/15/200716jspi2/">자료구조1 : Collections Framwork(Set계열, List계열)</a></li><li><a href="https://sowon-dev.github.io/2020/07/19/200720jspi/">자료구조2 : Stack클래스, Queue인터페이스, Map인터페이스</a></li></ol>]]></content:encoded>
      
      
      <category domain="https://sowon-dev.github.io/categories/Algorithm/">Algorithm</category>
      
      
      <category domain="https://sowon-dev.github.io/tags/List/">List</category>
      
      <category domain="https://sowon-dev.github.io/tags/DataStructure/">DataStructure</category>
      
      
      <comments>https://sowon-dev.github.io/2020/12/06/dataStructureList/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>[자료구조DataStructure]자료구조와 알고리즘 차이, 배열</title>
      <link>https://sowon-dev.github.io/2020/12/06/201207dataStructure1/</link>
      <guid>https://sowon-dev.github.io/2020/12/06/201207dataStructure1/</guid>
      <pubDate>Sun, 06 Dec 2020 19:05:15 GMT</pubDate>
      
      <description>&lt;h2 id=&quot;자료구조와-알고리즘&quot;&gt;&lt;a href=&quot;#자료구조와-알고리즘&quot; class=&quot;headerlink&quot; title=&quot;자료구조와 알고리즘&quot;&gt;&lt;/a&gt;자료구조와 알고리즘&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;자료구조(data structure) : 데이터를 효율적으로 사용하기 틀이다. 이러한 효율성은 시간 복잡도(time complexity)와 공간 복잡도(space complexity) 기준으로 평가된다.&lt;ul&gt;
&lt;li&gt;시간 복잡도란, 해당 자료구조의 시간 효율성의 척도이며 작을 수록 좋은 자료구조이다.&lt;/li&gt;
&lt;li&gt;공간 복잡도란, 해당 자료구조의 공간 효율성의 척도이며 작을 수록 좋은 자료구조이다.</description>
      
      
      
      <content:encoded><![CDATA[<h2 id="자료구조와-알고리즘"><a href="#자료구조와-알고리즘" class="headerlink" title="자료구조와 알고리즘"></a>자료구조와 알고리즘</h2><ul><li>자료구조(data structure) : 데이터를 효율적으로 사용하기 틀이다. 이러한 효율성은 시간 복잡도(time complexity)와 공간 복잡도(space complexity) 기준으로 평가된다.<ul><li>시간 복잡도란, 해당 자료구조의 시간 효율성의 척도이며 작을 수록 좋은 자료구조이다.</li><li>공간 복잡도란, 해당 자료구조의 공간 효율성의 척도이며 작을 수록 좋은 자료구조이다.<a id="more"></a></li></ul></li><li>알고리즘 : 어떤 값을 입력으로 받아 원하는 값으로 출력하는 잘 정의된 계산 과정이다. 알고리즘 효율성은 실험적 분석방법과 이론적 분석방법으로 분석가능하다. 이론적분석시 가장 대표적인 것이 빅오표기법이다.<ul><li>실험적 분석 : 직접 코드를 구현하는 분석방법으로 한계가 있기때문에 이론적 분석방법을 이용한다.</li><li>이론적 분석 : <a href="https://youtu.be/6Iq5iMCVsXA">빅오표기법</a></li></ul></li><li>자료구조와 알고리즘의 관계 : 효율적인 알고리즘을 만들기 위해 필요한 것이 자료구조이다.</li></ul><p><br><br><br></p><h2 id="배열"><a href="#배열" class="headerlink" title="배열"></a>배열</h2><ul><li>여러 데이터를 하나의 이름으로 그룹핑해서 관리하기 위해 사용하는 자료구조</li><li>배열의 구성 = element의 집합, element = index + value</li></ul><p><img src="https://s3.ap-northeast-2.amazonaws.com/opentutorials-user-file/module/1335/2788.gif" alt="https://opentutorials.org/module/1335/8677"></p><ul><li>특징 : 크기가 정해져있다. 기능이 없다. <ul><li>작고 가볍고 단순하다. 즉 좋은 부품으로 사용할 수 있다.</li></ul></li></ul><p><br><br><br></p><h2 id="요약"><a href="#요약" class="headerlink" title="요약"></a>요약</h2><ul><li>자료구조 : 데이터를 효율적으로 조직하는 방법</li><li>알고리즘 : 문제를 해결하는 방법</li><li>자료구조와 알고리즘의 관계 : 효율적인 알고리즘을 만들기위해 자료구조가 필요하다.</li></ul><p><br><br><br></p><h2 id="참고"><a href="#참고" class="headerlink" title="참고"></a>참고</h2><ul><li><a href="https://cloudstudying.kr/courses/23">https://cloudstudying.kr/courses/23</a></li><li><a href="https://wayhome25.github.io/cs/2017/04/17/cs-18/">https://wayhome25.github.io/cs/2017/04/17/cs-18/</a></li></ul>]]></content:encoded>
      
      
      <category domain="https://sowon-dev.github.io/categories/Algorithm/">Algorithm</category>
      
      
      <category domain="https://sowon-dev.github.io/tags/%EC%83%9D%ED%99%9C%EC%BD%94%EB%94%A9/">생활코딩</category>
      
      <category domain="https://sowon-dev.github.io/tags/DataStructure/">DataStructure</category>
      
      
      <comments>https://sowon-dev.github.io/2020/12/06/201207dataStructure1/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>[자바JAVA]14. Longest Common Prefix</title>
      <link>https://sowon-dev.github.io/2020/12/06/201206al-l0014/</link>
      <guid>https://sowon-dev.github.io/2020/12/06/201206al-l0014/</guid>
      <pubDate>Sun, 06 Dec 2020 05:33:34 GMT</pubDate>
      
      <description>&lt;h2 id=&quot;문제-14-Longest-Common-Prefix&quot;&gt;&lt;a href=&quot;#문제-14-Longest-Common-Prefix&quot; class=&quot;headerlink&quot; title=&quot;문제 14. Longest Common Prefix&quot;&gt;&lt;/a&gt;문제 14. Longest Common Prefix&lt;/h2&gt;&lt;p&gt;Write a function to find the longest common prefix string amongst an array of strings.&lt;br&gt;If there is no common prefix, return an empty string “”.&lt;br&gt;strs[i] consists of only lower-case English letters.&lt;/p&gt;</description>
      
      
      
      <content:encoded><![CDATA[<h2 id="문제-14-Longest-Common-Prefix"><a href="#문제-14-Longest-Common-Prefix" class="headerlink" title="문제 14. Longest Common Prefix"></a>문제 14. Longest Common Prefix</h2><p>Write a function to find the longest common prefix string amongst an array of strings.<br>If there is no common prefix, return an empty string “”.<br>strs[i] consists of only lower-case English letters.</p><a id="more"></a><ul><li>입출력예시</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//예시1</span></span><br><span class="line">Input: strs = [<span class="string">"flower"</span>,<span class="string">"flow"</span>,<span class="string">"flight"</span>]</span><br><span class="line">Output: <span class="string">"fl"</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//예시2</span></span><br><span class="line">Input: strs = [<span class="string">"dog"</span>,<span class="string">"racecar"</span>,<span class="string">"car"</span>]</span><br><span class="line">Output: <span class="string">""</span></span><br><span class="line">Explanation: There is no common prefix among the input strings.</span><br></pre></td></tr></table></figure><p><br><br><br></p><h2 id="풀이-코드"><a href="#풀이-코드" class="headerlink" title="풀이 코드"></a>풀이 코드</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">longestCommonPrefix</span><span class="params">(String[] strs)</span> </span>&#123;</span><br><span class="line">        String prefix=<span class="string">""</span>;</span><br><span class="line">        <span class="keyword">if</span>(strs.length == <span class="number">0</span>) <span class="keyword">return</span> prefix;</span><br><span class="line">        prefix = strs[<span class="number">0</span>];</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>; i&lt;strs.length; i++)&#123;</span><br><span class="line">            String cur = strs[i];</span><br><span class="line">            <span class="keyword">while</span>(cur.indexOf(prefix) != <span class="number">0</span>)&#123;</span><br><span class="line">                prefix = prefix.substring(<span class="number">0</span>, prefix.length()-<span class="number">1</span>);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> prefix;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><br><br><br></p><h2 id="배운-지식"><a href="#배운-지식" class="headerlink" title="배운 지식"></a>배운 지식</h2><p><a href="https://beginnersbook.com/2013/12/java-string-indexof-method-example/">indexOf()</a>를 사용할 생각을 못했다.<br>indexOf()는 주어진 요소가 배열에 있다면 <code>그 첫번째 인덱스 값</code>를 반환하고 없으면 <code>-1</code>을 반환한다.</p><p>아래 3가지 모두 <code>0</code>을 리턴한다.</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">"ant"</span>.indexOf(<span class="string">"ant"</span>) =&gt; <span class="number">0</span></span><br><span class="line"><span class="string">"ant"</span>.indexOf(<span class="string">"an"</span>) =&gt; <span class="number">0</span></span><br><span class="line"><span class="string">"ant"</span>.indexOf(<span class="string">"a"</span>) =&gt; <span class="number">0</span></span><br></pre></td></tr></table></figure><p>strs[0]전체를 prefix로 두고 만약 strs[1]과 일치하지 않는다면 strs[0]의 마지막 char를 지워나가는 방식이다.<br>예를 들어 strs배열이 아래와 같다고 하자.</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">strs[<span class="number">0</span>] = <span class="string">"flower"</span></span><br><span class="line">strs[<span class="number">1</span>] = <span class="string">"flow"</span></span><br><span class="line">strs[<span class="number">2</span>] = <span class="string">"flight"</span></span><br></pre></td></tr></table></figure><ol><li><p>for문 시작 i=1일때,<br>flow에 <code>flower</code>가 속해있지않다. -&gt; prefix에서 <code>flower</code>의 마지막 char인 <code>r</code>을 제거 -&gt; 다시 while문<br>flow에 <code>flowe</code>가 속해있지않다. -&gt; prefix에서 <code>flowe</code>의 마지막 char인 <code>e</code>를 제거 -&gt; 다시 while문<br>flow에 <code>flow</code>가 0번째로 속해있다. -&gt; prefix는 <code>flow</code>가 되고 while문 종료</p></li><li><p>for문 시작 i=2일때,<br>flight에 <code>flow</code>가 속해있지않다. -&gt; prefix에서 <code>flow</code>의 마지막 char인 <code>w</code>을 제거 -&gt; 다시 while문<br>flight에 <code>flo</code>가 속해있지않다. -&gt; prefix에서 <code>flo</code>의 마지막 char인 <code>o</code>를 제거 -&gt; 다시 while문<br>flight에 <code>fl</code>가 0번째로 속해있다. -&gt; prefix는 <code>fl</code>가 되고 while문 종료</p></li></ol><p>항상 생각의 전환을 하자. 항상 더 나은 코드가 있다.</p><p><br><br><br></p><h2 id="다른-문제-풀이가-보고싶다면"><a href="#다른-문제-풀이가-보고싶다면" class="headerlink" title="다른 문제 풀이가 보고싶다면?"></a>다른 문제 풀이가 보고싶다면?</h2><ul><li><a href="https://github.com/sowon-dev/AlgorithmStudy_Java/tree/master/src/leetcodeEasyLevel">모든 릿코드(LeetCode)(leetcode) java 풀이</a></li></ul>]]></content:encoded>
      
      
      <category domain="https://sowon-dev.github.io/categories/Algorithm/">Algorithm</category>
      
      
      <category domain="https://sowon-dev.github.io/tags/Leetcode/">Leetcode</category>
      
      
      <comments>https://sowon-dev.github.io/2020/12/06/201206al-l0014/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>[자바JAVA]13. Roman to Integer</title>
      <link>https://sowon-dev.github.io/2020/12/06/201206al-l0013/</link>
      <guid>https://sowon-dev.github.io/2020/12/06/201206al-l0013/</guid>
      <pubDate>Sun, 06 Dec 2020 04:27:21 GMT</pubDate>
      
      <description>&lt;h2 id=&quot;문제-13-Roman-to-Integer&quot;&gt;&lt;a href=&quot;#문제-13-Roman-to-Integer&quot; class=&quot;headerlink&quot; title=&quot;문제 13. Roman to Integer&quot;&gt;&lt;/a&gt;문제 13. Roman to Integer&lt;/h2&gt;&lt;p&gt;Roman numerals are represented by seven different symbols: I, V, X, L, C, D and M.&lt;/p&gt;
&lt;p&gt;For example, 2 is written as II in Roman numeral, just two one’s added together. 12 is written as XII, which is simply X + II. The number 27 is written as XXVII, which is XX + V + II.&lt;/p&gt;</description>
      
      
      
      <content:encoded><![CDATA[<h2 id="문제-13-Roman-to-Integer"><a href="#문제-13-Roman-to-Integer" class="headerlink" title="문제 13. Roman to Integer"></a>문제 13. Roman to Integer</h2><p>Roman numerals are represented by seven different symbols: I, V, X, L, C, D and M.</p><p>For example, 2 is written as II in Roman numeral, just two one’s added together. 12 is written as XII, which is simply X + II. The number 27 is written as XXVII, which is XX + V + II.</p><a id="more"></a><p>Roman numerals are usually written largest to smallest from left to right. However, the numeral for four is not IIII. Instead, the number four is written as IV. Because the one is before the five we subtract it making four. The same principle applies to the number nine, which is written as IX. There are six instances where subtraction is used:</p><p>I can be placed before V (5) and X (10) to make 4 and 9.<br>X can be placed before L (50) and C (100) to make 40 and 90.<br>C can be placed before D (500) and M (1000) to make 400 and 900.<br>Given a roman numeral, convert it to an integer.</p><ul><li>입출력 예시</li></ul><p><img src="https://4.bp.blogspot.com/-nY6FyR73aBU/WpFQsvpVUBI/AAAAAAAAA3Q/U3z-quvPnSE6pv1PIqvRQUs5xSviSZ3IQCLcBGAs/s1600/15039_roman_numerals_complete.jpg" alt="https://koromoon.blogspot.com/2018/02/roman-numerals.html"></p><p><br><br><br></p><h2 id="첫번째-풀이-코드"><a href="#첫번째-풀이-코드" class="headerlink" title="첫번째 풀이 코드"></a>첫번째 풀이 코드</h2><p>입력값을 split으로 자른다음 역순으로 접근했다.<br>i를 먼저 반복문 돌린 뒤 예외사항들을 if조건문+swich case문으로 해결했다.</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">romanToInt</span><span class="params">(String s)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">int</span> result = <span class="number">0</span>;</span><br><span class="line">        String[] chars = s.split(<span class="string">""</span>);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i= chars.length-<span class="number">1</span>; i&gt;=<span class="number">0</span>; i--) &#123; </span><br><span class="line">            <span class="keyword">boolean</span> isException = <span class="keyword">false</span>;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">if</span> (i != chars.length - <span class="number">1</span>)&#123;</span><br><span class="line">                <span class="keyword">switch</span> (chars[i])&#123;</span><br><span class="line">                    <span class="keyword">case</span> <span class="string">"I"</span>:</span><br><span class="line">                        <span class="keyword">if</span> (chars[i + <span class="number">1</span>].equals(<span class="string">"V"</span>) || chars[i+<span class="number">1</span>].equals(<span class="string">"X"</span>))&#123;</span><br><span class="line">                            isException = <span class="keyword">true</span>;</span><br><span class="line">                            result -= <span class="number">1</span>;</span><br><span class="line">                        &#125;</span><br><span class="line">                        <span class="keyword">break</span>;</span><br><span class="line">                    <span class="keyword">case</span> <span class="string">"X"</span>:</span><br><span class="line">                        <span class="keyword">if</span> (chars[i + <span class="number">1</span>].equals(<span class="string">"L"</span>) || chars[i+<span class="number">1</span>].equals(<span class="string">"C"</span>))&#123;</span><br><span class="line">                            isException = <span class="keyword">true</span>;</span><br><span class="line">                            result -= <span class="number">10</span>;</span><br><span class="line">                        &#125;</span><br><span class="line">                        <span class="keyword">break</span>;</span><br><span class="line">                    <span class="keyword">case</span> <span class="string">"C"</span>:</span><br><span class="line">                        <span class="keyword">if</span> (chars[i + <span class="number">1</span>].equals(<span class="string">"D"</span>) || chars[i+<span class="number">1</span>].equals(<span class="string">"M"</span>))&#123;</span><br><span class="line">                            isException = <span class="keyword">true</span>;</span><br><span class="line">                            result -= <span class="number">100</span>;</span><br><span class="line">                        &#125;</span><br><span class="line">                        <span class="keyword">break</span>;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">if</span>(!isException)&#123;</span><br><span class="line">                <span class="keyword">switch</span> (chars[i])&#123;</span><br><span class="line">                    <span class="keyword">case</span> <span class="string">"I"</span>:</span><br><span class="line">                        result += <span class="number">1</span>;</span><br><span class="line">                        <span class="keyword">break</span>;</span><br><span class="line">                    <span class="keyword">case</span> <span class="string">"V"</span>:</span><br><span class="line">                        result += <span class="number">5</span>;</span><br><span class="line">                        <span class="keyword">break</span>;</span><br><span class="line">                    <span class="keyword">case</span> <span class="string">"X"</span>:</span><br><span class="line">                        result += <span class="number">10</span>;</span><br><span class="line">                        <span class="keyword">break</span>;</span><br><span class="line">                    <span class="keyword">case</span> <span class="string">"L"</span>:</span><br><span class="line">                        result += <span class="number">50</span>;</span><br><span class="line">                        <span class="keyword">break</span>;</span><br><span class="line">                    <span class="keyword">case</span> <span class="string">"C"</span>:</span><br><span class="line">                        result += <span class="number">100</span>;</span><br><span class="line">                        <span class="keyword">break</span>;</span><br><span class="line">                    <span class="keyword">case</span> <span class="string">"D"</span>:</span><br><span class="line">                        result += <span class="number">500</span>;</span><br><span class="line">                        <span class="keyword">break</span>;</span><br><span class="line">                    <span class="keyword">case</span> <span class="string">"M"</span>:</span><br><span class="line">                        result += <span class="number">1000</span>;</span><br><span class="line">                        <span class="keyword">break</span>;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;<span class="comment">//end of for</span></span><br><span class="line">        <span class="keyword">return</span> result;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>for문 안에 if문 그 안에 swich문 그 안에 또 if문으로 굉장히 복잡하다.<br>3번의 들여쓰기가 있다면 코드를 되돌아보라는 유명한 코딩격언이 있다.<br>따라서 다시 방법을 생각해보고 구글링해보았다.</p><p><br><br><br></p><h2 id="더-나은-풀이-코드"><a href="#더-나은-풀이-코드" class="headerlink" title="더 나은 풀이 코드"></a>더 나은 풀이 코드</h2><p>역순으로 접근하는 법은 동일하지만 삼항연산자로 훨씬 깔끔하다.<br>배열을 사용하지 않고 <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/charAt">charAt()</a>을 인덱스를 사용했다.</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">romanToInt</span><span class="params">(String s)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">int</span> num = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">int</span> len = s.length();</span><br><span class="line">        <span class="keyword">char</span> c;</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = len - <span class="number">1</span>; i &gt;= <span class="number">0</span>; i--) &#123;</span><br><span class="line">            c = s.charAt(i);</span><br><span class="line">            <span class="keyword">if</span> (c == <span class="string">'I'</span>) &#123;</span><br><span class="line">                num += (num &gt;= <span class="number">5</span> || num &gt;= <span class="number">10</span>) ? -<span class="number">1</span> : <span class="number">1</span>;</span><br><span class="line">            &#125; <span class="keyword">else</span> <span class="keyword">if</span> (c == <span class="string">'V'</span>) &#123;</span><br><span class="line">                num += <span class="number">5</span>;</span><br><span class="line">            &#125; <span class="keyword">else</span> <span class="keyword">if</span> (c == <span class="string">'X'</span>) &#123;</span><br><span class="line">                num += (num &gt;= <span class="number">50</span> || num &gt;= <span class="number">100</span>) ? -<span class="number">10</span> : <span class="number">10</span>;</span><br><span class="line">            &#125; <span class="keyword">else</span> <span class="keyword">if</span> (c == <span class="string">'L'</span>) &#123;</span><br><span class="line">                num += <span class="number">50</span>;</span><br><span class="line">            &#125; <span class="keyword">else</span> <span class="keyword">if</span> (c == <span class="string">'C'</span>) &#123;</span><br><span class="line">                num += (num &gt;= <span class="number">500</span> || num &gt;= <span class="number">1000</span>) ? -<span class="number">100</span> : <span class="number">100</span>;</span><br><span class="line">            &#125; <span class="keyword">else</span> <span class="keyword">if</span> (c == <span class="string">'D'</span>) &#123;</span><br><span class="line">                num += <span class="number">500</span>;</span><br><span class="line">            &#125; <span class="keyword">else</span> <span class="keyword">if</span> (c == <span class="string">'M'</span>) &#123;</span><br><span class="line">                num += <span class="number">1000</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> num;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><br><br><br></p><h2 id="두-코드-차이점"><a href="#두-코드-차이점" class="headerlink" title="두 코드 차이점"></a>두 코드 차이점</h2><p>두 코드에는 확실한 차이가 있다.</p><table><thead><tr><th align="center"></th><th align="center">Runtime</th><th align="center">Memory</th></tr></thead><tbody><tr><td align="center">첫번째 풀이</td><td align="center">15 ms</td><td align="center">39.8 MB</td></tr><tr><td align="center">더 나은 풀이</td><td align="center">3 ms</td><td align="center">38.8 MB</td></tr></tbody></table><p><br><br><br></p><h2 id="배운-지식"><a href="#배운-지식" class="headerlink" title="배운 지식"></a>배운 지식</h2><p>보자마자 switch case문이 생각나서 어떻게든 적용해보려고 노력했다.<br>swich case가 쉽다고 생각했는데 반복문을 대체할 수 있는 방법이 어떤 것이 있을까 생각하게되었다.<br>String이면 이 문제처럼 <a href="https://www.w3schools.com/java/ref_string_charat.asp">charAt()</a>로 접근할 수도 있다.</p><p>런타임이 5배가 차이나는 이유가 무엇일까?</p><ul><li>내가 생각한 이유<ul><li>처음 접근법은 for문 + if문 + swich문 + if문 이렇게 중첩</li><li>두번째 접근법은 for + if ~else </li></ul></li><li>멘토님이 말해주신 런타임이 5배 차이나는 이유</li></ul><blockquote><p>성능에서 차이가 발생한 점은 if - else나 switch의 조건 차이가 아니라<br>String[] chars = s.split(“”);<br>요놈 때문에 발생한 차이일거에요.<br>조건문은 아무리 깊어져도 성능에 크게 영향을 주지 않습니다</p></blockquote><p>멘토님이 자료구조에 대해 더 공부하면 좋겠다고 말씀해주셨다.<br><strong>자료구조는 기본소양!이니까</strong><br>자료구조 항상 어려워서 어떻게 공부하면 좋을까 생각만하고있었다.<br>찾아보니 교과서인 생활코딩에서 자료구조 입문강의가 있었다. 이를 함께 공부해야겠다.</p><p><br><br><br></p><h2 id="다른-문제-풀이가-보고싶다면"><a href="#다른-문제-풀이가-보고싶다면" class="headerlink" title="다른 문제 풀이가 보고싶다면?"></a>다른 문제 풀이가 보고싶다면?</h2><ul><li><a href="https://github.com/sowon-dev/AlgorithmStudy_Java/tree/master/src/leetcodeEasyLevel">모든 릿코드(LeetCode)(leetcode) java 풀이</a></li></ul>]]></content:encoded>
      
      
      <category domain="https://sowon-dev.github.io/categories/Algorithm/">Algorithm</category>
      
      
      <category domain="https://sowon-dev.github.io/tags/Leetcode/">Leetcode</category>
      
      
      <comments>https://sowon-dev.github.io/2020/12/06/201206al-l0013/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>DevOps와 CI/CD차이</title>
      <link>https://sowon-dev.github.io/2020/12/04/201205devOpsandCICD/</link>
      <guid>https://sowon-dev.github.io/2020/12/04/201205devOpsandCICD/</guid>
      <pubDate>Fri, 04 Dec 2020 22:33:53 GMT</pubDate>
      
      <description>&lt;p&gt;팀프로젝트를 웹호스팅한 후 소스코드 하나 바꿀때마다 jar파일 다시 업로드하고 서비스url에서 잘 작동되는지 다시 테스하는 일들을 매번 반복하고 있다.&lt;br&gt;이를 효율적으로 할 수 있는 방법이 없는지 깃헙에 공개된 다른 팀프로젝트 개발문서들을 읽으며 공부하다가 DevOps와 CI/CD단어를 동시에 그리고 자주 마주쳤다.&lt;br&gt;정확히 무엇인지 몰라서 이번 기회에 확실히 정리해보려고 한다.&lt;/p&gt;</description>
      
      
      
      <content:encoded><![CDATA[<p>팀프로젝트를 웹호스팅한 후 소스코드 하나 바꿀때마다 jar파일 다시 업로드하고 서비스url에서 잘 작동되는지 다시 테스하는 일들을 매번 반복하고 있다.<br>이를 효율적으로 할 수 있는 방법이 없는지 깃헙에 공개된 다른 팀프로젝트 개발문서들을 읽으며 공부하다가 DevOps와 CI/CD단어를 동시에 그리고 자주 마주쳤다.<br>정확히 무엇인지 몰라서 이번 기회에 확실히 정리해보려고 한다.</p><a id="more"></a><p><br><br><br></p><h2 id="DevOps란"><a href="#DevOps란" class="headerlink" title="DevOps란?"></a>DevOps란?</h2><p><img src="https://dotnettrickscloud.blob.core.windows.net/img/devops/devops-whatisdevops.png" alt="https://www.dotnettricks.com/learn/devops/what-is-devops-and-devops-advantages"></p><ul><li>DevOps = Development(개발+테스트) + Operations(운영)<br>DevOps란 개발과 운영의 합성어로 운영환경에서부터 개발, 배포까지 진행되는 프로세스의 속도를 높이는 접근방식을 의미한다. 이러한 접근 방식을 적용하려면 개발 팀과 운영 팀간의 장벽을 허물고 자주 협력해야함에 따라 필요한 것을 정리해둔 모델이 있다. 바로 CALMS 모델이다.</li></ul><p><br><br><br></p><h2 id="DevOps의-CALMS-MODEL"><a href="#DevOps의-CALMS-MODEL" class="headerlink" title="DevOps의 CALMS MODEL"></a>DevOps의 CALMS MODEL</h2><p>이 중 눈에 띄는 것은 역시 CI/CD이다. 자동화는 DevOps의 핵심이다.</p><p><img src="https://image.slidesharecdn.com/devopsguys-devops101forrecruiters-140117090454-phpapp02/95/devopsguys-devops-101-for-recruiters-19-638.jpg?cb=1390435671" alt=""></p><p><br><br><br></p><h2 id="CI-CD란"><a href="#CI-CD란" class="headerlink" title="CI/CD란?"></a>CI/CD란?</h2><ul><li>CI (Continuous Integration) 다수의 개발자가 작성·수정한 소스코드를 지속적으로 통합·테스트하는 것을 의미한다.</li><li>CD (Continuous Delivery/Deployment)란 개발, 통합, 배포, 릴리즈, 테스트를 자동화하여 지속적으로 배포하는 것을 의미한다.</li></ul><p>전통적인 방식으로는 코드수정하고 배포하는데 까지 많은 시간이 소요되었다. 특히 QA테스팅에서 많은 버그가 발생되었다.</p><p><img src="https://blog.oursky.com/wp-content/uploads/2019/08/image-1160x553.png" alt="https://blog.oursky.com/2019/08/19/how-to-build-cicd-pipeline/"></p><p>CI/CD를 통해 지속적으로 통합·테스트·배포를 하고 이 흐름을 자동화하여 효율적으로 일을 처리할 수 있게 되었다.</p><p><img src="https://blog.oursky.com/wp-content/uploads/2019/08/image-1-1160x571.png" alt="https://blog.oursky.com/2019/08/19/how-to-build-cicd-pipeline/"></p><p><br><br><br></p><h2 id="CI-CD-예시"><a href="#CI-CD-예시" class="headerlink" title="CI/CD 예시"></a>CI/CD 예시</h2><ol><li><a href="https://deveric.tistory.com/82?category=350852">[Delfood] CI/CD 서버 구축과 첫 배포</a><br>CI/CD의 이해하기 쉽도록 잘 정리된 적용사례이다. 개인적으로 만든 프로젝트를 배포한 경험에 관한 글을 볼 수 있다. </li></ol><p><img src="https://img1.daumcdn.net/thumb/R1280x0/?scode=mtistory2&fname=https%3A%2F%2Fblog.kakaocdn.net%2Fdn%2FAfO7u%2FbtqE1wewJny%2F2BBNTXLqwuEfgFMgPF6PHk%2Fimg.png" alt="https://deveric.tistory.com/106"></p><ol start="2"><li>라인개발자가 작성한 CI/CD적용 글 : <a href="https://engineering.linecorp.com/ko/blog/build-a-continuous-cicd-environment-based-on-data/">데이터 기반으로 지속적인 CI/CD 개선 환경 만들기</a></li></ol><p><br><br><br></p><h2 id="DevOps단계별-사용하는-기술"><a href="#DevOps단계별-사용하는-기술" class="headerlink" title="DevOps단계별 사용하는 기술"></a>DevOps단계별 사용하는 기술</h2><p>DevOps에선 어떤 기술들이 사용될까? 아래 이미지에서 확인해볼 수 있다!</p><p><img src="http://nearcoding.com/wp-content/uploads/2018/11/devops.png" alt="http://nearcoding.com/what-is-devops/"></p><h2 id="요약"><a href="#요약" class="headerlink" title="요약"></a>요약</h2><p>DevOps와 CI/CD차이<br>DevOps는 개발과 운영을 통합하여 프로세스의 속도를 높이는 접근방식이다.<br>CL/CD는 지속적으로 통합·테스트·배포를 하고 이 흐름을 자동화하는 것을 말한다.</p><p><br><br><br></p><h2 id="참고"><a href="#참고" class="headerlink" title="참고"></a>참고</h2><ul><li><a href="https://blog.oursky.com/2019/08/19/how-to-build-cicd-pipeline/">https://blog.oursky.com/2019/08/19/how-to-build-cicd-pipeline/</a></li><li><a href="https://www.dotnettricks.com/learn/devops/what-is-devops-and-devops-advantages">https://www.dotnettricks.com/learn/devops/what-is-devops-and-devops-advantages</a></li><li><a href="https://aws.amazon.com/ko/devops/what-is-devops/">https://aws.amazon.com/ko/devops/what-is-devops/</a></li><li><a href="https://www.redhat.com/ko/topics/devops/devops-engineer#:~:text=DevOps%20%EC%97%94%EC%A7%80%EB%8B%88%EC%96%B4%EB%8A%94%20%ED%94%84%EB%A1%9C%EC%84%B8%EC%8A%A4%2C%20%ED%88%B4,%EB%8A%94%20%EC%84%9C%EB%A1%9C%20%EB%8B%A4%EB%A5%BC%20%EC%88%98%20%EC%9E%88%EC%8A%B5%EB%8B%88%EB%8B%A4.">DevOps 엔지니어는 어떤 사람일까요? by RedHat</a></li><li><a href="https://www.redhat.com/ko/topics/devops">https://www.redhat.com/ko/topics/devops</a></li><li><a href="https://deveric.tistory.com/106">https://deveric.tistory.com/106</a></li></ul>]]></content:encoded>
      
      
      <category domain="https://sowon-dev.github.io/categories/Journal/">Journal</category>
      
      
      <category domain="https://sowon-dev.github.io/tags/TIL/">TIL</category>
      
      <category domain="https://sowon-dev.github.io/tags/Journal/">Journal</category>
      
      
      <comments>https://sowon-dev.github.io/2020/12/04/201205devOpsandCICD/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>Framework VS Library 프레임워크와 라이브러리의 차이</title>
      <link>https://sowon-dev.github.io/2020/12/03/201204LibraryVSFramework/</link>
      <guid>https://sowon-dev.github.io/2020/12/03/201204LibraryVSFramework/</guid>
      <pubDate>Thu, 03 Dec 2020 23:44:14 GMT</pubDate>
      
      <description>&lt;h2 id=&quot;프레임워크와-라이브러리-차이점&quot;&gt;&lt;a href=&quot;#프레임워크와-라이브러리-차이점&quot; class=&quot;headerlink&quot; title=&quot;프레임워크와 라이브러리 차이점&quot;&gt;&lt;/a&gt;프레임워크와 라이브러리 차이점&lt;/h2&gt;&lt;p&gt;실행주체에 있어 차이점이 있다.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;라이브러리 : &lt;strong&gt;I&lt;/strong&gt; call 라이브러리&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;내가 필요할 때마다 라이브러리를 실행시킬수있다.&lt;/li&gt;
&lt;li&gt;내가 원하는 대로 수정이 가능하다.&lt;/li&gt;
&lt;li&gt;비유하자면 Ikea(아이키아)&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;프레임워크 : &lt;strong&gt;Framework&lt;/strong&gt; calls 내가 작성한 코드&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;프레임워크가 내가 작성할 코드를 실행시킨다.&lt;/li&gt;
&lt;li&gt;프레임워크의 규칙을 잘 따라야지만 내 코드가 정상 작동한다.&lt;/li&gt;
&lt;li&gt;비유하자면 모델하우스</description>
      
      
      
      <content:encoded><![CDATA[<h2 id="프레임워크와-라이브러리-차이점"><a href="#프레임워크와-라이브러리-차이점" class="headerlink" title="프레임워크와 라이브러리 차이점"></a>프레임워크와 라이브러리 차이점</h2><p>실행주체에 있어 차이점이 있다.</p><ul><li><p>라이브러리 : <strong>I</strong> call 라이브러리</p><ul><li>내가 필요할 때마다 라이브러리를 실행시킬수있다.</li><li>내가 원하는 대로 수정이 가능하다.</li><li>비유하자면 Ikea(아이키아)</li></ul></li><li><p>프레임워크 : <strong>Framework</strong> calls 내가 작성한 코드</p><ul><li>프레임워크가 내가 작성할 코드를 실행시킨다.</li><li>프레임워크의 규칙을 잘 따라야지만 내 코드가 정상 작동한다.</li><li>비유하자면 모델하우스<a id="more"></a></li></ul></li><li><p>공통점 : 프레임워크와 라이브러리 모두 누군가가 자주 발생하는 문제들을 해결하거나  더 좋은 코드를 위해 미리 만들어 둔 코드이다. </p></li></ul><blockquote><p>In summary<br>Frameworks and libraries are both code written by someone else that helps you perform some common tasks in a less verbose way.<br>A framework inverts the control of the program. It tells the developer what they need. A library doesn’t. The programmer calls the library where and when they need it.<br>The degree of freedom a library or framework gives the developer will dictate how “opinionated” it is.<br>By <a href="https://www.freecodecamp.org/news/the-difference-between-a-framework-and-a-library-bd133054023f/">The Difference Between a Framework and a Library By freecodecamp</a></p></blockquote><p><br><br><br></p><h2 id="참고"><a href="#참고" class="headerlink" title="참고"></a>참고</h2><ul><li><p>라이브러리? 프레임워크? 차이점 아직도 모름? 5분 순삭. BY 노마드코더</p><iframe width="560" height="315" src="https://www.youtube-nocookie.com/embed/t9ccIykXTCM" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture" allowfullscreen></iframe></li><li><p><a href="https://www.freecodecamp.org/news/the-difference-between-a-framework-and-a-library-bd133054023f/">The Difference Between a Framework and a Library By freecodecamp</a></p></li></ul>]]></content:encoded>
      
      
      <category domain="https://sowon-dev.github.io/categories/Journal/">Journal</category>
      
      
      <category domain="https://sowon-dev.github.io/tags/TIL/">TIL</category>
      
      <category domain="https://sowon-dev.github.io/tags/Journal/">Journal</category>
      
      
      <comments>https://sowon-dev.github.io/2020/12/03/201204LibraryVSFramework/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>기획시 유용한 사이트 모음</title>
      <link>https://sowon-dev.github.io/2020/12/03/freeToolListForPM/</link>
      <guid>https://sowon-dev.github.io/2020/12/03/freeToolListForPM/</guid>
      <pubDate>Thu, 03 Dec 2020 22:30:25 GMT</pubDate>
      
      <description>&lt;h2 id=&quot;서비스-기획-및-협업툴&quot;&gt;&lt;a href=&quot;#서비스-기획-및-협업툴&quot; class=&quot;headerlink&quot; title=&quot;서비스 기획 및 협업툴&quot;&gt;&lt;/a&gt;서비스 기획 및 협업툴&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://sowon-dev.github.io/2020/08/26/200826girlsInTech/#🍀-프로젝트-협업도구&quot;&gt;Azure DevOps&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://trello.com/&quot;&gt;http://trello.com/&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://www.notion.so/&quot;&gt;https://www.notion.so/&lt;/a&gt;</description>
      
      
      
      <content:encoded><![CDATA[<h2 id="서비스-기획-및-협업툴"><a href="#서비스-기획-및-협업툴" class="headerlink" title="서비스 기획 및 협업툴"></a>서비스 기획 및 협업툴</h2><ul><li><a href="https://sowon-dev.github.io/2020/08/26/200826girlsInTech/#🍀-프로젝트-협업도구">Azure DevOps</a></li><li><a href="http://trello.com/">http://trello.com/</a></li><li><a href="https://www.notion.so/">https://www.notion.so/</a><a id="more"></a></li></ul><p><br><br><br></p><h2 id="기타-무료-이북"><a href="#기타-무료-이북" class="headerlink" title="기타 : 무료 이북"></a>기타 : 무료 이북</h2><ul><li><a href="https://wikidocs.net/">WikiDocs</a></li><li><a href="https://wikidocs.net/book/550">예제로 배우는 ORACLE 11g 온라인 책</a></li></ul>]]></content:encoded>
      
      
      <category domain="https://sowon-dev.github.io/categories/Journal/">Journal</category>
      
      
      <category domain="https://sowon-dev.github.io/tags/Journal/">Journal</category>
      
      <category domain="https://sowon-dev.github.io/tags/List/">List</category>
      
      
      <comments>https://sowon-dev.github.io/2020/12/03/freeToolListForPM/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>백앤드 개발시 유용한 사이트모음</title>
      <link>https://sowon-dev.github.io/2020/12/03/freeToolListForBack/</link>
      <guid>https://sowon-dev.github.io/2020/12/03/freeToolListForBack/</guid>
      <pubDate>Thu, 03 Dec 2020 22:05:20 GMT</pubDate>
      
      <description>&lt;h2 id=&quot;UML-Unified-Modeling-Language-클래스-다이어그램-만들-수-있는-사이트&quot;&gt;&lt;a href=&quot;#UML-Unified-Modeling-Language-클래스-다이어그램-만들-수-있는-사이트&quot; class=&quot;headerlink&quot; title=&quot;UML(Unified Modeling Language 클래스 다이어그램 만들 수 있는 사이트&quot;&gt;&lt;/a&gt;&lt;a href=&quot;http://www.nextree.co.kr/p6753/&quot;&gt;UML(Unified Modeling Language 클래스 다이어그램 만들 수 있는 사이트&lt;/a&gt;&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://marketplace.eclipse.org/search/site/aid&quot;&gt;이클립스 마켓플레이스 검색 - ObjectAid UML Explorer&lt;/a&gt; : 이클립스에서 바로 사용가능&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://staruml.io/&quot;&gt;starUML&lt;/a&gt; : 가장 유명. 최근버전은 유료이므로 이전버전사용가능&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://www.draw.io/&quot;&gt;draw&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://creately.com/diagram-type/class-diagram&quot;&gt;creately&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://www.genmymodel.com/class-diagram-online&quot;&gt;genmymodel&lt;/a&gt;</description>
      
      
      
      <content:encoded><![CDATA[<h2 id="UML-Unified-Modeling-Language-클래스-다이어그램-만들-수-있는-사이트"><a href="#UML-Unified-Modeling-Language-클래스-다이어그램-만들-수-있는-사이트" class="headerlink" title="UML(Unified Modeling Language 클래스 다이어그램 만들 수 있는 사이트"></a><a href="http://www.nextree.co.kr/p6753/">UML(Unified Modeling Language 클래스 다이어그램 만들 수 있는 사이트</a></h2><ul><li><a href="https://marketplace.eclipse.org/search/site/aid">이클립스 마켓플레이스 검색 - ObjectAid UML Explorer</a> : 이클립스에서 바로 사용가능</li><li><a href="http://staruml.io/">starUML</a> : 가장 유명. 최근버전은 유료이므로 이전버전사용가능</li><li><a href="https://www.draw.io/">draw</a></li><li><a href="https://creately.com/diagram-type/class-diagram">creately</a></li><li><a href="https://www.genmymodel.com/class-diagram-online">genmymodel</a><a id="more"></a></li></ul><p><br><br><br></p><h2 id="변수명짓기"><a href="#변수명짓기" class="headerlink" title="변수명짓기"></a>변수명짓기</h2><ul><li><a href="https://www.curioustore.com/#!/util/naming">https://www.curioustore.com/#!/util/naming</a></li></ul><p><br><br><br></p><h2 id="오픈-API"><a href="#오픈-API" class="headerlink" title="오픈 API"></a>오픈 <a href="https://dydrlaks.medium.com/api-%EB%9E%80-c0fd6222d34c">API</a></h2><ul><li><a href="https://developers.kakao.com">카카오 API 홈페이지</a> : <a href="https://developers.kakao.com">https://developers.kakao.com</a></li><li><a href="https://developers.naver.com/">네이버 API 홈페이지</a> : <a href="https://developers.naver.com/">https://developers.naver.com/</a></li><li><a href="https://console.developers.google.com">구글 API 홈페이지</a> : <a href="https://console.developers.google.com">https://console.developers.google.com</a></li><li><a href="https://developers.facebook.com/">페이스북 API 홈페이지</a> : <a href="https://developers.facebook.com/">https://developers.facebook.com/</a></li><li><a href="https://www.data.go.kr/">공공데이터 포털</a> : <a href="https://www.data.go.kr/">https://www.data.go.kr/</a></li></ul><p><br><br><br></p><h2 id="기능-대신하는-서비스"><a href="#기능-대신하는-서비스" class="headerlink" title="기능 대신하는 서비스"></a>기능 대신하는 서비스</h2><ul><li>검색엔진 : <a href="https://www.algolia.com">https://www.algolia.com</a></li><li>유저 비밀번호 관리기능<ol><li><a href="https://auth0.com/">https://auth0.com/</a>  로그인/로그아웃/소셜로그인연동이 쉽다</li><li><a href="https://aws.amazon.com/ko/cognito/">https://aws.amazon.com/ko/cognito/</a>  아마존에서 만든 유저인증기능</li></ol></li><li>트랜잭션이메일서비스(트리거나 이벤트 후 발송하는 메일링서비스로 한달에 1만통 무료로 사용가능) : <a href="https://www.mailgun.com/">https://www.mailgun.com/</a><ul><li>SMTP를 더이상 사용할 필요가 없다!</li></ul></li><li>마케팅용 이메일서비스 : <a href="https://mailchimp.com">https://mailchimp.com</a></li><li>웹사이트 보안 SSL Certificate (http를 https로 만들고싶을때) :  <a href="https://letsencrypt.org/">https://letsencrypt.org/</a></li><li>에러 리포팅 : <a href="https://sentry.io">https://sentry.io</a></li><li>실시간 채팅 : <a href="https://pusher.com">https://pusher.com</a></li><li>푸쉬알림 : <a href="https://onesignal.com/">https://onesignal.com/</a></li><li>피드 : <a href="https://getstream.io/">https://getstream.io/</a></li></ul><p><br><br><br></p><h2 id="클라이언트"><a href="#클라이언트" class="headerlink" title="클라이언트"></a>클라이언트</h2><ul><li>REST API인 경우 : <a href="https://insomnia.rest">https://insomnia.rest</a>  </li><li>GraphQL API인 경우 : <a href="https://altair.sirmuel.design">https://altair.sirmuel.design</a> </li></ul><p><br><br><br></p><h2 id="배포"><a href="#배포" class="headerlink" title="배포"></a>배포</h2><ul><li>배포를 대신 해주는 <a href="https://trend21c.tistory.com/1453">헤로쿠</a> : <a href="https://www.heroku.com/">https://www.heroku.com/</a><ul><li><a href="https://pinokio0702.tistory.com/118">히로쿠 무료 서버로 스프링부트 앱 배포하기</a></li><li><a href="https://youtu.be/ADoQLyOgTus">How to Deploy From SpringBoot - GitHub - Heroku (DevOps Step by Step Tutorial)</a></li></ul></li><li>1년무료로 사용가능한 아마존 : <a href="https://aws.amazon.com/">https://aws.amazon.com/</a></li><li><a href="https://youtu.be/NTDhBh1SdZ4">AWS를 쓸까? Heroku를 쓸까? 그 선택의 기준은?</a></li></ul><p><br><br><br></p><h2 id="서버리스"><a href="#서버리스" class="headerlink" title="서버리스"></a><a href="https://youtu.be/ufLmReluPww">서버리스</a></h2><ul><li><a href="https://aws.amazon.com/lambda/">https://aws.amazon.com/lambda/</a></li><li><a href="https://cloud.google.com/functions/">https://cloud.google.com/functions/</a></li></ul><p><br><br><br></p><h2 id="데이터베이스"><a href="#데이터베이스" class="headerlink" title="데이터베이스"></a>데이터베이스</h2><ul><li><a href="https://aws.amazon.com/dynamodb/">https://aws.amazon.com/dynamodb/</a> : 25GB 무료 제공</li><li><a href="https://cloud.google.com/firestore/">https://cloud.google.com/firestore/</a> : 1GB 무료 제공</li><li><a href="https://www.mongodb.com/cloud/atlas">https://www.mongodb.com/cloud/atlas</a> : 512GB 무료 제공</li><li><a href="https://fauna.com/">https://fauna.com/</a> : FaunaDB는 graphQL 서버리스 데이터베이스로 100 MB storage 무료 제공</li></ul><p><br><br><br></p><h2 id="파일-업로드"><a href="#파일-업로드" class="headerlink" title="파일 업로드"></a>파일 업로드</h2><ul><li><a href="https://cloud.google.com/storage/">https://cloud.google.com/storage/</a> : 5GB 무료 제공</li><li><a href="https://cloudinary.com/">https://cloudinary.com/</a> : 25GB 무료 제공</li></ul><p><br><br><br></p><h2 id="분석"><a href="#분석" class="headerlink" title="분석"></a>분석</h2><ul><li><a href="https://analytics.google.com/analytics/web/provision/#/provision">https://analytics.google.com/analytics/web/provision/#/provision</a></li><li><a href="https://www.hotjar.com">https://www.hotjar.com</a></li><li><a href="https://mixpanel.com/">https://mixpanel.com/</a></li></ul>]]></content:encoded>
      
      
      <category domain="https://sowon-dev.github.io/categories/Journal/">Journal</category>
      
      
      <category domain="https://sowon-dev.github.io/tags/Journal/">Journal</category>
      
      <category domain="https://sowon-dev.github.io/tags/List/">List</category>
      
      
      <comments>https://sowon-dev.github.io/2020/12/03/freeToolListForBack/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>오픈소스 개발자가 알려주는 GitHub 오픈소스 포트폴리오 세미나 후기</title>
      <link>https://sowon-dev.github.io/2020/12/02/201202githubOpenSourcePortfolio/</link>
      <guid>https://sowon-dev.github.io/2020/12/02/201202githubOpenSourcePortfolio/</guid>
      <pubDate>Wed, 02 Dec 2020 03:37:07 GMT</pubDate>
      
      <description>&lt;h2 id=&quot;세미나-소개-및-후기&quot;&gt;&lt;a href=&quot;#세미나-소개-및-후기&quot; class=&quot;headerlink&quot; title=&quot;세미나 소개 및 후기&quot;&gt;&lt;/a&gt;세미나 소개 및 후기&lt;/h2&gt;&lt;blockquote&gt;
&lt;p&gt;&lt;a href=&quot;https://event-us.kr/25646&quot;&gt;오픈소스 개발자가 알려주는 GitHub오픈소스 포트폴리오&lt;/a&gt;&lt;br&gt;강연내용&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;GitHub소개와 개인 포트폴리오 작성 실사례&lt;/li&gt;
&lt;li&gt;GitHub오픈소스 개발참여이력&lt;br&gt;by 리얼리눅스&lt;/li&gt;
&lt;/ol&gt;
&lt;/blockquote&gt;</description>
      
      
      
      <content:encoded><![CDATA[<h2 id="세미나-소개-및-후기"><a href="#세미나-소개-및-후기" class="headerlink" title="세미나 소개 및 후기"></a>세미나 소개 및 후기</h2><blockquote><p><a href="https://event-us.kr/25646">오픈소스 개발자가 알려주는 GitHub오픈소스 포트폴리오</a><br>강연내용</p><ol><li>GitHub소개와 개인 포트폴리오 작성 실사례</li><li>GitHub오픈소스 개발참여이력<br>by 리얼리눅스</li></ol></blockquote><a id="more"></a><p>요즘 한창 포트폴리오를 정리하고 있다. 프로젝트에 많은 시간과 노력을 들인 만큼 이를 잘 설명하는 포트폴리오를 작성하고 싶어졌다. 여러 참고자료들을 찾아보고 있다가 해당 강연을 알게되고 얼른 신청했다.<br>유익한 강연이었다. 특히 마지막에 질의응답시간에 성심성의껏 답변해주셔서 정말 유익했다. </p><p><br><br><br></p><h2 id="한국-오픈소스-개발자-커뮤니티"><a href="#한국-오픈소스-개발자-커뮤니티" class="headerlink" title="한국 오픈소스 개발자 커뮤니티"></a>한국 오픈소스 개발자 커뮤니티</h2><p>강연덕분에 재미있는 커뮤니티를 알게되었다. 바로 <a href="http://rankedin.kr/">한국 오픈소스 개발자 커뮤니티</a>이다.<br>해당 사이트에 접속하면 한국 개발자 인기 순위와 한국 저장소 인기 순위를 볼 수 있다.<br>인기 저장소 중 몇몇은 나도 star를 찍어놓은 곳이었다.<br>내이름도 순위권에 안에 들면 얼마나 좋을까<br>미래를 꿈꾸는 건 언제나 신나는 일이다.</p><p>전세계 버전도 있다. <a href="https://gitstar-ranking.com/">gitstar-ranking</a>은 star를 많이 받은 users, organizations, repositories순위를 한 눈에 보여준다. 세계적으로 유명한 레포지토리들은 역시 example과 readme.md, contributing.md가 잘 작성되어있었다. 더불어 이슈템플릿과 PR템플릿, 그리고 그 가이드라인까지도… 인기있는 레포지토리 방문만했을뿐인데 그 안에서도 배울점이 참 많다.</p><p><br><br><br></p><h2 id="깃헙으로-만든-이력서-및-포트폴리오-예시"><a href="#깃헙으로-만든-이력서-및-포트폴리오-예시" class="headerlink" title="깃헙으로 만든 이력서 및 포트폴리오 예시"></a>깃헙으로 만든 이력서 및 포트폴리오 예시</h2><ul><li><a href="https://github.com/JSpiner/RESUME">JSpiner님의 이력서</a><br>링크드인에 있는 지인 추천의 말기능을 PR로 구현한 점은 정말 신박했다.</li><li><a href="https://github.com/webstoryboy/portfolio">webstoryboy의 포트폴리오 샘플</a><ul><li><a href="https://webstoryboy.github.io/portfolio/port1/">이 포트폴리오</a>는 화면이 여러 디지털기기들로 이동하는 디자인은 참 재미있었다. 반응형 디자인을 나타내고 싶으셨던 것 같다.</li></ul></li><li><a href="https://github.com/iRaul/creative-portfolios">creative-portfolios</a>는 리스트업된 모든 포트폴리오가 예술이었다. 진짜 art다 art!</li></ul><p><br><br><br></p><h2 id="hacktoberfest"><a href="#hacktoberfest" class="headerlink" title="hacktoberfest"></a>hacktoberfest</h2><p>강사님이 처음 오픈소스를 기여한다면 <a href="https://github.com/topics/hacktoberfest">hacktoberfest</a>를 추천해주셨다. fest기간동안 참여하면 된다고하셨다. <a href="https://www.digitalocean.com/community/tutorial_series/an-introduction-to-open-source">처음 참여하는 사람들을 위한 튜토리얼</a>도 있다.</p><p><br><br><br></p><h2 id="질의응답"><a href="#질의응답" class="headerlink" title="질의응답"></a>질의응답</h2><ol><li>번역오픈소스 기여한 적이 있는데 이를 매력적으로 포트폴리오에 적고싶다면 어떻게 적으면 좋을까요?</li></ol><blockquote><p>오픈소스문화(이슈남기기 코드리뷰받기 pr남기기)를 이해하고 협업능력이 향상되었다는 점과 오픈소스프로젝트의 해당 기술을 잘 알기에 번역을 할 수 있으니 기술적인 부분의 이해도가 높다는 점을 어필하면 좋을 것 같습니다.</p></blockquote><ol start="2"><li>혹시 강사님께서 처음 오픈소스에 기여하셨을때 어떤 프로젝트로 시작하셨나요? 첫 참여 이후 다음 오픈소스프로젝트를 어떤 기준잡고 찾으셨을까요? </li></ol><blockquote><p>우연한 계기로 리눅스 perf 퍼프라는 프로젝트로 시작했습니다.<br>다음 오픈소스 프로젝트를 찾을 때는 인기있는 프로젝트나 잘 merge해줄 것 같은 프로젝트를 선택하는 것은 좋은 접근 방식이 아닙니다. 지속적으로 오픈소스에 참여하고 싶다면 내가 무슨 기술에 관심이 있는지 생각한 뒤 다음 오픈소스를 찾아야합니다.<br>자기관찰을 먼저 하시고 자신의 관심사에 기반한 오픈소스를 선택하시면 지속적으로 기여가 가능할 것입니다.</p></blockquote>]]></content:encoded>
      
      
      <category domain="https://sowon-dev.github.io/categories/Lectures-Seminars/">Lectures &amp; Seminars</category>
      
      
      <category domain="https://sowon-dev.github.io/tags/Review/">Review</category>
      
      
      <comments>https://sowon-dev.github.io/2020/12/02/201202githubOpenSourcePortfolio/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>2020미래유망기술세미나 후기</title>
      <link>https://sowon-dev.github.io/2020/11/26/201126emergingtech/</link>
      <guid>https://sowon-dev.github.io/2020/11/26/201126emergingtech/</guid>
      <pubDate>Thu, 26 Nov 2020 04:17:29 GMT</pubDate>
      
      <description>&lt;h2 id=&quot;2020-미래유망기술-세미나-소개&quot;&gt;&lt;a href=&quot;#2020-미래유망기술-세미나-소개&quot; class=&quot;headerlink&quot; title=&quot;2020 미래유망기술 세미나 소개&quot;&gt;&lt;/a&gt;&lt;a href=&quot;https://emergingtech.co.kr/#&quot;&gt;2020 미래유망기술 세미나&lt;/a&gt; 소개&lt;/h2&gt;&lt;blockquote&gt;
&lt;p&gt;한국과학기술정보연구원(KISTI)은 오는 11월 26일(목) 서울 코엑스 아셈볼룸에서 「Bridge to Future, 데이터로 만나는 미래유망기술」을 주제로 “2020 미래유망기술세미나”를 개최합니다.&lt;br&gt;본 세미나는 올해로 15회를 맞는 국내 최대의 과학기술 세미나로 미래를 좌우할 핵심 유망기술을 발굴하여 제시하고, 그 기술들의 확보 및 사업화 전략을 논의하는 자리입니다.&lt;br&gt;포스트코로나시대에 과학기술 데이터 분석 활용을 통한 선도형 미래 유망기술과 사업화 아이템을 소개함으로써 국가 디지털 경쟁력 확보에 기여하고 한국 경제 중추인 중소기업이 신사업 기회 탐색과 새로운 기업가치를 창출 전략을 모색하고자 합니다.&lt;br&gt;출처 : 초대글 by 한국과학기술정보연구원장 최희윤&lt;/p&gt;
&lt;/blockquote&gt;</description>
      
      
      
      <content:encoded><![CDATA[<h2 id="2020-미래유망기술-세미나-소개"><a href="#2020-미래유망기술-세미나-소개" class="headerlink" title="2020 미래유망기술 세미나 소개"></a><a href="https://emergingtech.co.kr/#">2020 미래유망기술 세미나</a> 소개</h2><blockquote><p>한국과학기술정보연구원(KISTI)은 오는 11월 26일(목) 서울 코엑스 아셈볼룸에서 「Bridge to Future, 데이터로 만나는 미래유망기술」을 주제로 “2020 미래유망기술세미나”를 개최합니다.<br>본 세미나는 올해로 15회를 맞는 국내 최대의 과학기술 세미나로 미래를 좌우할 핵심 유망기술을 발굴하여 제시하고, 그 기술들의 확보 및 사업화 전략을 논의하는 자리입니다.<br>포스트코로나시대에 과학기술 데이터 분석 활용을 통한 선도형 미래 유망기술과 사업화 아이템을 소개함으로써 국가 디지털 경쟁력 확보에 기여하고 한국 경제 중추인 중소기업이 신사업 기회 탐색과 새로운 기업가치를 창출 전략을 모색하고자 합니다.<br>출처 : 초대글 by 한국과학기술정보연구원장 최희윤</p></blockquote><a id="more"></a><div id="fb-root"></div><script async defer crossorigin="anonymous" src="https://connect.facebook.net/ko_KR/sdk.js#xfbml=1&version=v9.0" nonce="0BvBUBYG"></script><div class="fb-post" data-href="https://www.facebook.com/withKISTI/posts/3905435842878373" data-show-text="false" data-width=""><blockquote cite="https://www.facebook.com/withKISTI/posts/3905435842878373" class="fb-xfbml-parse-ignore"><p>&lt;2020 제15회 미래유망기술세미나&gt;<p>&quot;KISTI, 미래를 움직일 유망기술 한눈에 본다&quot;</p><p>11월  26일(목), 『 Bridge to Future, 데이터로 만나는 미래유망기술』을 주제로“2020…</p>게시: <a href="https://www.facebook.com/withKISTI/">KISTI 한국과학기술정보연구원</a>&nbsp;<a href="https://www.facebook.com/withKISTI/posts/3905435842878373">2020년 11월 19일 목요일</a></blockquote></div></p><p><img src="https://box.bizmailer.co.kr/images/manager/5/1568280236275ZIZg24Z/1572854721290sTVKPrA/1605520313362e4fKs2i.png" alt="https://emergingtech.co.kr/index#%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%A8"></p><p><br><br><br></p><h2 id="후기"><a href="#후기" class="headerlink" title="후기"></a>후기</h2><p>오랜만에 사고가 확장되는 느낌을 받은 세미나였다. 정말 재미있었다! 특히 데이터기반으로 뽑아낸 미래유망기술키워드는 정말 솔깃했고 앞으로 어떤 기술에 연구가 이루어지고 있는지 알 수 있는 좋은 시간이었다. 연구가 이루어진다는 것은 그 분야에 자금이 흐른다는 뜻이으로 더욱 유망할 수밖에.</p><p>모든 세션이 다 흥미로웠지만 내게 특히 재미있었던 세션은 두가지이다.</p><ol><li>딥러닝으로 예측한 미래 고성장 과학기술 100선 by 고병열 센터장 (KISTI 미래기술분석센터)</li><li>포스트 코로나 대응 새로운 비즈니스 기회 창출 유망 사업화 아이템 by 최윤정 센터장 (KISTI 기술사업화센터)</li></ol><p><br><br><br></p><h2 id="딥러닝으로-예측한-미래-고성장-과학기술-100선-by-고병열-센터장-KISTI-미래기술분석센터-후기"><a href="#딥러닝으로-예측한-미래-고성장-과학기술-100선-by-고병열-센터장-KISTI-미래기술분석센터-후기" class="headerlink" title="딥러닝으로 예측한 미래 고성장 과학기술 100선 by 고병열 센터장 (KISTI 미래기술분석센터) 후기"></a>딥러닝으로 예측한 미래 고성장 과학기술 100선 by 고병열 센터장 (KISTI 미래기술분석센터) 후기</h2><p>기술클러스터를 대상으로 딥러닝 기반 미래 성장가능성 예측 지형도를 봤는데 정말 흥미로웠다. 지형도에 따르면 7년 후 성장가능성이 높은 유망기술 후보군을 기준으로 7가지 이슈를 도출할 수 있었다.</p><table><thead><tr><th align="center">순번</th><th align="center">이슈</th><th align="left">예시 또는 추가 설명</th></tr></thead><tbody><tr><td align="center">1</td><td align="center">지구온난화</td><td align="left">세가지 키워드의 융합: 지구온난화 대처 + 데이터/인공지능의 활용 + 소재연구</td></tr><tr><td align="center">2</td><td align="center">기후변화를 예측하는 <code>감시·센싱·모니터링</code>기술</td><td align="left">기후변화로 인한 생태계, 토지, 조류 변화, 가뭄, 홍수 등 재난예측</td></tr><tr><td align="center">3</td><td align="center">의료분야</td><td align="left">데이터관리(영상처리기술, 로봇기술등), 소재개발(DNA나노기술등), 질병예측·진단·치료</td></tr><tr><td align="center">4</td><td align="center">물</td><td align="left">재해관리분야(홍수위험관리 및 예측등), 수자원 관리분야(폐수처리, 재생수, 담수화등), 에너지원분야(바이오연료 생산등)</td></tr><tr><td align="center">5</td><td align="center">신재생에너지·지속가능에너지</td><td align="left">수소에너지분야, 지속가능한에너지분야(태양,풍력,파력등),에너지소재분야(상변화소재,메타물질,리튬황전지등), 에너지관리분야(스마트에너지시스템, 가상발전소, 발전량예측등)</td></tr><tr><td align="center">6</td><td align="center">이미징기술·나노기술</td><td align="left">이미지기술, 나노기술</td></tr><tr><td align="center">7</td><td align="center">사회문제해결형 과학기술</td><td align="left">도시화, 정신질환, 아동영양결핍 등</td></tr></tbody></table><p>위 키워드 중 관심있는 키워드가 꽤 있었다.</p><ol><li><code>탄성파 데이터 처리 및 해석</code> : 탄성파 데이터 처리는 원래 의료용으로 사용하는 기술이 아니였으나 MRI비용을 줄일 수 있는 대안기술로 활용할 수 있다.</li><li><code>위성기반 토양수분측정기술</code>은 미세먼지 예측에 활용가능하다.</li><li>인공위성을 통한 빅데이터 비즈니스성장률은 20&#126;30%정도이며 환경모니터링에 활용가능하다.</li><li>이미징기술 : 의료영상분할기술뿐만 아니라 농업자동화에 활용가능하다.</li><li>수소에너지에도 다양한 급이 있다는 사실이 신기했다. 그레이, 그린, 블루 중 green hydrogen은 탄소가 zero이므로 주목해야한다.</li></ol><p><img src="https://img1.daumcdn.net/thumb/R1280x0/?scode=mtistory2&fname=https%3A%2F%2Fblog.kakaocdn.net%2Fdn%2FbhTsZF%2FbtqE75OVcUu%2FQVkoFSIjD9mlTOa2euqKe1%2Fimg.png" alt="https://blog.kepco.co.kr/1849"></p><p><br><br><br></p><h2 id="포스트-코로나-대응-새로운-비즈니스-기회-창출-유망-사업화-아이템-by-최윤정-센터장"><a href="#포스트-코로나-대응-새로운-비즈니스-기회-창출-유망-사업화-아이템-by-최윤정-센터장" class="headerlink" title="포스트 코로나 대응 새로운 비즈니스 기회 창출 유망 사업화 아이템 by 최윤정 센터장"></a>포스트 코로나 대응 새로운 비즈니스 기회 창출 유망 사업화 아이템 by 최윤정 센터장</h2><p><a href="https://news.joins.com/article/23931113?cloc=joongang-mhome-group36">KISTI 2020 미래유망기술세미나에서 발표된 미래 유망 사업 분야</a></p><p><br><br><br></p><h2 id="오픈엑세스-논문-플랫폼-KORA"><a href="#오픈엑세스-논문-플랫폼-KORA" class="headerlink" title="오픈엑세스 논문 플랫폼 KORA"></a>오픈엑세스 논문 플랫폼 KORA</h2><p>국가 오픈엑세스 플랫폼인 <a href="https://www.koar.kr/main/main.do">KOAR</a>를 통해서 국내 연구자들의 공개논물을 자유롭게 이용할 수 있다.<br>이번 세미나를 통해 관심을 가지게 된 <a href="https://www.koar.kr/main/search/searchResult.do?searchMode=simple&simpleSchQry=multicomponent+seismic+data">탄성파 데이터 처리 및 해석</a>에 대해 검색해봤다. PDF로 다운로드할 수 있고 바로 볼 수 도 있어 유용했다.</p><p><img src="https://lh3.googleusercontent.com/AA1yaR2TNuakraI8Rkenbgx1iyxepPzQ1tMQgayPZ-VehnjZKqCDGV6i4rrnB_NpU0T3vETQbenhMrdegzMeqhkttNAvLn588T_10bTwnw=s0" alt="https://emergingtech.co.kr/index#%EA%B0%80%EC%83%81%EC%A0%84%EC%8B%9C%EA%B4%80"></p>]]></content:encoded>
      
      
      <category domain="https://sowon-dev.github.io/categories/Lectures-Seminars/">Lectures &amp; Seminars</category>
      
      
      <category domain="https://sowon-dev.github.io/tags/Review/">Review</category>
      
      
      <comments>https://sowon-dev.github.io/2020/11/26/201126emergingtech/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>[자바JAVA]1099 : [기초-2차원배열] 성실한 개미</title>
      <link>https://sowon-dev.github.io/2020/11/20/201121al-c1099/</link>
      <guid>https://sowon-dev.github.io/2020/11/20/201121al-c1099/</guid>
      <pubDate>Fri, 20 Nov 2020 22:49:06 GMT</pubDate>
      
      <description>&lt;h2 id=&quot;문제-1099-기초-2차원배열-성실한-개미&quot;&gt;&lt;a href=&quot;#문제-1099-기초-2차원배열-성실한-개미&quot; class=&quot;headerlink&quot; title=&quot;문제 1099 : [기초-2차원배열] 성실한 개미&quot;&gt;&lt;/a&gt;문제 1099 : [기초-2차원배열] 성실한 개미&lt;/h2&gt;&lt;p&gt;영일이는 생명과학에 관심이 생겨 왕개미를 연구하고 있었다.&lt;br&gt;왕개미를 유심히 살펴보던 중 특별히 성실해 보이는 개미가 있었는데, 그 개미는 개미굴에서 나와 먹이까지 가장 빠른 길로 이동하는 것이었다.&lt;/p&gt;</description>
      
      
      
      <content:encoded><![CDATA[<h2 id="문제-1099-기초-2차원배열-성실한-개미"><a href="#문제-1099-기초-2차원배열-성실한-개미" class="headerlink" title="문제 1099 : [기초-2차원배열] 성실한 개미"></a>문제 1099 : [기초-2차원배열] 성실한 개미</h2><p>영일이는 생명과학에 관심이 생겨 왕개미를 연구하고 있었다.<br>왕개미를 유심히 살펴보던 중 특별히 성실해 보이는 개미가 있었는데, 그 개미는 개미굴에서 나와 먹이까지 가장 빠른 길로 이동하는 것이었다.</p><a id="more"></a><p>개미는 오른쪽으로 움직이다가 벽을 만나면 아래쪽으로 움직여 가장 빠른 길로 움직였다. (오른쪽에 길이 나타나면 다시 오른쪽으로 움직인다.)<br>이에 호기심이 생긴 영일이는 그 개미를 미로 상자에 넣고 살펴보기 시작하였다.<br>미로 상자에 넣은 개미는 먹이를 찾았거나, 더 이상 움직일 수 없을 때까지오른쪽 또는 아래쪽으로만 움직였다.<br>미로 상자의 구조가 0(갈 수 있는 곳), 1(벽 또는 장애물)로 주어지고,먹이가 2로 주어질 때, 성실한 개미의 이동 경로를 예상해보자.</p><p>단, 맨 아래의 가장 오른쪽에 도착한 경우, 더 이상 움직일 수 없는 경우, 먹이를 찾은 경우에는더이상 이동하지 않고 그 곳에 머무른다고 가정한다. 미로 상자의 테두리는 모두 벽으로 되어 있으며, 개미집은 반드시 (2, 2)에 존재하기 때문에 개미는 (2, 2)에서 출발한다.</p><ul><li>입력예시1</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">1 1 1 1 1 1 1 1 1 1</span><br><span class="line">1 0 0 1 0 0 0 0 0 1</span><br><span class="line">1 0 0 1 1 1 0 0 0 1</span><br><span class="line">1 0 0 0 0 0 0 1 0 1</span><br><span class="line">1 0 0 0 0 0 0 1 0 1</span><br><span class="line">1 0 0 0 0 1 0 1 0 1</span><br><span class="line">1 0 0 0 0 1 2 1 0 1</span><br><span class="line">1 0 0 0 0 1 0 0 0 1</span><br><span class="line">1 0 0 0 0 0 0 0 0 1</span><br><span class="line">1 1 1 1 1 1 1 1 1 1</span><br></pre></td></tr></table></figure><ul><li>출력예시1</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">1 1 1 1 1 1 1 1 1 1</span><br><span class="line">1 9 9 1 0 0 0 0 0 1</span><br><span class="line">1 0 9 1 1 1 0 0 0 1</span><br><span class="line">1 0 9 9 9 9 9 1 0 1</span><br><span class="line">1 0 0 0 0 0 9 1 0 1</span><br><span class="line">1 0 0 0 0 1 9 1 0 1</span><br><span class="line">1 0 0 0 0 1 9 1 0 1</span><br><span class="line">1 0 0 0 0 1 0 0 0 1</span><br><span class="line">1 0 0 0 0 0 0 0 0 1</span><br><span class="line">1 1 1 1 1 1 1 1 1 1</span><br></pre></td></tr></table></figure><ul><li>입력예시2</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">1 1 1 1 1 1 1 1 1 1</span><br><span class="line">1 0 0 1 0 0 0 0 0 1</span><br><span class="line">1 0 0 1 1 1 0 0 0 1</span><br><span class="line">1 0 0 0 0 0 0 1 0 1</span><br><span class="line">1 0 0 0 0 0 0 1 0 1</span><br><span class="line">1 0 0 0 0 1 0 0 0 1</span><br><span class="line">1 0 0 0 0 1 2 0 0 1</span><br><span class="line">1 0 0 0 0 1 0 0 0 1</span><br><span class="line">1 0 0 0 0 0 0 0 0 1</span><br><span class="line">1 1 1 1 1 1 1 1 1 1</span><br></pre></td></tr></table></figure><ul><li>출력예시2</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">1 1 1 1 1 1 1 1 1 1</span><br><span class="line">1 9 9 1 0 0 0 0 0 1</span><br><span class="line">1 0 9 1 1 1 0 0 0 1</span><br><span class="line">1 0 9 9 9 9 9 1 0 1</span><br><span class="line">1 0 0 0 0 0 9 1 0 1</span><br><span class="line">1 0 0 0 0 1 9 9 9 1</span><br><span class="line">1 0 0 0 0 1 2 0 9 1</span><br><span class="line">1 0 0 0 0 1 0 0 9 1</span><br><span class="line">1 0 0 0 0 0 0 0 9 1</span><br><span class="line">1 1 1 1 1 1 1 1 1 1</span><br></pre></td></tr></table></figure><p><br><br><br></p><h2 id="내코드"><a href="#내코드" class="headerlink" title="내코드"></a>내코드</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> java.util.Scanner;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">c1099</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        Scanner sc = <span class="keyword">new</span> Scanner(System.in);</span><br><span class="line">        <span class="comment">//개미집 10*10 만들기</span></span><br><span class="line">        <span class="keyword">int</span>[][] antHouse = <span class="keyword">new</span> <span class="keyword">int</span>[<span class="number">11</span>][<span class="number">11</span>];</span><br><span class="line"></span><br><span class="line">        <span class="comment">//개미집에 입력값 넣기</span></span><br><span class="line">        <span class="keyword">int</span> w;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>; i&lt;antHouse.length; i++)&#123;</span><br><span class="line">            <span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">1</span>; j&lt;antHouse.length; j++)&#123;</span><br><span class="line">                w = sc.nextInt();</span><br><span class="line">                antHouse[i][j] = w;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">//오른쪽 아래로 내려갈수있도록 count변수로 y좌표 기억하기</span></span><br><span class="line">        <span class="keyword">int</span> count = <span class="number">2</span>;</span><br><span class="line">        Boolean isTwo = <span class="keyword">false</span>;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">2</span>; i&lt;<span class="number">11</span>; i++)&#123;</span><br><span class="line">            <span class="keyword">for</span>(<span class="keyword">int</span> j=count; j&lt;<span class="number">11</span>; j++) &#123;</span><br><span class="line">                <span class="comment">//System.out.println("좌표(x,y)는 ("+ i +" , "+ j + ") 값은?"+antHouse[i][j]);</span></span><br><span class="line">                </span><br><span class="line"><span class="comment">//먹이(2)인 경우</span></span><br><span class="line">                <span class="keyword">if</span> (antHouse[i][j] == <span class="number">2</span>) &#123;</span><br><span class="line">                    isTwo = <span class="keyword">true</span>;</span><br><span class="line">                    antHouse[i][j] = <span class="number">9</span>;</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">                &#125;</span><br><span class="line"></span><br><span class="line">                <span class="comment">//갈 수 있는 길(0)인 경우</span></span><br><span class="line">                <span class="keyword">if</span> (antHouse[i][j] == <span class="number">0</span>) &#123;</span><br><span class="line">                    antHouse[i][j] = <span class="number">9</span>;</span><br><span class="line">                &#125;</span><br><span class="line"></span><br><span class="line">                <span class="comment">//벽(1)인 경우</span></span><br><span class="line">                <span class="keyword">else</span> <span class="keyword">if</span> (antHouse[i][j] == <span class="number">1</span>) &#123;</span><br><span class="line">                    count = j-<span class="number">1</span>;</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">                &#125;</span><br><span class="line"></span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            <span class="comment">//먹이(2)인 경우</span></span><br><span class="line">            <span class="keyword">if</span>(isTwo) &#123;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        sc.close();</span><br><span class="line"></span><br><span class="line">        <span class="comment">//출력</span></span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>; i&lt;antHouse.length; i++)&#123;</span><br><span class="line">            <span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">1</span>; j&lt;antHouse.length; j++)&#123;</span><br><span class="line">                System.out.printf(<span class="string">"%d "</span>, antHouse[i][j]);</span><br><span class="line">            &#125;</span><br><span class="line">            System.out.println();</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><br><br><br></p><h2 id="문제-풀이"><a href="#문제-풀이" class="headerlink" title="문제 풀이"></a>문제 풀이</h2><p>개미는 조건상 항상 오른쪽과 아래로만 움직이기때문에 좌표(x,y)에서 y좌표를 기억해야했다.<br>따라서 count라는 변수를 생성하여 y좌표를 기억하고 x++를 시켰다.<br>또한 <code>antHouse[i][j] == 2</code>인 경우에는 flag를 걸어두어 이중 for문을 다 빠져나갈 수 있도록 설계했다.<br>문제를 해결하고 나서 더 나은 방법이 있는지 구글링했는데 <a href="https://astralworld58.tistory.com/165">while문으로 좌표를 증가시켜 해결하는 방법</a>으로도 풀수도 있었다.</p><p><br><br><br></p><h2 id="다른-문제-풀이가-보고싶다면"><a href="#다른-문제-풀이가-보고싶다면" class="headerlink" title="다른 문제 풀이가 보고싶다면?"></a>다른 문제 풀이가 보고싶다면?</h2><ul><li><a href="https://github.com/sowon-dev/AlgorithmStudy_Java/tree/master/src/codeup100">모든 코드업100제 자바java 풀이</a></li></ul>]]></content:encoded>
      
      
      <category domain="https://sowon-dev.github.io/categories/Algorithm/">Algorithm</category>
      
      
      <category domain="https://sowon-dev.github.io/tags/Codeup100/">Codeup100</category>
      
      
      <comments>https://sowon-dev.github.io/2020/11/20/201121al-c1099/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>[자바JAVA]1097 : [기초-2차원배열] 바둑알 십자 뒤집기(설명)</title>
      <link>https://sowon-dev.github.io/2020/11/20/201121al-c1097/</link>
      <guid>https://sowon-dev.github.io/2020/11/20/201121al-c1097/</guid>
      <pubDate>Fri, 20 Nov 2020 21:35:57 GMT</pubDate>
      
      <description>&lt;h2 id=&quot;문제-1097-기초-2차원배열-바둑알-십자-뒤집기-설명&quot;&gt;&lt;a href=&quot;#문제-1097-기초-2차원배열-바둑알-십자-뒤집기-설명&quot; class=&quot;headerlink&quot; title=&quot;문제 1097 : [기초-2차원배열] 바둑알 십자 뒤집기(설명)&quot;&gt;&lt;/a&gt;문제 1097 : [기초-2차원배열] 바둑알 십자 뒤집기(설명)&lt;/h2&gt;&lt;p&gt;부모님을 기다리던 영일이는 검정/흰 색 바둑알을 바둑판에 꽉 채워 깔아 놓고 놀다가…&lt;br&gt;“십(+)자 뒤집기를 해볼까?”하고 생각했다.&lt;br&gt;바둑판(19 * 19)에 흰 돌(1) 또는 검정 돌(0)이 모두 꽉 채워져 놓여있을 때,&lt;br&gt;n개의 좌표를 입력받아 십(+)자 뒤집기한 결과를 출력하는 프로그램을 작성해보자.&lt;/p&gt;</description>
      
      
      
      <content:encoded><![CDATA[<h2 id="문제-1097-기초-2차원배열-바둑알-십자-뒤집기-설명"><a href="#문제-1097-기초-2차원배열-바둑알-십자-뒤집기-설명" class="headerlink" title="문제 1097 : [기초-2차원배열] 바둑알 십자 뒤집기(설명)"></a>문제 1097 : [기초-2차원배열] 바둑알 십자 뒤집기(설명)</h2><p>부모님을 기다리던 영일이는 검정/흰 색 바둑알을 바둑판에 꽉 채워 깔아 놓고 놀다가…<br>“십(+)자 뒤집기를 해볼까?”하고 생각했다.<br>바둑판(19 * 19)에 흰 돌(1) 또는 검정 돌(0)이 모두 꽉 채워져 놓여있을 때,<br>n개의 좌표를 입력받아 십(+)자 뒤집기한 결과를 출력하는 프로그램을 작성해보자.</p><a id="more"></a><ul><li>입력예시</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">0 0 0 0 0 0 0 0 0 1 0 1 0 0 0 0 0 0 0</span><br><span class="line">0 0 0 0 0 0 0 0 0 1 0 1 0 0 0 0 0 0 0</span><br><span class="line">0 0 0 0 0 0 0 0 0 1 0 1 0 0 0 0 0 0 0</span><br><span class="line">0 0 0 0 0 0 0 0 0 1 0 1 0 0 0 0 0 0 0</span><br><span class="line">0 0 0 0 0 0 0 0 0 1 0 1 0 0 0 0 0 0 0</span><br><span class="line">0 0 0 0 0 0 0 0 0 1 0 1 0 0 0 0 0 0 0</span><br><span class="line">0 0 0 0 0 0 0 0 0 1 0 1 0 0 0 0 0 0 0</span><br><span class="line">0 0 0 0 0 0 0 0 0 1 0 1 0 0 0 0 0 0 0</span><br><span class="line">0 0 0 0 0 0 0 0 0 1 0 1 0 0 0 0 0 0 0</span><br><span class="line">1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1</span><br><span class="line">0 0 0 0 0 0 0 0 0 1 0 1 0 0 0 0 0 0 0</span><br><span class="line">1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1</span><br><span class="line">0 0 0 0 0 0 0 0 0 1 0 1 0 0 0 0 0 0 0</span><br><span class="line">0 0 0 0 0 0 0 0 0 1 0 1 0 0 0 0 0 0 0</span><br><span class="line">0 0 0 0 0 0 0 0 0 1 0 1 0 0 0 0 0 0 0</span><br><span class="line">0 0 0 0 0 0 0 0 0 1 0 1 0 0 0 0 0 0 0</span><br><span class="line">0 0 0 0 0 0 0 0 0 1 0 1 0 0 0 0 0 0 0</span><br><span class="line">0 0 0 0 0 0 0 0 0 1 0 1 0 0 0 0 0 0 0</span><br><span class="line">0 0 0 0 0 0 0 0 0 1 0 1 0 0 0 0 0 0 0</span><br><span class="line">2</span><br><span class="line">10 10</span><br><span class="line">12 12</span><br></pre></td></tr></table></figure><ul><li>출력예시</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0</span><br><span class="line">0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0</span><br><span class="line">0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0</span><br><span class="line">0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0</span><br><span class="line">0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0</span><br><span class="line">0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0</span><br><span class="line">0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0</span><br><span class="line">0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0</span><br><span class="line">0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0</span><br><span class="line">0 0 0 0 0 0 0 0 0 1 0 1 0 0 0 0 0 0 0</span><br><span class="line">0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0</span><br><span class="line">0 0 0 0 0 0 0 0 0 1 0 1 0 0 0 0 0 0 0</span><br><span class="line">0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0</span><br><span class="line">0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0</span><br><span class="line">0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0</span><br><span class="line">0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0</span><br><span class="line">0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0</span><br><span class="line">0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0</span><br><span class="line">0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0</span><br></pre></td></tr></table></figure><p><br><br><br></p><h2 id="코드"><a href="#코드" class="headerlink" title="코드"></a>코드</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> java.util.Scanner;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">c1097</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        Scanner sc =  <span class="keyword">new</span> Scanner(System.in);</span><br><span class="line">        <span class="keyword">int</span>[][] arr = <span class="keyword">new</span> <span class="keyword">int</span>[<span class="number">19</span>][<span class="number">19</span>]; <span class="comment">//2차원배열생성</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">//입력값 배열에 넣기</span></span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>; i&lt;arr.length; i++)&#123;</span><br><span class="line">            <span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">0</span>; j&lt;arr.length; j++)&#123;</span><br><span class="line">                arr[i][j] = sc.nextInt();</span><br><span class="line">                <span class="comment">//System.out.printf("%d ",arr[i][j]);</span></span><br><span class="line">            &#125;</span><br><span class="line">            <span class="comment">//System.out.println();</span></span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">int</span> count = sc.nextInt(); <span class="comment">// 십자 뒤집기 횟수(n)</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">//1이면 0으로 0이면 1로</span></span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> n=<span class="number">0</span>; n&lt;count; n++)&#123;</span><br><span class="line">            <span class="keyword">int</span> x = sc.nextInt()-<span class="number">1</span>; <span class="comment">//10 12</span></span><br><span class="line">            <span class="keyword">int</span> y = sc.nextInt()-<span class="number">1</span>; <span class="comment">//10 12</span></span><br><span class="line"></span><br><span class="line">            <span class="comment">//[10, i]가 0이면 1로, 1이면 0으로</span></span><br><span class="line">            <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>; i&lt;arr.length; i++)&#123;</span><br><span class="line">                <span class="keyword">if</span>(arr[x][i] == <span class="number">0</span>)&#123;</span><br><span class="line">                    arr[x][i] = <span class="number">1</span>;</span><br><span class="line">                &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">                    arr[x][i] = <span class="number">0</span>;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            <span class="comment">//[j, 12]가 0이면 1로, 1이면 0으로</span></span><br><span class="line">            <span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">0</span>; j&lt;arr.length; j++)&#123;</span><br><span class="line">                <span class="keyword">if</span>(arr[j][y] == <span class="number">0</span>)&#123;</span><br><span class="line">                    arr[j][y] = <span class="number">1</span>;</span><br><span class="line">                &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">                    arr[j][y] = <span class="number">0</span>;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        sc.close();</span><br><span class="line"></span><br><span class="line">        <span class="comment">//답 출력</span></span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>; i&lt;arr.length; i++)&#123;</span><br><span class="line">            <span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">0</span>; j&lt;arr.length; j++)&#123;</span><br><span class="line">                System.out.printf(<span class="string">"%d "</span>, arr[i][j]);</span><br><span class="line">            &#125;</span><br><span class="line">            System.out.println();</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">    &#125;<span class="comment">//end of main</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><br><br><br></p><h2 id="배운지식"><a href="#배운지식" class="headerlink" title="배운지식"></a>배운지식</h2><p>십자뒤집기가 이해되지않아 한참 규칙을 찾기위해 애썼다.<br>주어진 좌표(10,12)이면  [10, n]가 0이면 1로, 1이면 0으로 뒤집고 [n, 12]가 0이면 1로, 1이면 0으로 뒤집는다는 뜻이었다.<br>이제 제대로 이해했으니 다신 헷갈리지말자.</p><p><br><br><br></p><h2 id="다른-문제-풀이가-보고싶다면"><a href="#다른-문제-풀이가-보고싶다면" class="headerlink" title="다른 문제 풀이가 보고싶다면?"></a>다른 문제 풀이가 보고싶다면?</h2><ul><li><a href="https://github.com/sowon-dev/AlgorithmStudy_Java/tree/master/src/codeup100">모든 코드업100제 자바java 풀이</a></li></ul>]]></content:encoded>
      
      
      <category domain="https://sowon-dev.github.io/categories/Algorithm/">Algorithm</category>
      
      
      <category domain="https://sowon-dev.github.io/tags/Codeup100/">Codeup100</category>
      
      
      <comments>https://sowon-dev.github.io/2020/11/20/201121al-c1097/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>Algorithm전체목록List</title>
      <link>https://sowon-dev.github.io/2020/11/19/algorithmList/</link>
      <guid>https://sowon-dev.github.io/2020/11/19/algorithmList/</guid>
      <pubDate>Thu, 19 Nov 2020 15:00:00 GMT</pubDate>
      
      <description>&lt;h2 id=&quot;🌊코드업기초&quot;&gt;&lt;a href=&quot;#🌊코드업기초&quot; class=&quot;headerlink&quot; title=&quot;🌊코드업기초&quot;&gt;&lt;/a&gt;🌊코드업기초&lt;/h2&gt;&lt;ol&gt;
&lt;li&gt;&lt;a href=&quot;https://sowon-dev.github.io/2020/09/29/200930al-1/&quot;&gt;1011 : 문자 한 개 입력받아 그대로 출력하기&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://sowon-dev.github.io/2020/09/29/200930al/&quot;&gt;1012 : 실수 한 개 입력받아 그대로 출력하기, float실수소수점 표현하기&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://sowon-dev.github.io/2020/09/29/200930al-2/&quot;&gt;1018 : 시간 입력받아 그대로 출력하기, next()와 nextLine()차이, parseInt, valueOf의 차이&lt;/a&gt;</description>
      
      
      
      <content:encoded><![CDATA[<h2 id="🌊코드업기초"><a href="#🌊코드업기초" class="headerlink" title="🌊코드업기초"></a>🌊코드업기초</h2><ol><li><a href="https://sowon-dev.github.io/2020/09/29/200930al-1/">1011 : 문자 한 개 입력받아 그대로 출력하기</a></li><li><a href="https://sowon-dev.github.io/2020/09/29/200930al/">1012 : 실수 한 개 입력받아 그대로 출력하기, float실수소수점 표현하기</a></li><li><a href="https://sowon-dev.github.io/2020/09/29/200930al-2/">1018 : 시간 입력받아 그대로 출력하기, next()와 nextLine()차이, parseInt, valueOf의 차이</a><a id="more"></a></li><li><a href="https://sowon-dev.github.io/2020/10/05/201006al/">1023 : 실수 1개 입력받아 부분별로 출력하기, split대신 StringTokenizer사용하기</a></li><li><a href="https://sowon-dev.github.io/2020/10/06/201007al-c1034/">1034 : 8진 정수 1개 입력받아 10진수로 출력하기(설명), Scanner로 2진수, 8진수 16진수 받기</a></li><li><a href="https://sowon-dev.github.io/2020/10/07/201008al-c1041/">1041 : 문자 1개 입력받아 다음 문자 출력하기(설명), Scanner로 char받기</a></li><li><a href="https://sowon-dev.github.io/2020/10/11/201012al-c1059/">1059 : 비트단위로 NOT 하여 출력하기(설명), Scanner로 2진수받기</a></li><li><a href="https://sowon-dev.github.io/2020/10/12/201012al-c1064/">1064 : 정수 3개 입력받아 가장 작은 수 출력하기(설명), 삼항연산자로 최소값찾기</a></li><li><a href="https://sowon-dev.github.io/2020/10/12/201012al-c1066/">1066 : 정수 3개 입력받아 짝/홀 출력하기(설명), Scanner 기본구분자, whitespace(화이트스페이스)뜻</a></li><li><a href="https://sowon-dev.github.io/2020/10/13/201014al-c1071/">1071 : 0 입력될 때까지 무한 출력하기1, goto말고while문사용</a></li><li><a href="https://sowon-dev.github.io/2020/10/14/201015al-c1082/">1082 : 16진수 구구단?</a></li><li><a href="https://sowon-dev.github.io/2020/10/14/201015al-c1084/">1084 : 빛 섞어 색 만들기(설명)</a></li><li><a href="https://sowon-dev.github.io/2020/10/14/201015al-c1084/">1093 : 이상한 출석 번호 부르기1(설명)</a></li><li><a href="https://sowon-dev.github.io/2020/11/20/201121al-c1097/">1097 : 바둑알 십자 뒤집기(설명)</a></li><li><a href="https://sowon-dev.github.io/2020/11/20/201121al-c1099/">1099 : 성실한 개미(설명)</a></li></ol><p><br><br><br></p><h2 id="🌊leetcode-Easy레벨-전체"><a href="#🌊leetcode-Easy레벨-전체" class="headerlink" title="🌊leetcode Easy레벨 전체"></a>🌊leetcode Easy레벨 전체</h2><ol><li><a href="https://sowon-dev.github.io/2020/12/06/201206al-l0013/">13. Roman to Integer</a></li><li><a href="https://sowon-dev.github.io/2020/12/06/201206al-l0014/">14. Longest Common Prefix</a></li></ol><p><br><br><br></p><h2 id="🌊백준"><a href="#🌊백준" class="headerlink" title="🌊백준"></a>🌊백준</h2><ol><li><a href="https://sowon-dev.github.io/2020/10/18/201018al-b11005/">11005번 진법 변환2</a></li></ol><p><br><br><br><br><span style="color:white"><br>모든 코드업(codeup)(CodeUp)100제 자바(java)(JAVA) 풀이 : 1001 1002 1003 1004 1005 1006 1007 1008 1009 1010 1011 1012 1013 1014 1015 1016 1017 1018 1019 1020 1021 1022 1023 1024 1025 1026 1027 1028 1029 1030 1031 1032 1033 1034 1035 1036 1037 1038 1039 1040 1041 1042 1043 1044 1045 1046 1047 1048 1049 1050 1051 1052 1053 1054 1055 1056 1057 1058 1059 1060 1061 1062 1063 1064 1065 1066 1067 1068 1069 1070 1071 1072 1073 1074 1075 1076 1077 1078 1079 1080 1081 1082 1083 1084 1085 1086 1087 1088 1089 1090 1091 1092 1093 1094 1095 1096 1097 1098 1099 1100 1101 1102 1103 1104 1105 1106 1107 1108 1109 1110 1111 1112 1113 1114 1115 1116 1117 1118 1119 1120 1121 1122 1123 1124 1125 1126 1127 1128 1129 1130 1131 1132 1133 1134 1135 1136 1137 1138 1139 1140 1141 1142 1143 1144 1145 1146 1147 1148 1149 1150 1151 1152 1153 1154 1155 1156 1157 1158 1159 1160 1161 1162 1163 1164 1165 1166 1167 1168 1169 1170 1171 1172 1173 1174 1175 1176 1177 1178 1179 1180 1181 1182 1183 1184 1185 1186 1187 1188 1189 1190 1191 1192 1193 1194 1195 1196 1197 1198 1199 1200 1201 1202 1203 1204 1205 1206 1207 1208 1209 1210 1211 1212 1213 1214 1215 1216 1217 1218 1219 1220 1221 1222 1223 1224 1225 1226 1227 1228 1229 1230 1231 1232 1233 1234 1235 1236 1237 1238 1239 1240 1241 1242 1243 1244 1245 1246 1247 1248 1249 1250 1251 1252 1253 1254 1255 1256 1257 1258 1259 1260 1261 1262 1263 1264 1265 1266 1267 1268 1269 1270 1271 1272 1273 1274 1275 1276 1277 1278 1279 1280 1281 1282 1283 1284 1285 1286 1287 1288 1289 1290 1291 1292 1293 1294 1295 1296 1297 1298 1299 1300 1301 1302 1303 1304 1305 1306 1307 1308 1309 1310 1311 1312 1313 1314 1315 1316 1317 1318 1319 1320 1321 1322 1323 1324 1325 1326 1327 1328 1329 1330 1331 1332 1333 1334 1335 1336 1337 1338 1339 1340 1341 1342 1343 1344 1345 1346 1347 1348 1349 1350 1351 1352 1353 1354 1355 1356 1357 1358 1359 1360 1361 1362 1363 1364 1365 1366 1367 1368 1369 1370 1371 1372 1373 1374 1375 1376 1377 1378 1379 1380 1381 1382 1383 1384 1385 1386 1387 1388 1389 1390 1391 1392 1393 1394 1395 1396 1397 1398 1399 1400 1401 1402 1403 1404 1405 1406 1407 1408 1409 1410 1411 1412 1413 1414 1415 1416 1417 1418 1419 1420 1421 1422 1423 1424 1425 1426 1427 1428 1429 1430 1431 1432 1433 1434 1435 1436 1437 1438 1439 1440 1441 1442 1443 1444 1445 1446 1447 1448 1449 1450 1451 1452 1453 1454 1455 1456 1457 1458 1459 1460 1461 1462 1463 1464 1465 1466 1467 1468 1469 1470 1471 1472 1473 1474 1475 1476 1477 1478 1479 1480 1481 1482 1483 1484 1485 1486 1487 1488 1489 1490 1491 1492 1493 1494 1495 1496 1497 1498 1499 1500 1501 1502 1503 1504 1505 1506 1507 1508 1509 1510 1511 1512 1513 1514 1515 1516 1517 1518 1519 1520 1521 1522 1523 1524 1525 1526 1527 1528 1529 1530 1531 1532 1533 1534 1535 1536 1537 1538 1539 1540 1541 1542 1543 1544 1545 1546 1547 1548 1549 1550 1551 1552 1553 1554 1555 1556 1557 1558 1559 1560 1561 1562 1563 1564 1565 1566 1567 1568 1569 1570 1571 1572 1573 1574 1575 1576 1577 1578 1579 1580 1581 1582 1583 1584 1585 1586 1587 1588 1589 1590 1591 1592 1593 1594 1595 1596 1597 1598 1599 1600 1601 1602 1603 1604 1605 1606 1607 1608 1609 1610 1611 1612 1613 1614 1615 1616 1617 1618 1619 1620 1621 1622 1623 1624 1625 1626 1627 1628 1629 1630 1631 1632 1633 1634 1635 1636 1637 1638 1639 1640 1641 1642 1643 1644 1645 1646 1647 1648 1649 1650 1651 1652 1653 1654 1655 1656 1657 1658 1659 1660 1661 1662 1663 1664 1665 1666 1667 1668 1669 1670 1671 1672 1673 1674 1675 1676 1677 1678 1679 1680 1681 1682 1683 1684 1685 1686 1687 1688 1689 1690 1691 1692 1693 1694 1695 1696 1697 1698 1699 1700 1701 1702 1703 1704 1705 1706 1707 1708 1709 1710 1711 1712 1713 1714 1715 1716 1717 1718 1719 1720 1721 1722 1723 1724 1725 1726 1727 1728 1729 1730 1731 1732 1733 1734 1735 1736 1737 1738 1739 1740 1741 1742 1743 1744 1745 1746 1747 1748 1749 1750 1751 1752 1753 1754 1755 1756 1757 1758 1759 1760 1761 1762 1763 1764 1765 1766 1767 1768 1769 1770 1771 1772 1773 1774 1775 1776 1777 1778 1779 1780 1781 1782 1783 1784 1785 1786 1787 1788 1789 1790 1791 1792 1793 1794 1795 1796 1797 1798 1799 1800 1801 1802 1803 1804 1805 1806 1807 1808 1809 1810 1811 1812 1813 1814 1815 1816 1817 1818 1819 1820 1821 1822 1823 1824 1825 1826 1827 1828 1829 1830 1831 1832 1833 1834 1835 1836 1837 1838 1839 1840 1841 1842 1843 1844 1845 1846 1847 1848 1849 1850 1851 1852 1853 1854 1855 1856 1857 1858 1859 1860 1861 1862 1863 1864 1865 1866 1867 1868 1869 1870 1871 1872 1873 1874 1875 1876 1877 1878 1879 1880 1881 1882 1883 1884 1885 1886 1887 1888 1889 1890 1891 1892 1893 1894 1895 1896 1897 1898 1899 1900 1901 1902 1903 1904 1905 1906 1907 1908 1909 1910 1911 1912 1913 1914 1915 1916 1917 1918 1919 1920 1921 1922 1923 1924 1925 1926 1927 1928 1929 1930 1931 1932 1933 1934 1935 1936 1937 1938 1939 1940 1941 1942 1943 1944 1945 1946 1947 1948 1949 1950 1951 1952 1953 1954 1955 1956 1957 1958 1959 1960 1961 1962 1963 1964 1965 1966 1967 1968 1969 1970 1971 1972 1973 1974 1975 1976 1977 1978 1979 1980 1981 1982 1983 1984 1985 1986 1987 1988 1989 1990 1991 1992 1993 1994 1995 1996 1997 1998 1999<br></span></p>]]></content:encoded>
      
      
      <category domain="https://sowon-dev.github.io/categories/Algorithm/">Algorithm</category>
      
      
      <category domain="https://sowon-dev.github.io/tags/List/">List</category>
      
      
      <comments>https://sowon-dev.github.io/2020/11/19/algorithmList/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>[국비교육 자바JAVA 팀프로젝트]5. 팀플발표후기와 팀 프로젝트가 나에게 남긴 것</title>
      <link>https://sowon-dev.github.io/2020/11/16/201117team/</link>
      <guid>https://sowon-dev.github.io/2020/11/16/201117team/</guid>
      <pubDate>Mon, 16 Nov 2020 22:39:33 GMT</pubDate>
      
      <description>&lt;h2 id=&quot;팀플의-끝은-웹호스팅&quot;&gt;&lt;a href=&quot;#팀플의-끝은-웹호스팅&quot; class=&quot;headerlink&quot; title=&quot;팀플의 끝은 웹호스팅&quot;&gt;&lt;/a&gt;팀플의 끝은 웹호스팅&lt;/h2&gt;&lt;p&gt;완성한 팀 프로젝트를 cafe24 호스팅을 했다. 학원에서 호스팅서버는 6개월 정도 제공된다고 했다.&lt;br&gt;그 안에 취직이 되었으면 좋겠다!&lt;br&gt;처음 호스팅해보는 거라 시간이 오래걸릴 거라 예상했는데 역시나 오래 걸렸다.&lt;br&gt;웹 호스팅을 하면서 4시간 걸려서 MySQL연동하고 war파일 제대로 연동하고 올렸다니 짜잔-?!?!&lt;/p&gt;</description>
      
      
      
      <content:encoded><![CDATA[<h2 id="팀플의-끝은-웹호스팅"><a href="#팀플의-끝은-웹호스팅" class="headerlink" title="팀플의 끝은 웹호스팅"></a>팀플의 끝은 웹호스팅</h2><p>완성한 팀 프로젝트를 cafe24 호스팅을 했다. 학원에서 호스팅서버는 6개월 정도 제공된다고 했다.<br>그 안에 취직이 되었으면 좋겠다!<br>처음 호스팅해보는 거라 시간이 오래걸릴 거라 예상했는데 역시나 오래 걸렸다.<br>웹 호스팅을 하면서 4시간 걸려서 MySQL연동하고 war파일 제대로 연동하고 올렸다니 짜잔-?!?!</p><a id="more"></a><p>섬네일이 엑박으로 뜨는 에러가 발생했다.<br>섬네일이 엑박이 뜨는 이유는 경로설정에서 문제가 있었다. <code>server.xml</code>안에 코드를 썼는데 그걸 그대로 웹서버에 올리니 웹서버가 제대로 작동하지 않았다.<br>강사님께 도움을 요청했지만 아직 해결하지 못했다. 차근차근 해결해야지. <strong>성공할 때까지 하면 성공한다!</strong></p><p><br><br><br></p><h2 id="팀프로젝트-PPT의-완성"><a href="#팀프로젝트-PPT의-완성" class="headerlink" title="팀프로젝트 PPT의 완성"></a>팀프로젝트 PPT의 완성</h2><p>PPT구성을 어떻게 하면 좋을까 고민하다가 아래와 같이 틀을 잡았다.<br>우리 팀은 웹사이트뿐만 아니라 안드로이드 앱도 만들었기 때문에 웹 시연과 앱 발표를 함께 진행했다.</p><ul><li>팀 프로젝트 발표자료 구성<ol><li>프로젝트 개요</li><li>기술 스택</li><li>웹사이트 설명과 시연</li><li>모바일 앱 시연과 설명</li><li>질의응답</li></ol></li></ul><p>팀 프로젝트 발표자료는 틀을 먼저 만든 뒤 팀원 각자 힘 준 기능들을 최대 4장까지 만들어달라고 요청했다.<br>총 팀원이 8명으로 많다 보니 중구난방이 될까 봐 예시 먼저 작성해서 공유했다.</p><ul><li>팀 프로젝트 발표자료 작성 진행 방법<ul><li>발표구성을 잡고 PPT 컨셉을 잡음</li><li>예시 슬라이드 하나를 만들어서 공유</li><li>디자인이 들어간 빈 슬라이드를 10개 정도 만들어서 안에 내용만 채우면 되도록 공유</li><li>글씨체, 색상 통일 요청</li><li>마감 기한을 정함 (기한을 4일로 넉넉히 작성할 수 있도록 했다.)</li></ul></li></ul><p>위와 같이 진행한 덕분에 팀원들 각자의 스타일이 들어있지만, 통일감도 있는 멋진 PPT를 만들 수 있었다.<br>발표는 각자 구현한 기능을 발표할지 한 명이 발표할지 고민했었는데 아무도 발표하고 싶어 하지 않아서 내가 발표하기로 했다.<br>아무래도 내가 짠 코드가 아니다 보니 제대로 전달할 수 있을지에 대한 고민이 있었다. 이를 해결하기 위해 그들이 작성한 코드와 PPT슬라이드를 제대로 전달하기 위해서 정말 많이 정독했다.</p><p><br><br><br></p><h2 id="발표-당일"><a href="#발표-당일" class="headerlink" title="발표 당일"></a>발표 당일</h2><p>발표 1시간 전까지 PR을 계속 받고 머지를 진행했다. 어찌나 바쁘던지 로컬호스트에서 발표하기로 강사님께 양해를 구하고 원활한 발표를 위해 사전 세팅을 진행했다.<br>그 와중에 cafe24에 어떻게든 섬네일 기능을 고치려고 바둥바둥 노력했다.<br>정말 정신없이 바빴다 ㅋㅋㅋㅋ</p><p>강사님이 발표는 1시간 정도 주어지지만 보통 40분 정도 끝난다고 했다.<br>하지만…<br>웹 시연뿐만 아니라 앱 시연이 들어가서 그런 걸까? 1시간 꽉 채워서 발표했다.<br>질의응답에 많은 질문을 기대했는데 생각보다 많지 않아 아쉬웠다.</p><p>우리 팀은 나와 앱 개발 담당한 팀원 총 2명이 발표를 진행하였고 발표가 끝난 후 각 기능을 구현한 팀원들이 질의를 받고 응답했다. 발표 후 아쉬웠던 점이 있다. 시연 시 몇몇 기능을 누락했다. 특히 내가 공들여 구현한 댓글기능 시연을 완전히 잊어버렸다 ㅋㅋㅋ 후 연습 많이 했는데 실수를 해서 아쉬웠다. </p><p>다른 팀은 각자 구현한 기능 슬라이드 발표 후 해당 기능만 시연하는 형식으로 진행했다. 이 방법이 살짝 아쉬웠던 점은 팀프로젝트의 기능들은 유기적으로 연결되어있는데 기능담당자가 자신이 담당한 기능만 발표하다 보니 유기적인 연결을 볼 수 없었다. 하지만 장점은 나처럼 까먹지 않고… 모든 기능을 빠짐없이 시연할 수 있다는 점이었다!</p><p><br><br><br></p><h2 id="팀프로젝트가-나에게-남긴-것"><a href="#팀프로젝트가-나에게-남긴-것" class="headerlink" title="팀프로젝트가 나에게 남긴 것"></a>팀프로젝트가 나에게 남긴 것</h2><ol><li>협업능력 UP!<br>알고 있었지만 나는 역시 <strong>원격 협업</strong>에 능한 사람이었다. 대면하지 않더라도 여러 <strong>협업 툴</strong>을 통해 긴밀하게 팀원들과 연결되어있음을 느낄 수 있었다. 이번 협업 툴의 선택은 정말 만족스러웠다. 뿌-듯<br>다음 팀플이 있다면 깃헙의 issue와 projects를 연결하여 이용하고 싶다.<br>또한 최근 사랑에 빠진 노션을 이용해보고 싶다.<br>카카오톡으로 이야기를 하다 보니 각 기능에 대한 이야기는 해당 담당자끼리 또 다른 톡방을 만들게 되고 그러다 보니 공유가 원활하지 않고 또한 여러 톡방이 생겨 복잡해져 버렸다.<br>슬랙이나 issue, 노션을 사용하여 이러한 복잡함을 해결할 수 있기때문에 다음번에는 꼭 이용해보고싶다.</li><li>코드읽는 능력 UP!<br>팀원들이 구현 중 도움이 필요할 때 도와준 적이 있다. 다양한 팀원들을 도와주다 보니 다양한 스타일의 코드와 주석을 접하게 되어서 코드를 읽는 능력이 많이 향상되었다. 신입으로 입사를 해도 다른 개발자가 쓴 코드와 주석을 읽는 시간이 더 많을 텐데 미리 경험할 수 있는 값진 시간이었다.</li><li>팀원을 믿는 능력 UP!<br>성격이 완벽주의적인 면이 있어서 내 파트가 아닌데도 스스로 개선점을 찾아 고생해서 혼자서 수정하곤 한다.<br>이번에도 역시나 기능 통합시 몇몇 부분을 고치고 있는 나를 발견해버렸다. 그러다보니 자꾸 지쳐갔다…..<br>팀플에서 팀장이 지치면 안되기 때문에 팀원을 믿기위한 장치를 고안했다.<br>기능 테스트를 모든 팀원들에게 요청하고 각 기능 담당자가 팀원들의 테스트 결과를 보고 스스로 고칠 수 있도록 유도했다.<br>이를 통해서 팀원을 믿고 의지하는 능력이 향상되었다.</li><li>마음수련 능력 UP!<br>모두가 다 그렇지만 인생사 계획대로 되는 일이 많지 않다.<br>팀플도 마찬가지이다. 각자의 사정으로 계획에 차질이 생기고 마감기한은 다가오고 숨이 막히는 기분이었다.<br>특히 계획을 성실히 지켜준 팀원들에게 미안했다.<br>그런 마음이 들 때마다 나는 되뇌었다.</li></ol><p>‘괜찮아. 모두 그들의 방식으로 최선을 다하고 있는 거야.’<br>‘완성되지 않아도 괜찮아.’</p><p>완성되어야만 한다고 강력히 생각하면서도 말이라도 입밖으로 내어봤다.ㅋㅋㅋㅋㅋ<br>다름을 인정하려고 노력하고 이번엔 꽤 성공적이었다.<br>팀플은 여전히 어렵지만 나는 이번 팀플을 통해 더 나은 내가 되었다.<br>성장하는 느낌을 받는 건 항상 좋은 일이다.<br>앞으로도 더 성장하는 내가 되고 싶다.</p>]]></content:encoded>
      
      
      <category domain="https://sowon-dev.github.io/categories/Journal/">Journal</category>
      
      <category domain="https://sowon-dev.github.io/categories/Journal/Team-Project/">Team Project</category>
      
      
      <category domain="https://sowon-dev.github.io/tags/Journal/">Journal</category>
      
      
      <comments>https://sowon-dev.github.io/2020/11/16/201117team/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>기술블로그 추천</title>
      <link>https://sowon-dev.github.io/2020/11/16/201117techbloglist/</link>
      <guid>https://sowon-dev.github.io/2020/11/16/201117techbloglist/</guid>
      <pubDate>Mon, 16 Nov 2020 22:24:50 GMT</pubDate>
      
      <description>&lt;h2 id=&quot;추천하는-기술블로그&quot;&gt;&lt;a href=&quot;#추천하는-기술블로그&quot; class=&quot;headerlink&quot; title=&quot;추천하는 기술블로그&quot;&gt;&lt;/a&gt;추천하는 기술블로그&lt;/h2&gt;&lt;p&gt;11번가 OpenAPI &lt;a href=&quot;https://openapi.11st.co.kr/openapi/OpenApiFrontMain.tmall&quot;&gt;https://openapi.11st.co.kr/openapi/OpenApiFrontMain.tmall&lt;/a&gt;&lt;br&gt;
가비아 : &lt;a href=&quot;https://blog.naver.com/gabianow(그룹웨어&quot;&gt;https://blog.naver.com/gabianow(그룹웨어&lt;/a&gt;)&lt;br&gt;
네이버 밴드 : &lt;a href=&quot;https://developers.band.us/&quot;&gt;https://developers.band.us/&lt;/a&gt;&lt;br&gt;
네이버 D2 : &lt;a href=&quot;https://d2.naver.com/home&quot;&gt;https://d2.naver.com/home&lt;/a&gt;&lt;br&gt;</description>
      
      
      
      <content:encoded><![CDATA[<h2 id="추천하는-기술블로그"><a href="#추천하는-기술블로그" class="headerlink" title="추천하는 기술블로그"></a>추천하는 기술블로그</h2><p>11번가 OpenAPI <a href="https://openapi.11st.co.kr/openapi/OpenApiFrontMain.tmall">https://openapi.11st.co.kr/openapi/OpenApiFrontMain.tmall</a><br>가비아 : <a href="https://blog.naver.com/gabianow(그룹웨어">https://blog.naver.com/gabianow(그룹웨어</a>)<br>네이버 밴드 : <a href="https://developers.band.us/">https://developers.band.us/</a><br>네이버 D2 : <a href="https://d2.naver.com/home">https://d2.naver.com/home</a><br><a id="more"></a>NBP : <a href="https://blog.naver.com/n_cloudplatform(네이버">https://blog.naver.com/n_cloudplatform(네이버</a> 클라우드)<br> 아임포트 : <a href="https://www.iamport.kr/pricing">https://www.iamport.kr/pricing</a> (pg사 연동 ,문자보내기) 당근마켓 : <a href="https://medium.com/daangn">https://medium.com/daangn</a><br> 드라마앤컴퍼니 : <a href="https://blog.dramancompany.com/">https://blog.dramancompany.com/</a><br> (리멤버 앱)<br> 라인 : <a href="https://engineering.linecorp.com/ko/blog/">https://engineering.linecorp.com/ko/blog/</a> <a href="https://engineering.linecorp.com/ja/(일본">https://engineering.linecorp.com/ja/(일본</a>)<br> 메가존 : <a href="https://megazone.tistory.com/">https://megazone.tistory.com/</a><br> 빌드업웍스 <a href="https://blog.naver.com/buw00882">https://blog.naver.com/buw00882</a><br> 알리바바 <a href="https://github.com/alibaba">https://github.com/alibaba</a><br> 우아한 형제들 <a href="https://woowabros.github.io/">https://woowabros.github.io/</a><br> 이노그리드 <a href="http://www.innogrid.com/">http://www.innogrid.com/</a> <a href="https://blog.naver.com/innogrid">https://blog.naver.com/innogrid</a> (클라우드)<br> 카카오 <a href="https://www.kakaocorp.com/">https://www.kakaocorp.com/</a><br> 카카오기술블로그 <a href="https://tech.kakao.com/">https://tech.kakao.com/</a><br> 카카오 TV <a href="https://tv.kakao.com/channel/2743187/video">https://tv.kakao.com/channel/2743187/video</a><br> 쿠팡 <a href="https://medium.com/coupang-tech">https://medium.com/coupang-tech</a><br> LG CNS <a href="https://blog.lgcns.com/">https://blog.lgcns.com/</a><br> SK 플래닛 <a href="https://skpblog.tistory.com/">https://skpblog.tistory.com/</a><br> <a href="https://www.skplanet.com/main">https://www.skplanet.com/main</a><br> 한국 데이터 산업 진흥원 <a href="https://www.kdata.or.kr/">https://www.kdata.or.kr/</a></p><p> 레진 기술블로그 <a href="https://tech.lezhin.com/">https://tech.lezhin.com/</a><br> Mozilla <a href="http://hacks.mozilla.or.kr/">http://hacks.mozilla.or.kr/</a><br> 마켓 컬리 <a href="https://helloworld.kurly.com/">https://helloworld.kurly.com/</a></p><p> Airbnb <a href="https://medium.com/airbnb-engineering">https://medium.com/airbnb-engineering</a><br> Netflix <a href="https://netflixtechblog.com/">https://netflixtechblog.com/</a><br> facebook <a href="https://engineering.fb.com/">https://engineering.fb.com/</a><br> Spoqa(도도포인트) <a href="https://spoqa.github.io/jobs/">https://spoqa.github.io/jobs/</a></p><p> google <a href="https://developers.googleblog.com/">https://developers.googleblog.com/</a></p>]]></content:encoded>
      
      
      <category domain="https://sowon-dev.github.io/categories/Journal/">Journal</category>
      
      
      <category domain="https://sowon-dev.github.io/tags/Journal/">Journal</category>
      
      <category domain="https://sowon-dev.github.io/tags/ITWILL-JAVA/">ITWILL(JAVA)</category>
      
      
      <comments>https://sowon-dev.github.io/2020/11/16/201117techbloglist/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>[ITWILL : JSP] JSP전체목록List</title>
      <link>https://sowon-dev.github.io/2020/11/16/jspList/</link>
      <guid>https://sowon-dev.github.io/2020/11/16/jspList/</guid>
      <pubDate>Mon, 16 Nov 2020 15:00:00 GMT</pubDate>
      
      <description>&lt;h2 id=&quot;🌷프로그래밍기초&quot;&gt;&lt;a href=&quot;#🌷프로그래밍기초&quot; class=&quot;headerlink&quot; title=&quot;🌷프로그래밍기초&quot;&gt;&lt;/a&gt;🌷프로그래밍기초&lt;/h2&gt;&lt;ol&gt;
&lt;li&gt;&lt;a href=&quot;https://sowon-dev.github.io/2020/05/28/200528jspi/&quot;&gt;프로그래밍기초이론, 하드웨어 vs 소프트웨어 vs 펌웨어, 기억장치, 클라이언트 vs 서버&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&quot;🌷JS기초&quot;&gt;&lt;a href=&quot;#🌷JS기초&quot; class=&quot;headerlink&quot; title=&quot;🌷JS기초&quot;&gt;&lt;/a&gt;🌷JS기초&lt;/h2&gt;&lt;ol&gt;
&lt;li&gt;&lt;a href=&quot;https://sowon-dev.github.io/2020/06/01/200601jspi/&quot;&gt;JS기초이론, Compile VS Interprete, 변수, js라이브러리,객체타입&lt;/a&gt;</description>
      
      
      
      <content:encoded><![CDATA[<h2 id="🌷프로그래밍기초"><a href="#🌷프로그래밍기초" class="headerlink" title="🌷프로그래밍기초"></a>🌷프로그래밍기초</h2><ol><li><a href="https://sowon-dev.github.io/2020/05/28/200528jspi/">프로그래밍기초이론, 하드웨어 vs 소프트웨어 vs 펌웨어, 기억장치, 클라이언트 vs 서버</a></li></ol><h2 id="🌷JS기초"><a href="#🌷JS기초" class="headerlink" title="🌷JS기초"></a>🌷JS기초</h2><ol><li><a href="https://sowon-dev.github.io/2020/06/01/200601jspi/">JS기초이론, Compile VS Interprete, 변수, js라이브러리,객체타입</a><a id="more"></a></li><li><a href="https://sowon-dev.github.io/2020/06/02/200602jspi/">JS를 문서에 나타내는 3가지방법, undefined VS null, 백의자리 Math.floor(), 복합대입연산자로table생성, A++과 ++A차이점, ==과===차이점, 논리표</a></li><li><a href="https://sowon-dev.github.io/2020/06/03/200603jspi/">JAVA SE/EE/ME 차이점, JAVA EE 설정. Tomcat 설치및설정, 이클립스 단축키</a></li><li><a href="https://sowon-dev.github.io/2020/06/04/200604jspi/">아이디와 비번입력, 새로고침location.reload(), 주석한번에 단축키, switch문 출력문 한줄리팩토링</a></li><li><a href="https://sowon-dev.github.io/2020/06/08/200609jspi/">반복문 for 순서 자세히, 개발자 도구로 디버깅, 기본 반복문암기, for문과 if문의 자리바꿈에 따른 변화, 반복문의 전위연산 VS 후위연산, do while문</a></li><li><a href="https://sowon-dev.github.io/2020/06/11/200611jspi/">무한반복문, 보조제어(break와continue)문, 익명함수, 재귀함수, 지역변수를 전역에서 사용하는 방법, 내장함수</a></li></ol><h2 id="🌷JS기초-객체-내장객체-브라우저객체모델-BOM-문서객체모델-DOM"><a href="#🌷JS기초-객체-내장객체-브라우저객체모델-BOM-문서객체모델-DOM" class="headerlink" title="🌷JS기초 : 객체 (내장객체, 브라우저객체모델(BOM), 문서객체모델(DOM))"></a>🌷JS기초 : 객체 (내장객체, 브라우저객체모델(BOM), 문서객체모델(DOM))</h2><ol><li><a href="https://sowon-dev.github.io/2020/06/12/200612jspi/">Object객체 전체개념, tv채널객체함수, new를 쓰고 안쓰고의 차이</a></li><li><a href="https://sowon-dev.github.io/2020/06/12/200612jspi2/">Date객체 자세히, 디데이구하는 함수</a></li><li><a href="https://sowon-dev.github.io/2020/06/15/200615jspi/">Array객체 (for ~ in구문, join(), reverse(), sort())</a></li><li><a href="https://sowon-dev.github.io/2020/06/15/200615jspi2/">String객체, 짤라오는 함수 4종류 .substring(), slice(), substr(), charAt(), .indexOf()와 .lastIndexOf()차이, .concat(), .split(), ID자릿수를 제한하는 이메일 유효성검사</a></li><li><a href="https://sowon-dev.github.io/2020/06/15/200615jspi3/">이벤트리스너와 이벤트핸들러, 브라우저객체모델, window객체전체</a></li><li><a href="https://sowon-dev.github.io/2020/06/16/200616jspi/">브라우저객체모델안의 Document객체 (bgColor와 fgColor사용,  img태그에 접근하여 속성 사용, 랜덤 img 출력하기)</a></li><li><a href="https://sowon-dev.github.io/2020/06/16/200616jspi2/">브라우저객체모델안의 location객체</a></li><li><a href="https://sowon-dev.github.io/2020/06/17/200617jspi/">브라우저객체모델안의 history객체, screen객체, navigator객체</a></li><li><a href="https://sowon-dev.github.io/2020/06/16/200617jspi2/">문서 객체 모델안의 form태그, 페이지이동방식(get과 post), focus() vs blur() vs select()</a></li><li><a href="https://sowon-dev.github.io/2020/06/18/200618jspi/">문서 객체 모델안의 if문에 return;의 역할, radio태그, checkbox태그</a></li></ol><h2 id="🌷JS실습"><a href="#🌷JS실습" class="headerlink" title="🌷JS실습"></a>🌷JS실습</h2><ol><li><a href="https://sowon-dev.github.io/2020/06/22/200622jspi/">js로 간단한 회원가입페이지 작성하기</a></li></ol><h2 id="🌷JSP기초"><a href="#🌷JSP기초" class="headerlink" title="🌷JSP기초"></a>🌷JSP기초</h2><ol><li><a href="https://sowon-dev.github.io/2020/06/22/200622jspi2/">JSP 첫 프로젝트 톰캣과 연결</a></li><li><a href="https://sowon-dev.github.io/2020/06/23/200623jspi/">JSP 주석과 JSP directive, JSP 스크립트 요소</a></li><li><a href="https://sowon-dev.github.io/2020/06/24/200624jspi/">JAVA DATATYPE, Integer.parseInt(문자열), 동일한 파라미터의 값을 가지는 데이터가 여러개있을 경우 변수로 가져오기</a></li><li><a href="https://sowon-dev.github.io/2020/07/15/200715jspi2/">커넥션풀(Connection Pool)</a></li><li><a href="https://sowon-dev.github.io/2020/07/16/200716jspi/">Wrapper클래스, 오토 박싱과 오토 언박싱, hierarchy확인법</a></li><li><a href="https://sowon-dev.github.io/2020/09/23/200923jspi-2/">자바 클래스(객체) vs 추상클래스 vs 인터페이스</a></li></ol><h2 id="🌷JSP기초-내장객체-중-영역객체"><a href="#🌷JSP기초-내장객체-중-영역객체" class="headerlink" title="🌷JSP기초 : 내장객체 중 영역객체"></a>🌷JSP기초 : 내장객체 중 영역객체</h2><ol><li><a href="https://sowon-dev.github.io/2020/06/23/200623jspi2/">내장객체</a></li><li><a href="https://sowon-dev.github.io/2020/06/24/200624jspi2/">영역객체scope</a></li><li><a href="https://sowon-dev.github.io/2020/06/25/200625jspi/">영역객체 안에서 사용하는 속성(Attribute), 링크이동 방법별 전달가능한 영역(scope)</a></li><li><a href="https://sowon-dev.github.io/2020/06/25/200625jspi2/">JSP 디렉티브(directive) 중 include VS 액션태그 include, jspf확장자 파일</a></li><li><a href="https://sowon-dev.github.io/2020/06/28/200629jspi/">세션(Session)</a></li><li><a href="https://sowon-dev.github.io/2020/06/29/200629jspi2/">==과 str.equals(str2) 차이, 객체와 클래스</a></li><li><a href="https://sowon-dev.github.io/2020/07/01/200701jspi/">쿠키(Cookie)</a></li></ol><h2 id="🌷MySQL"><a href="#🌷MySQL" class="headerlink" title="🌷MySQL"></a>🌷MySQL</h2><ol><li><a href="https://sowon-dev.github.io/2020/06/30/200701jspi2/">MYSQL 설치, MYSQL환경변수설정, cmd에서 명령어 잘못입력해서 mysql못빠져나갈때</a></li><li><a href="https://sowon-dev.github.io/2020/07/01/200702jspi/">MYSQL 접속순서, DB명령어, 테이블명령어, 데이터명령어</a></li><li><a href="https://sowon-dev.github.io/2020/07/01/200702jspi2/">MySQL 한글깨짐현상 두가지 해결방법 : cmd와 Workbench, 이클립스와 MYSQL연결</a></li></ol><h2 id="🌷JDBC"><a href="#🌷JDBC" class="headerlink" title="🌷JDBC"></a>🌷JDBC</h2><ol><li><a href="https://sowon-dev.github.io/2020/07/03/200703jspi/">JDBC활용 - import쓰는 이유, form페이지로 받은 데이터를 DB에 insert하는 방법</a></li><li><a href="https://sowon-dev.github.io/2020/07/03/200703jspi2/">JDBC활용 - JAVA에서 DB 정보 지우기 2가지방법</a></li><li><a href="https://sowon-dev.github.io/2020/07/06/200706jspi/">JDBC활용 - DB에서 고객정보를 불러와서 HTML테이블에 담기</a></li><li><a href="https://sowon-dev.github.io/2020/07/06/200706jspi2/">JDBC활용 - TIMESTAMP주의점, JDBC에서 데이터처리</a></li><li><a href="https://sowon-dev.github.io/2020/07/07/200707jspi/">JDBC활용 - 회원정보수정페이지만들기</a></li><li><a href="https://sowon-dev.github.io/2020/07/08/200708jspi/">JDBC활용 - 회원목록출력하는데 관리자는 빼고 출력하기, 자바 에러 두종류</a></li></ol><h2 id="🌷JAVABEAN"><a href="#🌷JAVABEAN" class="headerlink" title="🌷JAVABEAN"></a>🌷JAVABEAN</h2><ol><li><a href="https://sowon-dev.github.io/2020/07/09/200709jspi/">Javabean : 기초</a></li><li><a href="https://sowon-dev.github.io/2020/07/09/200709jspi2/">자바빈 실습1 : 회원가입페이지만들기</a></li><li><a href="https://sowon-dev.github.io/2020/07/14/200714jspi/">자바빈 실습2 : 로그인 및 로그아웃페이지만들기</a></li><li><a href="https://sowon-dev.github.io/2020/07/14/200714jspi2/">자바빈 실습3 : 회원정보조회 및 수정페이지만들기</a></li><li><a href="https://sowon-dev.github.io/2020/07/15/200715jspi/">자바빈 실습4 : web.xml, 회원정보삭제페이지</a></li><li><a href="https://sowon-dev.github.io/2020/07/15/200715jspi3/">자바빈 실습5 : 관리자만 확인할 수 있는 회원목록페이지만들기</a></li><li><a href="https://sowon-dev.github.io/2020/07/20/200720jspi2/">자바빈 실습6 : 게시판만들기(글쓰기)</a></li><li><a href="https://sowon-dev.github.io/2020/07/21/200721jspi/">자바빈 실습7 : 게시판만들기(글 총 갯수, 글목록, 페이징처리)</a></li><li><a href="https://sowon-dev.github.io/2020/07/22/200722jspi/">자바빈 실습8 : 게시판만들기(글내용보기, 글수정하기)</a></li><li><a href="https://sowon-dev.github.io/2020/07/23/200723jspi/">자바빈 실습9 : 게시판만들기(글삭제하기)</a></li><li><a href="https://sowon-dev.github.io/2020/07/23/200723jspi2/">자바빈 실습10 : 게시판만들기(답글쓰기)</a></li></ol><h2 id="🌷파일업로드와-다운로드-기능-구현"><a href="#🌷파일업로드와-다운로드-기능-구현" class="headerlink" title="🌷파일업로드와 다운로드 기능 구현"></a>🌷파일업로드와 다운로드 기능 구현</h2><ol><li><a href="https://sowon-dev.github.io/2020/07/27/200727jspi/">자바빈 실습11 : MultipartRequest클래스</a></li><li><a href="https://sowon-dev.github.io/2020/07/27/200727jspi2/">자바빈 실습12 : 파일업로드</a></li><li><a href="https://sowon-dev.github.io/2020/07/27/200727jspi3/">자바빈 실습13 : 파일다운로드</a></li><li><a href="https://sowon-dev.github.io/2020/07/28/200728jspi/">자바빈 실습14 : ServletContext 사용하여 파일업로드와 다운로드</a></li></ol><h2 id="🌷자료구조"><a href="#🌷자료구조" class="headerlink" title="🌷자료구조"></a>🌷자료구조</h2><ol><li><a href="https://sowon-dev.github.io/2020/07/16/200716jspi2/">자료구조1 : Collections Framwork(Set계열, List계열)</a></li><li><a href="https://sowon-dev.github.io/2020/07/20/200720jspi/">자료구조2 : Stack클래스, Queue인터페이스, Map인터페이스</a></li></ol><h2 id="🌷model1-홈페이지만들기"><a href="#🌷model1-홈페이지만들기" class="headerlink" title="🌷model1 홈페이지만들기"></a>🌷model1 홈페이지만들기</h2><ol><li><a href="https://sowon-dev.github.io/2020/07/29/200729jspi/">홈페이지만들기1 : 프로젝트 시작 설정 및 자바빈생성과 DB연결</a></li><li><a href="https://sowon-dev.github.io/2020/07/30/200730jspi/">홈페이지만들기2 : 아이디중복체크 포함한 회원가입기능 구현</a></li><li><a href="https://sowon-dev.github.io/2020/07/30/200730jspi2/">홈페이지만들기3 : 로그인/로그아웃 기능 구현</a></li><li><a href="https://sowon-dev.github.io/2020/08/03/200803jspi/">홈페이지만들기4 : 게시판글쓰기구현</a></li><li><a href="https://sowon-dev.github.io/2020/08/04/200804jspi/">홈페이지만들기5 : 게시판에 글목록표시구현</a></li></ol><h2 id="🌷JQuery"><a href="#🌷JQuery" class="headerlink" title="🌷JQuery"></a>🌷JQuery</h2><ol><li><a href="https://sowon-dev.github.io/2020/08/04/200804jspi2/">JQuery1 : JQuery 사용설정, 선택자, css()</a></li><li><a href="https://sowon-dev.github.io/2020/08/05/200805jspi/">JQuery2 : attr(), html()와 text(), append()와 prepend()</a></li><li><a href="https://sowon-dev.github.io/2020/08/05/200805jspi2/">JQuery3 : setInterval()와 clearInteval(), CDATA VS PCDATA</a></li><li><a href="https://sowon-dev.github.io/2020/08/06/200806jspi/">JQuery4 : click(), bind(), event.preventDefault(), unbind(), keyup(), 유효성체크(자바스크립트 vs 제이쿼리)</a></li><li><a href="https://sowon-dev.github.io/2020/08/06/200806jspi2/">JQuery5 : 유효성체크(자바스크립트 vs 제이쿼리), 제이쿼리 기본효과</a></li><li><a href="https://sowon-dev.github.io/2020/08/07/200807jspi/">JQuery6 : innerfade 라이브러리, animate(속성, 속도, 콜백함수)</a></li></ol><h2 id="🌷Ajax"><a href="#🌷Ajax" class="headerlink" title="🌷Ajax"></a>🌷Ajax</h2><ol><li><a href="https://sowon-dev.github.io/2020/08/07/200807jspi2/">Ajax : Ajax특징, XMLHttpRequest클래스, txt 페이지 처리</a></li><li><a href="https://sowon-dev.github.io/2020/08/10/200810jspi/">Ajax : xml처리, json처리</a></li><li><a href="https://sowon-dev.github.io/2020/08/10/200810jspi2/">Ajax : DB데이터를 불러와서 json형태로 변경하여 출력하기</a></li></ol><h2 id="🌷JSTL과-EL"><a href="#🌷JSTL과-EL" class="headerlink" title="🌷JSTL과 EL"></a>🌷JSTL과 EL</h2><ol><li><a href="https://sowon-dev.github.io/2020/08/11/200811jspi/">JSTL과 EL : JSTL과 EL개념, CORE 라이브러리(out)</a></li><li><a href="https://sowon-dev.github.io/2020/08/11/200811jspi2/">JSTL과 EL : CORE 라이브러리(set)</a></li><li><a href="https://sowon-dev.github.io/2020/08/12/200812jspi/">JSTL과 EL : CORE 라이브러리(if, forEach, forTokens, choose)</a></li><li><a href="https://sowon-dev.github.io/2020/08/12/200812jspi2/">JSTL과 EL : fmt 라이브러리(formatDate, formatNumber)</a></li><li><a href="https://sowon-dev.github.io/2020/08/13/200813jspi/">JSTL과 EL : EL태그로 동일한 name의 파라미터를 EL태그로 쉽게 가져오기</a></li><li><a href="https://sowon-dev.github.io/2020/08/14/200814jspi/">JSTL과 EL : EL태그 연산자</a></li><li><a href="https://sowon-dev.github.io/2020/08/14/200814jspi2/">EL과 Servlet : RequestDispatcher.forward 로 페이지 이동 후 데이터별 출력방법</a></li></ol><h2 id="🌷model2-MVC패턴-쇼핑몰만들기"><a href="#🌷model2-MVC패턴-쇼핑몰만들기" class="headerlink" title="🌷model2(MVC패턴) 쇼핑몰만들기"></a>🌷model2(MVC패턴) 쇼핑몰만들기</h2><ol><li><a href="https://sowon-dev.github.io/2020/08/17/200817jspi/">Servlet : Servlet용어정리, model1과 model2(MVC구조) 개발방식 비교</a></li></ol><h3 id="쇼핑몰회원관리"><a href="#쇼핑몰회원관리" class="headerlink" title="쇼핑몰회원관리"></a>쇼핑몰회원관리</h3><ol><li><a href="https://sowon-dev.github.io/2020/08/17/200817jspi2/">Servlet회원관리1: 기본설정 및 가상주소생성</a></li><li><a href="https://sowon-dev.github.io/2020/08/19/200819jspi/">Servlet회원관리2: 회원가입</a></li><li><a href="https://sowon-dev.github.io/2020/08/19/200819jspi2/">Servlet회원관리3: 로그인</a></li><li><a href="https://sowon-dev.github.io/2020/08/19/200819jspi3/">Servlet회원관리4: 메인페이지와 로그아웃</a></li><li><a href="https://sowon-dev.github.io/2020/08/27/200827jspi/">Servlet회원관리5: 회원정보조회</a></li><li><a href="https://sowon-dev.github.io/2020/08/27/200827jspi2/">Servlet회원관리6: 회원탈퇴</a></li><li><a href="https://sowon-dev.github.io/2020/08/31/200831jspi/">Servlet회원관리7: 회원전체목록조회(관리자기능)</a></li></ol><h3 id="게시판"><a href="#게시판" class="headerlink" title="게시판"></a>게시판</h3><ol><li><a href="https://sowon-dev.github.io/2020/08/31/200831jspi2/">Servlet게시판1: 기초</a></li><li><a href="https://sowon-dev.github.io/2020/09/01/200901jspi/">Servlet게시판2: 게시판 글쓰기</a></li><li><a href="https://sowon-dev.github.io/2020/09/01/200901jspi2/">Servlet게시판3: 게시판 리스트·게시글전체목록·페이징처리</a></li><li><a href="https://sowon-dev.github.io/2020/09/03/200903jspi/">Servlet게시판4: 글 내용보기</a></li><li><a href="https://sowon-dev.github.io/2020/09/03/200903jspi2/">Servlet게시판5: 글 수정하기</a></li><li><a href="https://sowon-dev.github.io/2020/09/07/200907jspi/">Servlet게시판6: 글 삭제하기</a></li><li><a href="https://sowon-dev.github.io/2020/09/07/200907jspi2/">Servlet게시판7: 답글하기</a></li><li><a href="https://sowon-dev.github.io/2020/09/07/200907jspi3/">Servlet게시판8: 파일업로드·파일보기</a></li></ol><h3 id="관리자전용-상품목록과-등록게시판"><a href="#관리자전용-상품목록과-등록게시판" class="headerlink" title="관리자전용 상품목록과 등록게시판"></a>관리자전용 상품목록과 등록게시판</h3><ol><li><a href="https://sowon-dev.github.io/2020/09/07/200907jspi4/">Servlet관리자전용상품1 : 기초</a></li><li><a href="https://sowon-dev.github.io/2020/09/07/200907jspi5/">Servlet관리자전용상품2 : 상품등록</a></li><li><a href="https://sowon-dev.github.io/2020/09/08/200908jspi/">Servlet관리자전용상품3 : 상품목록·상품리스트</a></li><li><a href="https://sowon-dev.github.io/2020/09/09/200909jspi/">Servlet관리자전용상품4 : 상품수정·인기상품처리</a></li><li><a href="https://sowon-dev.github.io/2020/09/09/200909jspi2/">Servlet관리자전용상품5 : 상품삭제</a></li></ol><h3 id="일반유저용-상품목록"><a href="#일반유저용-상품목록" class="headerlink" title="일반유저용 상품목록"></a>일반유저용 상품목록</h3><ol><li><a href="https://sowon-dev.github.io/2020/09/10/200910jspi/">Servlet일반상품1 : 기초</a></li><li><a href="https://sowon-dev.github.io/2020/09/10/200910jspi2/">Servlet일반상품2 : 카테고리별 상품목록·상품리스트</a></li><li><a href="https://sowon-dev.github.io/2020/09/15/200915jspi/">Servlet일반상품3 : 상품상세정보</a></li></ol><h3 id="장바구니"><a href="#장바구니" class="headerlink" title="장바구니"></a>장바구니</h3><ol><li><a href="https://sowon-dev.github.io/2020/09/15/200915jspi2/">Servlet장바구니1 : 기초</a></li><li><a href="https://sowon-dev.github.io/2020/09/15/200915jspi3basket/">Servlet장바구니2 : 장바구니에 담기</a></li><li><a href="https://sowon-dev.github.io/2020/09/15/200915jspi4/">Servlet장바구니3 : 장바구니리스트, 장바구니에서 상품삭제</a></li></ol><h3 id="구매하기"><a href="#구매하기" class="headerlink" title="구매하기"></a>구매하기</h3><ol><li><a href="https://sowon-dev.github.io/2020/09/16/200916jspi/">Servlet구매하기1 : 기초</a></li><li><a href="https://sowon-dev.github.io/2020/09/17/200917jspi/">Servlet구매하기2 : 구매하기</a></li><li><a href="https://sowon-dev.github.io/2020/09/22/200922jspi/">Servlet구매하기3 : 주문목록</a></li><li><a href="https://sowon-dev.github.io/2020/09/22/200922jspi2/">Servlet구매하기4 : 주문상세정보페이지</a></li></ol><h3 id="관리자용-주문리스트"><a href="#관리자용-주문리스트" class="headerlink" title="관리자용 주문리스트"></a>관리자용 주문리스트</h3><ol><li><a href="https://sowon-dev.github.io/2020/09/23/200923jspi/">Servlet관리자용주문목록1 : 기초</a></li><li><a href="https://sowon-dev.github.io/2020/09/23/200923jspi-1/">Servlet관리자용주문목록2 : 고객주문목록</a></li><li>🌟<a href="https://sowon-dev.github.io/2020/09/23/200923jspi-3/">Servlet관리자용주문목록3 : 고객주문목록에서 주문 상태 및 운송장정보 변경</a></li><li><a href="https://sowon-dev.github.io/2020/09/24/200924jspi/">Servlet관리자용주문목록4 : 고객주문목록에서 삭제</a></li></ol><h2 id="🌷스프링프레임워크"><a href="#🌷스프링프레임워크" class="headerlink" title="🌷스프링프레임워크"></a>🌷스프링프레임워크</h2><ol><li><a href="https://sowon-dev.github.io/2020/10/04/201005springi/">프레임워크란, Spring 특징과 기능, 컨테이너란</a></li><li><a href="https://sowon-dev.github.io/2020/10/06/201007spring-1/">스프링(STS)설치 및 기본 설정</a></li><li><a href="https://sowon-dev.github.io/2020/10/07/201008stsAddShortcuts/">STS 단축키 추가하기(스프링 이클립스 단축키), System.out.printf()단축키</a></li><li><a href="https://sowon-dev.github.io/2020/10/05/201006springi/">Spring 기본 동작순서, JSP와 SPRING의 차이점</a></li><li><a href="https://sowon-dev.github.io/2020/10/03/201003spring-1/">제어의 역행(IoC)과 의존성 주입(DI)</a></li><li><a href="https://sowon-dev.github.io/2020/10/05/201006springi-1/">회원관리프로그램예시를 통한 MODEL2방식에서 스프링방식으로 변경</a></li><li><a href="https://sowon-dev.github.io/2020/10/06/201007spring/">관점 지향(AOP, Aspect-Oriented Programming) 총정리</a></li><li><a href="https://sowon-dev.github.io/2020/10/07/201008spring/">스프링 MVC패턴 프로젝트, 주요 어노테이션(Annotation)</a></li><li><a href="https://sowon-dev.github.io/2020/10/11/201012spring/">MAVEN REPOSITORY, My(i)Batis설치</a></li><li><a href="https://sowon-dev.github.io/2020/10/12/201013spring/">페이지이동하기, 파라미터가지고 페이지이동하기</a></li><li><a href="https://sowon-dev.github.io/2020/10/12/201013spring-1/">redirect나forward로 페이지이동하기, JSON데이터처리하기</a></li><li><a href="https://sowon-dev.github.io/2020/10/14/201014spring/">주니어레벨의 스프링MVC 개발순서, MyBatis(iBatis) 사용 방법 3가지</a></li><li><a href="https://sowon-dev.github.io/2020/10/15/201015spring/">JDBC로그 라이브러리 설치</a></li><li><a href="https://sowon-dev.github.io/2020/10/15/201015spring-1/">Spring MVC JUNIT TEST Failure와 Error차이</a></li><li><a href="https://sowon-dev.github.io/2020/10/19/201019spring/">스프링 웹계층 : 서비스(비즈니스 로직), 컨트롤러(프레젠테이션)</a></li><li><a href="https://sowon-dev.github.io/2020/10/19/201019spring-1/">한글처리</a></li></ol><h2 id="🌷스프링MVC-쇼핑몰만들기"><a href="#🌷스프링MVC-쇼핑몰만들기" class="headerlink" title="🌷스프링MVC 쇼핑몰만들기"></a>🌷스프링MVC 쇼핑몰만들기</h2><ol><li><a href="https://sowon-dev.github.io/2020/10/19/201019spring-2/">회원가입 및 로그인</a></li><li><a href="https://sowon-dev.github.io/2020/10/20/201020spring/">메인페이지, 로그아웃</a></li><li><a href="https://sowon-dev.github.io/2020/10/22/201022spring/">회원정보조회, 회원정보수정, 회원정보삭제</a></li><li><a href="https://sowon-dev.github.io/2020/10/26/201026spring/">관리자용 회원 리스트</a></li></ol><h2 id="스프링게시판"><a href="#스프링게시판" class="headerlink" title="스프링게시판"></a>스프링게시판</h2><ol><li><a href="https://sowon-dev.github.io/2020/10/26/201027spring/">스프링게시판1: 기초</a></li><li><a href="https://sowon-dev.github.io/2020/10/26/201027spring-1/">스프링게시판2: 파일구조와 DB테이블생성, 글쓰기테스트</a></li><li><a href="https://sowon-dev.github.io/2020/10/28/201028spring/">스프링게시판3: 글쓰기</a></li><li><a href="https://sowon-dev.github.io/2020/10/29/201029spring/">스프링게시판4: 글상세내용보기</a></li><li><a href="https://sowon-dev.github.io/2020/10/29/201029spring-1/">스프링게시판5: 글수정,글삭제</a></li><li><a href="https://sowon-dev.github.io/2020/11/01/201102spring/">스프링게시판6: Controller에서 예외처리</a></li><li><a href="https://sowon-dev.github.io/2020/11/01/201102spring-1/">스프링게시판7: 게시판 페이징처리</a></li></ol><h2 id="🌷REST-API"><a href="#🌷REST-API" class="headerlink" title="🌷REST API"></a>🌷REST API</h2><ol><li><a href="https://sowon-dev.github.io/2020/11/09/201110restapi/">REST란? RESTful이란? REST API란?</a></li><li><a href="https://sowon-dev.github.io/2020/11/10/201111restapi/">ResponseEntity 타입 클래스</a></li><li><a href="https://sowon-dev.github.io/2020/11/11/201112restapi/">페이지전달방식</a></li></ol>]]></content:encoded>
      
      
      <category domain="https://sowon-dev.github.io/categories/JSP/">JSP</category>
      
      
      <category domain="https://sowon-dev.github.io/tags/ITWILL-JAVA/">ITWILL(JAVA)</category>
      
      <category domain="https://sowon-dev.github.io/tags/List/">List</category>
      
      
      <comments>https://sowon-dev.github.io/2020/11/16/jspList/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>[REST API]페이지 전달방식</title>
      <link>https://sowon-dev.github.io/2020/11/11/201112restapi/</link>
      <guid>https://sowon-dev.github.io/2020/11/11/201112restapi/</guid>
      <pubDate>Wed, 11 Nov 2020 20:07:32 GMT</pubDate>
      
      <description>&lt;h2 id=&quot;Rest-방식의-사용원칙&quot;&gt;&lt;a href=&quot;#Rest-방식의-사용원칙&quot; class=&quot;headerlink&quot; title=&quot;Rest 방식의 사용원칙&quot;&gt;&lt;/a&gt;Rest 방식의 사용원칙&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;URI가 원하는 리소스를 의미한다. (영어 복수형으로 주소를 사용)&lt;/li&gt;
&lt;li&gt;URI에는 식별할 수 있는 데이터를 전달하는것이 일반적인 방법&lt;/li&gt;
&lt;li&gt;예를들어 게시판 - CRUD 이라면 사용가능한 주소형태는 아래와 같다.&lt;ul&gt;
&lt;li&gt;…/boards/123   =&amp;gt;  123번 글을 조회 &lt;/li&gt;
&lt;li&gt;…/boards/123/replies/11 =&amp;gt; 123번글의 11번째 댓글 조회&lt;/li&gt;
&lt;li&gt;…/boards/123/11  =&amp;gt; 123번글의 11번째 댓글 조회&lt;/li&gt;
&lt;li&gt;…/boards/ =&amp;gt; 신규 글용 작성</description>
      
      
      
      <content:encoded><![CDATA[<h2 id="Rest-방식의-사용원칙"><a href="#Rest-방식의-사용원칙" class="headerlink" title="Rest 방식의 사용원칙"></a>Rest 방식의 사용원칙</h2><ul><li>URI가 원하는 리소스를 의미한다. (영어 복수형으로 주소를 사용)</li><li>URI에는 식별할 수 있는 데이터를 전달하는것이 일반적인 방법</li><li>예를들어 게시판 - CRUD 이라면 사용가능한 주소형태는 아래와 같다.<ul><li>…/boards/123   =&gt;  123번 글을 조회 </li><li>…/boards/123/replies/11 =&gt; 123번글의 11번째 댓글 조회</li><li>…/boards/123/11  =&gt; 123번글의 11번째 댓글 조회</li><li>…/boards/ =&gt; 신규 글용 작성<a id="more"></a></li></ul></li></ul><p><br><br><br></p><h2 id="페이지-전달방식"><a href="#페이지-전달방식" class="headerlink" title="페이지 전달방식"></a>페이지 전달방식</h2><ul><li>[<code>/작업명/기본키 + 메서드 + 데이터</code>] 형태로 REST방식으로 페이지 전달하면 된다.</li></ul><table><thead><tr><th align="center">예시</th><th align="center">방식</th><th align="center">용도</th></tr></thead><tbody><tr><td align="center">…/boards/123</td><td align="center">GET</td><td align="center">자료 조회용</td></tr><tr><td align="center">…/boards/123</td><td align="center">DELETE</td><td align="center">자료 삭제용</td></tr><tr><td align="center">…/boards/, …/boards/new/</td><td align="center">POST</td><td align="center">신규 자료 작성용</td></tr><tr><td align="center">…/boards/123</td><td align="center">PUT</td><td align="center">자료 전체 수정용</td></tr><tr><td align="center">…/boards/123</td><td align="center">PATCH</td><td align="center">자료 일부 수정용</td></tr></tbody></table><p><img src="https://www.seobility.net/en/wiki/images/f/f1/Rest-API.png" alt="https://www.seobility.net/en/wiki/REST_API"></p><ul><li>크롬 웹 도구인 <a href="https://chrome.google.com/webstore/detail/arc-cookie-exchange/apcedakaoficjlofohhcmkkljehnmebp?utm_source=chrome-ntp-icon">ARC cookie exchange</a>를 사용하면 편하게 방식을 구분할 수 있다.</li></ul>]]></content:encoded>
      
      
      <category domain="https://sowon-dev.github.io/categories/Spring/">Spring</category>
      
      
      <category domain="https://sowon-dev.github.io/tags/TIL/">TIL</category>
      
      <category domain="https://sowon-dev.github.io/tags/ITWILL-JAVA/">ITWILL(JAVA)</category>
      
      
      <comments>https://sowon-dev.github.io/2020/11/11/201112restapi/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>[REST API]ResponseEntity 타입클래스</title>
      <link>https://sowon-dev.github.io/2020/11/10/201111restapi/</link>
      <guid>https://sowon-dev.github.io/2020/11/10/201111restapi/</guid>
      <pubDate>Tue, 10 Nov 2020 20:05:39 GMT</pubDate>
      
      <description>&lt;h2 id=&quot;RestController의-한계&quot;&gt;&lt;a href=&quot;#RestController의-한계&quot; class=&quot;headerlink&quot; title=&quot;@RestController의 한계&quot;&gt;&lt;/a&gt;&lt;code&gt;@RestController&lt;/code&gt;의 한계&lt;/h2&gt;&lt;p&gt;@RestController는 결과로 view를 제공하지 않기때문에 에러 발생유무를 확인할 수 없다.&lt;br&gt;이때 사용할 수 있는 것이 &lt;code&gt;웹 HTTP 상태 코드&lt;/code&gt;이다.&lt;/p&gt;</description>
      
      
      
      <content:encoded><![CDATA[<h2 id="RestController의-한계"><a href="#RestController의-한계" class="headerlink" title="@RestController의 한계"></a><code>@RestController</code>의 한계</h2><p>@RestController는 결과로 view를 제공하지 않기때문에 에러 발생유무를 확인할 수 없다.<br>이때 사용할 수 있는 것이 <code>웹 HTTP 상태 코드</code>이다.</p><a id="more"></a><p><br><br><br></p><h2 id="HTTP-상태코드"><a href="#HTTP-상태코드" class="headerlink" title="HTTP 상태코드"></a>HTTP 상태코드</h2><ul><li><a href="https://developer.mozilla.org/ko/docs/Web/HTTP/Status">HTTP 상태코드 MDN</a></li><li><a href="https://sowon-dev.github.io/2020/07/15/200715jspi/">에러처리하는 방법</a></li></ul><p><img src="https://player.slidesplayer.org/90/14780959/slides/slide_18.jpg" alt="https://slidesplayer.org/slide/14780959/"></p><table><thead><tr><th align="center">구분</th><th align="center">코드</th><th align="left">설명</th></tr></thead><tbody><tr><td align="center">100번대</td><td align="center"></td><td align="left">현재 데이터의 처리중인 상태</td></tr><tr><td align="center"></td><td align="center">100</td><td align="left">데이터의 일부만 서버가 받은 경우</td></tr><tr><td align="center">200번대</td><td align="center"></td><td align="left">정상적인 응답상태</td></tr><tr><td align="center"></td><td align="center">200</td><td align="left">에러가 없이 정상처리된 경우</td></tr><tr><td align="center"></td><td align="center">204</td><td align="left">정상처리가 되었으나 서버에 전달할 값이 없는 경우</td></tr><tr><td align="center">300번대</td><td align="center"></td><td align="left">다른 URL을 처리하는 상태</td></tr><tr><td align="center"></td><td align="center">301</td><td align="left">요청된 페이지가 새 URL로 변경된 경우</td></tr><tr><td align="center"></td><td align="center">304</td><td align="left">이미 기존의 데이터와 변경이 없는 경우</td></tr><tr><td align="center">400번대</td><td align="center"></td><td align="left">서버에서 인식불가한 상태</td></tr><tr><td align="center"></td><td align="center">400</td><td align="left">전송된 Request객체에 문제가 있어 서버가 인지하지 못하는 경우</td></tr><tr><td align="center"></td><td align="center">403</td><td align="left">서버에서 허락되지 않는 경우(서버에 접근권한이 없는 경우)</td></tr><tr><td align="center"></td><td align="center">404</td><td align="left">URL에 해당하는 자원을 찾을 수 없는 경우</td></tr><tr><td align="center"></td><td align="center">406</td><td align="left">전송방식의 오류 발생한 경우(주로 REST작동시 발생)</td></tr><tr><td align="center">500번대</td><td align="center"></td><td align="left">서버 내부의 문제가 발생한 상태</td></tr><tr><td align="center"></td><td align="center">500</td><td align="left">서버에서 처리시 문제가 발생한 경우</td></tr><tr><td align="center"></td><td align="center">502</td><td align="left">게이트웨이, 프록시에 문제가 발생한 경우(=과부화, 개발자의 영역이 아니라 엔지니어의 영역임)</td></tr><tr><td align="center"></td><td align="center">503</td><td align="left">일시적인 과부화 상태인 경우, 서비스 중단상태인 경우(개발자의 영역이 아니라 엔지니어의 영역임)</td></tr><tr><td align="center"></td><td align="center">504</td><td align="left">지정된 처리시간이 지나서 처리를 못하는 경우</td></tr></tbody></table><p><br><br><br></p><h2 id="ResponseEntity-타입클래스"><a href="#ResponseEntity-타입클래스" class="headerlink" title="ResponseEntity 타입클래스"></a>ResponseEntity 타입클래스</h2><ul><li>HTTP 상태코드를 활용하여 상태처리를 할 수 있다.</li><li>@RestController사용하지 않고 일반컨트롤러에서도 @ResponseBody을 통해서 rest로 처리가능하다.</li><li>ResponseEntity를 사용하면 단순한 객체 정보도 JSON형태로 전달가능하지만, HTML 정보와 JS정보까지 전달할 수 있다.(예를 들어 Header정보)<ul><li>이를 통해 결과확인 및 오류메세지 체크가 가능해진다.</li></ul></li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@RestController</span></span><br><span class="line"><span class="meta">@RequestMapping</span>(value = <span class="string">"/test/*"</span>)</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">TestController</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="comment">//ResponseEntity를 사용하면 단순한 객체 정보도 JSON형태로 전달가능하지만,</span></span><br><span class="line"><span class="comment">//HTML 정보와 JS정보까지 전달할 수 있다.(예를 들어 Header정보)</span></span><br><span class="line"><span class="comment">//이를 통해 결과확인 및 오류메세지 체크가 가능해진다.</span></span><br><span class="line"><span class="meta">@RequestMapping</span>(value = <span class="string">"res2"</span>)</span><br><span class="line"><span class="function"><span class="keyword">public</span> ResponseEntity <span class="title">res2</span><span class="params">()</span> </span>&#123;</span><br><span class="line">System.out.println(<span class="string">"res2 메서드 호출"</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">//응답정보 중에 header에 데이터를 add해서 보낸다.</span></span><br><span class="line">HttpHeaders responseHeaders = <span class="keyword">new</span> HttpHeaders();</span><br><span class="line">responseHeaders.add(<span class="string">"Content-type"</span>, <span class="string">"text/html; charset=UTF-8"</span>);</span><br><span class="line">String msg = <span class="string">"&lt;script&gt;"</span>;</span><br><span class="line">msg += <span class="string">"alert('얼럿창테스트');"</span>;</span><br><span class="line">msg += <span class="string">"location.href='/res1';"</span>;</span><br><span class="line">msg += <span class="string">"&lt;/script&gt;"</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="keyword">new</span> ResponseEntity(msg,responseHeaders, HttpStatus.INTERNAL_SERVER_ERROR);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content:encoded>
      
      
      <category domain="https://sowon-dev.github.io/categories/Spring/">Spring</category>
      
      
      <category domain="https://sowon-dev.github.io/tags/TIL/">TIL</category>
      
      <category domain="https://sowon-dev.github.io/tags/ITWILL-JAVA/">ITWILL(JAVA)</category>
      
      
      <comments>https://sowon-dev.github.io/2020/11/10/201111restapi/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>[REST API]REST란? RESTful이란? REST API란?</title>
      <link>https://sowon-dev.github.io/2020/11/09/201110restapi/</link>
      <guid>https://sowon-dev.github.io/2020/11/09/201110restapi/</guid>
      <pubDate>Mon, 09 Nov 2020 15:10:34 GMT</pubDate>
      
      <description>&lt;h2 id=&quot;REST-Representational-State-Transfer&quot;&gt;&lt;a href=&quot;#REST-Representational-State-Transfer&quot; class=&quot;headerlink&quot; title=&quot;REST(Representational State Transfer)&quot;&gt;&lt;/a&gt;REST(Representational State Transfer)&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;개념 : 하나의 URI는 하나의 고유한 리소스를 가진다.&lt;/li&gt;
&lt;li&gt;REST가 필요한 이유 : 모바일 기기가 다양해지면서 REST를 통해 다양한 기기로 공통의 데이터를 처리할 수 있다.&lt;/li&gt;
&lt;li&gt;REST API : REST방식을 사용한 API으로 핵심데이터, 콘텐츠, 기능등을 외부 페이지에서 가져와 사용할 수 있게 만들어 놓은 인터페이스이다.&lt;ul&gt;
&lt;li&gt;외부 페이지를 어떻게 가져올까? URI 주소를 통해서!</description>
      
      
      
      <content:encoded><![CDATA[<h2 id="REST-Representational-State-Transfer"><a href="#REST-Representational-State-Transfer" class="headerlink" title="REST(Representational State Transfer)"></a>REST(Representational State Transfer)</h2><ul><li>개념 : 하나의 URI는 하나의 고유한 리소스를 가진다.</li><li>REST가 필요한 이유 : 모바일 기기가 다양해지면서 REST를 통해 다양한 기기로 공통의 데이터를 처리할 수 있다.</li><li>REST API : REST방식을 사용한 API으로 핵심데이터, 콘텐츠, 기능등을 외부 페이지에서 가져와 사용할 수 있게 만들어 놓은 인터페이스이다.<ul><li>외부 페이지를 어떻게 가져올까? URI 주소를 통해서!<a id="more"></a></li></ul></li><li><code>RESTful</code> 의미 : REST방식의 서비스 제공이 가능한 형태. </li><li><a href="https://docs.microsoft.com/ko-kr/azure/architecture/best-practices/api-design">필수 지침 : 마이크로 소프트 웹 API 디자인 DOCUMENT</a></li></ul><p><img src="https://media.vlpt.us/images/jch9537/post/51dcc312-8ecb-4048-80df-cbde40865e7a/image.png" alt="URI"></p><ul><li>이해에 도움이 되는 유튜브영상! 이해하기 쉽게 설명해주신다.</li></ul><iframe width="560" height="315" src="https://www.youtube.com/embed/iOueE9AXDQQ" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture" allowfullscreen></iframe><p><br><br><br></p><h2 id="REST-개발을-위한-제약조건"><a href="#REST-개발을-위한-제약조건" class="headerlink" title="REST 개발을 위한 제약조건"></a>REST 개발을 위한 제약조건</h2><ul><li>Client - Server : 요청 또는 제공 진영으로 표준 인터페이스를 사용해서 구분하며 상호 독립적이어야한다.</li><li>stateless : 클라이언트의 컨텍스트가 서버에 저장되지 않고 클라이언트에 저장되어야한다.<ul><li>컨텍스트는 간단히 내 프로젝트 데이터라고 할 수 있다. 그리고 이 컨텍스트를 <strong>서버에 저장하지않아야한다</strong>는 의미이다. </li></ul></li><li>cashe : 서버의 응답은 캐싱될 수 있어야하고 이를 사용하여 확장성, 개발 성능을 개선할 수 있다.</li><li>uniform interface : 표준 인터페이스가 존재. 각각 서버/클라이언트를 발전가능 =&gt;<a href="https://lipcoder.tistory.com/entry/13%EC%9E%A5-%EC%BB%B4%ED%8F%AC%EB%84%8C%ED%8A%B8-%ED%8C%A8%ED%84%B4-Component-Pattern">아키텍쳐 디커플링</a></li><li>layered system : 클라이언트와 서버사이의 부하분산을 의미허며 캐싱과 같은 중개서버 사용 가능하다.<ul><li>계층을 만들어서 클라이언트와 1:1이 아닌, 중간 서버가 필요하다는 의미</li></ul></li><li>code-on-demand : Java Applet/Script를 통해 클라이언트가 사용가능한 코드를 제공한다.</li></ul><p><img src="https://media.vlpt.us/images/leobit/post/61d6d16f-318b-4179-ac1b-cc9e0b60c317/%EC%8A%A4%ED%81%AC%EB%A6%B0%EC%83%B7,%202020-09-27%2019-05-28.png" alt="https://velog.io/@leobit/RESTful-API"></p><p><br><br><br></p><h2 id="SOAP"><a href="#SOAP" class="headerlink" title="SOAP"></a>SOAP</h2><p>REST API와 상반된 개념<br>xml데이터를 사용해서 header와 body를 생성 후 text/xml형태로 정보를 전달한다.</p><p><img src="https://i2.wp.com/www.thistechnologylife.com/wp-content/uploads/2019/04/SOAP-vs-REST-1.png?resize=1200%2C469&ssl=1" alt="https://www.thistechnologylife.com/soap-vs-rest/"></p><p><img src="https://media.geeksforgeeks.org/wp-content/uploads/20190418141401/diag1.jpg" alt="https://www.geeksforgeeks.org/difference-between-rest-api-and-soap-api/"></p><p><br><br><br></p><h2 id="uniform-interface"><a href="#uniform-interface" class="headerlink" title="uniform interface"></a>uniform interface</h2><p>uniform interface는 정해진 룰이 존재한다.</p><ol><li>리소스는 URI로 구분되어야한다.</li><li>리소스를 생성/추가/삭제할때는 HTTP메세지의 상태정보를 사용해서 전달해야한다.</li><li>메세지는 스스로 설명가능해야한다. 즉 메세지 자체에 바로 이해할 수 있는 의미가 있어야한다.</li><li>프로그램 상태는 하이퍼링크로 전달 가능해야한다.</li></ol><p><br><br><br></p><h2 id="ResponseBody와-RestController"><a href="#ResponseBody와-RestController" class="headerlink" title="@ResponseBody와 @RestController"></a>@ResponseBody와 @RestController</h2><table><thead><tr><th align="center"></th><th align="center">@ResponseBody</th><th align="center">@RestController</th></tr></thead><tbody><tr><td align="center">사용가능버전</td><td align="center">스프링3버전부터</td><td align="center">스프링4버전부터</td></tr><tr><td align="center">개념</td><td align="center">객체를 json으로 만들어주는 어노테이션</td><td align="center">jsp뷰를 찾아가는게 아니라 데이터를 생성하는 것(REST방식)</td></tr><tr><td align="center">사용특징</td><td align="center">메서드/리턴타입에 사용가능</td><td align="center">클래스에만 사용</td></tr><tr><td align="center">특징</td><td align="center">MessageConverter에 의해서 처리되는 정보가 브라우저로 전달되는 처리방식</td><td align="center">하위의 메서드는 @ResponseBody가 없어도 동일하게 처리된다(@ResponseBody생략됨)</td></tr></tbody></table><p><img src="https://img1.daumcdn.net/thumb/R1280x0/?scode=mtistory2&fname=https%3A%2F%2Fblog.kakaocdn.net%2Fdn%2F7bceC%2Fbtqx8K6BbxE%2FLVs4KK74mUj9CZ70uHTsjK%2Fimg.png" alt="https://mangkyu.tistory.com/49"></p><p><br><br><br></p><h2 id="예시"><a href="#예시" class="headerlink" title="예시"></a>예시</h2><ul><li><a href="https://mvnrepository.com/artifact/com.fasterxml.jackson.core/jackson-databind/2.8.4">jackson-databind 라이브러리 추가</a></li><li><a href="https://developers.google.com/speed/libraries#jquery">jQuery 3.x snippet 뷰페이지에 복붙</a></li></ul><h3 id="어노테이션특징"><a href="#어노테이션특징" class="headerlink" title="어노테이션특징"></a>어노테이션특징</h3><ul><li>@PathVariable : 요청URL에 있는 매개변수를 json형태로 가져옴<ul><li>주소의 {num}값을 저장하여 사용가능</li></ul></li><li>@RequestBody : JSON형태로 전달된 데이터를 해당 파라미터 타입에 자동으로 저장하겠다는 의미</li></ul><h3 id="소스코드"><a href="#소스코드" class="headerlink" title="소스코드"></a>소스코드</h3><ul><li><code>TestController.java</code> 소스코드<ul><li>@RestController를 활용하여 String, int, List, Map, JSON객체까지 데이터처리를 할 수 있다.</li></ul></li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.itwillbs.controller;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.ArrayList;</span><br><span class="line"><span class="keyword">import</span> java.util.HashMap;</span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"><span class="keyword">import</span> java.util.Map;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.PathVariable;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.RequestBody;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.RequestMapping;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.RequestMethod;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.ResponseBody;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.RestController;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.itwillbs.domain.SampleVO;</span><br><span class="line"></span><br><span class="line"><span class="meta">@RestController</span></span><br><span class="line"><span class="meta">@RequestMapping</span>(value = <span class="string">"/test/*"</span>)</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">TestController</span> </span>&#123;</span><br><span class="line"><span class="comment">//@ResponseBody : 객체를 json으로 만들어주는 어노테이션</span></span><br><span class="line"><span class="comment">//@RestController : 스프링4부터, 하위의 메서드는 @ResponseBody가 없어도 동일하게 처리된다(@ResponseBody생략됨)</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//http://localhost:8088/test/hello</span></span><br><span class="line"><span class="meta">@RequestMapping</span>(value= <span class="string">"hello"</span>, method= RequestMethod.GET)</span><br><span class="line"><span class="function"><span class="keyword">public</span> String <span class="title">hello</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="comment">//문자열리턴의 목적은 : jsp페이지로 가는 것이 아니라 문자열타입의 데이터를 리턴하거나 생성하는 목적으로 사용된다.</span></span><br><span class="line"><span class="keyword">return</span> <span class="string">"Hello ITWILL!"</span>; <span class="comment">//text형태로 보여짐</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//http://localhost:8088/test/sendVO</span></span><br><span class="line"><span class="meta">@RequestMapping</span>(value= <span class="string">"sendVO"</span>)</span><br><span class="line"><span class="keyword">public</span> <span class="meta">@ResponseBody</span> <span class="function">SampleVO <span class="title">sendVO</span><span class="params">()</span> </span>&#123;</span><br><span class="line">SampleVO svo = <span class="keyword">new</span> SampleVO(<span class="number">1</span>, <span class="string">"나혜석"</span>, <span class="string">"010-123-4567"</span> );</span><br><span class="line"><span class="keyword">return</span> svo;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//컬렉션객체활용 1.List(리스트)</span></span><br><span class="line"><span class="comment">//http://localhost:8088/test/sendList</span></span><br><span class="line"><span class="meta">@RequestMapping</span>(value = <span class="string">"sendList"</span>)</span><br><span class="line"><span class="function"><span class="keyword">public</span> List&lt;SampleVO&gt; <span class="title">sendList</span><span class="params">()</span></span>&#123;</span><br><span class="line">List&lt;SampleVO&gt; voList = <span class="keyword">new</span> ArrayList&lt;SampleVO&gt;();</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;<span class="number">10</span>;i++) &#123;</span><br><span class="line">SampleVO vo = <span class="keyword">new</span> SampleVO(i, <span class="string">"나혜석"</span>, <span class="string">"0"</span>+i+<span class="string">"0-123-4567"</span> );</span><br><span class="line">voList.add(vo);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> voList;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//컬렉션객체활용 2.Map</span></span><br><span class="line"><span class="comment">//http://localhost:8088/test/sendMap</span></span><br><span class="line"><span class="meta">@RequestMapping</span>(value = <span class="string">"sendMap"</span>)</span><br><span class="line"><span class="function"><span class="keyword">public</span> Map&lt;Integer, SampleVO&gt; <span class="title">sendMap</span><span class="params">()</span></span>&#123;</span><br><span class="line">Map&lt;Integer, SampleVO&gt; voMap = <span class="keyword">new</span> HashMap&lt;Integer, SampleVO&gt;();</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;<span class="number">10</span>;i++) &#123;</span><br><span class="line">SampleVO vo = <span class="keyword">new</span> SampleVO(i, <span class="string">"나혜석"</span>, <span class="string">"0"</span>+i+<span class="string">"0-123-4567"</span> );</span><br><span class="line"></span><br><span class="line">voMap.put(i, vo);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> voMap;</span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line"><span class="comment">//파라미터들을 json데이터로 꺼내올 수 있음</span></span><br><span class="line"><span class="comment">//http://localhost:8088/test/board2/1234</span></span><br><span class="line"><span class="comment">//@RequestMapping(value = "board/&#123;num&#125;")</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">board</span><span class="params">(@PathVariable(<span class="string">"num"</span>)</span> <span class="keyword">int</span> num) </span>&#123;</span><br><span class="line"><span class="keyword">return</span> num; <span class="comment">//숫자리턴은 json형태가 된다.</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//String타입 매개변수도 사용가능하다 </span></span><br><span class="line"><span class="meta">@RequestMapping</span>(value = <span class="string">"board/&#123;num&#125;"</span>)</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">board</span><span class="params">(@PathVariable(<span class="string">"num"</span>)</span> String num) </span>&#123;</span><br><span class="line">System.out.println(num);</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>; <span class="comment">//숫자리턴은 json형태가 된다.</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//String타입 매개변수도 사용가능하다 </span></span><br><span class="line"><span class="meta">@RequestMapping</span>(value = <span class="string">"board2/&#123;num&#125;"</span>)</span><br><span class="line"><span class="function"><span class="keyword">public</span> SampleVO <span class="title">board2</span><span class="params">(@PathVariable(<span class="string">"num"</span>)</span> <span class="keyword">int</span> num) </span>&#123;</span><br><span class="line">SampleVO vo = <span class="keyword">new</span> SampleVO(num, <span class="string">"나혜석"</span>, <span class="string">"0"</span>+num+<span class="string">"0-123-4567"</span> );</span><br><span class="line"><span class="keyword">return</span> vo; <span class="comment">//숫자리턴은 json형태가 된다.</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//ajax로 데이터전달받기</span></span><br><span class="line"><span class="meta">@RequestMapping</span>(value = <span class="string">"info"</span>, method = RequestMethod.POST)</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">checkVO</span><span class="params">(@RequestBody SampleVO vo)</span> </span>&#123;</span><br><span class="line"><span class="comment">//@RequestBody : JSON형태로 전달된 데이터를 해당타입(여기서는 SampleVO)에 자동으로 저장함</span></span><br><span class="line">System.out.println(<span class="string">"REST컨트롤러 checkVO메서드 호출"</span>+vo);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li><code>SampleVO.java</code> 소스코드</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.itwillbs.domain;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">SampleVO</span> </span>&#123;</span><br><span class="line"><span class="keyword">private</span> Integer num;</span><br><span class="line"><span class="keyword">private</span> String name;</span><br><span class="line"><span class="keyword">private</span> String tel;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="title">SampleVO</span><span class="params">()</span> </span>&#123;&#125;;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="title">SampleVO</span><span class="params">(Integer num, String name, String tel)</span> </span>&#123;</span><br><span class="line"><span class="keyword">super</span>();</span><br><span class="line"><span class="keyword">this</span>.num = num;</span><br><span class="line"><span class="keyword">this</span>.name = name;</span><br><span class="line"><span class="keyword">this</span>.tel = tel;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">public</span> Integer <span class="title">getNum</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="keyword">return</span> num;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setNum</span><span class="params">(Integer num)</span> </span>&#123;</span><br><span class="line"><span class="keyword">this</span>.num = num;</span><br><span class="line">&#125;</span><br><span class="line">(이하생략)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li><code>JSONTest.jsp</code> 소스코드<ul><li><a href="https://www.w3schools.com/js/js_json_stringify.asp">JSON.stringify(member)</a> : member변수로 만든 객체를 문자열로 바꾼다.</li></ul></li></ul><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br></pre></td><td class="code"><pre><span class="line">&lt;%@ page language=<span class="string">"java"</span> contentType=<span class="string">"text/html; charset=UTF-8"</span></span><br><span class="line">    pageEncoding=<span class="string">"UTF-8"</span>%&gt;</span><br><span class="line">    </span><br><span class="line">&lt;!DOCTYPE html&gt;</span><br><span class="line">&lt;html&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">&lt;meta charset=<span class="string">"UTF-8"</span>&gt;</span><br><span class="line">&lt;title&gt;Insert title here&lt;/title&gt;</span><br><span class="line">&lt;!-- 제이쿼리 라이브러리추가 --&gt;</span><br><span class="line">&lt;script src="https://ajax.googleapis.com/ajax/libs/jquery/3.5.1/jquery.min.js"&gt;&lt;/script&gt;</span><br><span class="line">&lt;script type=<span class="string">"text/javascript"</span>&gt;</span><br><span class="line">$(function()&#123;</span><br><span class="line"><span class="comment">//alert("제이쿼리 테스트")</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//뷰에서 버튼 클릭시, 전달한 데이터를 JSON형태로 생성 후 전송 -&gt; ajax 비동기방식사용하여 RestController로 이동 -&gt; RestController안에서 정보를 전달받아서 표시</span></span><br><span class="line">$(<span class="string">'#checkJsonBtn'</span>).click(function()&#123;</span><br><span class="line"><span class="comment">//1.JSON형태로 데이터 생성</span></span><br><span class="line">let member = &#123;num: <span class="string">"777"</span>, name: <span class="string">"사용자1"</span>, tel: <span class="string">"010-777-7777"</span>&#125;;</span><br><span class="line"><span class="comment">//2.데이터를 ajax 비동기방식으로 전송</span></span><br><span class="line">$.ajax(&#123;</span><br><span class="line">type:<span class="string">"post"</span>,</span><br><span class="line">url:<span class="string">"$&#123;contextPath&#125;/test/info"</span>, <span class="comment">//contextPath는  컨크롤러의 시작지점(/)을 의미</span></span><br><span class="line">contentType: <span class="string">"application/json"</span>,</span><br><span class="line">data: JSON.stringify(member), <span class="comment">//member변수로 만든 객체를 문자열로 바꿔서 보낸다는 의미</span></span><br><span class="line">success:function()&#123;</span><br><span class="line"> alert(<span class="string">"ajax 이동 성공"</span>)</span><br><span class="line">&#125;,</span><br><span class="line">error:function()&#123;</span><br><span class="line"> alert(<span class="string">"ajax 이동 실패"</span>)</span><br><span class="line">&#125;,</span><br><span class="line">complete:function()&#123;</span><br><span class="line">alert(<span class="string">"ajax complete 항상 실행(이건 성공/실패 유무와 상관없이 항상 실행됨)"</span>)</span><br><span class="line">&#125;</span><br><span class="line">&#125;);</span><br><span class="line">&#125;);</span><br><span class="line">&#125;);</span><br><span class="line">&lt;/script&gt;</span><br><span class="line">&lt;/head&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line">&lt;h1&gt;JSONtest.jsp&lt;/h1&gt;</span><br><span class="line">일반컨트롤러(HomeController)로 접속 후 input태그 사용&lt;br&gt;</span><br><span class="line">&lt;input type=<span class="string">"button"</span> id=<span class="string">"checkJsonBtn"</span> value=<span class="string">"회원정보전송"</span>&gt;</span><br><span class="line">&lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br></pre></td></tr></table></figure>]]></content:encoded>
      
      
      <category domain="https://sowon-dev.github.io/categories/Spring/">Spring</category>
      
      
      <category domain="https://sowon-dev.github.io/tags/TIL/">TIL</category>
      
      <category domain="https://sowon-dev.github.io/tags/ITWILL-JAVA/">ITWILL(JAVA)</category>
      
      
      <comments>https://sowon-dev.github.io/2020/11/09/201110restapi/#disqus_thread</comments>
      
    </item>
    
  </channel>
</rss>
