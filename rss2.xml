<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0"
  xmlns:atom="http://www.w3.org/2005/Atom"
  xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>야망찬 개발자의 블로그</title>
    <link>https://sowon-dev.github.io/</link>
    
    <atom:link href="https://sowon-dev.github.io/rss2.xml" rel="self" type="application/rss+xml"/>
    
    <description></description>
    <pubDate>Tue, 15 Sep 2020 03:44:46 GMT</pubDate>
    <generator>http://hexo.io/</generator>
    
    <item>
      <title>[ITWILL : JSP] JSP전체목록List</title>
      <link>https://sowon-dev.github.io/2020/11/17/jspList/</link>
      <guid>https://sowon-dev.github.io/2020/11/17/jspList/</guid>
      <pubDate>Tue, 17 Nov 2020 00:00:00 GMT</pubDate>
      
      <description>&lt;h2 id=&quot;🌷프로그래밍기초&quot;&gt;&lt;a href=&quot;#🌷프로그래밍기초&quot; class=&quot;headerlink&quot; title=&quot;🌷프로그래밍기초&quot;&gt;&lt;/a&gt;🌷프로그래밍기초&lt;/h2&gt;&lt;ol&gt;
&lt;li&gt;&lt;a href=&quot;https://sowon-dev.github.io/2020/05/28/200528jspi/&quot;&gt;프로그래밍기초이론, 하드웨어 vs 소프트웨어 vs 펌웨어, 기억장치, 클라이언트 vs 서버&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&quot;🌷JS기초&quot;&gt;&lt;a href=&quot;#🌷JS기초&quot; class=&quot;headerlink&quot; title=&quot;🌷JS기초&quot;&gt;&lt;/a&gt;🌷JS기초&lt;/h2&gt;&lt;ol&gt;
&lt;li&gt;&lt;a href=&quot;https://sowon-dev.github.io/2020/06/01/200601jspi/&quot;&gt;JS기초이론, Compile VS Interprete, 변수, js라이브러리,객체타입&lt;/a&gt;</description>
      
      
      
      <content:encoded><![CDATA[<h2 id="🌷프로그래밍기초"><a href="#🌷프로그래밍기초" class="headerlink" title="🌷프로그래밍기초"></a>🌷프로그래밍기초</h2><ol><li><a href="https://sowon-dev.github.io/2020/05/28/200528jspi/">프로그래밍기초이론, 하드웨어 vs 소프트웨어 vs 펌웨어, 기억장치, 클라이언트 vs 서버</a></li></ol><h2 id="🌷JS기초"><a href="#🌷JS기초" class="headerlink" title="🌷JS기초"></a>🌷JS기초</h2><ol><li><a href="https://sowon-dev.github.io/2020/06/01/200601jspi/">JS기초이론, Compile VS Interprete, 변수, js라이브러리,객체타입</a><a id="more"></a></li><li><a href="https://sowon-dev.github.io/2020/06/02/200602jspi/">JS를 문서에 나타내는 3가지방법, undefined VS null, 백의자리 Math.floor(), 복합대입연산자로table생성, A++과 ++A차이점, ==과===차이점, 논리표</a></li><li><a href="https://sowon-dev.github.io/2020/06/03/200603jspi/">JAVA SE/EE/ME 차이점, JAVA EE 설정. Tomcat 설치및설정, 이클립스 단축키</a></li><li><a href="https://sowon-dev.github.io/2020/06/04/200604jspi/">아이디와 비번입력, 새로고침location.reload(), 주석한번에 단축키, switch문 출력문 한줄리팩토링</a></li><li><a href="https://sowon-dev.github.io/2020/06/09/200609jspi/">반복문 for 순서 자세히, 개발자 도구로 디버깅, 기본 반복문암기, for문과 if문의 자리바꿈에 따른 변화, 반복문의 전위연산 VS 후위연산, do while문</a></li><li><a href="https://sowon-dev.github.io/2020/06/11/200611jspi/">무한반복문, 보조제어(break와continue)문, 익명함수, 재귀함수, 지역변수를 전역에서 사용하는 방법, 내장함수</a></li></ol><h2 id="🌷JS기초-객체-내장객체-브라우저객체모델-BOM-문서객체모델-DOM"><a href="#🌷JS기초-객체-내장객체-브라우저객체모델-BOM-문서객체모델-DOM" class="headerlink" title="🌷JS기초 : 객체 (내장객체, 브라우저객체모델(BOM), 문서객체모델(DOM))"></a>🌷JS기초 : 객체 (내장객체, 브라우저객체모델(BOM), 문서객체모델(DOM))</h2><ol><li><a href="https://sowon-dev.github.io/2020/06/12/200612jspi/">Object객체 전체개념, tv채널객체함수, new를 쓰고 안쓰고의 차이</a></li><li><a href="https://sowon-dev.github.io/2020/06/12/200612jspi2/">Date객체 자세히, 디데이구하는 함수</a></li><li><a href="https://sowon-dev.github.io/2020/06/15/200615jspi/">Array객체 (for ~ in구문, join(), reverse(), sort())</a></li><li><a href="https://sowon-dev.github.io/2020/06/15/200615jspi2/">String객체, 짤라오는 함수 4종류 .substring(), slice(), substr(), charAt(), .indexOf()와 .lastIndexOf()차이, .concat(), .split(), ID자릿수를 제한하는 이메일 유효성검사</a></li><li><a href="https://sowon-dev.github.io/2020/06/15/200615jspi3/">이벤트리스너와 이벤트핸들러, 브라우저객체모델, window객체전체</a></li><li><a href="https://sowon-dev.github.io/2020/06/16/200616jspi/">브라우저객체모델안의 Document객체 (bgColor와 fgColor사용,  img태그에 접근하여 속성 사용, 랜덤 img 출력하기)</a></li><li><a href="https://sowon-dev.github.io/2020/06/16/200616jspi2/">브라우저객체모델안의 location객체</a></li><li><a href="https://sowon-dev.github.io/2020/06/17/200617jspi/">브라우저객체모델안의 history객체, screen객체, navigator객체</a></li><li><a href="https://sowon-dev.github.io/2020/06/17/200617jspi2/">문서 객체 모델안의 form태그, 페이지이동방식(get과 post), focus() vs blur() vs select()</a></li><li><a href="https://sowon-dev.github.io/2020/06/18/200618jspi/">문서 객체 모델안의 if문에 return;의 역할, radio태그, checkbox태그</a></li></ol><h2 id="🌷JS실습"><a href="#🌷JS실습" class="headerlink" title="🌷JS실습"></a>🌷JS실습</h2><ol><li><a href="https://sowon-dev.github.io/2020/06/22/200622jspi/">js로 간단한 회원가입페이지 작성하기</a></li></ol><h2 id="🌷JSP기초"><a href="#🌷JSP기초" class="headerlink" title="🌷JSP기초"></a>🌷JSP기초</h2><ol><li><a href="https://sowon-dev.github.io/2020/06/22/200622jspi2/">JSP 첫 프로젝트 톰캣과 연결</a></li><li><a href="https://sowon-dev.github.io/2020/06/23/200623jspi/">JSP 주석과 JSP directive, JSP 스크립트 요소</a></li><li><a href="https://sowon-dev.github.io/2020/06/24/200624jspi/">JAVA DATATYPE, Integer.parseInt(문자열), 동일한 파라미터의 값을 가지는 데이터가 여러개있을 경우 변수로 가져오기</a></li><li><a href="https://sowon-dev.github.io/2020/07/15/200715jspi2/">커넥션풀(Connection Pool)</a></li><li><a href="https://sowon-dev.github.io/2020/07/16/200716jspi/">Wrapper클래스, 오토 박싱과 오토 언박싱, hierarchy확인법</a></li></ol><h2 id="🌷JSP기초-내장객체-중-영역객체"><a href="#🌷JSP기초-내장객체-중-영역객체" class="headerlink" title="🌷JSP기초 : 내장객체 중 영역객체"></a>🌷JSP기초 : 내장객체 중 영역객체</h2><ol><li><a href="https://sowon-dev.github.io/2020/06/23/200623jspi2/">내장객체</a></li><li><a href="https://sowon-dev.github.io/2020/06/24/200624jspi2/">영역객체scope</a></li><li><a href="https://sowon-dev.github.io/2020/06/25/200625jspi/">영역객체 안에서 사용하는 속성(Attribute), 링크이동 방법별 전달가능한 영역(scope)</a></li><li><a href="https://sowon-dev.github.io/2020/06/25/200625jspi2/">JSP 디렉티브(directive) 중 include VS 액션태그 include, jspf확장자 파일</a></li><li><a href="https://sowon-dev.github.io/2020/06/29/200629jspi/">세션(Session)</a></li><li><a href="https://sowon-dev.github.io/2020/06/29/200629jspi2/">==과 str.equals(str2) 차이, 객체와 클래스</a></li><li><a href="https://sowon-dev.github.io/2020/07/01/200701jspi/">쿠키(Cookie)</a></li></ol><h2 id="🌷MySQL"><a href="#🌷MySQL" class="headerlink" title="🌷MySQL"></a>🌷MySQL</h2><ol><li><a href="https://sowon-dev.github.io/2020/06/30/200701jspi2/">MYSQL 설치, MYSQL환경변수설정, cmd에서 명령어 잘못입력해서 mysql못빠져나갈때</a></li><li><a href="https://sowon-dev.github.io/2020/07/01/200702jspi/">MYSQL 접속순서, DB명령어, 테이블명령어, 데이터명령어</a></li><li><a href="https://sowon-dev.github.io/2020/07/01/200702jspi2/">MySQL 한글깨짐현상 두가지 해결방법 : cmd와 Workbench, 이클립스와 MYSQL연결</a></li></ol><h2 id="🌷JDBC"><a href="#🌷JDBC" class="headerlink" title="🌷JDBC"></a>🌷JDBC</h2><ol><li><a href="https://sowon-dev.github.io/2020/07/03/200703jspi/">JDBC활용 - import쓰는 이유, form페이지로 받은 데이터를 DB에 insert하는 방법</a></li><li><a href="https://sowon-dev.github.io/2020/07/03/200703jspi2/">JDBC활용 - JAVA에서 DB 정보 지우기 2가지방법</a></li><li><a href="https://sowon-dev.github.io/2020/07/06/200706jspi/">JDBC활용 - DB에서 고객정보를 불러와서 HTML테이블에 담기</a></li><li><a href="https://sowon-dev.github.io/2020/07/06/200706jspi2/">JDBC활용 - TIMESTAMP주의점, JDBC에서 데이터처리</a></li><li><a href="https://sowon-dev.github.io/2020/07/07/200707jspi/">JDBC활용 - 회원정보수정페이지만들기</a></li><li><a href="https://sowon-dev.github.io/2020/07/08/200708jspi/">JDBC활용 - 회원목록출력하는데 관리자는 빼고 출력하기, 자바 에러 두종류</a></li></ol><h2 id="🌷JAVABEAN"><a href="#🌷JAVABEAN" class="headerlink" title="🌷JAVABEAN"></a>🌷JAVABEAN</h2><ol><li><a href="https://sowon-dev.github.io/2020/07/09/200709jspi/">Javabean : 기초</a></li><li><a href="https://sowon-dev.github.io/2020/07/09/200709jspi2/">자바빈 실습1 : 회원가입페이지만들기</a></li><li><a href="https://sowon-dev.github.io/2020/07/14/200714jspi/">자바빈 실습2 : 로그인 및 로그아웃페이지만들기</a></li><li><a href="https://sowon-dev.github.io/2020/07/14/200714jspi2/">자바빈 실습3 : 회원정보조회 및 수정페이지만들기</a></li><li><a href="https://sowon-dev.github.io/2020/07/15/200715jspi/">자바빈 실습4 : web.xml, 회원정보삭제페이지</a></li><li><a href="https://sowon-dev.github.io/2020/07/15/200715jspi3/">자바빈 실습5 : 관리자만 확인할 수 있는 회원목록페이지만들기</a></li><li><a href="https://sowon-dev.github.io/2020/07/20/200720jspi2/">자바빈 실습6 : 게시판만들기(글쓰기)</a></li><li><a href="https://sowon-dev.github.io/2020/07/21/200721jspi/">자바빈 실습7 : 게시판만들기(글 총 갯수, 글목록, 페이징처리)</a></li><li><a href="https://sowon-dev.github.io/2020/07/22/200722jspi/">자바빈 실습8 : 게시판만들기(글내용보기, 글수정하기)</a></li><li><a href="https://sowon-dev.github.io/2020/07/23/200723jspi/">자바빈 실습9 : 게시판만들기(글삭제하기)</a></li><li><a href="https://sowon-dev.github.io/2020/07/23/200723jspi2/">자바빈 실습10 : 게시판만들기(답글쓰기)</a></li></ol><h2 id="🌷파일업로드와-다운로드-기능-구현"><a href="#🌷파일업로드와-다운로드-기능-구현" class="headerlink" title="🌷파일업로드와 다운로드 기능 구현"></a>🌷파일업로드와 다운로드 기능 구현</h2><ol><li><a href="https://sowon-dev.github.io/2020/07/27/200727jspi/">자바빈 실습11 : MultipartRequest클래스</a></li><li><a href="https://sowon-dev.github.io/2020/07/27/200727jspi2/">자바빈 실습12 : 파일업로드</a></li><li><a href="https://sowon-dev.github.io/2020/07/27/200727jspi3/">자바빈 실습13 : 파일다운로드</a></li><li><a href="https://sowon-dev.github.io/2020/07/28/200728jspi/">자바빈 실습14 : ServletContext 사용하여 파일업로드와 다운로드</a></li></ol><h2 id="🌷자료구조"><a href="#🌷자료구조" class="headerlink" title="🌷자료구조"></a>🌷자료구조</h2><ol><li><a href="https://sowon-dev.github.io/2020/07/16/200716jspi2/">자료구조1 : Collections Framwork(Set계열, List계열)</a></li><li><a href="https://sowon-dev.github.io/2020/07/20/200720jspi/">자료구조2 : Stack클래스, Queue인터페이스, Map인터페이스</a></li></ol><h2 id="🌷model1-홈페이지만들기"><a href="#🌷model1-홈페이지만들기" class="headerlink" title="🌷model1 홈페이지만들기"></a>🌷model1 홈페이지만들기</h2><ol><li><a href="https://sowon-dev.github.io/2020/07/29/200729jspi/">홈페이지만들기1 : 프로젝트 시작 설정 및 자바빈생성과 DB연결</a></li><li><a href="https://sowon-dev.github.io/2020/07/30/200730jspi/">홈페이지만들기2 : 아이디중복체크 포함한 회원가입기능 구현</a></li><li><a href="https://sowon-dev.github.io/2020/07/30/200730jspi2/">홈페이지만들기3 : 로그인/로그아웃 기능 구현</a></li><li><a href="https://sowon-dev.github.io/2020/08/03/200803jspi/">홈페이지만들기4 : 게시판글쓰기구현</a></li><li><a href="https://sowon-dev.github.io/2020/08/04/200804jspi/">홈페이지만들기5 : 게시판에 글목록표시구현</a></li></ol><h2 id="🌷JQuery"><a href="#🌷JQuery" class="headerlink" title="🌷JQuery"></a>🌷JQuery</h2><ol><li><a href="https://sowon-dev.github.io/2020/08/04/200804jspi2/">JQuery1 : JQuery 사용설정, 선택자, css()</a></li><li><a href="https://sowon-dev.github.io/2020/08/05/200805jspi/">JQuery2 : attr(), html()와 text(), append()와 prepend()</a></li><li><a href="https://sowon-dev.github.io/2020/08/05/200805jspi2/">JQuery3 : setInterval()와 clearInteval(), CDATA VS PCDATA</a></li><li><a href="https://sowon-dev.github.io/2020/08/06/200806jspi/">JQuery4 : click(), bind(), event.preventDefault(), unbind(), keyup(), 유효성체크(자바스크립트 vs 제이쿼리)</a></li><li><a href="https://sowon-dev.github.io/2020/08/06/200806jspi2/">JQuery5 : 유효성체크(자바스크립트 vs 제이쿼리), 제이쿼리 기본효과</a></li><li><a href="https://sowon-dev.github.io/2020/08/07/200807jspi/">JQuery6 : innerfade 라이브러리, animate(속성, 속도, 콜백함수)</a></li></ol><h2 id="🌷Ajax"><a href="#🌷Ajax" class="headerlink" title="🌷Ajax"></a>🌷Ajax</h2><ol><li><a href="https://sowon-dev.github.io/2020/08/07/200807jspi2/">Ajax : Ajax특징, XMLHttpRequest클래스, txt 페이지 처리</a></li><li><a href="https://sowon-dev.github.io/2020/08/10/200810jspi/">Ajax : xml처리, json처리</a></li><li><a href="https://sowon-dev.github.io/2020/08/10/200810jspi2/">Ajax : DB데이터를 불러와서 json형태로 변경하여 출력하기</a></li></ol><h2 id="🌷JSTL과-EL"><a href="#🌷JSTL과-EL" class="headerlink" title="🌷JSTL과 EL"></a>🌷JSTL과 EL</h2><ol><li><a href="https://sowon-dev.github.io/2020/08/11/200811jspi/">JSTL과 EL : JSTL과 EL개념, CORE 라이브러리(out)</a></li><li><a href="https://sowon-dev.github.io/2020/08/11/200811jspi2/">JSTL과 EL : CORE 라이브러리(set)</a></li><li><a href="https://sowon-dev.github.io/2020/08/12/200812jspi/">JSTL과 EL : CORE 라이브러리(if, forEach, forTokens, choose)</a></li><li><a href="https://sowon-dev.github.io/2020/08/12/200812jspi2/">JSTL과 EL : fmt 라이브러리(formatDate, formatNumber)</a></li><li><a href="https://sowon-dev.github.io/2020/08/13/200813jspi/">JSTL과 EL : EL태그로 동일한 name의 파라미터를 EL태그로 쉽게 가져오기</a></li><li><a href="https://sowon-dev.github.io/2020/08/14/200814jspi/">JSTL과 EL : EL태그 연산자</a></li><li><a href="https://sowon-dev.github.io/2020/08/14/200814jspi2/">EL과 Servlet : RequestDispatcher.forward 로 페이지 이동 후 데이터별 출력방법</a></li></ol><h2 id="🌷model2-MVC패턴-쇼핑몰만들기"><a href="#🌷model2-MVC패턴-쇼핑몰만들기" class="headerlink" title="🌷model2(MVC패턴) 쇼핑몰만들기"></a>🌷model2(MVC패턴) 쇼핑몰만들기</h2><ol><li><a href="https://sowon-dev.github.io/2020/08/17/200817jspi/">Servlet : Servlet용어정리, model1과 model2(MVC구조) 개발방식 비교</a></li></ol><h3 id="쇼핑몰회원관리"><a href="#쇼핑몰회원관리" class="headerlink" title="쇼핑몰회원관리"></a>쇼핑몰회원관리</h3><ol><li><a href="https://sowon-dev.github.io/2020/08/17/200817jspi2/">Servlet회원관리1: 기본설정 및 가상주소생성</a></li><li><a href="https://sowon-dev.github.io/2020/08/19/200819jspi/">Servlet회원관리2: 회원가입</a></li><li><a href="https://sowon-dev.github.io/2020/08/19/200819jspi2/">Servlet회원관리3: 로그인</a></li><li><a href="https://sowon-dev.github.io/2020/08/19/200819jspi3/">Servlet회원관리4: 메인페이지와 로그아웃</a></li><li><a href="https://sowon-dev.github.io/2020/08/27/200827jspi/">Servlet회원관리5: 회원정보조회</a></li><li><a href="https://sowon-dev.github.io/2020/08/27/200827jspi2/">Servlet회원관리6: 회원탈퇴</a></li><li><a href="https://sowon-dev.github.io/2020/08/31/200831jspi/">Servlet회원관리7: 회원전체목록조회(관리자기능)</a></li></ol><h3 id="게시판"><a href="#게시판" class="headerlink" title="게시판"></a>게시판</h3><ol><li><a href="https://sowon-dev.github.io/2020/08/31/200831jspi2/">Servlet게시판1: 기초</a></li><li><a href="https://sowon-dev.github.io/2020/09/01/200901jspi/">Servlet게시판2: 게시판 글쓰기</a></li><li><a href="https://sowon-dev.github.io/2020/09/01/200901jspi2/">Servlet게시판3: 게시판 리스트·게시글전체목록·페이징처리</a></li><li><a href="https://sowon-dev.github.io/2020/09/03/200903jspi/">Servlet게시판4: 글 내용보기</a></li><li><a href="https://sowon-dev.github.io/2020/09/03/200903jspi2/">Servlet게시판5: 글 수정하기</a></li><li><a href="https://sowon-dev.github.io/2020/09/07/200907jspi/">Servlet게시판6: 글 삭제하기</a></li><li><a href="https://sowon-dev.github.io/2020/09/07/200907jspi2/">Servlet게시판7: 답글하기</a></li><li><a href="https://sowon-dev.github.io/2020/09/07/200907jspi3/">Servlet게시판8: 파일업로드·파일보기</a></li></ol><h3 id="관리자전용-상품목록과-등록게시판"><a href="#관리자전용-상품목록과-등록게시판" class="headerlink" title="관리자전용 상품목록과 등록게시판"></a>관리자전용 상품목록과 등록게시판</h3><ol><li><a href="https://sowon-dev.github.io/2020/09/07/200907jspi4/">Servlet1관리자전용상품1 : 기초</a></li><li><a href="https://sowon-dev.github.io/2020/09/07/200907jspi5/">Servlet1관리자전용상품2 : 상품등록</a></li><li><a href="https://sowon-dev.github.io/2020/09/08/200908jspi/">Servlet1관리자전용상품3 : 상품목록·상품리스트</a></li><li><a href="https://sowon-dev.github.io/2020/09/09/200909jspi/">Servlet1관리자전용상품4 : 상품수정·인기상품처리</a></li><li><a href="https://sowon-dev.github.io/2020/09/09/200909jspi2/">Servlet1관리자전용상품5 : 상품삭제</a></li></ol><h3 id="일반유저용-상품목록"><a href="#일반유저용-상품목록" class="headerlink" title="일반유저용 상품목록"></a>일반유저용 상품목록</h3><ol><li><a href="https://sowon-dev.github.io/2020/09/10/200910jspi/">Servlet1일반상품1 : 기초</a></li><li><a href="https://sowon-dev.github.io/2020/09/10/200910jspi2/">Servlet1일반상품2 : 카테고리별 상품목록·상품리스트</a></li><li><a href="https://sowon-dev.github.io/2020/09/15/200915jspi/">Servlet1일반상품3 : 상품상세정보</a></li></ol><h3 id="장바구니"><a href="#장바구니" class="headerlink" title="장바구니"></a>장바구니</h3><ol><li><a href="https://sowon-dev.github.io/2020/09/15/200915jspi2/">Servlet1장바구니1 : 기초</a></li><li><a href="https://sowon-dev.github.io/2020/09/15/200915jspi3basket/">Servlet1장바구니1 : 장바구니에 담기</a></li></ol>]]></content:encoded>
      
      
      <category domain="https://sowon-dev.github.io/categories/JSP/">JSP</category>
      
      
      <category domain="https://sowon-dev.github.io/tags/ITWILL-JAVA/">ITWILL(JAVA)</category>
      
      <category domain="https://sowon-dev.github.io/tags/List/">List</category>
      
      
      <comments>https://sowon-dev.github.io/2020/11/17/jspList/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>[ITWILL : DB] DB전체목록List</title>
      <link>https://sowon-dev.github.io/2020/11/16/DBList/</link>
      <guid>https://sowon-dev.github.io/2020/11/16/DBList/</guid>
      <pubDate>Mon, 16 Nov 2020 00:00:00 GMT</pubDate>
      
      <description>&lt;h2 id=&quot;🌱리눅스와-SQL&quot;&gt;&lt;a href=&quot;#🌱리눅스와-SQL&quot; class=&quot;headerlink&quot; title=&quot;🌱리눅스와 SQL&quot;&gt;&lt;/a&gt;🌱리눅스와 SQL&lt;/h2&gt;&lt;ol&gt;
&lt;li&gt;&lt;a href=&quot;https://sowon-dev.github.io/2020/06/01/200602dbi/&quot;&gt;간단 리눅스명령어(복붙포함), Oracle 명령어, DB작동방법, 접속순서&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://sowon-dev.github.io/2020/06/15/200616dbi/&quot;&gt;virtualBox로 가상컴퓨터만들어서 리눅스Linux 설치하기&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://sowon-dev.github.io/2020/06/18/200619dbi/&quot;&gt;CUI환경 VS GUI환경, 리눅스명령어자세히, vi단축키&lt;/a&gt;</description>
      
      
      
      <content:encoded><![CDATA[<h2 id="🌱리눅스와-SQL"><a href="#🌱리눅스와-SQL" class="headerlink" title="🌱리눅스와 SQL"></a>🌱리눅스와 SQL</h2><ol><li><a href="https://sowon-dev.github.io/2020/06/01/200602dbi/">간단 리눅스명령어(복붙포함), Oracle 명령어, DB작동방법, 접속순서</a></li><li><a href="https://sowon-dev.github.io/2020/06/15/200616dbi/">virtualBox로 가상컴퓨터만들어서 리눅스Linux 설치하기</a></li><li><a href="https://sowon-dev.github.io/2020/06/18/200619dbi/">CUI환경 VS GUI환경, 리눅스명령어자세히, vi단축키</a><a id="more"></a></li><li><a href="https://sowon-dev.github.io/2020/07/09/200710dbi/">SQL DEVELOPER사용방법</a></li></ol><h2 id="🌱DB와-SQL개념"><a href="#🌱DB와-SQL개념" class="headerlink" title="🌱DB와 SQL개념"></a>🌱DB와 SQL개념</h2><ol><li><a href="https://sowon-dev.github.io/2020/05/28/200529dbi/">DB기초이론, DBMS</a></li><li><a href="https://sowon-dev.github.io/2020/06/02/200602dbi2/">데이터베이스기초활용</a></li><li><a href="https://sowon-dev.github.io/2020/06/04/200605dbi/">SQL 명령어</a></li><li><a href="https://sowon-dev.github.io/2020/06/07/200608dbi/">제약조건의 컬럼레벨과 테이블레벨문법, 제약조건 5가지, 버퍼에 있는 자주 사용할 쿼리구문을 저장하는 방법</a></li><li><a href="https://sowon-dev.github.io/2020/06/09/200610dbi/">select as from where, order by, 동일유저 동시접속 가능, 트랜잭션 commit과 rollback</a></li><li><a href="https://sowon-dev.github.io/2020/07/16/200717dbi/">트랜잭션(Transaction), 치환변수, save명령어, 리소스부족에러발생시</a></li><li><a href="https://sowon-dev.github.io/2020/08/03/200804dbi/">Data Dictionary</a></li></ol><h2 id="🌱Select-구문"><a href="#🌱Select-구문" class="headerlink" title="🌱Select 구문"></a>🌱Select 구문</h2><ol><li><a href="https://sowon-dev.github.io/2020/06/22/200623dbi/">Select 구문을 사용한 데이터 검색, null VS 0 VS 공백, Distinct</a></li><li><a href="https://sowon-dev.github.io/2020/06/25/200626dbi/">테이블 전체목록조회, 테이블구조조회, WHERE(조건문)절</a></li><li><a href="https://sowon-dev.github.io/2020/06/25/200626dbi2/">Order by 정렬</a></li></ol><h2 id="🌱단일행함수"><a href="#🌱단일행함수" class="headerlink" title="🌱단일행함수"></a>🌱단일행함수</h2><ol><li><a href="https://sowon-dev.github.io/2020/06/29/200630dbi/">단일행함수 : 문자함수</a></li><li><a href="https://sowon-dev.github.io/2020/06/29/200630dbi2/">단일행함수 : 숫자함수, 날짜함수</a></li><li><a href="https://sowon-dev.github.io/2020/06/29/200630dbi3/">단일행함수 : 변환함수, 일반함수</a></li><li><a href="https://sowon-dev.github.io/2020/08/10/200811dbi/">단일행함수 : 조건부 표현식</a></li></ol><h2 id="🌱여러행함수"><a href="#🌱여러행함수" class="headerlink" title="🌱여러행함수"></a>🌱여러행함수</h2><ol><li><a href="https://sowon-dev.github.io/2020/06/29/200630dbi4/">여러행함수 : 그룹함수</a></li><li><a href="https://sowon-dev.github.io/2020/07/06/200707dbi/">여러행함수 : Group by절, Having절</a></li></ol><h2 id="🌱중요-구문"><a href="#🌱중요-구문" class="headerlink" title="🌱중요 구문"></a>🌱중요 구문</h2><ol><li><a href="https://sowon-dev.github.io/2020/07/09/200710dbi2/">JOIN</a></li><li><a href="https://sowon-dev.github.io/2020/07/13/200714dbi/">Subquery1: Subquery개념, 중첩Subquery</a></li><li><a href="https://sowon-dev.github.io/2020/08/23/200824dbi/">Subquery2: Inlineview, Scalar Subquery</a></li><li><a href="https://sowon-dev.github.io/2020/08/24/200825dbi/">Subquery3: exists연산자, not exists연산자</a></li><li><a href="https://sowon-dev.github.io/2020/08/24/200825dbi/">Subquery4: with절</a></li><li><a href="https://sowon-dev.github.io/2020/07/28/200729dbi3/">SQL 기억해야 할 쿼리</a></li><li><a href="https://sowon-dev.github.io/2020/08/19/200820dbi/">Top-N분석</a></li></ol><h2 id="🌱데이터조작어-DML-데이터정의어-DDL"><a href="#🌱데이터조작어-DML-데이터정의어-DDL" class="headerlink" title="🌱데이터조작어 (DML) / 데이터정의어 (DDL)"></a>🌱데이터조작어 (DML) / 데이터정의어 (DDL)</h2><ol><li><a href="https://sowon-dev.github.io/2020/07/13/200714dbi2/">데이터조작어DML : insert/update/delete구문</a></li><li><a href="https://sowon-dev.github.io/2020/07/20/200721dbi/">데이터정의어DDL : table 생성 table 복사, varchar2와 varchar와 char비교</a></li><li><a href="https://sowon-dev.github.io/2020/07/23/200724dbi/">데이터정의어DDL : 테이블수정(컬럼수정, 제약조건수정, 컬럼명수정, 제약조건명수정), 테이블명변경, 테이블삭제, 테이블절단, truncate과 delete과 drop차이</a></li></ol><h2 id="🌱SQL의-OBJECT-종류"><a href="#🌱SQL의-OBJECT-종류" class="headerlink" title="🌱SQL의 OBJECT 종류"></a>🌱SQL의 OBJECT 종류</h2><ol><li><a href="https://sowon-dev.github.io/2020/07/27/200728dbi/">SQL의 OBJECT종류 : view</a></li><li><a href="https://sowon-dev.github.io/2020/07/28/200729dbi/">SQL의 OBJECT종류 : 시퀀스(Sequence)</a></li><li><a href="https://sowon-dev.github.io/2020/07/28/200729dbi2/">SQL의 OBJECT종류 : 인덱스(Index), 시노님(Synonym)</a></li></ol><h2 id="🌱DB구현"><a href="#🌱DB구현" class="headerlink" title="🌱DB구현"></a>🌱DB구현</h2><ol><li><a href="https://sowon-dev.github.io/2020/08/25/200826dbi/">Oracle DB구조1 : Database</a></li><li><a href="https://sowon-dev.github.io/2020/08/27/200828dbi/">Oracle DB구조2 : Instance의 SGA메모리구조</a></li><li><a href="https://sowon-dev.github.io/2020/09/01/200901dbi/">Oracle DB구조3 : Instance의 Background process</a></li><li><a href="https://sowon-dev.github.io/2020/08/31/200901dbi2/">Oracle DB구조4 : 구조 완벽정리, 상활별 오라클 DB 순서</a></li></ol><h2 id="🌱DB관리"><a href="#🌱DB관리" class="headerlink" title="🌱DB관리"></a>🌱DB관리</h2><ol><li><a href="https://sowon-dev.github.io/2020/09/09/200911dbi/">Oracle DB생성방법 2가지, Oracle DB Tool, Parameterfile 유형</a></li><li><a href="https://sowon-dev.github.io/2020/09/14/200914dbi/">오라클의 Database 켜고 끄기</a></li></ol>]]></content:encoded>
      
      
      <category domain="https://sowon-dev.github.io/categories/Database/">Database</category>
      
      <category domain="https://sowon-dev.github.io/categories/Database/Oracle/">Oracle</category>
      
      
      <category domain="https://sowon-dev.github.io/tags/ITWILL-JAVA/">ITWILL(JAVA)</category>
      
      <category domain="https://sowon-dev.github.io/tags/Oracle/">Oracle</category>
      
      <category domain="https://sowon-dev.github.io/tags/List/">List</category>
      
      
      <comments>https://sowon-dev.github.io/2020/11/16/DBList/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>Servlet장바구니2 : 장바구니에 담기</title>
      <link>https://sowon-dev.github.io/2020/09/15/200915jspi3basket/</link>
      <guid>https://sowon-dev.github.io/2020/09/15/200915jspi3basket/</guid>
      <pubDate>Tue, 15 Sep 2020 03:32:10 GMT</pubDate>
      
      <description>&lt;h2 id=&quot;BasketFrontController-java의-doProcess-의-주소비교-후-처리부분에-코드-추가&quot;&gt;&lt;a href=&quot;#BasketFrontController-java의-doProcess-의-주소비교-후-처리부분에-코드-추가&quot; class=&quot;headerlink&quot; title=&quot;BasketFrontController.java의 doProcess()의 주소비교 후 처리부분에 코드 추가&quot;&gt;&lt;/a&gt;&lt;code&gt;BasketFrontController.java&lt;/code&gt;의 doProcess()의 주소비교 후 처리부분에 코드 추가&lt;/h2&gt;</description>
      
      
      
      <content:encoded><![CDATA[<h2 id="BasketFrontController-java의-doProcess-의-주소비교-후-처리부분에-코드-추가"><a href="#BasketFrontController-java의-doProcess-의-주소비교-후-처리부분에-코드-추가" class="headerlink" title="BasketFrontController.java의 doProcess()의 주소비교 후 처리부분에 코드 추가"></a><code>BasketFrontController.java</code>의 doProcess()의 주소비교 후 처리부분에 코드 추가</h2><a id="more"></a><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 주소에 따른 처리 구분 (주소 매핑후 이동)</span></span><br><span class="line"><span class="keyword">if</span>(command.equals(<span class="string">"/BasketAdd.ba"</span>))&#123;</span><br><span class="line"><span class="comment">//장바구니 추가 : .jsp -&gt; DB</span></span><br><span class="line">System.out.println(<span class="string">"C: /BasketAdd.ba 호출"</span>);</span><br><span class="line"><span class="comment">//.ag -&gt; .jsp로 이동</span></span><br><span class="line"><span class="comment">//컨트롤러 -&gt; 뷰페이지 이동</span></span><br><span class="line">action = <span class="keyword">new</span> BasketAddAction();</span><br><span class="line"><span class="keyword">try</span> &#123; forward = action.execute(request, response);</span><br><span class="line">&#125; <span class="keyword">catch</span> (Exception e) &#123; e.printStackTrace(); &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><br><br><br></p><h2 id="BasketAddAction-java-생성"><a href="#BasketAddAction-java-생성" class="headerlink" title="BasketAddAction.java 생성"></a><code>BasketAddAction.java</code> 생성</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">```</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&lt;br&gt;&lt;br&gt;&lt;br&gt;</span><br><span class="line">## `DAO.java` 생성 후 ()메서드 코드 추가</span><br><span class="line"></span><br><span class="line">```java</span><br></pre></td></tr></table></figure><p><br><br><br></p><h2 id="jsp-생성"><a href="#jsp-생성" class="headerlink" title=".jsp 생성"></a><code>.jsp</code> 생성</h2><pre><code class="html"></code></pre>]]></content:encoded>
      
      
      <category domain="https://sowon-dev.github.io/categories/JSP/">JSP</category>
      
      
      <category domain="https://sowon-dev.github.io/tags/TIL/">TIL</category>
      
      <category domain="https://sowon-dev.github.io/tags/ITWILL-JAVA/">ITWILL(JAVA)</category>
      
      
      <comments>https://sowon-dev.github.io/2020/09/15/200915jspi3basket/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>Servlet장바구니1 : 기초</title>
      <link>https://sowon-dev.github.io/2020/09/15/200915jspi2/</link>
      <guid>https://sowon-dev.github.io/2020/09/15/200915jspi2/</guid>
      <pubDate>Tue, 15 Sep 2020 00:42:21 GMT</pubDate>
      
      <description>&lt;h2 id=&quot;web-xml’에-코드-추가&quot;&gt;&lt;a href=&quot;#web-xml’에-코드-추가&quot; class=&quot;headerlink&quot; title=&quot;`web.xml’에 코드 추가&quot;&gt;&lt;/a&gt;`web.xml’에 코드 추가&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;장바구니기능을 만들어보자.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;web.xml&lt;/code&gt; 코드 수정 후 꼭 서버 실행 후 주소창에 &lt;code&gt;test.bo&lt;/code&gt;해서 흰 화면이 뜨는지 확인하고 코딩할 것&lt;/li&gt;
&lt;li&gt;흰화면이 안뜨면 &lt;code&gt;web.xml&lt;/code&gt; 설정이 잘못되었다는 의미임.</description>
      
      
      
      <content:encoded><![CDATA[<h2 id="web-xml’에-코드-추가"><a href="#web-xml’에-코드-추가" class="headerlink" title="`web.xml’에 코드 추가"></a>`web.xml’에 코드 추가</h2><ul><li>장바구니기능을 만들어보자.</li><li><code>web.xml</code> 코드 수정 후 꼭 서버 실행 후 주소창에 <code>test.bo</code>해서 흰 화면이 뜨는지 확인하고 코딩할 것</li><li>흰화면이 안뜨면 <code>web.xml</code> 설정이 잘못되었다는 의미임.<a id="more"></a></li></ul><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- Model2 장바구니 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">servlet</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">servlet-name</span>&gt;</span>BasketFrontController<span class="tag">&lt;/<span class="name">servlet-name</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">servlet-class</span>&gt;</span>com.itwillbs.basket.action.BasketFrontController<span class="tag">&lt;/<span class="name">servlet-class</span>&gt;</span> </span><br><span class="line"><span class="tag">&lt;/<span class="name">servlet</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">servlet-mapping</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">servlet-name</span>&gt;</span>BasketFrontController<span class="tag">&lt;/<span class="name">servlet-name</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">url-pattern</span>&gt;</span>*.ba<span class="tag">&lt;/<span class="name">url-pattern</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">servlet-mapping</span>&gt;</span></span><br></pre></td></tr></table></figure><p><br><br><br></p><h2 id="BasketFrontController-java의-doProcess-의-주소비교-후-처리부분에-코드-추가"><a href="#BasketFrontController-java의-doProcess-의-주소비교-후-처리부분에-코드-추가" class="headerlink" title="BasketFrontController.java의 doProcess()의 주소비교 후 처리부분에 코드 추가"></a><code>BasketFrontController.java</code>의 doProcess()의 주소비교 후 처리부분에 코드 추가</h2><!-- more --><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">BasketFrontController</span> <span class="keyword">extends</span> <span class="title">HttpServlet</span> </span>&#123;</span><br><span class="line"><span class="comment">// 일반 클래스를 서블릿을 상속해서 컨트롤러 역활 할수있도록 설정</span></span><br><span class="line"><span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">doProcess</span><span class="params">(HttpServletRequest request, HttpServletResponse response)</span></span></span><br><span class="line"><span class="function"><span class="keyword">throws</span> ServletException, IOException </span>&#123;</span><br><span class="line">System.out.println(<span class="string">"doProcess() 호출 (페이지 GET/POST방식 모두 사용호출)"</span>);</span><br><span class="line"><span class="comment">// 주소 비교 (주소 매핑)</span></span><br><span class="line">System.out.println(<span class="string">"--------------@ 주소 계산 @-------------"</span>);</span><br><span class="line"><span class="comment">// 프로젝트명 + 주소</span></span><br><span class="line">String requestURI = request.getRequestURI();</span><br><span class="line">System.out.println(<span class="string">" requestURI : "</span> + requestURI);</span><br><span class="line"><span class="comment">// 프로젝트명</span></span><br><span class="line">String contextPath = request.getContextPath();</span><br><span class="line">System.out.println(<span class="string">" contextPath : "</span> + contextPath);</span><br><span class="line"><span class="comment">// 가상주소</span></span><br><span class="line">String command = requestURI.substring(contextPath.length());</span><br><span class="line">System.out.println(<span class="string">" command(가상주소) : "</span> + command);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">System.out.println(<span class="string">"--------------@ 주소 비교후 처리 @-------------"</span>);</span><br><span class="line">Action action = <span class="keyword">null</span>;</span><br><span class="line">ActionForward forward = <span class="keyword">null</span>;</span><br><span class="line"><span class="comment">// 주소에 따른 처리 구분 (주소 매핑후 이동)</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">System.out.println(<span class="string">"-----------------@ 페이지 이동 @--------------"</span>);</span><br><span class="line"><span class="keyword">if</span>(forward != <span class="keyword">null</span>)&#123; <span class="comment">// 이동할 정보가 있다</span></span><br><span class="line"><span class="keyword">if</span>(forward.isRedirect())&#123; <span class="comment">// true - sendRedirect()</span></span><br><span class="line"><span class="comment">// 가상주소(.bo -&gt; .bo), 화면전환(주소변경,화면 변경)</span></span><br><span class="line">System.out.println(<span class="string">"C : "</span>+forward.getPath()+<span class="string">"주소로 이동(Redirect)"</span>);</span><br><span class="line">response.sendRedirect(forward.getPath());</span><br><span class="line">&#125;<span class="keyword">else</span>&#123; <span class="comment">// false - forward()</span></span><br><span class="line">System.out.println(<span class="string">"C : "</span>+forward.getPath()+<span class="string">"주소로 이동(forward)"</span>);</span><br><span class="line"><span class="comment">// 가상주소 -&gt; 실제페이지 (.bo -&gt; .jsp) + reqeust 객체 정보를 가지고 이동</span></span><br><span class="line">RequestDispatcher dis =</span><br><span class="line">request.getRequestDispatcher(forward.getPath());</span><br><span class="line">dis.forward(request, response);</span><br><span class="line">&#125;</span><br><span class="line">&#125;<span class="comment">//end of 페이지이동</span></span><br><span class="line"></span><br><span class="line">&#125;<span class="comment">//end of doProcess</span></span><br><span class="line"></span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">doGet</span><span class="params">(HttpServletRequest req, HttpServletResponse resp)</span> </span></span><br><span class="line"><span class="function"><span class="keyword">throws</span> ServletException, IOException </span>&#123;</span><br><span class="line">System.out.println(<span class="string">"doGet() 호출 (페이지 GET방식 호출)"</span>);</span><br><span class="line">doProcess(req, resp);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">doPost</span><span class="params">(HttpServletRequest req, HttpServletResponse resp)</span> </span></span><br><span class="line"><span class="function"><span class="keyword">throws</span> ServletException, IOException </span>&#123;</span><br><span class="line">System.out.println(<span class="string">"doPost() 호출 (페이지 POST방식 호출)"</span>);</span><br><span class="line">doProcess(req, resp);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><br><br><br></p><h2 id="Action-java-생성"><a href="#Action-java-생성" class="headerlink" title="Action.java 생성"></a><code>Action.java</code> 생성</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">Action</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 상수,추상메서드</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 추상메서드 -&gt; 서브클래스들 한태 강제성 부여</span></span><br><span class="line"><span class="comment">// =&gt; 개발 형식의 통일(틀이 정해짐)</span></span><br><span class="line"><span class="comment">// =&gt; 객체간의 관계가 약화됨 =&gt; 각각의 객체가 해당 동작만 처리/제어</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// Action 페이지의 동작을 미리 선언해서 사용</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> ActionForward <span class="title">execute</span><span class="params">(HttpServletRequest request,</span></span></span><br><span class="line"><span class="function"><span class="params">HttpServletResponse response)</span> <span class="keyword">throws</span> Exception</span>;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><br><br><br></p><h2 id="ActionForward-java-생성"><a href="#ActionForward-java-생성" class="headerlink" title="ActionForward.java 생성"></a><code>ActionForward.java</code> 생성</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">ActionForward</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="comment">//1.외부접근 못하도록 이동할 페이지와 이동할 방식 멤버변수 생성</span></span><br><span class="line"><span class="keyword">private</span> String path;</span><br><span class="line"><span class="keyword">private</span> <span class="keyword">boolean</span> isRedirect;</span><br><span class="line"><span class="comment">// true면 sendRedirect방식으로 이동</span></span><br><span class="line"><span class="comment">//사용처: 주소와 화면의 전환이 동시에 일어날때 (가상주소 -&gt; 가상주소로 )</span></span><br><span class="line"><span class="comment">// false면  forward방식으로 이동</span></span><br><span class="line"><span class="comment">//사용처: 주소는 그대로인데 화면이 바뀔때 (가상주소에서 jsp보여줌)</span></span><br><span class="line"><span class="comment">//2. getter setter생성</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> String <span class="title">getPath</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="keyword">return</span> path;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setPath</span><span class="params">(String path)</span> </span>&#123;</span><br><span class="line"><span class="keyword">this</span>.path = path;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">isRedirect</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="keyword">return</span> isRedirect;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setRedirect</span><span class="params">(<span class="keyword">boolean</span> isRedirect)</span> </span>&#123;</span><br><span class="line"><span class="keyword">this</span>.isRedirect = isRedirect;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//3.toString</span></span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> String <span class="title">toString</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="keyword">return</span> <span class="string">"ActionForward [path="</span> + path + <span class="string">", isRedirect="</span> + isRedirect + <span class="string">"]"</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><br><br><br></p><h2 id="BasketDTO-java생성"><a href="#BasketDTO-java생성" class="headerlink" title="BasketDTO.java생성"></a><code>BasketDTO.java</code>생성</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line">```</span><br><span class="line"></span><br><span class="line">## `BasketDAO.java` 생성</span><br><span class="line">- DAO는 DTO와 달리 중요한 데이터에 접근하는 것이므로 관리자용DAO와 별도로 생성 및 관리되어야한다.</span><br><span class="line">- DB연결메서드 생성</span><br><span class="line">- 자원해제 메서드 생성</span><br><span class="line"></span><br><span class="line">```java</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">BasketDAO</span> </span>&#123;</span><br><span class="line">Connection con = <span class="keyword">null</span>;</span><br><span class="line">PreparedStatement pstmt = <span class="keyword">null</span>;</span><br><span class="line">ResultSet rs = <span class="keyword">null</span>;</span><br><span class="line">String sql = <span class="string">""</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 디비 연결</span></span><br><span class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">getCon</span><span class="params">()</span> <span class="keyword">throws</span> Exception</span>&#123;</span><br><span class="line"><span class="comment">// 커넥션 풀</span></span><br><span class="line">Context init = <span class="keyword">new</span> InitialContext();</span><br><span class="line">DataSource ds = (DataSource) init.lookup(<span class="string">"java:comp/env/jdbc/model2DB"</span>);</span><br><span class="line">con = ds.getConnection();</span><br><span class="line">System.out.println(<span class="string">"DAO : 디비연결 완료 "</span>+con);</span><br><span class="line">&#125;<span class="comment">//end of getCon()</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 디비 자원해제</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">closeDB</span><span class="params">()</span></span>&#123;</span><br><span class="line"><span class="keyword">try</span> &#123;</span><br><span class="line"><span class="keyword">if</span>(rs != <span class="keyword">null</span>) &#123;rs.close();&#125;</span><br><span class="line"><span class="keyword">if</span>(pstmt != <span class="keyword">null</span>) &#123;pstmt.close();&#125;</span><br><span class="line"><span class="keyword">if</span>(con != <span class="keyword">null</span>) &#123;con.close(); &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">catch</span> (SQLException e) &#123;</span><br><span class="line">e.printStackTrace();</span><br><span class="line">&#125; </span><br><span class="line">&#125;<span class="comment">//end of closeDB()</span></span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content:encoded>
      
      
      <category domain="https://sowon-dev.github.io/categories/JSP/">JSP</category>
      
      
      <category domain="https://sowon-dev.github.io/tags/TIL/">TIL</category>
      
      <category domain="https://sowon-dev.github.io/tags/ITWILL-JAVA/">ITWILL(JAVA)</category>
      
      
      <comments>https://sowon-dev.github.io/2020/09/15/200915jspi2/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>Servlet일반상품3 : 상품 상세페이지, c:forTokens</title>
      <link>https://sowon-dev.github.io/2020/09/15/200915jspi/</link>
      <guid>https://sowon-dev.github.io/2020/09/15/200915jspi/</guid>
      <pubDate>Tue, 15 Sep 2020 00:00:00 GMT</pubDate>
      
      <description>&lt;h2 id=&quot;GoodsFrontController-java의-doProcess-의-주소비교-후-처리부분에-코드-추가&quot;&gt;&lt;a href=&quot;#GoodsFrontController-java의-doProcess-의-주소비교-후-처리부분에-코드-추가&quot; class=&quot;headerlink&quot; title=&quot;GoodsFrontController.java의 doProcess()의 주소비교 후 처리부분에 코드 추가&quot;&gt;&lt;/a&gt;&lt;code&gt;GoodsFrontController.java&lt;/code&gt;의 doProcess()의 주소비교 후 처리부분에 코드 추가&lt;/h2&gt;</description>
      
      
      
      <content:encoded><![CDATA[<h2 id="GoodsFrontController-java의-doProcess-의-주소비교-후-처리부분에-코드-추가"><a href="#GoodsFrontController-java의-doProcess-의-주소비교-후-처리부분에-코드-추가" class="headerlink" title="GoodsFrontController.java의 doProcess()의 주소비교 후 처리부분에 코드 추가"></a><code>GoodsFrontController.java</code>의 doProcess()의 주소비교 후 처리부분에 코드 추가</h2><a id="more"></a><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//상품 상세페이지</span></span><br><span class="line">&#125;<span class="keyword">else</span> <span class="keyword">if</span>(command.equals(<span class="string">"/GoodsDetail.go"</span>))&#123;</span><br><span class="line">System.out.println(<span class="string">"C: /GoodsList.go 호출"</span>);</span><br><span class="line"><span class="comment">//.go -&gt; Action -&gt; DB(DAO) -&gt;.jsp로 이동</span></span><br><span class="line">action = <span class="keyword">new</span> GoodsDetailAction();</span><br><span class="line"><span class="keyword">try</span> &#123; forward = action.execute(request, response);</span><br><span class="line">&#125; <span class="keyword">catch</span> (Exception e) &#123; e.printStackTrace(); &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><br><br><br></p><h2 id="GoodsDetailAction-java-생성"><a href="#GoodsDetailAction-java-생성" class="headerlink" title="GoodsDetailAction.java 생성"></a><code>GoodsDetailAction.java</code> 생성</h2><ul><li>GoodsDAO객체 생성 후 getGoodsDetail()생성시 아래 코드를 한줄로 나타낼 수 있다.</li><li>변수를 굳이 사용하지않는다면 한 줄코딩하는 것이 좋다.</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//두줄</span></span><br><span class="line">GoodsDTO gdto = gdao.getGoodsDetail(gno);</span><br><span class="line">request.setAttribute(<span class="string">"gdto"</span>, gdto);</span><br><span class="line"></span><br><span class="line"><span class="comment">//한줄 처리</span></span><br><span class="line">request.setAttribute(<span class="string">"gdto"</span>, gdao.getGoodsDetail(gno));</span><br></pre></td></tr></table></figure><ul><li>전체코드</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">GoodsDetailAction</span> <span class="keyword">implements</span> <span class="title">Action</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> ActionForward <span class="title">execute</span><span class="params">(HttpServletRequest request, HttpServletResponse response)</span> </span></span><br><span class="line"><span class="function"><span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line">System.out.println(<span class="string">"M : GoodsDetailAction의 execute() 호출"</span>);</span><br><span class="line"><span class="comment">//한글처리</span></span><br><span class="line">request.setCharacterEncoding(<span class="string">"UTF-8"</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">//전달받은 파라미터 저장</span></span><br><span class="line"><span class="keyword">int</span> gno = Integer.parseInt(request.getParameter(<span class="string">"gno"</span>));</span><br><span class="line"></span><br><span class="line"><span class="comment">//GoodsDAO객체 생성 후 getGoodsDetail()생성</span></span><br><span class="line">GoodsDAO gdao = <span class="keyword">new</span> GoodsDAO();</span><br><span class="line">GoodsDTO gdto = gdao.getGoodsDetail(gno);</span><br><span class="line"></span><br><span class="line"><span class="comment">//requset영역에 저장</span></span><br><span class="line">request.setAttribute(<span class="string">"gdto"</span>, gdto);</span><br><span class="line"><span class="comment">//위와 동일한 코드</span></span><br><span class="line"><span class="comment">//request.setAttribute("gdto", gdao.getGoodsDetail(gno));</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//goods_list.jsp 페이지이동(뷰페이지로이동)</span></span><br><span class="line">ActionForward forward = <span class="keyword">new</span> ActionForward();</span><br><span class="line">forward.setPath(<span class="string">"./goods/goods_detail.jsp"</span>);</span><br><span class="line">forward.setRedirect(<span class="keyword">false</span>);</span><br><span class="line"><span class="keyword">return</span> forward;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><br><br><br></p><h2 id="AdminGoodsDAO-java-생성-후-getGoodsDetail-메서드-코드-추가"><a href="#AdminGoodsDAO-java-생성-후-getGoodsDetail-메서드-코드-추가" class="headerlink" title="AdminGoodsDAO.java 생성 후 getGoodsDetail()메서드 코드 추가"></a><code>AdminGoodsDAO.java</code> 생성 후 getGoodsDetail()메서드 코드 추가</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//상품 상세정보 가져오기</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> GoodsDTO <span class="title">getGoodsDetail</span><span class="params">(<span class="keyword">int</span> gno)</span> </span>&#123;</span><br><span class="line">GoodsDTO gdto = <span class="keyword">null</span>;</span><br><span class="line"><span class="keyword">try</span> &#123;</span><br><span class="line">getCon();</span><br><span class="line">sql = <span class="string">"select * from itwill_goods where gno=?"</span>;</span><br><span class="line">pstmt = con.prepareStatement(sql);</span><br><span class="line">pstmt.setInt(<span class="number">1</span>, gno);</span><br><span class="line">rs = pstmt.executeQuery();</span><br><span class="line"><span class="keyword">if</span>(rs.next())&#123;</span><br><span class="line">gdto = <span class="keyword">new</span> GoodsDTO();</span><br><span class="line">gdto.setGno(rs.getInt(<span class="string">"gno"</span>));</span><br><span class="line">gdto.setCategory(rs.getString(<span class="string">"category"</span>));</span><br><span class="line">gdto.setName(rs.getString(<span class="string">"name"</span>));</span><br><span class="line">gdto.setPrice(rs.getInt(<span class="string">"price"</span>));</span><br><span class="line">gdto.setColor(rs.getString(<span class="string">"color"</span>));</span><br><span class="line"></span><br><span class="line">gdto.setAmount(rs.getInt(<span class="string">"amount"</span>));</span><br><span class="line">gdto.setSize(rs.getString(<span class="string">"size"</span>));</span><br><span class="line">gdto.setContent(rs.getString(<span class="string">"content"</span>));</span><br><span class="line">gdto.setImage(rs.getString(<span class="string">"image"</span>));</span><br><span class="line">gdto.setBest(rs.getInt(<span class="string">"best"</span>));</span><br><span class="line"></span><br><span class="line">gdto.setDate(rs.getDate(<span class="string">"date"</span>));</span><br><span class="line">&#125;</span><br><span class="line">System.out.println(<span class="string">"상품 상세정보 저장 완료"</span>);</span><br><span class="line">&#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">e.printStackTrace();</span><br><span class="line">&#125; <span class="keyword">finally</span> &#123;</span><br><span class="line">closeDB();</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> gdto;</span><br><span class="line">&#125;<span class="comment">//end of 상품상세정보가져오기</span></span><br></pre></td></tr></table></figure><p><br><br><br></p><h2 id="goods-detail-jsp-생성"><a href="#goods-detail-jsp-생성" class="headerlink" title="goods_detail.jsp 생성"></a><code>goods_detail.jsp</code> 생성</h2><ul><li>DB의 정보를 request에 저장했고 그걸 불러와서 select항목에 넣을 수 있다. 이때 두가지 방법이 있다.</li><li>&lt;c:forEach&gt;와 &lt;c:forTokens&gt;의 차이점은 &lt;c:forTokens&gt;의 경우 <strong>문자열을 분리자를 사용해서 분리해서 출력가능</strong></li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">c:forTokens</span> <span class="attr">var</span>=<span class="string">"name"</span> <span class="attr">items</span>=<span class="string">"고양이,강아지,소"</span> <span class="attr">delims</span>=<span class="string">","</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span>&gt;</span><span class="tag">&lt;<span class="name">c:out</span> <span class="attr">value</span>=<span class="string">"$&#123;name&#125;"</span>/&gt;</span><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">c:forTokens</span>&gt;</span></span><br><span class="line"></span><br><span class="line">//출력결과</span><br><span class="line">고양이</span><br><span class="line">강아지</span><br><span class="line">소</span><br></pre></td></tr></table></figure><p><br><br><br></p><h3 id="첫번째-방법-forTokens-스크립틀릿사용"><a href="#첫번째-방법-forTokens-스크립틀릿사용" class="headerlink" title="첫번째 방법 : forTokens +스크립틀릿사용"></a>첫번째 방법 : forTokens +스크립틀릿사용</h3><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">select</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">""</span>&gt;</span>선택하세요<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line">&lt;c:forTokens var="size" items=""&lt;%=gdto.getSize() %&gt;" delims = ","&gt;</span><br><span class="line"><span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">"$&#123;gdto.size&#125;"</span>&gt;</span>$&#123;size&#125;<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">c:forTokens</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br><span class="line"></span><br><span class="line">//출력값</span><br><span class="line">S </span><br><span class="line">M </span><br><span class="line">L </span><br><span class="line">XL</span><br></pre></td></tr></table></figure><p><br><br><br></p><h3 id="두번째-방법-forTokens-EL태그사용"><a href="#두번째-방법-forTokens-EL태그사용" class="headerlink" title="두번째 방법 : forTokens + EL태그사용"></a>두번째 방법 : forTokens + EL태그사용</h3><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">select</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">""</span>&gt;</span>선택하세요<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">c:forTokens</span> <span class="attr">var</span>=<span class="string">"color"</span> <span class="attr">items</span>=<span class="string">"$&#123;gdto.color&#125;"</span> <span class="attr">delims</span> = <span class="string">","</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">"$&#123;gdto.color&#125;"</span>&gt;</span>$&#123;color&#125;<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">c:forTokens</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line"></span><br><span class="line">//출력값</span><br><span class="line">white</span><br><span class="line">black</span><br><span class="line">yellow</span><br></pre></td></tr></table></figure><p><br><br><br></p><h3 id="javascript-코드-한줄로-불러오기"><a href="#javascript-코드-한줄로-불러오기" class="headerlink" title="javascript 코드 한줄로 불러오기"></a>javascript 코드 한줄로 불러오기</h3><ul><li>a태그를 이용하면 href로 항상 페이지이동이 된다. 이를 막기 위해서는 2가지 방법이 있다.<ul><li>e.preventDefault();</li><li><code>javascript:isBasket();</code></li></ul></li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">//원치않는 href="#"가 진행되어 페이지이동이 일어난다(여기선 새로고침)</span><br><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">""</span> <span class="attr">onclick</span>=<span class="string">"isBasket();"</span>&gt;</span> [장바구니 담기] <span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line"></span><br><span class="line">//이렇게부르면 페이지이동없이 자바스크립트를 실행할 수 있다</span><br><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"javascript:isBasket();"</span>&gt;</span> [장바구니 담기] <span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br></pre></td></tr></table></figure><p><br><br><br></p><h3 id="구매수량이-재고보다-많은-경우-제어"><a href="#구매수량이-재고보다-많은-경우-제어" class="headerlink" title="구매수량이 재고보다 많은 경우 제어"></a>구매수량이 재고보다 많은 경우 제어</h3><ul><li>자바표현식 : DB정보를 꺼내오기 불가능. 페이지 구성상 제일 마지막에 호출되므로 자바표현식으로 사용불가능</li><li>EL표현식 : DB정보를 꺼내오기 가능. <ul><li>자바스크립트태그안에서는 EL표현식을 문자형태(‘’)로 사용하는 것이 일반적.</li><li>문자형태로 쓰지않아도 객체로 처리되기때문에 동일하게 처리되나 문법상 문자형태로 (‘’)써줘야 함.</li></ul></li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">// 구매 수량</span><br><span class="line">var buyCnt = document.goodsform.amount.value;</span><br><span class="line"></span><br><span class="line">// 남은 수량 (DTO정보)</span><br><span class="line">var DBCnt = <span class="tag">&lt;<span class="name">%=gdto.getAmount()%</span>&gt;</span> //에러</span><br><span class="line">var DBCnt = $&#123;gdto.amount&#125;; //사용가능</span><br><span class="line">var DBCnt = '$&#123;gdto.amount&#125;'; //문자형태도 사용가능</span><br><span class="line"></span><br><span class="line">if(buyCnt &gt; DBCnt)&#123;</span><br><span class="line">   alert("구매 수량을 조절하시오");</span><br><span class="line">   document.goodsform.amount.focus();</span><br><span class="line">   return;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><br><br><br></p><h3 id="전체코드"><a href="#전체코드" class="headerlink" title="전체코드"></a>전체코드</h3><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">%</span></span></span><br><span class="line"><span class="tag">// <span class="attr">GoodsDetailAction</span> 에서 저장한 상품 정보를 받아오기</span></span><br><span class="line"><span class="tag"><span class="attr">GoodsDTO</span> <span class="attr">gdto</span> = <span class="string">(GoodsDTO)</span> <span class="attr">request.getAttribute</span>("<span class="attr">gdto</span>");</span></span><br><span class="line"><span class="tag">%&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">form</span> <span class="attr">action</span>=<span class="string">""</span> <span class="attr">method</span>=<span class="string">"post"</span> <span class="attr">name</span>=<span class="string">"goodsform"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"hidden"</span> <span class="attr">name</span>=<span class="string">"name"</span> <span class="attr">value</span>=<span class="string">"&lt;%=gdto.getName()%&gt;"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"hidden"</span> <span class="attr">name</span>=<span class="string">"price"</span> <span class="attr">value</span>=<span class="string">"$&#123;gdto.price &#125;"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">table</span> <span class="attr">border</span>=<span class="string">"1"</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">td</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">"./upload/&lt;%=gdto.getImage().split("</span>,")[<span class="attr">0</span>]%&gt;</span>" width="300" height="300"&gt;</span><br><span class="line">    <span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">td</span>&gt;</span></span><br><span class="line">       상품명 : $&#123;gdto.name&#125; <span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">       판매가격 : <span class="tag">&lt;<span class="name">%=gdto.getPrice()</span> %&gt;</span>원<span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">       구매수량 : <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"text"</span> <span class="attr">name</span>=<span class="string">"amount"</span>&gt;</span>개<span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">       남은수량 : $&#123;gdto.amount&#125;개<span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">       크기 : </span><br><span class="line">       <span class="tag">&lt;<span class="name">select</span> <span class="attr">name</span>=<span class="string">"size"</span>&gt;</span></span><br><span class="line">       <span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">""</span>&gt;</span>선택하세요<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line">       <span class="tag">&lt;<span class="name">c:forTokens</span> <span class="attr">var</span>=<span class="string">"size"</span> <span class="attr">items</span>=<span class="string">"&lt;%=gdto.getSize() %&gt;"</span> <span class="attr">delims</span> = <span class="string">","</span>&gt;</span></span><br><span class="line">       <span class="tag">&lt;<span class="name">option</span>&gt;</span>$&#123;size&#125;<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line">       <span class="tag">&lt;/<span class="name">c:forTokens</span>&gt;</span></span><br><span class="line">       <span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br><span class="line">       <span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">       색상 : </span><br><span class="line">       <span class="tag">&lt;<span class="name">select</span> <span class="attr">name</span>=<span class="string">"color"</span>&gt;</span></span><br><span class="line">       <span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">""</span>&gt;</span>선택하세요<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line">       <span class="tag">&lt;<span class="name">c:forTokens</span> <span class="attr">var</span>=<span class="string">"color"</span> <span class="attr">items</span>=<span class="string">"$&#123;gdto.color&#125;"</span> <span class="attr">delims</span> = <span class="string">","</span>&gt;</span></span><br><span class="line">       <span class="tag">&lt;<span class="name">option</span>&gt;</span>$&#123;color&#125;<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line">       <span class="tag">&lt;/<span class="name">c:forTokens</span>&gt;</span></span><br><span class="line">       <span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br><span class="line">       <span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">     <span class="comment">&lt;!--  &lt;input type="button" class="btn" value="[장바구니 담기]" onclick="isBasket();" &gt; --&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"button"</span> <span class="attr">class</span>=<span class="string">"btn"</span> <span class="attr">value</span>=<span class="string">"[장바구니 담기]"</span> <span class="attr">onclick</span>=<span class="string">"javascript:isBasket();"</span> &gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"button"</span> <span class="attr">class</span>=<span class="string">"btn"</span> <span class="attr">value</span>=<span class="string">"[바로 구매하기]"</span> <span class="attr">onclick</span>=<span class="string">"javascript:isBasket();"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">td</span>&gt;</span>  </span><br><span class="line">  <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">td</span> <span class="attr">colspan</span>=<span class="string">"2"</span>&gt;</span></span><br><span class="line">     <span class="tag">&lt;<span class="name">h2</span>&gt;</span>상세페이지<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">"./upload/&lt;%=gdto.getImage().split("</span>,")[<span class="attr">0</span>]%&gt;</span>" width="400" height="600"&gt;</span><br><span class="line">    <span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">table</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">"text/javascript"</span>&gt;</span></span><br><span class="line"><span class="actionscript"><span class="comment">/* 장바구니  기능 구현 */</span></span></span><br><span class="line"><span class="actionscript"><span class="comment">//각각의 링크 클릭시 해당 페이지로 정보를 가지고 이동</span></span></span><br><span class="line"><span class="actionscript"><span class="function"><span class="keyword">function</span> <span class="title">isBasket</span><span class="params">()</span> </span>&#123;</span></span><br><span class="line"><span class="actionscript"><span class="comment">//유효성체크</span></span></span><br><span class="line"><span class="actionscript"><span class="comment">//사이즈선택유무</span></span></span><br><span class="line"><span class="javascript"><span class="keyword">if</span>(<span class="built_in">document</span>.goodsform.size.value == <span class="string">""</span>)&#123;</span></span><br><span class="line"><span class="actionscript">alert(<span class="string">"사이즈를 선택하세요"</span>);</span></span><br><span class="line"><span class="javascript"><span class="built_in">document</span>.goodsform.size.focus();</span></span><br><span class="line"><span class="actionscript"><span class="keyword">return</span> <span class="literal">false</span>;</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="actionscript"><span class="comment">//색상선택유무</span></span></span><br><span class="line"><span class="javascript"><span class="keyword">if</span>(<span class="built_in">document</span>.goodsform.color.value == <span class="string">""</span>)&#123;</span></span><br><span class="line"><span class="actionscript">alert(<span class="string">"색상을 선택하세요"</span>);</span></span><br><span class="line"><span class="javascript"><span class="built_in">document</span>.goodsform.color.focus();</span></span><br><span class="line"><span class="actionscript"><span class="keyword">return</span>;</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="actionscript"><span class="comment">//수량기입유무</span></span></span><br><span class="line"><span class="javascript"><span class="keyword">if</span>(<span class="built_in">document</span>.goodsform.amount.value == <span class="string">""</span>)&#123;</span></span><br><span class="line"><span class="actionscript">alert(<span class="string">"수량을 입력하세요"</span>);</span></span><br><span class="line"><span class="javascript"><span class="built_in">document</span>.goodsform.amount.focus();</span></span><br><span class="line"><span class="actionscript"><span class="keyword">return</span>;</span></span><br><span class="line"><span class="actionscript"><span class="comment">//수량이 재고보다 많은 경우</span></span></span><br><span class="line"><span class="javascript">&#125;<span class="keyword">else</span> <span class="keyword">if</span>(<span class="built_in">document</span>.goodsform.amount.value &gt; $&#123;gdto.amount&#125;)&#123;</span></span><br><span class="line"><span class="actionscript">alert(<span class="string">"수량을 남은 수량  $&#123;gdto.amount&#125;개 이하로 입력하세요"</span>);</span></span><br><span class="line"><span class="javascript"><span class="built_in">document</span>.goodsform.amount.focus();</span></span><br><span class="line"><span class="actionscript"><span class="keyword">return</span>;</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="actionscript"><span class="comment">//이동</span></span></span><br><span class="line"><span class="javascript"><span class="keyword">let</span> result = confirm(<span class="string">"장바구니로 이동하시겠습니까?"</span>);</span></span><br><span class="line">if(result)&#123;</span><br><span class="line"><span class="actionscript"><span class="comment">//form action속성에 주소입력</span></span></span><br><span class="line"><span class="javascript"><span class="built_in">document</span>.goodsform.action = <span class="string">"./BasketAdd.ba?gno=$&#123;gdto.gno&#125;"</span>;</span></span><br><span class="line"><span class="actionscript"><span class="comment">//form태그 정보를 가지고 페이지 이동</span></span></span><br><span class="line"><span class="javascript"><span class="built_in">document</span>.goodsform.submit();</span></span><br><span class="line"><span class="actionscript">&#125;<span class="keyword">else</span>&#123;</span></span><br><span class="line"><span class="actionscript"><span class="keyword">return</span>;</span></span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure>]]></content:encoded>
      
      
      <category domain="https://sowon-dev.github.io/categories/JSP/">JSP</category>
      
      
      <category domain="https://sowon-dev.github.io/tags/TIL/">TIL</category>
      
      <category domain="https://sowon-dev.github.io/tags/ITWILL-JAVA/">ITWILL(JAVA)</category>
      
      
      <comments>https://sowon-dev.github.io/2020/09/15/200915jspi/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>오라클의 Database 켜고 끄기</title>
      <link>https://sowon-dev.github.io/2020/09/14/200914dbi/</link>
      <guid>https://sowon-dev.github.io/2020/09/14/200914dbi/</guid>
      <pubDate>Mon, 14 Sep 2020 05:01:01 GMT</pubDate>
      
      <description>&lt;h1 id=&quot;Database-시작-단계&quot;&gt;&lt;a href=&quot;#Database-시작-단계&quot; class=&quot;headerlink&quot; title=&quot;Database 시작 단계&quot;&gt;&lt;/a&gt;Database 시작 단계&lt;/h1&gt;&lt;ol&gt;
&lt;li&gt;shutdown : Instance가 켜지지않은 단계&lt;/li&gt;
&lt;li&gt;&lt;code&gt;parameterfile&lt;/code&gt; 읽고 nomount로 올라감&lt;/li&gt;
&lt;li&gt;nomount : &lt;code&gt;parameterfile&lt;/code&gt;에서 파라미터값이 정상적으로 읽은 뒤 파라미터값을 토대로 &lt;code&gt;instance&lt;/code&gt;가 시작된 단계</description>
      
      
      
      <content:encoded><![CDATA[<h1 id="Database-시작-단계"><a href="#Database-시작-단계" class="headerlink" title="Database 시작 단계"></a>Database 시작 단계</h1><ol><li>shutdown : Instance가 켜지지않은 단계</li><li><code>parameterfile</code> 읽고 nomount로 올라감</li><li>nomount : <code>parameterfile</code>에서 파라미터값이 정상적으로 읽은 뒤 파라미터값을 토대로 <code>instance</code>가 시작된 단계 <a id="more"></a><ul><li>파라미터값 중에 control_files 값이 있는데 여기에 controlfile정보가 저장되어 있음</li></ul></li><li><code>Controlfile</code>를 읽고 mount로 올라감</li><li>mount : <code>Controlfile</code>을 찾아서 정상적으로 읽은 상태<ul><li>Datafile, Redologfile 위치 및 이름 변경</li><li>Controlfile이 다중화된 갯수만큼 그만큼 마운트 시간이 오래 걸린다</li><li>전체 DB복구: DB모드(Archive log mode)변경가능<ul><li>명령어 : <code>recover database;</code></li></ul></li></ul></li><li><code>SMON</code>이 <code>redologfiles</code>를 읽어서 DB동기화를 시켜줌</li><li>open : DB가 정상적으로 켜진 단계, 일반 DB사용자 접속 가능</li></ol><p><img src="http://www.dbguide.net/images/know/tech/071130_02-1_img01.jpg" alt="https://www.kdata.or.kr/info/info_04_view.html?field=&amp;keyword=&amp;type=techreport&amp;page=240&amp;dbnum=127439&amp;mode=detail&amp;type=techreport"></p><p><br><br><br></p><h2 id="nomount에서-할-수-있는-대표적인-관리작업"><a href="#nomount에서-할-수-있는-대표적인-관리작업" class="headerlink" title="nomount에서 할 수 있는 대표적인 관리작업"></a>nomount에서 할 수 있는 대표적인 관리작업</h2><ul><li>DB생성<ul><li>DB생성명렁어 : <code>create database;</code></li><li>위의 명령어는 아무데나 실행할 수 있는 명령어가 아니고 nomount에서만 할 수 있는 명령어이다.</li></ul></li><li>Controlfile 재생성</li></ul><p><br><br><br></p><h2 id="DB가-shutdown일때-쓸-수-있는-명령어"><a href="#DB가-shutdown일때-쓸-수-있는-명령어" class="headerlink" title="DB가 shutdown일때 쓸 수 있는 명령어"></a>DB가 shutdown일때 쓸 수 있는 명령어</h2><p>원래 문법상 startup 명령어 뒤에는 세미콜론(;)이 붙지않는다.<br>하지만 세미콜론을 붙여도 실행은 해준다.</p><ul><li><code>startup nomount</code> : shutdown에서 nomount까지 올라가는 명령어</li><li><code>startup mount</code> : shutdown에서 mount까지 올라가는 명령어</li><li><code>startup</code> : shutdown에서 open까지 올라가는 명령어<ul><li>명렁어를 통해 한 번에 3단계씩 올라갈 수 있다.</li></ul></li></ul><p><img src="https://www.ktexperts.com/wp-content/uploads/2019/01/1-2.png" alt="https://www.ktexperts.com/startup-and-shutdown-modes-in-oracle/"></p><p><br><br><br></p><h2 id="DB가-각-단계에서-위로-올릴때-쓰는-명령어"><a href="#DB가-각-단계에서-위로-올릴때-쓰는-명령어" class="headerlink" title="DB가 각 단계에서 위로 올릴때 쓰는 명령어"></a>DB가 각 단계에서 위로 올릴때 쓰는 명령어</h2><p>DB가 shutdown상태가 아닌 특정 단계에 있을 때 아래와 같은 명령어를 사용할 수 있다.<br>아래 명령어는 한 번에 한 단계씩만 올라갈 수 있다. 두 단계씩 못 올라감.<br>즉, nomount에서 open으로 올라가는 명령어는 없다. 차근차근 올라가야함.</p><ul><li><code>alter database mount;</code> : nomount에서 mount까지 올라가는 명령어</li><li><code>alter database open;</code> : mount에서 open까지 올라가는 명령어</li></ul><p><br><br><br></p><h2 id="지금-어디까지-켜져있는지-확인하는-명령어"><a href="#지금-어디까지-켜져있는지-확인하는-명령어" class="headerlink" title="지금 어디까지 켜져있는지 확인하는 명령어"></a>지금 어디까지 켜져있는지 확인하는 명령어</h2><p>지금이 nomount인지 mount인지 어디인지 확인하는 명령어이다.<br>지금 어느 상태인지 status가 알려준다.</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line">//명령어</span><br><span class="line">select status from v<span class="variable">$instance</span>;</span><br><span class="line"></span><br><span class="line">//shutdown상태인 경우 오류메세지 출력</span><br><span class="line">ERROR at line 1:</span><br><span class="line">ORA-01034: ORACLE not available</span><br><span class="line">Process ID: 0</span><br><span class="line">Session ID: 0 Serial number: 0</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">//nomount상태인 경우 STARTED 출력</span><br><span class="line">STATUS</span><br><span class="line">------------------------</span><br><span class="line">STARTED</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">//mount상태인 경우 MOUNTED 출력됨</span><br><span class="line">STATUS</span><br><span class="line">------------------------</span><br><span class="line">MOUNTED</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">//open상태인 경우 OPEN 출력됨</span><br><span class="line">STATUS</span><br><span class="line">------------------------</span><br><span class="line">OPEN</span><br></pre></td></tr></table></figure><p><br><br><br></p><h1 id="DB-종료하기"><a href="#DB-종료하기" class="headerlink" title="DB 종료하기"></a>DB 종료하기</h1><p>DB시작할때는 한계단씩 켤수있으나 종료할때는 OPEN에서 SHUTDOWN으로 바로 내려가야한다.</p><ul><li>현재 MOUNT이든지 OPEN이든지 무조건 SHUTDOWN으로만 내려올 수 있다.</li><li>그렇다면 OPEN인 상태에선 어떻게 MOUNT로 내려갈 수 있을까?<ul><li>OPEN에서 SHUTDOWN으로 내려간 뒤 다시 MOUNT로 올라가야한다.</li></ul></li></ul><p><br><br><br></p><h2 id="종료-명령어"><a href="#종료-명령어" class="headerlink" title="종료 명령어"></a>종료 명령어</h2><ul><li>비정상적인 종료 : abort<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">SQL&gt; shut abort</span><br><span class="line">ORACLE instance shut down.</span><br></pre></td></tr></table></figure></li><li>정상적인 종료 : immediate, transactional, normal(default)</li><li>shutdown 줄여서 shut 명령어 가능</li></ul><p><img src="https://image.slidesharecdn.com/less04databaseinstance-130111040459-phpapp02/95/less04-database-instance-28-638.jpg?cb=1357877155" alt="https://www.slideshare.net/AmitBhalla2/less04-database-instance"></p><table><thead><tr><th align="left">shutdown모드</th><th align="center">A</th><th align="center">I</th><th align="center">T</th><th align="center">N</th></tr></thead><tbody><tr><td align="left">새로 들어오는 접속을 허용 하는가?</td><td align="center">N</td><td align="center">N</td><td align="center">N</td><td align="center">N</td></tr><tr><td align="left">현재 세션 종료될때까지 기다릴건지?</td><td align="center">N</td><td align="center">N</td><td align="center">N</td><td align="center">Y</td></tr><tr><td align="left">현재 트랜잭션이 종료될때까지 기다릴건지?</td><td align="center">N</td><td align="center">N</td><td align="center">Y</td><td align="center">Y</td></tr><tr><td align="left">체크포인트를 발생시켜서 커밋된 작업은 반영할 것인지?</td><td align="center">N</td><td align="center">Y</td><td align="center">Y</td><td align="center">Y</td></tr></tbody></table><p><br><br><br></p><h2 id="shutdown-immediate"><a href="#shutdown-immediate" class="headerlink" title="shutdown immediate"></a>shutdown immediate</h2><ul><li>shutdown immediate = shut immediate<br>DB를 정상적으로 끄면서 가장 빠르게 종료시키는 명령어<br>체크포인트가 바로 발생하는 명령어 -&gt; redologfiles에 로그가 저장되고 더디블럭이 datafiles에 내려옴 -&gt; 동기화 된 채로 종료</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">SQL&gt; shut immediate</span><br><span class="line">Database closed.</span><br><span class="line">Database dismounted.</span><br><span class="line">ORACLE instance shut down.</span><br></pre></td></tr></table></figure><p><br><br><br></p><h2 id="shutdown-transactional"><a href="#shutdown-transactional" class="headerlink" title="shutdown transactional"></a>shutdown transactional</h2><ul><li>shutdown transactional = shut transactional<br>현재 진행되고있는 트랜잭션이 있다면 커밋/롤백으로 마무리될때까지 기다렸다가 종료하는 모드<br>기다렸다가 종료하는 모드이므로 언제 꺼질지는 모른다.<br>새로운 트랜잭션이 늘어나진않는다.</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">//HR세션(p113)</span><br><span class="line">insert into regions values (5,<span class="string">'Mars'</span>);</span><br><span class="line"></span><br><span class="line">//SYS세션 : 더이상 진행되지않음. 변화없음</span><br><span class="line">SQL&gt; shut transactional</span><br><span class="line"></span><br><span class="line">//HR세션</span><br><span class="line">rollback;</span><br><span class="line"></span><br><span class="line">//SYS세션 : 트랜잭션 종료되자마자 시작</span><br><span class="line">Database closed.</span><br><span class="line">Database dismounted.</span><br><span class="line">ORACLE instance shut down.</span><br></pre></td></tr></table></figure><p><br><br><br></p><h2 id="shutdown-normal-default"><a href="#shutdown-normal-default" class="headerlink" title="shutdown normal(default)"></a>shutdown normal(default)</h2><ul><li>shutdown normal = shutdown = shut<br>디폴트값이다<br>접속되어있는 모든 유저들의 세션이 종료될때까지 기다려준다.<br>새로운 트랜잭션이 늘어난다.</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">SQL&gt; shut</span><br><span class="line">Database closed.</span><br><span class="line">Database dismounted.</span><br><span class="line">ORACLE instance shut down.</span><br></pre></td></tr></table></figure>]]></content:encoded>
      
      
      <category domain="https://sowon-dev.github.io/categories/Database/">Database</category>
      
      <category domain="https://sowon-dev.github.io/categories/Database/Oracle/">Oracle</category>
      
      
      <category domain="https://sowon-dev.github.io/tags/TIL/">TIL</category>
      
      <category domain="https://sowon-dev.github.io/tags/ITWILL-JAVA/">ITWILL(JAVA)</category>
      
      <category domain="https://sowon-dev.github.io/tags/Oracle/">Oracle</category>
      
      
      <comments>https://sowon-dev.github.io/2020/09/14/200914dbi/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>[오픈소스컨트리뷰톤2020] 온라인미팅 중 현직꿀팁List</title>
      <link>https://sowon-dev.github.io/2020/09/14/200914opensource/</link>
      <guid>https://sowon-dev.github.io/2020/09/14/200914opensource/</guid>
      <pubDate>Mon, 14 Sep 2020 00:00:00 GMT</pubDate>
      
      <description>&lt;h2 id=&quot;🍎프론트앤드-하는-일&quot;&gt;&lt;a href=&quot;#🍎프론트앤드-하는-일&quot; class=&quot;headerlink&quot; title=&quot;🍎프론트앤드 하는 일&quot;&gt;&lt;/a&gt;🍎프론트앤드 하는 일&lt;/h2&gt;&lt;ol&gt;
&lt;li&gt;jquery - 변한작업 -&amp;gt; vue&lt;/li&gt;
&lt;li&gt;jsonp, cors : 면접때 프론트앤드개발자에게 무조건 물어봄. 보안이슈이기때문에.&lt;/li&gt;
&lt;li&gt;모던js튜토리얼 2회독이상하기 도움이 엄청 되었다.</description>
      
      
      
      <content:encoded><![CDATA[<h2 id="🍎프론트앤드-하는-일"><a href="#🍎프론트앤드-하는-일" class="headerlink" title="🍎프론트앤드 하는 일"></a>🍎프론트앤드 하는 일</h2><ol><li>jquery - 변한작업 -&gt; vue</li><li>jsonp, cors : 면접때 프론트앤드개발자에게 무조건 물어봄. 보안이슈이기때문에.</li><li>모던js튜토리얼 2회독이상하기 도움이 엄청 되었다.<a id="more"></a></li><li><a href="https://andreasbm.github.io/web-skills/">프론트앤드 웹스킬 한방에 정리한 사이트</a></li></ol><p><br><br><br></p><h2 id="🍎백앤드-하는-일"><a href="#🍎백앤드-하는-일" class="headerlink" title="🍎백앤드 하는 일"></a>🍎백앤드 하는 일</h2><ul><li>백앤드는 스프링배워서 컨트롤러짜는 기능까지 요구</li><li>서버 : node, spring 주로 사용</li></ul><p><br><br><br></p><h2 id="🍎현업에서-자주사용하는-언어"><a href="#🍎현업에서-자주사용하는-언어" class="headerlink" title="🍎현업에서 자주사용하는 언어"></a>🍎현업에서 자주사용하는 언어</h2><ul><li>프론트개발자 : vue, ts(타입스크립트)로 진행함<ul><li>프론트앤드 삼대장 : 뷰, 리액트, 앵귤러(카카오톡이 밀고있음)</li><li>순수js를 쓰는 회사는 거의없다</li></ul></li><li>앱만들때는 : ios코틀린, 리액트(iso,안드), 네이티브</li><li>QA자동화 : 카탈론(자바랑 리액트)</li></ul><p><br><br><br></p><h2 id="🍎사이드플젝"><a href="#🍎사이드플젝" class="headerlink" title="🍎사이드플젝"></a>🍎사이드플젝</h2><ul><li>아래 동아리들이 팀원을 구해서 프로젝트랑 연결해줌 <ul><li>비사이드</li><li>얍</li><li>메이커스</li></ul></li></ul><p><br><br><br></p><h2 id="🍎프론트앤드-신입-경력과제"><a href="#🍎프론트앤드-신입-경력과제" class="headerlink" title="🍎프론트앤드 신입/경력과제"></a>🍎프론트앤드 신입/경력과제</h2><ol><li>todoapp 배포(줄글로)</li><li>zeplin.io 로 디자인 시안을 해서 화면을 주면 그걸 보고 구현</li></ol><p><br><br><br></p><h2 id="🍎프론트앤드-면접질문-팁"><a href="#🍎프론트앤드-면접질문-팁" class="headerlink" title="🍎프론트앤드 면접질문 팁"></a>🍎프론트앤드 면접질문 팁</h2><ol><li><a href="https://ko.javascript.info/closure">클로저</a><blockquote><p>번역하면서 이런 내용은 보충되었으면 하는 내용을 정리해보았습니다.<br>스코프의 정의: 이름(변수)의 유효범위<br>렉시컬 스코프: 정적 스코프라고도 불리운다. 동적 스코프의 단점 때문에 등장한 개념으로, 관련 내용은 ‘코딩을 지탱하는 기술’ 제 7장 ‘이름과 스코프’에서 확인할 수 있다.</p></blockquote></li><li><a href="https://ko.javascript.info/array-methods">배열과 메서드</a> <blockquote><p>학습팁! 배열을 조작하는지, 아니면 기존 배열은 건드리지 않고 조건을 적용한 새로운 배열을 반환하는지에 주의하며 메서드를 살펴보시기 바랍니다. pure function에 대한 자료들도 읽어보시면 좋을 것 같습니다.</p></blockquote></li></ol><p><br><br><br></p><h2 id="🍎power-apps-기술"><a href="#🍎power-apps-기술" class="headerlink" title="🍎power apps 기술"></a>🍎power apps 기술</h2><p>women who code에서 마이크로소프트랑합작으로 만든 회사.</p><p><br><br><br></p><h2 id="🍎현업에서-브랜치명-작성은-보통-어떻게-하는-지"><a href="#🍎현업에서-브랜치명-작성은-보통-어떻게-하는-지" class="headerlink" title="🍎현업에서 브랜치명 작성은 보통 어떻게 하는 지?"></a>🍎현업에서 브랜치명 작성은 보통 어떻게 하는 지?</h2><ul><li>브랜치명 : 이슈나 티켓기반으로 작업 &gt; 브랜치명을 이슈번호나 티켓번호가 자동으로 셋팅됨. 브랜치명이 다른 팀원과 겹쳐도 됨. <ul><li><code>Feature/{issue number}/기능설명</code></li><li>기능개발: feature</li><li>버그: bugfix</li></ul></li></ul><p><br><br><br></p><h2 id="🍎현업에서-PR보내기"><a href="#🍎현업에서-PR보내기" class="headerlink" title="🍎현업에서 PR보내기"></a>🍎현업에서 PR보내기</h2><ul><li>실제 현업에선 절대 master로 PR보내는 것이 금지. 대부분 develop등 개발전용 브랜치에 PR보내도록 한다.</li><li>PR 제목도 회사규칙에 따라 잘 남겨야한다. <ul><li>예시 : [주제제목] 작업내용 </li></ul></li></ul><p><br><br><br></p><h2 id="🍎Jenkins"><a href="#🍎Jenkins" class="headerlink" title="🍎Jenkins"></a>🍎Jenkins</h2><p>공식레포메니저는 <code>Jenkins</code>서버</p><ul><li>github에 변경내역을 webhook으로 감지가 되면 jenkis서버가 실행되고 build server가 연동되어 변경내역이 서버에 올라간다</li></ul><p><br><br><br></p><h2 id="🍎OT-Operational-Technology-오퍼레이션-테크놀로지"><a href="#🍎OT-Operational-Technology-오퍼레이션-테크놀로지" class="headerlink" title="🍎OT(Operational Technology) 오퍼레이션 테크놀로지"></a>🍎OT(Operational Technology) 오퍼레이션 테크놀로지</h2><ul><li>공장이나 산업군에 있는 곳의 스마트팩토링 작업</li><li>출장이 잦은 이유 :  요구사항을 뽑기(요구사항 명세서), 개발하기</li><li><a href="https://blog.softcamp.co.kr/316">참고링크 : 기업들의 OT보안 수요증가</a></li></ul><p><br><br><br></p><h2 id="🍎CSS-변경-후-실시간으로-반영이-안될때"><a href="#🍎CSS-변경-후-실시간으로-반영이-안될때" class="headerlink" title="🍎CSS 변경 후 실시간으로 반영이 안될때"></a>🍎CSS 변경 후 실시간으로 반영이 안될때</h2><ul><li>원인 : CSS 캐쉬때문에 안나옴</li><li>empty cache and hard reload 진행</li><li>개발자도구 열고 (f12) 새로고침 버튼에서 마우스 오른쪽 클릭하면 3개 버튼 -&gt; 강력 새로고침 또는 캐시비우고 강력 새로고침<ul><li>단축키 : ctrl + shift + r</li></ul></li></ul><p><br><br><br>    </p><h2 id="🍎실무에선-추가로-생성한-branch는-보통-언제-삭제할까"><a href="#🍎실무에선-추가로-생성한-branch는-보통-언제-삭제할까" class="headerlink" title="🍎실무에선 추가로 생성한 branch는 보통 언제 삭제할까?"></a>🍎실무에선 추가로 생성한 branch는 보통 언제 삭제할까?</h2><p>깔끔한게 좋다며 괜히 브랜치 삭제해서 진짜 큰일 날뻔했다.<br>도대체 새로 생성한 브랜치는 언제 삭제하는 지 궁금해져서 보라님께 물어봤다.<br>아래 두가지 경우에서 삭제한다고 한다.</p><ul><li>PR날려서 머지되면 삭제함.</li><li>어차피 회사가면 jenkins라는 툴로 브랜치관리함.</li></ul>]]></content:encoded>
      
      
      <category domain="https://sowon-dev.github.io/categories/%EC%98%A4%ED%94%88%EC%86%8C%EC%8A%A4%EC%BB%A8%ED%8A%B8%EB%A6%AC%EB%B7%B0%ED%86%A42020/">오픈소스컨트리뷰톤2020</category>
      
      
      <category domain="https://sowon-dev.github.io/tags/TIL/">TIL</category>
      
      <category domain="https://sowon-dev.github.io/tags/GIT/">GIT</category>
      
      
      <comments>https://sowon-dev.github.io/2020/09/14/200914opensource/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>[오픈소스컨트리뷰톤2020] Git List</title>
      <link>https://sowon-dev.github.io/2020/09/14/opensourceList/</link>
      <guid>https://sowon-dev.github.io/2020/09/14/opensourceList/</guid>
      <pubDate>Mon, 14 Sep 2020 00:00:00 GMT</pubDate>
      
      <description>&lt;h2 id=&quot;git-공부사이트&quot;&gt;&lt;a href=&quot;#git-공부사이트&quot; class=&quot;headerlink&quot; title=&quot;git 공부사이트&quot;&gt;&lt;/a&gt;git 공부사이트&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http://git-school.github.io/visualizing-git/#free&quot;&gt;visualizing-git&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://learngitbranching.js.org/index.html?demo=&amp;locale=ko&quot;&gt;learngitbranching&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://lab.github.com/&quot;&gt;GitHub Learning lab&lt;/a&gt;</description>
      
      
      
      <content:encoded><![CDATA[<h2 id="git-공부사이트"><a href="#git-공부사이트" class="headerlink" title="git 공부사이트"></a>git 공부사이트</h2><ul><li><a href="http://git-school.github.io/visualizing-git/#free">visualizing-git</a></li><li><a href="https://learngitbranching.js.org/index.html?demo=&locale=ko">learngitbranching</a></li><li><a href="https://lab.github.com/">GitHub Learning lab</a><a id="more"></a></li></ul><h2 id="GIT-전체-순서"><a href="#GIT-전체-순서" class="headerlink" title="GIT 전체 순서"></a>GIT 전체 순서</h2><ul><li><a href="https://sowon-dev.github.io/2020/07/18/200718opensource/">Git config(깃설정), 오픈소스 참여를 위한 GIT 순서 (팀협업)</a></li><li><a href="https://sowon-dev.github.io/2020/08/11/200811opensource/">오픈소스 Git 기여순서(취소포함)</a></li></ul><h2 id="GIT-활용"><a href="#GIT-활용" class="headerlink" title="GIT 활용"></a>GIT 활용</h2><ul><li><a href="https://sowon-dev.github.io/2020/07/18/200718opensource2/">개발자가 오픈소스를 읽는 방법(Git log)</a> </li><li><a href="https://sowon-dev.github.io/2020/07/18/200718opensource4/">add 취소, commit 명령어 수정, commit 취소, 라이센스 commit 생성, reset과 revert의 차이</a> </li><li><a href="https://sowon-dev.github.io/2020/07/18/200718opensource6/">특정 소스라인에 대해서 누가 마지막으로 수정을 했는지 찾기 git blame</a> </li><li><a href="https://sowon-dev.github.io/2020/08/22/200822opensource2/">Git flow 전략</a></li><li><a href="https://sowon-dev.github.io/2020/08/23/200823git3/">git bash내 특정 상황에서 빠져나가기 명령어</a></li></ul><h2 id="Branch"><a href="#Branch" class="headerlink" title="Branch"></a>Branch</h2><ul><li><a href="https://sowon-dev.github.io/2020/07/18/200718opensource3/">Git branch 기초</a></li><li><a href="https://sowon-dev.github.io/2020/08/23/200823git2/">git reflog 기초</a></li><li><a href="https://sowon-dev.github.io/2020/08/23/200823git/">삭제한 옛날 branch 살리기</a></li></ul><h2 id="Merge-Rebase-Pull"><a href="#Merge-Rebase-Pull" class="headerlink" title="Merge, Rebase, Pull"></a>Merge, Rebase, Pull</h2><ul><li><a href="https://sowon-dev.github.io/2020/07/18/200718opensource5/">rebase로 commit 추가,수정,삭제하기</a></li><li><a href="https://sowon-dev.github.io/2020/08/11/200811opensource2/">내 로컬저장소를 원격저장소를 반영하여 최신 베이스만들기</a></li><li><a href="https://sowon-dev.github.io/2020/08/22/200822opensource3/">Merge시 create a merge commit과 rebase and merge 차이</a></li></ul><h2 id="미팅-후기"><a href="#미팅-후기" class="headerlink" title="미팅 후기"></a>미팅 후기</h2><ul><li>7/25 첫번째 미팅 : <a href="https://sowon-dev.github.io/2020/07/25/200725opensource/">오픈소스컨트리뷰톤 킥오프미팅 후기</a></li><li>8/01 두번째 미팅 : <a href="https://sowon-dev.github.io/2020/08/01/200801opensource/">오픈소스컨트리뷰톤 온라인미팅1 : 모던 js 오픈소스 기여순서</a></li><li>8/06 세번째 미팅 : <a href="https://sowon-dev.github.io/2020/08/06/200806opensource/">오픈소스컨트리뷰톤 온라인미팅2</a></li><li>8/08 네번째 미팅 : <a href="https://sowon-dev.github.io/2020/08/08/200808opensource/">오픈소스컨트리뷰톤 온라인미팅3</a></li><li>8/11 다섯번째 미팅 : <a href="https://sowon-dev.github.io/2020/08/11/200811opensource/">오픈소스 Git 기여순서(취소포함)</a> + <a href="https://sowon-dev.github.io/2020/08/11/200811opensource2/">내 로컬저장소를 원격저장소를 반영하여 최신 베이스만들기</a></li><li>8/22 여섯번째 미팅 : <a href="https://sowon-dev.github.io/2020/08/22/200822opensource/">오픈소스컨트리뷰톤 온라인미팅5 : GIT 케이스 스터디</a></li><li>9/12 여덟번째 미팅 : <a href="https://sowon-dev.github.io/2020/09/12/200912opensource/">오픈소스컨트리뷰톤 온라인미팅7</a></li></ul><h2 id="추천"><a href="#추천" class="headerlink" title="추천"></a>추천</h2><ul><li><a href="https://github.com/bookcrush/httpPerfectGuide">책 추천 : Http 완벽 가이드</a> : 다 읽어보진않더라고 1장부터 7장까지는 필수이다. 주니어 프론트앤드개발자 면접질문으로도 자주 나오므로 꼭 읽어볼 것. </li><li><a href="http://www.yes24.com/Product/Goods/8208026">책 추천 : 리눅스 커맨드라인 완벽입문서</a></li><li>책 추천 : 자바의 정석 </li><li><a href="https://sowon-dev.github.io/2020/09/11/200911opensource/">오픈소스컨트리뷰톤 온라인미팅 중 현직꿀팁 모음집</a></li><li><a href="https://github.com/ChoDragon9/posts/wiki/%EC%BD%94%EB%94%A9%EC%9D%84-%EC%A7%80%ED%83%B1%ED%95%98%EB%8A%94-%EA%B8%B0%EC%88%A0-%EC%9A%94%EC%95%BD">책 추천 : 코딩을 지탱하는 기술</a></li></ul>]]></content:encoded>
      
      
      <category domain="https://sowon-dev.github.io/categories/%EC%98%A4%ED%94%88%EC%86%8C%EC%8A%A4%EC%BB%A8%ED%8A%B8%EB%A6%AC%EB%B7%B0%ED%86%A42020/">오픈소스컨트리뷰톤2020</category>
      
      
      <category domain="https://sowon-dev.github.io/tags/GIT/">GIT</category>
      
      <category domain="https://sowon-dev.github.io/tags/List/">List</category>
      
      
      <comments>https://sowon-dev.github.io/2020/09/14/opensourceList/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>오픈소스컨트리뷰톤 온라인미팅7</title>
      <link>https://sowon-dev.github.io/2020/09/12/200912opensource/</link>
      <guid>https://sowon-dev.github.io/2020/09/12/200912opensource/</guid>
      <pubDate>Sat, 12 Sep 2020 00:00:00 GMT</pubDate>
      
      <description>&lt;h2 id=&quot;컨트리뷰톤-결과보고서-작성&quot;&gt;&lt;a href=&quot;#컨트리뷰톤-결과보고서-작성&quot; class=&quot;headerlink&quot; title=&quot;컨트리뷰톤 결과보고서 작성&quot;&gt;&lt;/a&gt;컨트리뷰톤 결과보고서 작성&lt;/h2&gt;&lt;p&gt;오늘은 마지막 미팅이다. 벌써 한 달이 지났다니 정말 빠르다. 그동안 정말 많은 것을 배웠고 내가 오픈소스에 기여했다는 사실이 정말 뿌듯하다.&lt;br&gt;오늘 미팅에서는 컨트리뷰톤 결과 보고서 작성에 관한 이야기를 주력으로 했다.&lt;/p&gt;</description>
      
      
      
      <content:encoded><![CDATA[<h2 id="컨트리뷰톤-결과보고서-작성"><a href="#컨트리뷰톤-결과보고서-작성" class="headerlink" title="컨트리뷰톤 결과보고서 작성"></a>컨트리뷰톤 결과보고서 작성</h2><p>오늘은 마지막 미팅이다. 벌써 한 달이 지났다니 정말 빠르다. 그동안 정말 많은 것을 배웠고 내가 오픈소스에 기여했다는 사실이 정말 뿌듯하다.<br>오늘 미팅에서는 컨트리뷰톤 결과 보고서 작성에 관한 이야기를 주력으로 했다.</p><a id="more"></a><p>컨트리뷰톤인만큼 꼭 상을 받고싶다!<br>내가 속해있는 <a href="https://github.com/javascript-tutorial/ko.javascript.info">모던자바스크립트튜토리얼</a>프로젝트는 작년에 정보통신산업진흥원이 주는 장려상을 받았다고한다. 진짜 열심히 했는데 올해도 좋은 결과가 있었으면 좋겠다. 다른 컨트리뷰토너분들도 열심히 적어주셨다🙌 우리 꼭 🏆받자구요!</p><p>GIT을 다루는 건 여전히 무섭지만(?) 정말 재미있다.<br>알면 알수록 편한 기능이 쏟아지는 GIT을 마스터해보고싶다. 특히 지금 리베이스와 머지에서 굉장히 다양한 conflict을 만나고 있는데 만날때마다 심장이 덜컹한다.😱<br>언젠가는 덤덤한 날이 오겠지…(먼산)</p><p><br><br><br></p><h2 id="오픈소스메인테이너가-되려면"><a href="#오픈소스메인테이너가-되려면" class="headerlink" title="오픈소스메인테이너가 되려면?"></a>오픈소스메인테이너가 되려면?</h2><p><a href="https://github.com/javascript-tutorial/ko.javascript.info">모던자바스크립트튜토리얼 오픈소스</a>의 메인테이너인 보라님은 정말 멋있다.<br>오픈소스를 운영한다고 해서 경제적이득이 주어지는 것도 아닌데 그는 오픈소스생태계에 기여하고싶다는 열정으로 작업을 이어나가고 있다. 정말 멋있는 사람이다.</p><ul><li>오픈소스메인테이너가 되기 위해서는 해당 <a href="https://www.olis.or.kr/license/compareGuide.do">라이센스 체크</a> 필수</li><li>MIT는 비상업적용도로 가능해서 best<br><img src="https://www.oss.kr/plugins/oss/components/Themes/OSS/assets/images/chart_intro_01.gif" alt="https://www.oss.kr/oss_guide/show/044d96fd-413d-4ab3-ad72-4776d2b7e002"></li><li><a href="https://github.com/exercism/exercism">괜찮은 오픈소스1</a></li><li><a href="https://github.com/modern-web-dev-lab">괜찮은 오픈소스2</a></li></ul><p><br><br><br></p><h2 id="면접질문-팁"><a href="#면접질문-팁" class="headerlink" title="면접질문 팁"></a>면접질문 팁</h2><ol><li><a href="https://ko.javascript.info/closure">클로저</a><blockquote><p>번역하면서 이런 내용은 보충되었으면 하는 내용을 정리해보았습니다.<br>스코프의 정의: 이름(변수)의 유효범위<br>렉시컬 스코프: 정적 스코프라고도 불리운다. 동적 스코프의 단점 때문에 등장한 개념으로, 관련 내용은 ‘코딩을 지탱하는 기술’ 제 7장 ‘이름과 스코프’에서 확인할 수 있다.</p></blockquote></li><li><a href="https://ko.javascript.info/array-methods">배열과 메서드</a> <blockquote><p>학습팁! 배열을 조작하는지, 아니면 기존 배열은 건드리지 않고 조건을 적용한 새로운 배열을 반환하는지에 주의하며 메서드를 살펴보시기 바랍니다. pure function에 대한 자료들도 읽어보시면 좋을 것 같습니다.</p></blockquote></li></ol>]]></content:encoded>
      
      
      <category domain="https://sowon-dev.github.io/categories/%EC%98%A4%ED%94%88%EC%86%8C%EC%8A%A4%EC%BB%A8%ED%8A%B8%EB%A6%AC%EB%B7%B0%ED%86%A42020/">오픈소스컨트리뷰톤2020</category>
      
      
      <category domain="https://sowon-dev.github.io/tags/TIL/">TIL</category>
      
      <category domain="https://sowon-dev.github.io/tags/GIT/">GIT</category>
      
      
      <comments>https://sowon-dev.github.io/2020/09/12/200912opensource/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>안드로이드 컴파운드버튼, 이미지넣기</title>
      <link>https://sowon-dev.github.io/2020/09/10/200910and/</link>
      <guid>https://sowon-dev.github.io/2020/09/10/200910and/</guid>
      <pubDate>Thu, 10 Sep 2020 00:00:00 GMT</pubDate>
      
      <description>&lt;h2 id=&quot;컴파운드버튼&quot;&gt;&lt;a href=&quot;#컴파운드버튼&quot; class=&quot;headerlink&quot; title=&quot;컴파운드버튼&quot;&gt;&lt;/a&gt;컴파운드버튼&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;체크박스&lt;/li&gt;
&lt;li&gt;라디오버튼&lt;/li&gt;
&lt;li&gt;스위치</description>
      
      
      
      <content:encoded><![CDATA[<h2 id="컴파운드버튼"><a href="#컴파운드버튼" class="headerlink" title="컴파운드버튼"></a>컴파운드버튼</h2><ul><li>체크박스</li><li>라디오버튼</li><li>스위치<a id="more"></a><img src="https://img1.daumcdn.net/thumb/R1280x0/?scode=mtistory2&fname=http%3A%2F%2Fcfile25.uf.tistory.com%2Fimage%2F9995A14F5A4F3DFC1EC71F" alt="https://devuryu.tistory.com/135"></li><li>토글버튼<br><img src="https://lh6.googleusercontent.com/guUGbHTMw8USkex4ahODVyskwODYFwc6QqBZONu6X1gfbbWkOvbE1SQH39l9qkvA4ChSqyVqDvBUJRQ26LiHd4YqrRsCb3zI3mE-ogcXPuz9QAB3RQ45Ki_eOo2r67zMGkFI9Z-A0WdslGQydA" alt="https://m.blog.naver.com/PostView.nhn?blogId=tngusmiso&amp;logNo=221376662291&amp;proxyReferer=https:%2F%2Fwww.google.com%2F"></li></ul><p><br><br><br></p><h2 id="Radio버튼"><a href="#Radio버튼" class="headerlink" title="Radio버튼"></a>Radio버튼</h2><ul><li>Radio버튼은 꼭 RadioGroup과 함께 사용해야 여러 개 중 하나만 선택 가능하다.</li><li>RadioGroup은 사용하지않은채 Radio버튼만 사용하면 checkBox버튼처럼 중복 선택된다.</li><li>clearCheck() : 해당 라디오그룹안에 체크도니 것을 모두 해제하는 메서드  <!-- more --><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">&lt;RadioGroup</span><br><span class="line">android:id=<span class="string">"@+id/rGroup"</span></span><br><span class="line">android:layout_width=<span class="string">"wrap_content"</span></span><br><span class="line">android:layout_height=<span class="string">"wrap_content"</span>&gt;</span><br><span class="line"></span><br><span class="line">&lt;RadioButton</span><br><span class="line">android:layout_width=<span class="string">"wrap_content"</span></span><br><span class="line">android:layout_height=<span class="string">"wrap_content"</span></span><br><span class="line">android:text=<span class="string">"짬뽕"</span></span><br><span class="line">/&gt;</span><br><span class="line">&lt;RadioButton</span><br><span class="line">android:layout_width=<span class="string">"wrap_content"</span></span><br><span class="line">android:layout_height=<span class="string">"wrap_content"</span></span><br><span class="line">android:text=<span class="string">"짜장"</span></span><br><span class="line">/&gt;</span><br><span class="line">&lt;/RadioGroup&gt;</span><br></pre></td></tr></table></figure></li></ul><p><br><br><br></p><h1 id="이미지파일-넣기"><a href="#이미지파일-넣기" class="headerlink" title="이미지파일 넣기"></a>이미지파일 넣기</h1><ul><li>안드로이드에서 가장 빠르게 처리할 수 있는 이미지파일확장자 : png</li><li>이미지를 사용하려면 그림 파일을 [res]-[drawable]폴더에 미리 복사해놓아야한다.</li><li>이미지파일은 res폴더 하위 drawable폴더 안에 복사·붙여넣기한 뒤 ImageView태그로 불러올 수 있다.</li><li><code>@</code>의미는 참조이다.<ul><li>예를 들어 <code>android:src=&quot;@drawable/이미지파일명&quot;</code>인 경우 drawable을 참조해서 그 안의 이미지파일명을 불러와달라는 의미이다.</li></ul></li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">&lt;ImageView</span><br><span class="line">android:id=<span class="string">"@+id/imageView"</span></span><br><span class="line">android:layout_width=<span class="string">"match_parent"</span></span><br><span class="line">android:layout_height=<span class="string">"wrap_content"</span></span><br><span class="line">android:src=<span class="string">"@drawable/이미지파일명"</span></span><br><span class="line">/&gt;</span><br></pre></td></tr></table></figure>]]></content:encoded>
      
      
      <category domain="https://sowon-dev.github.io/categories/Android/">Android</category>
      
      
      <category domain="https://sowon-dev.github.io/tags/TIL/">TIL</category>
      
      <category domain="https://sowon-dev.github.io/tags/ITWILL-JAVA/">ITWILL(JAVA)</category>
      
      
      <comments>https://sowon-dev.github.io/2020/09/10/200910and/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>Servlet일반상품1 : 기초</title>
      <link>https://sowon-dev.github.io/2020/09/10/200910jspi/</link>
      <guid>https://sowon-dev.github.io/2020/09/10/200910jspi/</guid>
      <pubDate>Thu, 10 Sep 2020 00:00:00 GMT</pubDate>
      
      <description>&lt;h2 id=&quot;web-xml’에-코드-추가&quot;&gt;&lt;a href=&quot;#web-xml’에-코드-추가&quot; class=&quot;headerlink&quot; title=&quot;`web.xml’에 코드 추가&quot;&gt;&lt;/a&gt;`web.xml’에 코드 추가&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;쇼핑몰기능에서 일반 사용자가 보는 상품목록을 만들어보자.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;web.xml&lt;/code&gt; 코드 수정 후 꼭 서버 실행 후 주소창에 &lt;code&gt;test.bo&lt;/code&gt;해서 흰 화면이 뜨는지 확인하고 코딩할 것&lt;/li&gt;
&lt;li&gt;흰화면이 안뜨면 &lt;code&gt;web.xml&lt;/code&gt; 설정이 잘못되었다는 의미임.</description>
      
      
      
      <content:encoded><![CDATA[<h2 id="web-xml’에-코드-추가"><a href="#web-xml’에-코드-추가" class="headerlink" title="`web.xml’에 코드 추가"></a>`web.xml’에 코드 추가</h2><ul><li>쇼핑몰기능에서 일반 사용자가 보는 상품목록을 만들어보자.</li><li><code>web.xml</code> 코드 수정 후 꼭 서버 실행 후 주소창에 <code>test.bo</code>해서 흰 화면이 뜨는지 확인하고 코딩할 것</li><li>흰화면이 안뜨면 <code>web.xml</code> 설정이 잘못되었다는 의미임.<a id="more"></a></li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- Model2 상품목록확인(일반사용자용+관리자) --&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">servlet</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">servlet-name</span>&gt;</span>GoodsFrontController<span class="tag">&lt;/<span class="name">servlet-name</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">servlet-class</span>&gt;</span>com.itwillbs.goods.action.GoodsFrontController<span class="tag">&lt;/<span class="name">servlet-class</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">servlet</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">servlet-mapping</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">servlet-name</span>&gt;</span>GoodsFrontController<span class="tag">&lt;/<span class="name">servlet-name</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">url-pattern</span>&gt;</span>*.go<span class="tag">&lt;/<span class="name">url-pattern</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">servlet-mapping</span>&gt;</span></span><br></pre></td></tr></table></figure><p><br><br><br></p><h2 id="src폴더아래에-새로운-패키지와-GoodsFrontController-java생성"><a href="#src폴더아래에-새로운-패키지와-GoodsFrontController-java생성" class="headerlink" title="src폴더아래에 새로운 패키지와 GoodsFrontController.java생성"></a><code>src</code>폴더아래에 새로운 패키지와 <code>GoodsFrontController.java</code>생성</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">GoodsFrontController</span> <span class="keyword">extends</span> <span class="title">HttpServlet</span></span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 일반 클래스를 서블릿을 상속해서 컨트롤러 역활 할수있도록 설정</span></span><br><span class="line"><span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">doProcess</span><span class="params">(HttpServletRequest request, HttpServletResponse response)</span></span></span><br><span class="line"><span class="function"><span class="keyword">throws</span> ServletException, IOException </span>&#123;</span><br><span class="line">System.out.println(<span class="string">"doProcess() 호출 (페이지 GET/POST방식 모두 사용호출)"</span>);</span><br><span class="line"><span class="comment">// 주소 비교 (주소 매핑)</span></span><br><span class="line">System.out.println(<span class="string">"--------------@ 주소 계산 @-------------"</span>);</span><br><span class="line"><span class="comment">// 프로젝트명 + 주소</span></span><br><span class="line">String requestURI = request.getRequestURI();</span><br><span class="line">System.out.println(<span class="string">" requestURI : "</span> + requestURI);</span><br><span class="line"><span class="comment">// 프로젝트명</span></span><br><span class="line">String contextPath = request.getContextPath();</span><br><span class="line">System.out.println(<span class="string">" contextPath : "</span> + contextPath);</span><br><span class="line"><span class="comment">// 가상주소</span></span><br><span class="line">String command = requestURI.substring(contextPath.length());</span><br><span class="line">System.out.println(<span class="string">" command(가상주소) : "</span> + command);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">System.out.println(<span class="string">"--------------@ 주소 비교후 처리 @-------------"</span>);</span><br><span class="line">Action action = <span class="keyword">null</span>;</span><br><span class="line">ActionForward forward = <span class="keyword">null</span>;</span><br><span class="line"><span class="comment">// 주소에 따른 처리 구분 (주소 매핑후 이동)</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">System.out.println(<span class="string">"-----------------@ 페이지 이동 @--------------"</span>);</span><br><span class="line"><span class="keyword">if</span>(forward != <span class="keyword">null</span>)&#123; <span class="comment">// 이동할 정보가 있다</span></span><br><span class="line"><span class="keyword">if</span>(forward.isRedirect())&#123; <span class="comment">// true - sendRedirect()</span></span><br><span class="line"><span class="comment">// 가상주소(.bo -&gt; .bo), 화면전환(주소변경,화면 변경)</span></span><br><span class="line">System.out.println(<span class="string">"C : "</span>+forward.getPath()+<span class="string">"주소로 이동(Redirect)"</span>);</span><br><span class="line">response.sendRedirect(forward.getPath());</span><br><span class="line">&#125;<span class="keyword">else</span>&#123; <span class="comment">// false - forward()</span></span><br><span class="line">System.out.println(<span class="string">"C : "</span>+forward.getPath()+<span class="string">"주소로 이동(forward)"</span>);</span><br><span class="line"><span class="comment">// 가상주소 -&gt; 실제페이지 (.bo -&gt; .jsp) + reqeust 객체 정보를 가지고 이동</span></span><br><span class="line">RequestDispatcher dis =</span><br><span class="line">request.getRequestDispatcher(forward.getPath());</span><br><span class="line">dis.forward(request, response);</span><br><span class="line">&#125;</span><br><span class="line">&#125;<span class="comment">//end of 페이지이동</span></span><br><span class="line"></span><br><span class="line">&#125;<span class="comment">//end of doProcess</span></span><br><span class="line"></span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">doGet</span><span class="params">(HttpServletRequest req, HttpServletResponse resp)</span> </span></span><br><span class="line"><span class="function"><span class="keyword">throws</span> ServletException, IOException </span>&#123;</span><br><span class="line">System.out.println(<span class="string">"doGet() 호출 (페이지 GET방식 호출)"</span>);</span><br><span class="line">doProcess(req, resp);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">doPost</span><span class="params">(HttpServletRequest req, HttpServletResponse resp)</span> </span></span><br><span class="line"><span class="function"><span class="keyword">throws</span> ServletException, IOException </span>&#123;</span><br><span class="line">System.out.println(<span class="string">"doPost() 호출 (페이지 POST방식 호출)"</span>);</span><br><span class="line">doProcess(req, resp);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><br><br><br></p><h2 id="Action-java-생성"><a href="#Action-java-생성" class="headerlink" title="Action.java 생성"></a><code>Action.java</code> 생성</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">Action</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 상수,추상메서드</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 추상메서드 -&gt; 서브클래스들 한태 강제성 부여</span></span><br><span class="line"><span class="comment">// =&gt; 개발 형식의 통일(틀이 정해짐)</span></span><br><span class="line"><span class="comment">// =&gt; 객체간의 관계가 약화됨 =&gt; 각각의 객체가 해당 동작만 처리/제어</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// Action 페이지의 동작을 미리 선언해서 사용</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> ActionForward <span class="title">execute</span><span class="params">(HttpServletRequest request,</span></span></span><br><span class="line"><span class="function"><span class="params">HttpServletResponse response)</span> <span class="keyword">throws</span> Exception</span>;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><br><br><br></p><h2 id="ActionForward-java-생성"><a href="#ActionForward-java-생성" class="headerlink" title="ActionForward.java 생성"></a><code>ActionForward.java</code> 생성</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">ActionForward</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="comment">//1.외부접근 못하도록 이동할 페이지와 이동할 방식 멤버변수 생성</span></span><br><span class="line"><span class="keyword">private</span> String path;</span><br><span class="line"><span class="keyword">private</span> <span class="keyword">boolean</span> isRedirect;</span><br><span class="line"><span class="comment">// true면 sendRedirect방식으로 이동</span></span><br><span class="line"><span class="comment">//사용처: 주소와 화면의 전환이 동시에 일어날때 (가상주소 -&gt; 가상주소로 )</span></span><br><span class="line"><span class="comment">// false면  forward방식으로 이동</span></span><br><span class="line"><span class="comment">//사용처: 주소는 그대로인데 화면이 바뀔때 (가상주소에서 jsp보여줌)</span></span><br><span class="line"><span class="comment">//2. getter setter생성</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> String <span class="title">getPath</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="keyword">return</span> path;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setPath</span><span class="params">(String path)</span> </span>&#123;</span><br><span class="line"><span class="keyword">this</span>.path = path;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">isRedirect</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="keyword">return</span> isRedirect;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setRedirect</span><span class="params">(<span class="keyword">boolean</span> isRedirect)</span> </span>&#123;</span><br><span class="line"><span class="keyword">this</span>.isRedirect = isRedirect;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//3.toString</span></span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> String <span class="title">toString</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="keyword">return</span> <span class="string">"ActionForward [path="</span> + path + <span class="string">", isRedirect="</span> + isRedirect + <span class="string">"]"</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><br><br><br></p><h2 id="GoodsDTO-java-생성"><a href="#GoodsDTO-java-생성" class="headerlink" title="GoodsDTO.java 생성"></a><code>GoodsDTO.java</code> 생성</h2><ul><li>관리자용 상품목록 출력할때 만들었던 <code>GoodsDTO.java</code>을 사용하면 된다.</li><li>추가생성 할 필요없다.</li><li>관리자용 상품DTO와 일반사용자용 상품DTO는 동일하기때문에 나눌 필요가 없다.</li></ul><p><br><br><br></p><h2 id="GoodsDAO-java-생성"><a href="#GoodsDAO-java-생성" class="headerlink" title="GoodsDAO.java 생성"></a><code>GoodsDAO.java</code> 생성</h2><ul><li>DAO는 DTO와 달리 중요한 데이터에 접근하는 것이므로 관리자용DAO와 별도로 생성 및 관리되어야한다.</li><li>DB연결메서드 생성</li><li>자원해제 메서드 생성</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">GoodsDAO</span> </span>&#123;</span><br><span class="line">Connection con = <span class="keyword">null</span>;</span><br><span class="line">PreparedStatement pstmt = <span class="keyword">null</span>;</span><br><span class="line">ResultSet rs = <span class="keyword">null</span>;</span><br><span class="line">String sql = <span class="string">""</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 디비 연결</span></span><br><span class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">getCon</span><span class="params">()</span> <span class="keyword">throws</span> Exception</span>&#123;</span><br><span class="line"><span class="comment">// 커넥션 풀</span></span><br><span class="line">Context init = <span class="keyword">new</span> InitialContext();</span><br><span class="line">DataSource ds = (DataSource) init.lookup(<span class="string">"java:comp/env/jdbc/model2DB"</span>);</span><br><span class="line">con = ds.getConnection();</span><br><span class="line">System.out.println(<span class="string">"DAO : 디비연결 완료 "</span>+con);</span><br><span class="line">&#125;<span class="comment">//end of getCon()</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 디비 자원해제</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">closeDB</span><span class="params">()</span></span>&#123;</span><br><span class="line"><span class="keyword">try</span> &#123;</span><br><span class="line"><span class="keyword">if</span>(rs != <span class="keyword">null</span>) &#123;rs.close();&#125;</span><br><span class="line"><span class="keyword">if</span>(pstmt != <span class="keyword">null</span>) &#123;pstmt.close();&#125;</span><br><span class="line"><span class="keyword">if</span>(con != <span class="keyword">null</span>) &#123;con.close(); &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">catch</span> (SQLException e) &#123;</span><br><span class="line">e.printStackTrace();</span><br><span class="line">&#125; </span><br><span class="line">&#125;<span class="comment">//end of closeDB()</span></span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content:encoded>
      
      
      <category domain="https://sowon-dev.github.io/categories/JSP/">JSP</category>
      
      
      <category domain="https://sowon-dev.github.io/tags/TIL/">TIL</category>
      
      <category domain="https://sowon-dev.github.io/tags/ITWILL-JAVA/">ITWILL(JAVA)</category>
      
      
      <comments>https://sowon-dev.github.io/2020/09/10/200910jspi/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>Servlet일반상품2 : 카테고리별 상품목록조회</title>
      <link>https://sowon-dev.github.io/2020/09/10/200910jspi2/</link>
      <guid>https://sowon-dev.github.io/2020/09/10/200910jspi2/</guid>
      <pubDate>Thu, 10 Sep 2020 00:00:00 GMT</pubDate>
      
      <description>&lt;h2 id=&quot;GoodsFrontController-java의-doProcess-의-주소비교-후-처리부분에-코드-추가&quot;&gt;&lt;a href=&quot;#GoodsFrontController-java의-doProcess-의-주소비교-후-처리부분에-코드-추가&quot; class=&quot;headerlink&quot; title=&quot;GoodsFrontController.java의 doProcess()의 주소비교 후 처리부분에 코드 추가&quot;&gt;&lt;/a&gt;&lt;code&gt;GoodsFrontController.java&lt;/code&gt;의 doProcess()의 주소비교 후 처리부분에 코드 추가&lt;/h2&gt;</description>
      
      
      
      <content:encoded><![CDATA[<h2 id="GoodsFrontController-java의-doProcess-의-주소비교-후-처리부분에-코드-추가"><a href="#GoodsFrontController-java의-doProcess-의-주소비교-후-처리부분에-코드-추가" class="headerlink" title="GoodsFrontController.java의 doProcess()의 주소비교 후 처리부분에 코드 추가"></a><code>GoodsFrontController.java</code>의 doProcess()의 주소비교 후 처리부분에 코드 추가</h2><a id="more"></a><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">System.out.println(<span class="string">"--------------@ 주소 비교후 처리 @-------------"</span>);</span><br><span class="line">Action action = <span class="keyword">null</span>;</span><br><span class="line">ActionForward forward = <span class="keyword">null</span>;</span><br><span class="line"><span class="comment">// 주소에 따른 처리 구분 (주소 매핑후 이동)</span></span><br><span class="line"><span class="keyword">if</span>(command.equals(<span class="string">"/GoodsList.go"</span>))&#123;</span><br><span class="line"><span class="comment">// http://localhost:8088/Model2JSP7/GoodsList.go</span></span><br><span class="line">System.out.println(<span class="string">"C: /GoodsList.go 호출"</span>);</span><br><span class="line"><span class="comment">//.go -&gt; Action_DAO_DB -&gt;.jsp로 이동</span></span><br><span class="line">action = <span class="keyword">new</span> GoodsListAction();</span><br><span class="line"><span class="keyword">try</span> &#123; forward = action.execute(request, response);</span><br><span class="line">&#125; <span class="keyword">catch</span> (Exception e) &#123; e.printStackTrace(); &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><br><br><br></p><h2 id="GoodsListAction-java-생성"><a href="#GoodsListAction-java-생성" class="headerlink" title="GoodsListAction.java 생성"></a><code>GoodsListAction.java</code> 생성</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">GoodsListAction</span> <span class="keyword">implements</span> <span class="title">Action</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> ActionForward <span class="title">execute</span><span class="params">(HttpServletRequest request, HttpServletResponse response)</span> </span></span><br><span class="line"><span class="function"><span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line">System.out.println(<span class="string">"M : GoodsListAction의 execute() 호출"</span>);</span><br><span class="line"><span class="comment">//한글처리</span></span><br><span class="line">request.setCharacterEncoding(<span class="string">"UTF-8"</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">//카테고리별로 데이터 출력을 위한 카테고리파라미터값저장</span></span><br><span class="line">String item = request.getParameter(<span class="string">"item"</span>);</span><br><span class="line">System.out.println(<span class="string">"카테고리 : "</span>+item);</span><br><span class="line"><span class="keyword">if</span>(item == <span class="keyword">null</span>)&#123;</span><br><span class="line">item = <span class="string">"all"</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//GoodsDAO객체 생성 후 getGoodsList()생성</span></span><br><span class="line">GoodsDAO gdao = <span class="keyword">new</span> GoodsDAO();</span><br><span class="line"><span class="comment">//List&lt;GoodsDTO&gt; goodsList = gdao.GoodsListAll(); //전체상품 가져오기</span></span><br><span class="line">List&lt;GoodsDTO&gt; goodsList = gdao.GoodsList(item); <span class="comment">//카테고리별 전체상품가져오기</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//등록된 상품 목록 전부 가져오기</span></span><br><span class="line">System.out.println(<span class="string">"M : "</span>+goodsList);</span><br><span class="line"></span><br><span class="line"><span class="comment">//requset영역에 저장</span></span><br><span class="line">request.setAttribute(<span class="string">"goodsList"</span>, goodsList);</span><br><span class="line"></span><br><span class="line"><span class="comment">//goods_list.jsp 페이지이동(뷰페이지로이동)</span></span><br><span class="line">ActionForward forward = <span class="keyword">new</span> ActionForward();</span><br><span class="line">forward.setPath(<span class="string">"./goods/goods_list.jsp"</span>);</span><br><span class="line">forward.setRedirect(<span class="keyword">false</span>);</span><br><span class="line"><span class="keyword">return</span> forward;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><br><br><br></p><h2 id="GoodsDAO-java-생성-후-GoodsListAll-메서드-코드-추가"><a href="#GoodsDAO-java-생성-후-GoodsListAll-메서드-코드-추가" class="headerlink" title="GoodsDAO.java 생성 후 GoodsListAll()메서드 코드 추가"></a><code>GoodsDAO.java</code> 생성 후 GoodsListAll()메서드 코드 추가</h2><ul><li>상품전제목록 조회 -&gt; 이거 대신 카테고리별 상품목록조회  GoodsList(String item)메서드 사용<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//상품 전체목록</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> List&lt;GoodsDTO&gt; <span class="title">GoodsListAll</span><span class="params">()</span> </span>&#123;</span><br><span class="line">List&lt;GoodsDTO&gt; goodsList = <span class="keyword">new</span> ArrayList&lt;GoodsDTO&gt;();</span><br><span class="line"><span class="keyword">try</span> &#123;</span><br><span class="line">getCon();</span><br><span class="line">sql = <span class="string">"select * from itwill_goods"</span>;</span><br><span class="line">pstmt = con.prepareStatement(sql);</span><br><span class="line">rs = pstmt.executeQuery();</span><br><span class="line"><span class="keyword">while</span>(rs.next())&#123;</span><br><span class="line">GoodsDTO gdto = <span class="keyword">new</span> GoodsDTO();</span><br><span class="line">gdto.setGno(rs.getInt(<span class="string">"gno"</span>));</span><br><span class="line">gdto.setCategory(rs.getString(<span class="string">"category"</span>));</span><br><span class="line">gdto.setName(rs.getString(<span class="string">"name"</span>));</span><br><span class="line">gdto.setPrice(rs.getInt(<span class="string">"price"</span>));</span><br><span class="line">gdto.setColor(rs.getString(<span class="string">"color"</span>));</span><br><span class="line"></span><br><span class="line">gdto.setAmount(rs.getInt(<span class="string">"amount"</span>));</span><br><span class="line">gdto.setSize(rs.getString(<span class="string">"size"</span>));</span><br><span class="line">gdto.setContent(rs.getString(<span class="string">"content"</span>));</span><br><span class="line">gdto.setImage(rs.getString(<span class="string">"image"</span>));</span><br><span class="line">gdto.setBest(rs.getInt(<span class="string">"best"</span>));</span><br><span class="line"></span><br><span class="line">gdto.setDate(rs.getDate(<span class="string">"date"</span>));</span><br><span class="line"></span><br><span class="line">goodsList.add(gdto);</span><br><span class="line">&#125;</span><br><span class="line">System.out.println(<span class="string">"DAO : 상품목록 모두 저장완료! "</span>+goodsList);</span><br><span class="line">&#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">e.printStackTrace();</span><br><span class="line">&#125; <span class="keyword">finally</span> &#123;</span><br><span class="line">closeDB();</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> goodsList;</span><br><span class="line">&#125;<span class="comment">//end of getGoodsList()</span></span><br></pre></td></tr></table></figure></li></ul><p><br><br><br></p><h2 id="GoodsDAO-java-생성-후-GoodsList-String-item-메서드-코드-추가"><a href="#GoodsDAO-java-생성-후-GoodsList-String-item-메서드-코드-추가" class="headerlink" title="GoodsDAO.java 생성 후 GoodsList(String item)메서드 코드 추가"></a><code>GoodsDAO.java</code> 생성 후 GoodsList(String item)메서드 코드 추가</h2><ul><li>item에 따라 쿼리구문이 달라진다.<ul><li>item이 각 카테고리명인 경우 <code>sql = &quot;select * from itwill_goods where category=?&quot;;</code></li><li>item == null인 경우 <code>sql = &quot;select * from itwill_goods&quot;;</code></li><li>item == best인 경우 <code>sql = &quot;select * from itwill_goods where best=?&quot;;</code></li><li>따라서 String대신 StringBuffer를 써보자.<ul><li><a href="https://sowon-dev.github.io/2020/08/05/200805javai/#StringBuffer와-String의-차이점">참고 : StringBuffer와 String의 차이점</a></li></ul></li></ul></li><li>아래 세가지 방법으로 StringBuffer를 String으로 나타낼수있다<ul><li>pstmt = con.prepareStatement(SQL.toString());</li><li>pstmt = con.prepareStatement(SQL+””); <ul><li><code>+</code>는 덧셈 또는 String타입으로 바꿔주는 두 가지 기능이 있다.</li><li>뒤에 <code>+ 공백</code>이 붙으면 <code>+</code>가 두번째 기능을 해서 String으로 데이터 타입을 바꿔준다. 기억할 것!</li></ul></li><li>pstmt = con.prepareStatement(String.valueOf(SQL)); //object에 담아서 거기서 string으로 꺼낸다</li></ul></li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//카테고리별 상품목록 출력</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> List&lt;GoodsDTO&gt; <span class="title">GoodsList</span><span class="params">(String item)</span> </span>&#123;</span><br><span class="line">List&lt;GoodsDTO&gt; goodsList = <span class="keyword">new</span> ArrayList&lt;GoodsDTO&gt;();</span><br><span class="line"><span class="comment">//item에 따라 쿼리구문이 달라진다. 불변성때문에 String대신 따라서 StringBuffer를 사용</span></span><br><span class="line">StringBuffer SQL = <span class="keyword">new</span> StringBuffer();</span><br><span class="line"></span><br><span class="line"><span class="keyword">try</span> &#123;</span><br><span class="line">getCon();</span><br><span class="line">SQL.append(<span class="string">"select * from itwill_goods"</span>); <span class="comment">//item가 null인경우</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(item.equals(<span class="string">"all"</span>))&#123;</span><br><span class="line">&#125;<span class="keyword">else</span> <span class="keyword">if</span>(item.equals(<span class="string">"best"</span>))&#123;</span><br><span class="line">SQL.append(<span class="string">" where best=?"</span>);</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">SQL.append(<span class="string">" where category=?"</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//아래 세가지 방법으로 StringBuffer를 string으로 나타낼수있다</span></span><br><span class="line">pstmt = con.prepareStatement(SQL.toString());</span><br><span class="line"><span class="comment">//pstmt = con.prepareStatement(SQL+"");</span></span><br><span class="line"><span class="comment">//pstmt = con.prepareStatement(String.valueOf(SQL)); //object에 담아서 거기서 string으로 꺼낸다</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(item.equals(<span class="string">"all"</span>))&#123;</span><br><span class="line">&#125;<span class="keyword">else</span> <span class="keyword">if</span>(item.equals(<span class="string">"best"</span>))&#123;</span><br><span class="line">pstmt.setInt(<span class="number">1</span>, <span class="number">1</span>); <span class="comment">//DB테이블안의 best값이 1인 요소만 출력</span></span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">pstmt.setString(<span class="number">1</span>, item);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">rs = pstmt.executeQuery();</span><br><span class="line"><span class="keyword">while</span>(rs.next())&#123;</span><br><span class="line">GoodsDTO gdto = <span class="keyword">new</span> GoodsDTO();</span><br><span class="line">gdto.setGno(rs.getInt(<span class="string">"gno"</span>));</span><br><span class="line">gdto.setCategory(rs.getString(<span class="string">"category"</span>));</span><br><span class="line">gdto.setName(rs.getString(<span class="string">"name"</span>));</span><br><span class="line">gdto.setPrice(rs.getInt(<span class="string">"price"</span>));</span><br><span class="line">gdto.setColor(rs.getString(<span class="string">"color"</span>));</span><br><span class="line"></span><br><span class="line">gdto.setAmount(rs.getInt(<span class="string">"amount"</span>));</span><br><span class="line">gdto.setSize(rs.getString(<span class="string">"size"</span>));</span><br><span class="line">gdto.setContent(rs.getString(<span class="string">"content"</span>));</span><br><span class="line">gdto.setImage(rs.getString(<span class="string">"image"</span>));</span><br><span class="line">gdto.setBest(rs.getInt(<span class="string">"best"</span>));</span><br><span class="line"></span><br><span class="line">gdto.setDate(rs.getDate(<span class="string">"date"</span>));</span><br><span class="line"></span><br><span class="line">goodsList.add(gdto);</span><br><span class="line">&#125;</span><br><span class="line">System.out.println(<span class="string">"DAO : 상품목록 모두 저장완료! "</span>+goodsList);</span><br><span class="line">&#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">e.printStackTrace();</span><br><span class="line">&#125; <span class="keyword">finally</span> &#123;</span><br><span class="line">closeDB();</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> goodsList;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><br><br><br></p><h2 id="goods-list-jsp-생성"><a href="#goods-list-jsp-생성" class="headerlink" title="goods_list.jsp 생성"></a><code>goods_list.jsp</code> 생성</h2><ul><li>제품의 총 개수를 카테고리수 만큼만 출력하고 그 이상인 경우 다음 row로 출력하려면 어떻게 하면 될까?<ul><li>필요한 정보 : total개수, row개수, col개수</li><li>예를 들어 total 16개  col은 8개 =&gt; 필요한 row는 2개</li><li>예를 들어 total 17개  col은 8개 =&gt; 필요한 row는 3개</li><li>내코드<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">int</span> result = goodsCnt%col;</span><br><span class="line"><span class="keyword">int</span> row = result == <span class="number">0</span> ? result:result+<span class="number">1</span>;</span><br></pre></td></tr></table></figure></li><li>강사님코드<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">int</span> row = (goodsCnt/col) + (goodsCnt%col&gt;<span class="number">0</span>? <span class="number">1</span>:<span class="number">0</span>);</span><br></pre></td></tr></table></figure></li></ul></li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br></pre></td><td class="code"><pre><span class="line"> <span class="tag">&lt;<span class="name">%</span></span></span><br><span class="line"><span class="tag">// <span class="attr">request</span>영역에서 정보를 꺼내서 테이블에 추가 </span></span><br><span class="line">List&lt;GoodsDTO&gt; goodsList = (List&lt;GoodsDTO&gt;)request.getAttribute("goodsList"); //object-&gt;list타입 캐스팅</span><br><span class="line"></span><br><span class="line"> %&gt;</span><br><span class="line"><span class="tag">&lt;<span class="name">fieldset</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">legend</span>&gt;</span>상품목록<span class="tag">&lt;/<span class="name">legend</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">table</span> <span class="attr">border</span>=<span class="string">"1"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">td</span>&gt;</span><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"button"</span> <span class="attr">class</span>=<span class="string">"btnCate"</span> <span class="attr">value</span>=<span class="string">"전체"</span></span></span><br><span class="line"><span class="tag"><span class="attr">onclick</span>=<span class="string">"location.href='./GoodsList.go'"</span>&gt;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">td</span>&gt;</span><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"button"</span> <span class="attr">class</span>=<span class="string">"btnCate"</span> <span class="attr">value</span>=<span class="string">"인기상품(Best)"</span></span></span><br><span class="line"><span class="tag"><span class="attr">onclick</span>=<span class="string">"location.href='./GoodsList.go?item=best'"</span>&gt;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">td</span>&gt;</span><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"button"</span> <span class="attr">class</span>=<span class="string">"btnCate"</span> <span class="attr">value</span>=<span class="string">"아우터"</span></span></span><br><span class="line"><span class="tag"><span class="attr">onclick</span>=<span class="string">"location.href='./GoodsList.go?item=outwear'"</span>&gt;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">td</span>&gt;</span><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"button"</span> <span class="attr">class</span>=<span class="string">"btnCate"</span> <span class="attr">value</span>=<span class="string">"정장"</span></span></span><br><span class="line"><span class="tag"><span class="attr">onclick</span>=<span class="string">"location.href='./GoodsList.go?item=fulldress'"</span>&gt;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">td</span>&gt;</span><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"button"</span> <span class="attr">class</span>=<span class="string">"btnCate"</span> <span class="attr">value</span>=<span class="string">"티셔츠"</span></span></span><br><span class="line"><span class="tag"><span class="attr">onclick</span>=<span class="string">"location.href='./GoodsList.go?item=Tshirts'"</span>&gt;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">td</span>&gt;</span><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"button"</span> <span class="attr">class</span>=<span class="string">"btnCate"</span> <span class="attr">value</span>=<span class="string">"셔츠"</span></span></span><br><span class="line"><span class="tag"><span class="attr">onclick</span>=<span class="string">"location.href='./GoodsList.go?item=shirts'"</span>&gt;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">td</span>&gt;</span><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"button"</span> <span class="attr">class</span>=<span class="string">"btnCate"</span> <span class="attr">value</span>=<span class="string">"바지"</span></span></span><br><span class="line"><span class="tag"><span class="attr">onclick</span>=<span class="string">"location.href='./GoodsList.go?item=pants'"</span>&gt;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">td</span>&gt;</span><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"button"</span> <span class="attr">class</span>=<span class="string">"btnCate"</span> <span class="attr">value</span>=<span class="string">"신발"</span></span></span><br><span class="line"><span class="tag"><span class="attr">onclick</span>=<span class="string">"location.href='./GoodsList.go?item=shoes'"</span>&gt;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">%</span></span></span><br><span class="line"><span class="tag">//필요한 정보 <span class="attr">:</span> <span class="attr">total</span>개수, <span class="attr">row</span>개수, <span class="attr">col</span>개수</span></span><br><span class="line"><span class="tag">//<span class="attr">total</span> <span class="attr">16</span>개  <span class="attr">col</span>은 <span class="attr">8</span>개 =&gt;</span> 필요한 row는 2개</span><br><span class="line">//total 17개  col은 8개 =&gt; 필요한 row는 3개</span><br><span class="line">int goodsCnt = goodsList.size();</span><br><span class="line">int col = 8;</span><br><span class="line">//내코드</span><br><span class="line">/* int result = goodsCnt%col;</span><br><span class="line">int row = result == 0 ? result:result+1; */</span><br><span class="line">//강사님코드</span><br><span class="line">int row = (goodsCnt/col) + (goodsCnt%col&gt;0? 1:0);</span><br><span class="line"></span><br><span class="line">int checkNum = 0; //출력개수를 총개수보다 많지 않게 처리하는 값을 저장하는 변수</span><br><span class="line"></span><br><span class="line"> for(int i=0; i<span class="tag">&lt;<span class="name">row;</span> <span class="attr">i</span>++)&#123;</span></span><br><span class="line"><span class="tag"> %&gt;</span></span><br><span class="line"> <span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line"> <span class="tag">&lt;<span class="name">%</span> </span></span><br><span class="line"> for(int j=0; j&lt;col; j++)&#123;</span><br><span class="line"> //List 한칸의 정보 -&gt; GoodsDTO 객체 하나로 이동</span><br><span class="line"> GoodsDTO gdto = goodsList.get(checkNum);</span><br><span class="line"> %&gt;</span><br><span class="line"><span class="tag">&lt;<span class="name">td</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">"./upload/&lt;%=gdto.getImage().split("</span>,")[<span class="attr">0</span>]%&gt;</span>" height="100"&gt;<span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>= <span class="string">"./GoodsDetail.go?gno=&lt;%=gdto.getGno()%&gt;"</span>&gt;</span><span class="tag">&lt;<span class="name">%=gdto.getName()</span> %&gt;</span><span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">가격 : <span class="tag">&lt;<span class="name">%=gdto.getPrice()</span> %&gt;</span>원<span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"button"</span> <span class="attr">class</span>=<span class="string">"btn"</span> <span class="attr">value</span>=<span class="string">"장바구니"</span></span></span><br><span class="line"><span class="tag"><span class="attr">onclick</span>=<span class="string">"location.href='./AdminGoodsDeleteAction.ag?gno=&lt;%=gdto.getGno()%&gt;'"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line"> <span class="tag">&lt;<span class="name">%</span></span></span><br><span class="line"><span class="tag"><span class="attr">checkNum</span>++;</span></span><br><span class="line"><span class="tag"><span class="attr">if</span>(<span class="attr">checkNum</span> == <span class="string">goodsCnt)</span> <span class="attr">break</span>;</span></span><br><span class="line"><span class="tag"> &#125;</span></span><br><span class="line"><span class="tag"> %&gt;</span></span><br><span class="line"> <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">%</span></span></span><br><span class="line"><span class="tag"> &#125; //<span class="attr">end</span> <span class="attr">of</span> <span class="attr">for-i</span>반복문</span></span><br><span class="line"><span class="tag">%&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">table</span>&gt;</span> </span><br><span class="line"><span class="tag">&lt;/<span class="name">fieldset</span>&gt;</span></span><br></pre></td></tr></table></figure>]]></content:encoded>
      
      
      <category domain="https://sowon-dev.github.io/categories/JSP/">JSP</category>
      
      
      <category domain="https://sowon-dev.github.io/tags/TIL/">TIL</category>
      
      <category domain="https://sowon-dev.github.io/tags/ITWILL-JAVA/">ITWILL(JAVA)</category>
      
      
      <comments>https://sowon-dev.github.io/2020/09/10/200910jspi2/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>Oracle DB생성방법 2가지, Oracle DB Tool, Parameterfile 유형</title>
      <link>https://sowon-dev.github.io/2020/09/09/200911dbi/</link>
      <guid>https://sowon-dev.github.io/2020/09/09/200911dbi/</guid>
      <pubDate>Wed, 09 Sep 2020 15:00:00 GMT</pubDate>
      
      <description>&lt;h2 id=&quot;DB-생성-방법&quot;&gt;&lt;a href=&quot;#DB-생성-방법&quot; class=&quot;headerlink&quot; title=&quot;DB 생성 방법&quot;&gt;&lt;/a&gt;DB 생성 방법&lt;/h2&gt;&lt;ol&gt;
&lt;li&gt;자동 - DBCA tool&lt;/li&gt;
&lt;li&gt;수동 - SQL Plus tool</description>
      
      
      
      <content:encoded><![CDATA[<h2 id="DB-생성-방법"><a href="#DB-생성-방법" class="headerlink" title="DB 생성 방법"></a>DB 생성 방법</h2><ol><li>자동 - DBCA tool</li><li>수동 - SQL Plus tool<a id="more"></a></li></ol><p><br><br><br></p><h2 id="Oracle-DB-Tool"><a href="#Oracle-DB-Tool" class="headerlink" title="Oracle DB Tool"></a>Oracle DB Tool</h2><h3 id="SQL-PLUS"><a href="#SQL-PLUS" class="headerlink" title="SQL PLUS"></a>SQL PLUS</h3><ul><li>터미널 환경의 Tool</li><li>쿼리구문(select, DML, DDL뿐만아니라 관리명령어 포함)을 입력/실행/결과 확인</li><li>DBA, 일반유저(개발자) 모두 사용 가능</li></ul><h3 id="SQL-Developer"><a href="#SQL-Developer" class="headerlink" title="SQL Developer"></a>SQL Developer</h3><ul><li>그래픽 환경의 Tool</li><li>쿼리구문(select, DML, DDL)만 입력/실행/결과 확인</li><li>주로 일반유저(개발자) 사용 가능</li></ul><h3 id="DBCA"><a href="#DBCA" class="headerlink" title="DBCA"></a>DBCA</h3><ul><li>그래픽 환경의 Tool</li><li>DB생성 및 삭제를 도와줌</li></ul><h3 id="EM"><a href="#EM" class="headerlink" title="EM"></a>EM</h3><ul><li>웹브라우저 환경의 Tool</li><li>DB관리를 도와줌</li><li>DBA만 사용 가능</li><li>URL주소 의미 : <code>예시 http://localhost:1158/em</code><ul><li><code>localhost</code> : DB가 존재하는 SERVER의 HOST명(IP주소)가 들어가는 자리</li><li><code>1158</code> : 고유 PORT번호, DB생성할때 만들어지는 고유한 번호</li></ul></li></ul><p><br><br><br></p><h2 id="Parameterfile-유형"><a href="#Parameterfile-유형" class="headerlink" title="Parameterfile 유형"></a>Parameterfile 유형</h2><h3 id="PFILE"><a href="#PFILE" class="headerlink" title="PFILE"></a>PFILE</h3><ul><li>위치 : $ORACLE_HOME/dbs (어느 기업이건 동일한 위치)</li><li>이름 : initSID.ora</li><li>특징 : <ul><li>text file -&gt; 따라서 vi편집기로 수동 편집 가능</li><li>static file : DB운영 중 parameter값 변경시 바로 적용 안됨 -&gt; DB재시작시 적용됨.</li></ul></li></ul><h3 id="SPFILE"><a href="#SPFILE" class="headerlink" title="SPFILE"></a>SPFILE</h3><ul><li>위치 : $ORACLE_HOME/dbs (어느 기업이건 동일한 위치)</li><li>이름 : spfileSID.ora</li><li>특징 : <ul><li>binary file (이진파일) -&gt; 따라서 수동 편집 불가능 -&gt; oracle이 유지관리 자동으로 함<ul><li>vi편집기로 여는 순간 파일이 깨져버림 -&gt; 망하는거임 -&gt; oracle에게 보여달라고 명령하면 됨</li><li><a href="https://sowon-dev.github.io/2020/08/26/200826dbi/#Parameter-file">참고링크 : 오라클DB구조 중 Parameter file</a></li></ul></li><li>dynamic file : DB운영 중 parameter값 변경시 바로 적용됨. -&gt; 이 특징때문에 대부분의 기업이 PFILE아닌 SPFILE를 사용</li></ul></li><li>조회 : block사이즈와 캐시사이즈를 조회하는 쿼리  <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">SQL&gt; show parameter db_block_size;</span><br><span class="line">SQL&gt; show parameter db_cache_size;</span><br></pre></td></tr></table></figure></li><li>변경 : 가장 많이 쓰는 구문.  <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&#x2F;&#x2F;예시쿼리 : 캐시사이즈를 512메가로 변경</span><br><span class="line">SQL&gt; alter system set db_cache_size &#x3D; 512M;</span><br><span class="line"></span><br><span class="line">&#x2F;&#x2F;scope 옵션추가</span><br><span class="line">SQL&gt; alter system set db_cache_size &#x3D; 512M scope &#x3D; memory | both | spfile;</span><br></pre></td></tr></table></figure></li><li>scope 옵션 : 중요<ol><li><code>memory</code> : 현재 DB에만 적용, spfile에는 적용 X</li><li><code>both</code>(default) : 현재 DB와 spfile 둘 다 적용 O</li><li><code>spfile</code> : spfile에는 적용 O, 현재 DB적용 X -&gt; 즉 DB 재시작시 적용함 = static하게 적용하겠다는 의미.</li></ol></li></ul>]]></content:encoded>
      
      
      <category domain="https://sowon-dev.github.io/categories/Database/">Database</category>
      
      <category domain="https://sowon-dev.github.io/categories/Database/Oracle/">Oracle</category>
      
      
      <category domain="https://sowon-dev.github.io/tags/TIL/">TIL</category>
      
      <category domain="https://sowon-dev.github.io/tags/ITWILL-JAVA/">ITWILL(JAVA)</category>
      
      <category domain="https://sowon-dev.github.io/tags/Oracle/">Oracle</category>
      
      
      <comments>https://sowon-dev.github.io/2020/09/09/200911dbi/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>Servlet상품5: 상품삭제</title>
      <link>https://sowon-dev.github.io/2020/09/09/200909jspi2/</link>
      <guid>https://sowon-dev.github.io/2020/09/09/200909jspi2/</guid>
      <pubDate>Wed, 09 Sep 2020 00:00:00 GMT</pubDate>
      
      <description>&lt;h2 id=&quot;AdminGoodsFrontController-java의-doProcess-의-주소비교-후-처리부분에-코드-추가&quot;&gt;&lt;a href=&quot;#AdminGoodsFrontController-java의-doProcess-의-주소비교-후-처리부분에-코드-추가&quot; class=&quot;headerlink&quot; title=&quot;AdminGoodsFrontController.java의 doProcess()의 주소비교 후 처리부분에 코드 추가&quot;&gt;&lt;/a&gt;&lt;code&gt;AdminGoodsFrontController.java&lt;/code&gt;의 doProcess()의 주소비교 후 처리부분에 코드 추가&lt;/h2&gt;</description>
      
      
      
      <content:encoded><![CDATA[<h2 id="AdminGoodsFrontController-java의-doProcess-의-주소비교-후-처리부분에-코드-추가"><a href="#AdminGoodsFrontController-java의-doProcess-의-주소비교-후-처리부분에-코드-추가" class="headerlink" title="AdminGoodsFrontController.java의 doProcess()의 주소비교 후 처리부분에 코드 추가"></a><code>AdminGoodsFrontController.java</code>의 doProcess()의 주소비교 후 처리부분에 코드 추가</h2><a id="more"></a><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//상품삭제</span></span><br><span class="line">&#125;<span class="keyword">else</span> <span class="keyword">if</span>(command.equals(<span class="string">"/AdminGoodsDeleteAction.ag"</span>))&#123;</span><br><span class="line">System.out.println(<span class="string">"C: /AdminGoodsDeleteAction.ag 호출"</span>);</span><br><span class="line"><span class="comment">//.jsp -&gt; Action_DAO_DB -&gt;.ag로 이동</span></span><br><span class="line">action = <span class="keyword">new</span> AdminGoodsDeleteAction();</span><br><span class="line"><span class="keyword">try</span> &#123; forward = action.execute(request, response);</span><br><span class="line">&#125; <span class="keyword">catch</span> (Exception e) &#123; e.printStackTrace(); &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><br><br><br></p><h2 id="AdminGoodsDeleteAction-java-생성"><a href="#AdminGoodsDeleteAction-java-생성" class="headerlink" title="AdminGoodsDeleteAction.java 생성"></a><code>AdminGoodsDeleteAction.java</code> 생성</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">AdminGoodsDeleteAction</span> <span class="keyword">implements</span> <span class="title">Action</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> ActionForward <span class="title">execute</span><span class="params">(HttpServletRequest request, HttpServletResponse response)</span> </span></span><br><span class="line"><span class="function"><span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line">System.out.println(<span class="string">"M : AdminGoodsDeleteAction의 execute() 호출"</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">//관리자계정확인(세션 ID)</span></span><br><span class="line">HttpSession session = request.getSession();</span><br><span class="line">String id = (String)session.getAttribute(<span class="string">"id"</span>);</span><br><span class="line">ActionForward forward = <span class="keyword">new</span> ActionForward();</span><br><span class="line"><span class="keyword">if</span>(id == <span class="keyword">null</span> || !id.equals(<span class="string">"admin"</span>))&#123;</span><br><span class="line"><span class="comment">//response.sendRedirect("./Main.me"); 컨트롤러통해서 이동시키기</span></span><br><span class="line">forward.setPath(<span class="string">"./Main.me"</span>);</span><br><span class="line">forward.setRedirect(<span class="keyword">true</span>);</span><br><span class="line"><span class="keyword">return</span> forward;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">//한글처리</span></span><br><span class="line">request.setCharacterEncoding(<span class="string">"UTF-8"</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">//전달받은 파라미터 저장</span></span><br><span class="line"><span class="keyword">int</span> gno = Integer.parseInt(request.getParameter(<span class="string">"gno"</span>));</span><br><span class="line"></span><br><span class="line"><span class="comment">//DB삭제을 위해 DAO생성 -&gt; deleteGoods(gno)</span></span><br><span class="line">AdminGoodsDAO agdao = <span class="keyword">new</span> AdminGoodsDAO();</span><br><span class="line">agdao.deleteGoods(gno);</span><br><span class="line"></span><br><span class="line"><span class="comment">//리스트 페이지이동</span></span><br><span class="line"><span class="comment">//(AdminGoodsList.ag -&gt; 보이는 페이지도 AdminGoodsList.ag이므로 sendRedirect방식으로 이동)</span></span><br><span class="line">forward.setPath(<span class="string">"./AdminGoodsList.ag"</span>);</span><br><span class="line">forward.setRedirect(<span class="keyword">true</span>);</span><br><span class="line"><span class="keyword">return</span> forward;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><br><br><br></p><h2 id="AdminGoodsDAO-java-생성-후-deleteGoods-int-gno-메서드-코드-추가"><a href="#AdminGoodsDAO-java-생성-후-deleteGoods-int-gno-메서드-코드-추가" class="headerlink" title="AdminGoodsDAO.java 생성 후 deleteGoods(int gno)메서드 코드 추가"></a><code>AdminGoodsDAO.java</code> 생성 후 deleteGoods(int gno)메서드 코드 추가</h2><ul><li>tmp는 DB의 몇개의 row가 영향을 받느냐를 나타내는데 여기서는 gno컬럼이 pk이므로 1 또는 0만 나옴</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//상품삭제</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">deleteGoods</span><span class="params">(<span class="keyword">int</span> gno)</span> </span>&#123;</span><br><span class="line"><span class="keyword">try</span>&#123;</span><br><span class="line">getCon();</span><br><span class="line">sql = <span class="string">"delete from itwill_goods where gno=?"</span>;</span><br><span class="line">pstmt = con.prepareStatement(sql);</span><br><span class="line">pstmt.setInt(<span class="number">1</span>, gno);</span><br><span class="line"><span class="keyword">int</span> tmp = pstmt.executeUpdate();</span><br><span class="line">System.out.println(<span class="string">"DAO : 상품삭제완료 -&gt; "</span>+tmp);</span><br><span class="line">&#125;<span class="keyword">catch</span>(Exception e)&#123;</span><br><span class="line">e.printStackTrace();</span><br><span class="line">&#125;<span class="keyword">finally</span> &#123;</span><br><span class="line">closeDB();</span><br><span class="line">&#125;</span><br><span class="line">&#125;<span class="comment">//end of deleteGoods</span></span><br></pre></td></tr></table></figure>]]></content:encoded>
      
      
      <category domain="https://sowon-dev.github.io/categories/JSP/">JSP</category>
      
      
      <category domain="https://sowon-dev.github.io/tags/TIL/">TIL</category>
      
      <category domain="https://sowon-dev.github.io/tags/ITWILL-JAVA/">ITWILL(JAVA)</category>
      
      
      <comments>https://sowon-dev.github.io/2020/09/09/200909jspi2/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>Servlet상품4: 상품수정·인기상품처리</title>
      <link>https://sowon-dev.github.io/2020/09/09/200909jspi/</link>
      <guid>https://sowon-dev.github.io/2020/09/09/200909jspi/</guid>
      <pubDate>Wed, 09 Sep 2020 00:00:00 GMT</pubDate>
      
      <description>&lt;h2 id=&quot;AdminGoodsFrontController-java의-doProcess-의-주소비교-후-처리부분에-코드-추가&quot;&gt;&lt;a href=&quot;#AdminGoodsFrontController-java의-doProcess-의-주소비교-후-처리부분에-코드-추가&quot; class=&quot;headerlink&quot; title=&quot;AdminGoodsFrontController.java의 doProcess()의 주소비교 후 처리부분에 코드 추가&quot;&gt;&lt;/a&gt;&lt;code&gt;AdminGoodsFrontController.java&lt;/code&gt;의 doProcess()의 주소비교 후 처리부분에 코드 추가&lt;/h2&gt;</description>
      
      
      
      <content:encoded><![CDATA[<h2 id="AdminGoodsFrontController-java의-doProcess-의-주소비교-후-처리부분에-코드-추가"><a href="#AdminGoodsFrontController-java의-doProcess-의-주소비교-후-처리부분에-코드-추가" class="headerlink" title="AdminGoodsFrontController.java의 doProcess()의 주소비교 후 처리부분에 코드 추가"></a><code>AdminGoodsFrontController.java</code>의 doProcess()의 주소비교 후 처리부분에 코드 추가</h2><a id="more"></a><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//상품수정</span></span><br><span class="line">&#125;<span class="keyword">else</span> <span class="keyword">if</span>(command.equals(<span class="string">"/AdminGoodsModify.ag"</span>))&#123;</span><br><span class="line">System.out.println(<span class="string">"C: /AdminGoodsModify.ag 호출"</span>);</span><br><span class="line"><span class="comment">//.ag -&gt; Action_DAO_DB -&gt;.jsp로 이동</span></span><br><span class="line">action = <span class="keyword">new</span> AdminGoodsModifyFormAction();</span><br><span class="line"><span class="keyword">try</span> &#123; forward = action.execute(request, response);</span><br><span class="line">&#125; <span class="keyword">catch</span> (Exception e) &#123; e.printStackTrace(); &#125;</span><br><span class="line">&#125;<span class="keyword">else</span> <span class="keyword">if</span>(command.equals(<span class="string">"/AdminGoodsModifyAction.ag"</span>))&#123;</span><br><span class="line"><span class="comment">//.jsp -&gt; Action_DAO_DB -&gt;.ag로 이동</span></span><br><span class="line">action = <span class="keyword">new</span> AdminGoodsModifyProAction();</span><br><span class="line"><span class="keyword">try</span> &#123; forward = action.execute(request, response);</span><br><span class="line">&#125; <span class="keyword">catch</span> (Exception e) &#123; e.printStackTrace(); &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><br><br><br></p><h2 id="AdminGoodsModifyFormAction-java-생성"><a href="#AdminGoodsModifyFormAction-java-생성" class="headerlink" title="AdminGoodsModifyFormAction.java 생성"></a><code>AdminGoodsModifyFormAction.java</code> 생성</h2><ul><li>request영역에 저장할때 아래 두코드를 모두 사용할 수 있다. 두 코드는 동일한 코드이다. 여러번 사용할 변수가 아니면 2번 코드를 사용하는 것이 더 적합하다.<ul><li><code>request.setAttribute(&quot;gdto&quot;, gdto);</code></li><li><code>request.setAttribute(&quot;gdto&quot;, agdao.getGoods(gno));</code></li></ul></li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">AdminGoodsModifyFormAction</span> <span class="keyword">implements</span> <span class="title">Action</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> ActionForward <span class="title">execute</span><span class="params">(HttpServletRequest request, HttpServletResponse response)</span> </span></span><br><span class="line"><span class="function"><span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line">System.out.println(<span class="string">"M : AdminGoodsModifyFormAction의 execute() 호출"</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">//관리자계정확인(세션 ID)</span></span><br><span class="line">HttpSession session = request.getSession();</span><br><span class="line">String id = (String)session.getAttribute(<span class="string">"id"</span>);</span><br><span class="line">ActionForward forward = <span class="keyword">new</span> ActionForward();</span><br><span class="line"><span class="keyword">if</span>(id == <span class="keyword">null</span> || !id.equals(<span class="string">"admin"</span>))&#123;</span><br><span class="line"><span class="comment">//response.sendRedirect("./Main.me"); 컨트롤러통해서 이동시키기</span></span><br><span class="line">forward.setPath(<span class="string">"./Main.me"</span>);</span><br><span class="line">forward.setRedirect(<span class="keyword">true</span>);</span><br><span class="line"><span class="keyword">return</span> forward;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//전달된 파라미터값 저장</span></span><br><span class="line"><span class="keyword">int</span> gno = Integer.parseInt(request.getParameter(<span class="string">"gno"</span>));</span><br><span class="line"></span><br><span class="line"><span class="comment">//AdminGoodsDAO 객체생성 -&gt; getGoods(gno)</span></span><br><span class="line"><span class="comment">//상품번호에 해당하는 상품정보 전체 가져오기</span></span><br><span class="line">AdminGoodsDAO agdao = <span class="keyword">new</span> AdminGoodsDAO();</span><br><span class="line">GoodsDTO gdto = agdao.getGoods(gno);</span><br><span class="line">System.out.println(<span class="string">"M : "</span>+gdto);</span><br><span class="line"></span><br><span class="line"><span class="comment">//request영역에 저장(아래 두코드는 동일한 코드. 여러번 사용할 변수가 아니면 2번 코드가 더 적합)</span></span><br><span class="line">request.setAttribute(<span class="string">"gdto"</span>, gdto);</span><br><span class="line"><span class="comment">//request.setAttribute("gdto", agdao.getGoods(gno));</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//view페이지로 이동 ('./admingoods/admin_goods_modify.jsp')</span></span><br><span class="line">forward.setPath(<span class="string">"./admingoods/admin_goods_modify.jsp"</span>);</span><br><span class="line">forward.setRedirect(<span class="keyword">false</span>);</span><br><span class="line"><span class="keyword">return</span> forward;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><br><br><br></p><h2 id="admin-goods-modify-jsp-생성"><a href="#admin-goods-modify-jsp-생성" class="headerlink" title="admin_goods_modify.jsp 생성"></a><code>admin_goods_modify.jsp</code> 생성</h2><ul><li>이미지를 제외한 input태그들만 수정가능하도록 만들기</li><li>EL태그를 사용하여 request객체로 전달받은 값들을 나타낼 수 있다.<ol><li>jsp페이지에 <code>&lt;%@ taglib prefix=&quot;c&quot; uri=&quot;http://java.sun.com/jsp/jstl/core&quot; %&gt;</code> 코어라이브러리추가</li><li>request객체안의 정보를 담은 변수를 선언. =&gt; <code>GoodsDTO gdto = (GoodsDTO) request.getAttribute(&quot;gdto&quot;);</code></li><li>gdto.set()명으로 불러오면 된다. =&gt; <code>${gdto.name}</code></li></ol></li><li>카테고리가 선택되어있지 않은 경우 아래 두 코드 중 원하는 코드를 사용하면 된다. 두 코드는 동일한 결과값을 가진다.<ul><li><code>if(gdto.getCategory().equals(&quot;&quot;)){ %&gt; selected &lt;% } %&gt;</code></li><li><code>if(gdto.getCategory() == null){ %&gt; selected &lt;% } %&gt;</code></li></ul></li><li>인기상품은 0인 경우 아니요 1인 경우예로 데이터처리     </li><li>tmp는 DB의 몇개의 row가 영향을 받느냐를 나타내는데 여기서는 gno컬럼이 pk이므로 1 또는 0만 나옴</li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">%</span></span></span><br><span class="line"><span class="tag">//관리자만 페이지 볼 수 있게 추가</span></span><br><span class="line"><span class="tag"><span class="attr">String</span> <span class="attr">id</span> = <span class="string">(String)</span> <span class="attr">session.getAttribute</span>("<span class="attr">id</span>");</span></span><br><span class="line"><span class="tag"><span class="attr">if</span>(<span class="attr">id</span> == <span class="string">null</span> || !<span class="attr">id.equals</span>("<span class="attr">admin</span>"))&#123;</span></span><br><span class="line"><span class="tag"><span class="attr">response.sendRedirect</span>("<span class="attr">.</span>/<span class="attr">Main.me</span>");</span></span><br><span class="line"><span class="tag">&#125;</span></span><br><span class="line"><span class="tag">//저장된 정보 가져오기</span></span><br><span class="line"><span class="tag"><span class="attr">GoodsDTO</span> <span class="attr">gdto</span> = <span class="string">(GoodsDTO)</span> <span class="attr">request.getAttribute</span>("<span class="attr">gdto</span>");</span></span><br><span class="line"><span class="tag">%&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">fieldset</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">legend</span>&gt;</span>상품수정<span class="tag">&lt;/<span class="name">legend</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">form</span> <span class="attr">action</span>=<span class="string">"./AdminGoodsModifyAction.ag?"</span> <span class="attr">method</span>=<span class="string">"post"</span> <span class="attr">name</span>=<span class="string">"fr"</span>&gt;</span></span><br><span class="line"> <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"hidden"</span> <span class="attr">name</span>=<span class="string">"gno"</span> <span class="attr">value</span>=<span class="string">"&lt;%=gdto.getGno()%&gt;"</span>&gt;</span></span><br><span class="line"> <span class="tag">&lt;<span class="name">table</span> <span class="attr">border</span>=<span class="string">"1"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">td</span>&gt;</span>카테고리<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">td</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">select</span> <span class="attr">name</span>=<span class="string">"category"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">""</span></span></span><br><span class="line">&lt;% if(gdto.getCategory().equals(""))&#123; %&gt; selected &lt;% &#125; %&gt;</span><br><span class="line">&lt;%--이것도가능 &lt;% if(gdto.getCategory() == null)&#123; %&gt; selected &lt;% &#125; %&gt; --%&gt;</span><br><span class="line">&gt;선택하세요<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">"outwear"</span></span></span><br><span class="line">&lt;% //selected 속성으로 제어가능 </span><br><span class="line">if(gdto.getCategory().equals("outwear"))&#123; %&gt; selected <span class="tag">&lt;<span class="name">%</span> &#125; %&gt;</span></span><br><span class="line">&gt;아우터<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">"fulldress"</span></span></span><br><span class="line">&lt;% if(gdto.getCategory().equals("fulldress"))&#123; %&gt; selected &lt;% &#125; %&gt;</span><br><span class="line">&gt;정장<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">"Tshirts"</span></span></span><br><span class="line">&lt;% if(gdto.getCategory().equals("Tshirts"))&#123; %&gt; selected &lt;% &#125; %&gt;</span><br><span class="line">&gt;티셔츠<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">"shirts"</span></span></span><br><span class="line">&lt;% if(gdto.getCategory().equals("shirts"))&#123; %&gt; selected &lt;% &#125; %&gt;</span><br><span class="line">&gt;셔츠<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">"pants"</span></span></span><br><span class="line">&lt;% if(gdto.getCategory().equals("pants"))&#123; %&gt; selected &lt;% &#125; %&gt;</span><br><span class="line">&gt;바지<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">"shoes"</span></span></span><br><span class="line">&lt;% if(gdto.getCategory().equals("shoes"))&#123; %&gt; selected &lt;% &#125; %&gt;</span><br><span class="line">&gt;신발<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">td</span>&gt;</span>상품이름<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">td</span>&gt;</span><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"text"</span> <span class="attr">name</span>=<span class="string">"name"</span> <span class="attr">value</span>=<span class="string">"$&#123;gdto.name&#125;"</span>&gt;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">td</span>&gt;</span>판매가격<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">td</span>&gt;</span><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"text"</span> <span class="attr">name</span>=<span class="string">"price"</span> <span class="attr">value</span>=<span class="string">"$&#123;gdto.price&#125;"</span>&gt;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">td</span>&gt;</span>색상<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">td</span>&gt;</span><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"text"</span> <span class="attr">name</span>=<span class="string">"color"</span> <span class="attr">value</span>=<span class="string">"$&#123;gdto.color&#125;"</span>&gt;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">td</span>&gt;</span>수량<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">td</span>&gt;</span><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"text"</span> <span class="attr">name</span>=<span class="string">"amount"</span> <span class="attr">value</span>=<span class="string">"&lt;%=gdto.getAmount() %&gt;"</span>&gt;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">td</span>&gt;</span>사이즈<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">td</span>&gt;</span><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"text"</span> <span class="attr">name</span>=<span class="string">"size"</span> <span class="attr">value</span>=<span class="string">"&lt;%=gdto.getSize()%&gt;"</span>&gt;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">td</span>&gt;</span>제품정보<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">td</span>&gt;</span><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"text"</span> <span class="attr">name</span>=<span class="string">"content"</span> <span class="attr">value</span>=<span class="string">"&lt;%=gdto.getContent() %&gt;"</span>&gt;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">td</span>&gt;</span>인기상품등록<span class="tag">&lt;/<span class="name">td</span>&gt;</span> <span class="comment">&lt;!-- best 0-아니요 1-예로 데이터처리 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">td</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"radio"</span> <span class="attr">name</span>=<span class="string">"best"</span> <span class="attr">value</span>=<span class="string">"1"</span></span></span><br><span class="line">&lt;%if(gdto.getBest() == 1)&#123; %&gt; checked &lt;%&#125; %&gt;</span><br><span class="line">&gt;예</span><br><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"radio"</span> <span class="attr">name</span>=<span class="string">"best"</span> <span class="attr">value</span>=<span class="string">"0"</span></span></span><br><span class="line">s&lt;%if(gdto.getBest() == 0)&#123; %&gt; checked &lt;%&#125; %&gt;</span><br><span class="line">&gt;아니요</span><br><span class="line"><span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">td</span> <span class="attr">colspan</span>=<span class="string">"2"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"submit"</span> <span class="attr">value</span>=<span class="string">"상품수정"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"reset"</span> <span class="attr">value</span>=<span class="string">"초기화"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"button"</span> <span class="attr">value</span>=<span class="string">"뒤로가기"</span> <span class="attr">onclick</span>=<span class="string">"location.href='./AdminGoodsList.ag'"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">table</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">fieldset</span>&gt;</span></span><br></pre></td></tr></table></figure><p><br><br><br></p><h2 id="AdminGoodsDAO-java-생성-후-getGoods-int-gno-메서드-코드-추가"><a href="#AdminGoodsDAO-java-생성-후-getGoods-int-gno-메서드-코드-추가" class="headerlink" title="AdminGoodsDAO.java 생성 후 getGoods(int gno)메서드 코드 추가"></a><code>AdminGoodsDAO.java</code> 생성 후 getGoods(int gno)메서드 코드 추가</h2><ul><li>추후 spring framework를 하면 DTO에 담는 작업(dto.set()작업)은 스프링이 자동으로 진행해준다.</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//상품정보 가져오기</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> GoodsDTO <span class="title">getGoods</span><span class="params">(<span class="keyword">int</span> gno)</span> </span>&#123;</span><br><span class="line">GoodsDTO gdto = <span class="keyword">null</span>;</span><br><span class="line"><span class="keyword">try</span>&#123;</span><br><span class="line">getCon();</span><br><span class="line">sql =<span class="string">"select * from itwill_goods where gno=?"</span>;</span><br><span class="line">pstmt = con.prepareStatement(sql);</span><br><span class="line">pstmt.setInt(<span class="number">1</span>, gno);</span><br><span class="line">rs = pstmt.executeQuery();</span><br><span class="line"><span class="keyword">if</span>(rs.next())&#123;</span><br><span class="line"><span class="comment">//추후 spring framework를 하면 DTO에 담는 작업은 스프링이 자동으로 진행해준다</span></span><br><span class="line">gdto = <span class="keyword">new</span> GoodsDTO();</span><br><span class="line">gdto.setAmount(rs.getInt(<span class="string">"amount"</span>));</span><br><span class="line">gdto.setBest(rs.getInt(<span class="string">"best"</span>));</span><br><span class="line">gdto.setCategory(rs.getString(<span class="string">"category"</span>));</span><br><span class="line">gdto.setColor(rs.getString(<span class="string">"color"</span>));</span><br><span class="line">gdto.setContent(rs.getString(<span class="string">"content"</span>));</span><br><span class="line">gdto.setDate(rs.getDate(<span class="string">"date"</span>));</span><br><span class="line">gdto.setGno(rs.getInt(<span class="string">"gno"</span>));</span><br><span class="line">gdto.setName(rs.getString(<span class="string">"name"</span>));</span><br><span class="line">gdto.setPrice(rs.getInt(<span class="string">"price"</span>));</span><br><span class="line">gdto.setSize(rs.getString(<span class="string">"size"</span>));</span><br><span class="line">gdto.setImage(rs.getString(<span class="string">"image"</span>));</span><br><span class="line">&#125;</span><br><span class="line">System.out.println(<span class="string">"해당 상품정보 저장 완료"</span>);</span><br><span class="line">&#125;<span class="keyword">catch</span>(Exception e)&#123;</span><br><span class="line">e.printStackTrace();</span><br><span class="line">&#125;<span class="keyword">finally</span> &#123;</span><br><span class="line">closeDB();</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> gdto;</span><br><span class="line">&#125;<span class="comment">//end of getGoods</span></span><br></pre></td></tr></table></figure><p><br><br><br></p><h2 id="AdminGoodsModifyProAction-java-생성"><a href="#AdminGoodsModifyProAction-java-생성" class="headerlink" title="AdminGoodsModifyProAction.java 생성"></a><code>AdminGoodsModifyProAction.java</code> 생성</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">AdminGoodsModifyProAction</span> <span class="keyword">implements</span> <span class="title">Action</span></span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> ActionForward <span class="title">execute</span><span class="params">(HttpServletRequest request, HttpServletResponse response)</span> </span></span><br><span class="line"><span class="function"><span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line">System.out.println(<span class="string">"M : AdminGoodsModifyProAction의 execute() 호출"</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">//관리자계정확인(세션 ID)</span></span><br><span class="line">HttpSession session = request.getSession();</span><br><span class="line">String id = (String)session.getAttribute(<span class="string">"id"</span>);</span><br><span class="line">ActionForward forward = <span class="keyword">new</span> ActionForward();</span><br><span class="line"><span class="keyword">if</span>(id == <span class="keyword">null</span> || !id.equals(<span class="string">"admin"</span>))&#123;</span><br><span class="line"><span class="comment">//response.sendRedirect("./Main.me"); 컨트롤러통해서 이동시키기</span></span><br><span class="line">forward.setPath(<span class="string">"./Main.me"</span>);</span><br><span class="line">forward.setRedirect(<span class="keyword">true</span>);</span><br><span class="line"><span class="keyword">return</span> forward;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//한글처리</span></span><br><span class="line">request.setCharacterEncoding(<span class="string">"UTF-8"</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">//전달되는 파라미터값  GoodsDTO로 받아서 사용</span></span><br><span class="line">GoodsDTO gdto = <span class="keyword">new</span> GoodsDTO();</span><br><span class="line">gdto.setAmount(Integer.parseInt(request.getParameter(<span class="string">"amount"</span>)));</span><br><span class="line">gdto.setBest(Integer.parseInt(request.getParameter(<span class="string">"best"</span>)));</span><br><span class="line">gdto.setCategory(request.getParameter(<span class="string">"category"</span>));</span><br><span class="line">gdto.setColor(request.getParameter(<span class="string">"color"</span>));</span><br><span class="line">gdto.setContent(request.getParameter(<span class="string">"content"</span>));</span><br><span class="line">gdto.setGno(Integer.parseInt(request.getParameter(<span class="string">"gno"</span>)));</span><br><span class="line">gdto.setName(request.getParameter(<span class="string">"name"</span>));</span><br><span class="line">gdto.setPrice(Integer.parseInt(request.getParameter(<span class="string">"price"</span>)));</span><br><span class="line">gdto.setSize(request.getParameter(<span class="string">"size"</span>));</span><br><span class="line"></span><br><span class="line"><span class="comment">//DB수정을 위해 DAO생성 -&gt; modifyGoods(gdto)</span></span><br><span class="line">AdminGoodsDAO agdao = <span class="keyword">new</span> AdminGoodsDAO();</span><br><span class="line">agdao.modifyGoods(gdto);</span><br><span class="line"></span><br><span class="line"><span class="comment">//리스트 페이지이동</span></span><br><span class="line">forward.setPath(<span class="string">"./AdminGoodsList.ag"</span>);</span><br><span class="line">forward.setRedirect(<span class="keyword">true</span>);</span><br><span class="line"><span class="keyword">return</span> forward;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><br><br><br></p><h2 id="AdminGoodsDAO-java-생성-후-modifyGoods-GoodsDTO-gdto-메서드-코드-추가"><a href="#AdminGoodsDAO-java-생성-후-modifyGoods-GoodsDTO-gdto-메서드-코드-추가" class="headerlink" title="AdminGoodsDAO.java 생성 후 modifyGoods(GoodsDTO gdto)메서드 코드 추가"></a><code>AdminGoodsDAO.java</code> 생성 후 modifyGoods(GoodsDTO gdto)메서드 코드 추가</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//상품수정</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">modifyGoods</span><span class="params">(GoodsDTO gdto)</span> </span>&#123;</span><br><span class="line"><span class="keyword">try</span>&#123;</span><br><span class="line">getCon();</span><br><span class="line">sql=<span class="string">"update itwill_goods set category=?,name=?,price=?,color=?,amount=?,"</span></span><br><span class="line">+ <span class="string">"size=?,content=?,best=? where gno=?"</span>;</span><br><span class="line">pstmt = con.prepareStatement(sql);</span><br><span class="line">pstmt.setString(<span class="number">1</span>, gdto.getCategory());</span><br><span class="line">pstmt.setString(<span class="number">2</span>, gdto.getName());</span><br><span class="line">pstmt.setInt(<span class="number">3</span>, gdto.getPrice());</span><br><span class="line">pstmt.setString(<span class="number">4</span>, gdto.getColor());</span><br><span class="line">pstmt.setInt(<span class="number">5</span>, gdto.getAmount());</span><br><span class="line">pstmt.setString(<span class="number">6</span>, gdto.getSize());</span><br><span class="line">pstmt.setString(<span class="number">7</span>, gdto.getContent());</span><br><span class="line">pstmt.setInt(<span class="number">8</span>, gdto.getBest());</span><br><span class="line">pstmt.setInt(<span class="number">9</span>, gdto.getGno());</span><br><span class="line"><span class="keyword">int</span> tmp = pstmt.executeUpdate();</span><br><span class="line">System.out.println(<span class="string">"DAO : 상품정보 수정완료"</span>+ tmp);</span><br><span class="line">&#125;<span class="keyword">catch</span>(Exception e)&#123;</span><br><span class="line">e.printStackTrace();</span><br><span class="line">&#125;<span class="keyword">finally</span> &#123;</span><br><span class="line">closeDB();</span><br><span class="line">&#125;</span><br><span class="line">&#125;<span class="comment">//end of modifyGoods</span></span><br></pre></td></tr></table></figure><p><br><br><br></p>]]></content:encoded>
      
      
      <category domain="https://sowon-dev.github.io/categories/JSP/">JSP</category>
      
      
      <category domain="https://sowon-dev.github.io/tags/TIL/">TIL</category>
      
      <category domain="https://sowon-dev.github.io/tags/ITWILL-JAVA/">ITWILL(JAVA)</category>
      
      
      <comments>https://sowon-dev.github.io/2020/09/09/200909jspi/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>안드로이드 다운로드, 기본개념, 프로젝트 기본순서, 액티비티생명주기, 로그캣</title>
      <link>https://sowon-dev.github.io/2020/09/09/200909and/</link>
      <guid>https://sowon-dev.github.io/2020/09/09/200909and/</guid>
      <pubDate>Wed, 09 Sep 2020 00:00:00 GMT</pubDate>
      
      <description>&lt;h2 id=&quot;안드로이드-다운로드&quot;&gt;&lt;a href=&quot;#안드로이드-다운로드&quot; class=&quot;headerlink&quot; title=&quot;안드로이드 다운로드&quot;&gt;&lt;/a&gt;안드로이드 다운로드&lt;/h2&gt;&lt;ol&gt;
&lt;li&gt;&lt;a href=&quot;https://developer.android.com/studio?hl=ko&quot;&gt;안드로이드 다운르도&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://developer.android.com/studio/install?hl=ko&quot;&gt;안드로이드 설치가이드&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;안드로이드 AVD 생성</description>
      
      
      
      <content:encoded><![CDATA[<h2 id="안드로이드-다운로드"><a href="#안드로이드-다운로드" class="headerlink" title="안드로이드 다운로드"></a>안드로이드 다운로드</h2><ol><li><a href="https://developer.android.com/studio?hl=ko">안드로이드 다운르도</a></li><li><a href="https://developer.android.com/studio/install?hl=ko">안드로이드 설치가이드</a></li><li>안드로이드 AVD 생성 <a id="more"></a><ul><li>AVD = Android Virtual Device</li><li>스마트폰이나 태블릿 없이도 안드로이드 응용 프로그램의 테스트를 가능케 해준다.</li><li>실습하기 적당한 AVD는 xxhdpi(1080X1920)해상도이고 화면 5.5인치<ul><li>보통 픽셀2 API 사용</li></ul></li></ul></li><li>안드로이드 SDK업데이트 확인<ul><li>SDK = Software Development Kit</li><li>가장 최신버전을 다운로드하면 된다. 보통 R버전.</li><li>확인방법 : Tools -&gt; SDK manager</li></ul></li></ol><p><br><br><br></p><h2 id="안드로이드-프로젝트에서-프로그래머가-주로-변겨하거나-접근할-폴더와-파일"><a href="#안드로이드-프로젝트에서-프로그래머가-주로-변겨하거나-접근할-폴더와-파일" class="headerlink" title="안드로이드 프로젝트에서 프로그래머가 주로 변겨하거나 접근할 폴더와 파일"></a>안드로이드 프로젝트에서 프로그래머가 주로 변겨하거나 접근할 폴더와 파일</h2><ol><li><code>activity_main.xml</code> : 기본 액티비티(화면)</li><li><code>MainActivity.java</code> : 메인 java코드</li><li><code>strings.xml</code> : 문자열이 저장된 파일</li><li><code>drawable폴더</code> : 앱에서 사용할 이미지 파일을 저장하는 폴더</li><li><code>AndroidMainfest.xml</code> : 앱의 기본적인 정보가 설정된 파일</li></ol><p><br><br><br></p><h2 id="프로젝트-기본-순서"><a href="#프로젝트-기본-순서" class="headerlink" title="프로젝트 기본 순서"></a>프로젝트 기본 순서</h2><h3 id="안드로이드-프로젝트생성-프로젝트명-첫글자-대문자-공백쓰지말것"><a href="#안드로이드-프로젝트생성-프로젝트명-첫글자-대문자-공백쓰지말것" class="headerlink" title="안드로이드 프로젝트생성 : 프로젝트명 첫글자 대문자, 공백쓰지말것"></a>안드로이드 프로젝트생성 : 프로젝트명 첫글자 대문자, 공백쓰지말것</h3><ul><li>new studio project에서 <code>Empty Activity</code>클릭</li><li>보통 <code>Empty Activity</code>로 프로젝트를 시작한다.</li><li>언어 기본설정 : java</li><li>최하 실행버저 기본설정 : Android 4.1 (Jelly Bean)</li></ul><h3 id="xml-화면-디자인"><a href="#xml-화면-디자인" class="headerlink" title=".xml 화면 디자인"></a><code>.xml</code> 화면 디자인</h3><ul><li>기본 배치관리자 : LinearLayout</li><li><code>LinearLayout</code>과 android:orientation=”vertical”` 항상 세트로 코딩</li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">LinearLayout</span> <span class="attr">xmlns:android</span>=<span class="string">"http://schemas.android.com/apk/res/android"</span></span></span><br><span class="line"><span class="tag"><span class="attr">xmlns:app</span>=<span class="string">"http://schemas.android.com/apk/res-auto"</span></span></span><br><span class="line"><span class="tag"><span class="attr">xmlns:tools</span>=<span class="string">"http://schemas.android.com/tools"</span></span></span><br><span class="line"><span class="tag"><span class="attr">android:layout_width</span>=<span class="string">"match_parent"</span></span></span><br><span class="line"><span class="tag"><span class="attr">android:layout_height</span>=<span class="string">"match_parent"</span></span></span><br><span class="line"><span class="tag"><span class="attr">android:orientation</span>=<span class="string">"vertical"</span></span></span><br><span class="line"><span class="tag"><span class="attr">tools:context</span>=<span class="string">".MainActivity"</span>&gt;</span></span><br></pre></td></tr></table></figure><ul><li>layout_width와 layout_height 모든 태그에 작성 필수</li><li>id작성규칙 : 영어대소문자와 숫자로 이루어져야함. 실무에서 보통 소문자사용</li></ul><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">TextView</span></span></span><br><span class="line"><span class="tag"><span class="attr">android:id</span>=<span class="string">"@+id/Text1"</span></span></span><br><span class="line"><span class="tag"><span class="attr">android:layout_width</span>=<span class="string">"wrap_content"</span></span></span><br><span class="line"><span class="tag"><span class="attr">android:layout_height</span>=<span class="string">"wrap_content"</span></span></span><br><span class="line"><span class="tag"><span class="attr">android:text</span>=<span class="string">"반려동물 월드컵 시작하시겠습니까?"</span></span></span><br><span class="line"><span class="tag">/&gt;</span></span><br></pre></td></tr></table></figure><h3 id="java-코딩"><a href="#java-코딩" class="headerlink" title=".java 코딩"></a><code>.java</code> 코딩</h3><ul><li>아래 코드는 <code>MainActivity.java</code>이다.</li><li>전역변수 생성 : 태그타입적은 뒤 소문자로 변수명 생성</li><li>view페이지에서 id값 가져올 때 <code>findViewById(R.id.id명)</code>을 사용<ul><li>R은 <a href="https://developer.android.com/reference/android/R?hl=ko">R클래스</a>이다.</li><li><code>findViewById(R.id.id명)</code>로 가져온 건 object타입이다.</li><li>이때 안드로이드스튜디오에서는 casting 불필요하다고 warning이 뜨지만 JAVA파일이므로 java에선 다운캐스팅해줘야한다.</li></ul></li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">MainActivity</span> <span class="keyword">extends</span> <span class="title">AppCompatActivity</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//전역변수</span></span><br><span class="line">    TextView text1, text2;</span><br><span class="line">    CheckBox chkAgree;</span><br><span class="line">    RadioGroup rG1;</span><br><span class="line">    RadioButton dog, cat, rabbit;</span><br><span class="line">    Button btnOk;</span><br><span class="line">    ImageView imgPet;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//r클래스(P102) : R클래스는 개발자가 건들일수없는 코드이다</span></span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">onCreate</span><span class="params">(Bundle savedInstanceState)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">super</span>.onCreate(savedInstanceState);</span><br><span class="line">        setContentView(R.layout.activity_main);</span><br><span class="line">        setTitle(<span class="string">"반려동물 사진보기"</span>);</span><br><span class="line"></span><br><span class="line">        <span class="comment">//findViewById는 object이다</span></span><br><span class="line">        <span class="comment">//안드로이드스튜디오에서는 에러나지만 JAVA에선 다운캐스팅해줘야한다</span></span><br><span class="line">        text1 = (TextView) findViewById(R.id.Text1);</span><br><span class="line">        chkAgree = (CheckBox) findViewById(R.id.ChkAgree);</span><br><span class="line">        text2 = (TextView) findViewById(R.id.Text2);</span><br><span class="line"></span><br><span class="line">(중략)</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="RUN-AVD로-프로젝트-실행-및-결과-확인"><a href="#RUN-AVD로-프로젝트-실행-및-결과-확인" class="headerlink" title="RUN : AVD로 프로젝트 실행 및 결과 확인"></a><code>RUN</code> : AVD로 프로젝트 실행 및 결과 확인</h3><p><br><br><br></p><h2 id="액티비티생명주기-p416"><a href="#액티비티생명주기-p416" class="headerlink" title="액티비티생명주기(p416)"></a>액티비티생명주기(p416)</h2><ul><li>안드로이드 응용 프로그램은 PC용과 달리 화면이 작으므로 동시에 여러 개의 액티비티(화면)가 나올 수 없다.</li><li>하나의 액티비티가 실행중이면 다른 액티비티는 비활성화된다.</li><li>액티비티 생명주기 : 액티비티의 생성부터 소멸까지의 주기</li></ul><p><img src="https://kairo96.gitbooks.io/android/content/pic2/2-4-1-1.jpg" alt=""></p><p><br><br><br></p><h2 id="로그캣"><a href="#로그캣" class="headerlink" title="로그캣"></a>로그캣</h2><ul><li>로그 모은 것을 화면 나타낸다.</li><li>작성 중인 프로그램에 예기치 못한 오류가 발생했을 때 원인을 파악하는 방법 중 하나.</li></ul><p><br><br><br></p><h2 id="이미지파일확장자"><a href="#이미지파일확장자" class="headerlink" title="이미지파일확장자"></a>이미지파일확장자</h2><ul><li>안드로이드에서 가장 빠르게 처리할 수 있는 이미지파일확장자 : png</li></ul><p><br><br><br></p><h2 id="안드로이드-래퍼런스"><a href="#안드로이드-래퍼런스" class="headerlink" title="안드로이드 래퍼런스"></a>안드로이드 래퍼런스</h2><ul><li><a href="https://github.com/futurice/Android-best-practices">Android-best-practices깃헙레포</a></li></ul>]]></content:encoded>
      
      
      <category domain="https://sowon-dev.github.io/categories/Android/">Android</category>
      
      
      <category domain="https://sowon-dev.github.io/tags/TIL/">TIL</category>
      
      <category domain="https://sowon-dev.github.io/tags/ITWILL-JAVA/">ITWILL(JAVA)</category>
      
      
      <comments>https://sowon-dev.github.io/2020/09/09/200909and/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>Servlet상품3: 상품목록·상품리스트</title>
      <link>https://sowon-dev.github.io/2020/09/08/200908jspi/</link>
      <guid>https://sowon-dev.github.io/2020/09/08/200908jspi/</guid>
      <pubDate>Tue, 08 Sep 2020 00:00:00 GMT</pubDate>
      
      <description>&lt;h2 id=&quot;AdminGoodsFrontController-java의-doProcess-의-주소비교-후-처리부분에-코드-추가&quot;&gt;&lt;a href=&quot;#AdminGoodsFrontController-java의-doProcess-의-주소비교-후-처리부분에-코드-추가&quot; class=&quot;headerlink&quot; title=&quot;AdminGoodsFrontController.java의 doProcess()의 주소비교 후 처리부분에 코드 추가&quot;&gt;&lt;/a&gt;&lt;code&gt;AdminGoodsFrontController.java&lt;/code&gt;의 doProcess()의 주소비교 후 처리부분에 코드 추가&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;&lt;code&gt;.ag -&amp;gt; Action_DAO_DB -&amp;gt;.jsp&lt;/code&gt;로 이동하니까 action객체사용</description>
      
      
      
      <content:encoded><![CDATA[<h2 id="AdminGoodsFrontController-java의-doProcess-의-주소비교-후-처리부분에-코드-추가"><a href="#AdminGoodsFrontController-java의-doProcess-의-주소비교-후-처리부분에-코드-추가" class="headerlink" title="AdminGoodsFrontController.java의 doProcess()의 주소비교 후 처리부분에 코드 추가"></a><code>AdminGoodsFrontController.java</code>의 doProcess()의 주소비교 후 처리부분에 코드 추가</h2><ul><li><code>.ag -&gt; Action_DAO_DB -&gt;.jsp</code>로 이동하니까 action객체사용<a id="more"></a></li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//상품목록</span></span><br><span class="line">&#125;<span class="keyword">else</span> <span class="keyword">if</span>(command.equals(<span class="string">"/AdminGoodsList.ag"</span>))&#123;</span><br><span class="line">System.out.println(<span class="string">"C: /AdminGoodsListAction.ag 호출"</span>);</span><br><span class="line"><span class="comment">//.ag -&gt; Action_DAO_DB -&gt;.jsp로 이동</span></span><br><span class="line">action = <span class="keyword">new</span> AdminGoodsListAction();</span><br><span class="line"><span class="keyword">try</span> &#123; forward = action.execute(request, response);</span><br><span class="line">&#125; <span class="keyword">catch</span> (Exception e) &#123; e.printStackTrace(); &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><br><br><br></p><h2 id="AdminGoodsListAction-java-생성"><a href="#AdminGoodsListAction-java-생성" class="headerlink" title="AdminGoodsListAction.java 생성"></a><code>AdminGoodsListAction.java</code> 생성</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">AdminGoodsListAction</span> <span class="keyword">implements</span> <span class="title">Action</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> ActionForward <span class="title">execute</span><span class="params">(HttpServletRequest request, HttpServletResponse response)</span> </span></span><br><span class="line"><span class="function"><span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line">System.out.println(<span class="string">"M : AdminGoodsListAction의 execute() 호출"</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">//관리자계정확인(세션 ID)</span></span><br><span class="line">HttpSession session = request.getSession();</span><br><span class="line">String id = (String)session.getAttribute(<span class="string">"id"</span>);</span><br><span class="line">ActionForward forward = <span class="keyword">new</span> ActionForward();</span><br><span class="line"><span class="keyword">if</span>(id == <span class="keyword">null</span> || !id.equals(<span class="string">"admin"</span>))&#123;</span><br><span class="line"><span class="comment">//response.sendRedirect("./Main.me"); 컨트롤러통해서 이동시키기</span></span><br><span class="line">forward.setPath(<span class="string">"./Main.me"</span>);</span><br><span class="line">forward.setRedirect(<span class="keyword">true</span>);</span><br><span class="line"><span class="keyword">return</span> forward;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//AdminGoodsDAO객체 생성 후 getGoodsList()생성</span></span><br><span class="line">AdminGoodsDAO agdao = <span class="keyword">new</span> AdminGoodsDAO();</span><br><span class="line">List&lt;GoodsDTO&gt; goodsList = agdao.getGoodsList();;</span><br><span class="line"></span><br><span class="line"><span class="comment">//등록된 상품 목록 전부 가져오기</span></span><br><span class="line">System.out.println(<span class="string">"M : "</span>+goodsList);</span><br><span class="line"></span><br><span class="line"><span class="comment">//requset영역에 저장</span></span><br><span class="line">request.setAttribute(<span class="string">"goodsList"</span>, goodsList);</span><br><span class="line"></span><br><span class="line"><span class="comment">//페이지이동(뷰페이지로이동)</span></span><br><span class="line">forward.setPath(<span class="string">"./admingoods/admin_goods_list.jsp"</span>);</span><br><span class="line">forward.setRedirect(<span class="keyword">false</span>);</span><br><span class="line"><span class="keyword">return</span> forward;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><br><br><br></p><h2 id="admin-goods-list-jsp-생성"><a href="#admin-goods-list-jsp-생성" class="headerlink" title="admin_goods_list.jsp 생성"></a><code>admin_goods_list.jsp</code> 생성</h2><ul><li><p>관리자만 페이지 볼 수 있게 하려면</p><ul><li>session을 활용하여 코드를 작성하면 된다<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">String id = (String) session.getAttribute(<span class="string">"id"</span>);</span><br><span class="line"><span class="keyword">if</span>(!id.equals(<span class="string">"admin"</span>))&#123;</span><br><span class="line">response.sendRedirect(<span class="string">"./MemberLogin.me"</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul></li><li><p>전체코드</p></li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br></pre></td><td class="code"><pre><span class="line"> <span class="tag">&lt;<span class="name">%</span></span></span><br><span class="line"><span class="tag">// <span class="attr">request</span> 영역에 저장</span></span><br><span class="line"><span class="tag">//<span class="attr">request.setAttribute</span>("<span class="attr">goodsList</span>", <span class="attr">goodsList</span>);</span></span><br><span class="line"><span class="tag">// <span class="attr">request</span>영역에서 정보를 꺼내서 테이블에 추가 </span></span><br><span class="line">List&lt;GoodsDTO&gt; goodsList = (List&lt;GoodsDTO&gt;)request.getAttribute("goodsList"); //object-&gt;list타입 캐스팅</span><br><span class="line">//관리자만 페이지 볼 수 있게 추가</span><br><span class="line">String id = (String) session.getAttribute("id");</span><br><span class="line">if(id == null || !id.equals("admin"))&#123;</span><br><span class="line">response.sendRedirect("./Main.me");</span><br><span class="line">&#125;</span><br><span class="line"> %&gt;</span><br><span class="line"><span class="tag">&lt;<span class="name">fieldset</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">legend</span>&gt;</span>관리자용 상품등록<span class="tag">&lt;/<span class="name">legend</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">table</span> <span class="attr">border</span>=<span class="string">"1"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">td</span>&gt;</span>번호<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">td</span>&gt;</span>카테고리<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">td</span>&gt;</span>사진<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">td</span>&gt;</span>상품명<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">td</span>&gt;</span>가격<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">td</span>&gt;</span>수량<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">td</span>&gt;</span>등록일<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">td</span>&gt;</span>수정·삭제<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">%</span></span></span><br><span class="line"><span class="tag"> //<span class="attr">List</span>는 가변배열이므로 <span class="attr">length</span>가 없고 <span class="attr">size</span>가 존재한다<span class="attr">.</span></span></span><br><span class="line"><span class="tag"> //<span class="attr">size</span>()메서드는 배열의 요소의 갯수를 리턴</span></span><br><span class="line"> for(int i=0; i&lt;goodsList.size(); i++)&#123;</span><br><span class="line">//List 한칸의 정보 -&gt; GoodsDTO 객체 하나로 이동</span><br><span class="line">GoodsDTO gdto = (GoodsDTO) goodsList.get(i);</span><br><span class="line">%&gt;</span><br><span class="line"><span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">td</span>&gt;</span><span class="tag">&lt;<span class="name">%=gdto.getGno()</span> %&gt;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">td</span>&gt;</span><span class="tag">&lt;<span class="name">%=gdto.getCategory()</span> %&gt;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">td</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">"./upload/&lt;%=gdto.getImage().split("</span>,")[<span class="attr">0</span>]%&gt;</span>" height="100"&gt;</span><br><span class="line"><span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">td</span>&gt;</span><span class="tag">&lt;<span class="name">%=gdto.getName()</span> %&gt;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">td</span>&gt;</span><span class="tag">&lt;<span class="name">%=gdto.getPrice()</span> %&gt;</span>원<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">td</span>&gt;</span><span class="tag">&lt;<span class="name">%=gdto.getAmount()</span> %&gt;</span>개<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">td</span>&gt;</span><span class="tag">&lt;<span class="name">%=gdto.getDate()</span> %&gt;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">td</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"button"</span> <span class="attr">class</span>=<span class="string">"btn"</span> <span class="attr">value</span>=<span class="string">"수정"</span> </span></span><br><span class="line"><span class="tag"><span class="attr">onclick</span>=<span class="string">"location.href='./AdminGoodsModify.ag?gno=&lt;%=gdto.getGno()%&gt;'"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"button"</span> <span class="attr">class</span>=<span class="string">"btn"</span> <span class="attr">value</span>=<span class="string">"삭제"</span></span></span><br><span class="line"><span class="tag"><span class="attr">onclick</span>=<span class="string">"location.href='./AdminGoodsDeleteAction.ag?gno=&lt;%=gdto.getGno()%&gt;'"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">%</span></span></span><br><span class="line"><span class="tag">&#125;</span></span><br><span class="line"><span class="tag">%&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">table</span>&gt;</span> </span><br><span class="line"><span class="tag">&lt;/<span class="name">fieldset</span>&gt;</span></span><br></pre></td></tr></table></figure><p><br><br><br></p><h2 id="AdminGoodsDAO-java-생성-후-getGoodsList-메서드-코드-추가"><a href="#AdminGoodsDAO-java-생성-후-getGoodsList-메서드-코드-추가" class="headerlink" title="AdminGoodsDAO.java 생성 후 getGoodsList()메서드 코드 추가"></a><code>AdminGoodsDAO.java</code> 생성 후 getGoodsList()메서드 코드 추가</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//상품목록</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> List&lt;GoodsDTO&gt; <span class="title">getGoodsList</span><span class="params">()</span> </span>&#123;</span><br><span class="line">List&lt;GoodsDTO&gt; goodsList = <span class="keyword">new</span> ArrayList&lt;GoodsDTO&gt;();</span><br><span class="line"><span class="keyword">try</span> &#123;</span><br><span class="line">getCon();</span><br><span class="line">sql = <span class="string">"select * from itwill_goods"</span>;</span><br><span class="line">pstmt = con.prepareStatement(sql);</span><br><span class="line">rs = pstmt.executeQuery();</span><br><span class="line"><span class="keyword">while</span>(rs.next())&#123;</span><br><span class="line">GoodsDTO gdto = <span class="keyword">new</span> GoodsDTO();</span><br><span class="line">gdto.setGno(rs.getInt(<span class="string">"gno"</span>));</span><br><span class="line">gdto.setCategory(rs.getString(<span class="string">"category"</span>));</span><br><span class="line">gdto.setName(rs.getString(<span class="string">"name"</span>));</span><br><span class="line">gdto.setPrice(rs.getInt(<span class="string">"price"</span>));</span><br><span class="line">gdto.setColor(rs.getString(<span class="string">"color"</span>));</span><br><span class="line"></span><br><span class="line">gdto.setAmount(rs.getInt(<span class="string">"amount"</span>));</span><br><span class="line">gdto.setSize(rs.getString(<span class="string">"size"</span>));</span><br><span class="line">gdto.setContent(rs.getString(<span class="string">"content"</span>));</span><br><span class="line">gdto.setImage(rs.getString(<span class="string">"image"</span>));</span><br><span class="line">gdto.setBest(rs.getInt(<span class="string">"best"</span>));</span><br><span class="line"></span><br><span class="line">gdto.setDate(rs.getDate(<span class="string">"date"</span>));</span><br><span class="line"></span><br><span class="line">goodsList.add(gdto);</span><br><span class="line">&#125;</span><br><span class="line">System.out.println(<span class="string">"DAO : 상품목록 모두 저장완료! "</span>+goodsList);</span><br><span class="line">&#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">e.printStackTrace();</span><br><span class="line">&#125; <span class="keyword">finally</span> &#123;</span><br><span class="line">closeDB();</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> goodsList;</span><br><span class="line">&#125;<span class="comment">//end of getGoodsList()</span></span><br></pre></td></tr></table></figure>]]></content:encoded>
      
      
      <category domain="https://sowon-dev.github.io/categories/JSP/">JSP</category>
      
      
      <category domain="https://sowon-dev.github.io/tags/TIL/">TIL</category>
      
      <category domain="https://sowon-dev.github.io/tags/ITWILL-JAVA/">ITWILL(JAVA)</category>
      
      
      <comments>https://sowon-dev.github.io/2020/09/08/200908jspi/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>[ITWILL : JAVA] JAVA전체목록List</title>
      <link>https://sowon-dev.github.io/2020/09/08/javaList/</link>
      <guid>https://sowon-dev.github.io/2020/09/08/javaList/</guid>
      <pubDate>Tue, 08 Sep 2020 00:00:00 GMT</pubDate>
      
      <description>&lt;h2 id=&quot;🌳자바기초&quot;&gt;&lt;a href=&quot;#🌳자바기초&quot; class=&quot;headerlink&quot; title=&quot;🌳자바기초&quot;&gt;&lt;/a&gt;🌳자바기초&lt;/h2&gt;&lt;ol&gt;
&lt;li&gt;&lt;a href=&quot;https://sowon-dev.github.io/2020/05/28/200528javai/&quot;&gt;컴퓨터와 자바 기초이론&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://sowon-dev.github.io/2020/06/03/200603javai/&quot;&gt;자바접근자 public과 private, 자바 데이터 형태, 모든 연산자들, A++과 ++A의 차이, (조건)? TRUE:FALSE&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://sowon-dev.github.io/2020/06/04/200604javai/&quot;&gt;Scanner라이브러리와 equals()를 이용한 사칙연산계산기, if문과 switch문 변환 예시, 반복문과 break&lt;/a&gt;</description>
      
      
      
      <content:encoded><![CDATA[<h2 id="🌳자바기초"><a href="#🌳자바기초" class="headerlink" title="🌳자바기초"></a>🌳자바기초</h2><ol><li><a href="https://sowon-dev.github.io/2020/05/28/200528javai/">컴퓨터와 자바 기초이론</a></li><li><a href="https://sowon-dev.github.io/2020/06/03/200603javai/">자바접근자 public과 private, 자바 데이터 형태, 모든 연산자들, A++과 ++A의 차이, (조건)? TRUE:FALSE</a></li><li><a href="https://sowon-dev.github.io/2020/06/04/200604javai/">Scanner라이브러리와 equals()를 이용한 사칙연산계산기, if문과 switch문 변환 예시, 반복문과 break</a><a id="more"></a></li><li><a href="https://sowon-dev.github.io/2020/06/08/200608javai/">Method, 변수와 상수, 배열 Array, new키워드</a></li><li><a href="https://sowon-dev.github.io/2020/06/10/200610javai/">기본 반복문암기, String인지 체크(typeof), N개의 양수를 받아 최대값 출력, char와 String의 차이점 산술연산자</a></li><li><a href="https://sowon-dev.github.io/2020/06/11/200611javai/">리터럴(literal), byte + byte가 왜 에러날까, int VS Integer,  void와 int차이</a></li><li><a href="https://sowon-dev.github.io/2020/06/17/200617javai/">비트연산자, 이진수와 십진수 변환</a></li><li><a href="https://sowon-dev.github.io/2020/06/18/200618javai/">자바포맷스트링, Random 숫자 뽑기, 상황별 반복문 추천(for, while, do~while)</a></li><li><a href="https://sowon-dev.github.io/2020/06/22/200622javai/">369게임만들기</a></li><li><a href="https://sowon-dev.github.io/2020/06/24/200624javai/">배열과 함께쓰는 메서드</a></li></ol><h2 id="🌳클래스"><a href="#🌳클래스" class="headerlink" title="🌳클래스"></a>🌳클래스</h2><ol><li><a href="https://sowon-dev.github.io/2020/06/25/200625javai/">객체지향언어, 클래스 : 멤버변수vs지역변수</a></li><li><a href="https://sowon-dev.github.io/2020/06/25/200625jjava2/">클래스 : 메서드, 객체생성(객체화 = 인스턴스화), 오버로딩(overloading)</a></li><li><a href="https://sowon-dev.github.io/2020/07/01/200701javai/">클래스 : 생성자, new역할, this키워드용법</a></li><li><a href="https://sowon-dev.github.io/2020/07/02/200702javai/">클래스 : 매개변수위치에 따른 차이(생성자 vs 메서드), private멤버변수 getter와 setter로 가져다쓰기</a></li><li><a href="https://sowon-dev.github.io/2020/07/06/200706javai/">클래스 : 상속, 메서드 오버라이딩, super()</a></li><li><a href="https://sowon-dev.github.io/2020/07/08/200708javai/">클래스 : 다형성(Polymorphism)</a></li><li><a href="https://sowon-dev.github.io/2020/07/09/200709javai/">클래스 : 패키지, 임포트, 접근제어자, 데이터 은닉과 보호, 싱글턴디자인패턴</a></li></ol><h2 id="🌳기본클래스-이외에-자바-구성요소"><a href="#🌳기본클래스-이외에-자바-구성요소" class="headerlink" title="🌳기본클래스 이외에 자바 구성요소"></a>🌳기본클래스 이외에 자바 구성요소</h2><ol><li><a href="https://sowon-dev.github.io/2020/07/15/200715javai/">기본클래스 이외에 자바 구성요소1 : 추상클래스, 인터페이스</a></li><li><a href="https://sowon-dev.github.io/2020/07/20/200720javai/">기본클래스 이외에 자바 구성요소2 : enum</a></li><li><a href="https://sowon-dev.github.io/2020/07/20/200720javai2/">기본클래스 이외에 자바 구성요소3 : annotation, generic</a></li></ol><h2 id="🌳자바개념"><a href="#🌳자바개념" class="headerlink" title="🌳자바개념"></a>🌳자바개념</h2><ol><li><a href="https://sowon-dev.github.io/2020/07/22/200722javai/">예외처리</a></li><li><a href="https://sowon-dev.github.io/2020/07/23/200723javai/">로깅, 디버깅</a></li><li><a href="https://sowon-dev.github.io/2020/07/23/200723javai2/">내부클래스</a></li><li><a href="https://sowon-dev.github.io/2020/07/30/200730javai/">람다식개념, 인터페이스 Comparator</a></li><li><a href="https://sowon-dev.github.io/2020/07/31/200731javai/">람다식을 이용한 함수형 프로그래밍1 : 계열</a></li><li><a href="https://sowon-dev.github.io/2020/08/03/200803javai/">람다식을 이용한 함수형 프로그래밍2 : 메서드</a></li></ol><h2 id="🌳java-lang패키지"><a href="#🌳java-lang패키지" class="headerlink" title="🌳java.lang패키지"></a>🌳java.lang패키지</h2><ol><li><a href="https://sowon-dev.github.io/2020/08/03/200803javai2/">java.lang패키지1 : Object클래스의 메서드(equals(), hashcode(), clone(), getClass()</a></li><li><a href="https://sowon-dev.github.io/2020/08/03/200803javai3/">java.lang패키지2 : System클래스의 메서드</a></li><li><a href="https://sowon-dev.github.io/2020/08/05/200805javai/">java.lang패키지3 : String클래스의 메서드, StringBuffer와 StringBuilder 클래스의 메서드</a></li><li><a href="https://sowon-dev.github.io/2020/08/05/200805javai2/">java.lang패키지4 : Math클래스, Wapper클래스</a></li></ol><h2 id="🌳유용한-클래스"><a href="#🌳유용한-클래스" class="headerlink" title="🌳유용한 클래스"></a>🌳유용한 클래스</h2><ol><li><a href="https://sowon-dev.github.io/2020/08/06/200806javai/">날짜 및 시간 처리하는 클래스의 변천사</a></li><li><a href="https://sowon-dev.github.io/2020/08/10/200810javai/">포맷팅클래스 : StringTokenizer, DecimalFormat, SimpleDateFormat, MessageFormat</a></li><li><a href="https://sowon-dev.github.io/2020/08/10/200810javai2/">정규표현식, 자주 사용하는 정규식</a></li><li><a href="https://sowon-dev.github.io/2020/08/10/200810javai3/">숫자처리클래스 : java.util.Random, java.math.BigInteger, java.math.BigDecimal</a></li></ol><h2 id="🌳컬렉션-프레임워크"><a href="#🌳컬렉션-프레임워크" class="headerlink" title="🌳컬렉션 프레임워크"></a>🌳컬렉션 프레임워크</h2><ol><li><a href="https://sowon-dev.github.io/2020/08/12/200812javai/">컬렉션 프레임워크1: Set과 List계열 예시위주</a></li><li><a href="https://sowon-dev.github.io/2020/08/13/200813javai/">컬렉션 프레임워크2: Map계열 자세히, 예시</a></li></ol><h2 id="🌳I-O"><a href="#🌳I-O" class="headerlink" title="🌳I/O"></a>🌳I/O</h2><ol><li><a href="https://sowon-dev.github.io/2020/08/17/200817javai/">I/O1: 스트림개념, 노드스트림</a></li><li><a href="https://sowon-dev.github.io/2020/08/17/200817javai2/">I/O2: 노드스트림 - 파일기반 입/출력처리</a></li><li><a href="https://sowon-dev.github.io/2020/08/18/200818javai/">I/O3: 보조스트림</a></li><li><a href="https://sowon-dev.github.io/2020/08/18/200818javai2/">I/O3: NIO</a></li></ol><h2 id="🌳멀티스레드-프로그래밍"><a href="#🌳멀티스레드-프로그래밍" class="headerlink" title="🌳멀티스레드 프로그래밍"></a>🌳멀티스레드 프로그래밍</h2><ol><li><a href="https://sowon-dev.github.io/2020/08/20/200820javai/">멀티스레드프로그래밍1 : 멀티스레드프로그래밍1 : 개념, 용어정리, 스래드 상태와 제어</a></li><li><a href="https://sowon-dev.github.io/2020/08/26/200826javai/">멀티스레드프로그래밍2 : 풍선게임</a></li><li><a href="https://sowon-dev.github.io/2020/08/26/200826javai2/">멀티스레드프로그래밍3 : 멀티스레드의 문제점과 해결</a></li><li><a href="https://sowon-dev.github.io/2020/08/27/200827javai/">멀티스레드프로그래밍4 : 스레드 풀을 활용한 구구단</a></li></ol><h2 id="🌳스트림-API"><a href="#🌳스트림-API" class="headerlink" title="🌳스트림 API"></a>🌳스트림 API</h2><ol><li><a href="https://sowon-dev.github.io/2020/08/27/200827javai2/">스트림 API 개념</a></li></ol>]]></content:encoded>
      
      
      <category domain="https://sowon-dev.github.io/categories/JAVA/">JAVA</category>
      
      
      <category domain="https://sowon-dev.github.io/tags/ITWILL-JAVA/">ITWILL(JAVA)</category>
      
      <category domain="https://sowon-dev.github.io/tags/List/">List</category>
      
      
      <comments>https://sowon-dev.github.io/2020/09/08/javaList/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>Servlet상품2: 상품등록</title>
      <link>https://sowon-dev.github.io/2020/09/07/200907jspi5/</link>
      <guid>https://sowon-dev.github.io/2020/09/07/200907jspi5/</guid>
      <pubDate>Mon, 07 Sep 2020 00:00:00 GMT</pubDate>
      
      <description>&lt;h2 id=&quot;AdminGoodsFrontController-java의-doProcess-의-주소비교-후-처리부분에-코드-추가&quot;&gt;&lt;a href=&quot;#AdminGoodsFrontController-java의-doProcess-의-주소비교-후-처리부분에-코드-추가&quot; class=&quot;headerlink&quot; title=&quot;AdminGoodsFrontController.java의 doProcess()의 주소비교 후 처리부분에 코드 추가&quot;&gt;&lt;/a&gt;&lt;code&gt;AdminGoodsFrontController.java&lt;/code&gt;의 doProcess()의 주소비교 후 처리부분에 코드 추가&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;컨트롤러(&lt;code&gt;.ag&lt;/code&gt;) -&amp;gt; 뷰페이지(&lt;code&gt;.jsp&lt;/code&gt;)로 이동 : forward 사용&lt;/li&gt;
&lt;li&gt;&lt;code&gt;.ag&lt;/code&gt; -&amp;gt; 디비(Action_DAO_DB) -&amp;gt; &lt;code&gt;.jsp&lt;/code&gt;로 이동 : Action사용</description>
      
      
      
      <content:encoded><![CDATA[<h2 id="AdminGoodsFrontController-java의-doProcess-의-주소비교-후-처리부분에-코드-추가"><a href="#AdminGoodsFrontController-java의-doProcess-의-주소비교-후-처리부분에-코드-추가" class="headerlink" title="AdminGoodsFrontController.java의 doProcess()의 주소비교 후 처리부분에 코드 추가"></a><code>AdminGoodsFrontController.java</code>의 doProcess()의 주소비교 후 처리부분에 코드 추가</h2><ul><li>컨트롤러(<code>.ag</code>) -&gt; 뷰페이지(<code>.jsp</code>)로 이동 : forward 사용</li><li><code>.ag</code> -&gt; 디비(Action_DAO_DB) -&gt; <code>.jsp</code>로 이동 : Action사용<a id="more"></a></li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">System.out.println(<span class="string">"--------------@ 주소 비교후 처리 @-------------"</span>);</span><br><span class="line">Action action = <span class="keyword">null</span>;</span><br><span class="line">ActionForward forward = <span class="keyword">null</span>;</span><br><span class="line"><span class="comment">// 주소에 따른 처리 구분 (주소 매핑후 이동)</span></span><br><span class="line"><span class="keyword">if</span>(command.equals(<span class="string">"/GoodsAdd.ag"</span>))&#123;</span><br><span class="line">System.out.println(<span class="string">"C: /GoodsAdd.ag 호출"</span>);</span><br><span class="line"><span class="comment">//.ag -&gt; .jsp로 이동</span></span><br><span class="line"><span class="comment">//컨트롤러 -&gt; 뷰페이지 이동</span></span><br><span class="line">forward = <span class="keyword">new</span> ActionForward();</span><br><span class="line">forward.setPath(<span class="string">"./admingoods/admin_goods_write.jsp"</span>);</span><br><span class="line">forward.setRedirect(<span class="keyword">false</span>);</span><br><span class="line">&#125;<span class="keyword">else</span> <span class="keyword">if</span>(command.equals(<span class="string">"/GoodsAddAction.ag"</span>))&#123;</span><br><span class="line">System.out.println(<span class="string">"C: /GoodsAddAction.ag 호출"</span>);</span><br><span class="line"><span class="comment">// .ag -&gt; Action_DAO_DB -&gt; .jsp</span></span><br><span class="line">action = <span class="keyword">new</span> GoodsAddAction();</span><br><span class="line"><span class="keyword">try</span> &#123; forward = action.execute(request, response);</span><br><span class="line">&#125; <span class="keyword">catch</span> (Exception e) &#123; e.printStackTrace(); &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><br><br><br></p><h2 id="GoodsAddAction-java-생성"><a href="#GoodsAddAction-java-생성" class="headerlink" title="GoodsAddAction.java 생성"></a><code>GoodsAddAction.java</code> 생성</h2><ol><li>파일 업로드 준비 : multipart객체생성<ol><li><code>./upload</code>폴더생성 for 가상경로</li><li>파일이 저장되는 실제위치 : request.getRealPath는 deprecated이므로 context.getRealPath()사용 할 것</li></ol></li><li>크기 : 10MB (크기가 클수록 서버에는 부담)</li><li>multipart객체생성</li><li>상품정보를 저장(파라미터)</li><li>GoodsDTO 객체 생성</li><li>AdminGoodsDAO 객체생성 -&gt; insertGoods()메서드 생성</li></ol><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">GoodsAddAction</span> <span class="keyword">implements</span> <span class="title">Action</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> ActionForward <span class="title">execute</span><span class="params">(HttpServletRequest request, HttpServletResponse response)</span> </span></span><br><span class="line"><span class="function"><span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line">System.out.println(<span class="string">"M : GoodsAddAction의 execute() 호출"</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">//1. 파일 업로드 준비 : multipart객체생성과 </span></span><br><span class="line"><span class="comment">//1-1. `./upload`폴더생성 for 가상경로</span></span><br><span class="line"><span class="comment">//1-2. 파일이 저장되는 실제위치 : request.getRealPath는 deprecated이므로 context.getRealPath()사용 할 것</span></span><br><span class="line">ServletContext context = request.getServletContext();</span><br><span class="line">String realpath = context.getRealPath(<span class="string">"/upload"</span>);</span><br><span class="line">System.out.println(<span class="string">"realpath: "</span>+realpath);</span><br><span class="line"><span class="comment">//2. 크기 : 10MB (크기가 클수록 서버에는 부담)</span></span><br><span class="line"><span class="keyword">int</span> maxSize = <span class="number">10</span> * <span class="number">1024</span> * <span class="number">1024</span>; </span><br><span class="line"></span><br><span class="line"><span class="comment">//3. multipart객체생성</span></span><br><span class="line">MultipartRequest multi = <span class="keyword">new</span> MultipartRequest(</span><br><span class="line">request, realpath, maxSize, <span class="string">"UTF-8"</span>, <span class="keyword">new</span> DefaultFileRenamePolicy()</span><br><span class="line">);</span><br><span class="line">System.out.println(<span class="string">"M : 파일업로드완료"</span>+multi);</span><br><span class="line"></span><br><span class="line"><span class="comment">//4. 상품정보를 저장(파라미터) = GoodsDTO 객체 생성, DBMS에 테이블 생성</span></span><br><span class="line">GoodsDTO gdto = <span class="keyword">new</span> GoodsDTO();</span><br><span class="line">gdto.setCategory(multi.getParameter(<span class="string">"category"</span>));</span><br><span class="line">gdto.setName(multi.getParameter(<span class="string">"name"</span>));</span><br><span class="line">gdto.setPrice(Integer.parseInt(multi.getParameter(<span class="string">"price"</span>)));</span><br><span class="line">gdto.setColor(multi.getParameter(<span class="string">"color"</span>));</span><br><span class="line">gdto.setAmount(Integer.parseInt(multi.getParameter(<span class="string">"amount"</span>)));</span><br><span class="line">gdto.setSize(multi.getParameter(<span class="string">"size"</span>));</span><br><span class="line">gdto.setContent(multi.getParameter(<span class="string">"content"</span>));</span><br><span class="line">gdto.setBest(<span class="number">0</span>); <span class="comment">//0인경우:일반상품, 1인경우:인기상품</span></span><br><span class="line"><span class="comment">//4-1. 이미지정보처리</span></span><br><span class="line">String img = multi.getFilesystemName(<span class="string">"file1"</span>)+<span class="string">","</span></span><br><span class="line">+ multi.getFilesystemName(<span class="string">"file2"</span>)+<span class="string">","</span></span><br><span class="line">+ multi.getFilesystemName(<span class="string">"file3"</span>)+<span class="string">","</span></span><br><span class="line">+ multi.getFilesystemName(<span class="string">"file4"</span>);</span><br><span class="line">System.out.println(<span class="string">"img 4개합: "</span>+img);</span><br><span class="line">gdto.setImage(img);</span><br><span class="line"></span><br><span class="line"><span class="comment">//5. AdminGoodsDAO 객체생성 -&gt; insertGoods()메서드 생성</span></span><br><span class="line">AdminGoodsDAO agdao = <span class="keyword">new</span> AdminGoodsDAO();</span><br><span class="line">agdao.insertGoods(gdto);</span><br><span class="line"></span><br><span class="line"><span class="comment">//6. 페이지 이동</span></span><br><span class="line">ActionForward forward = <span class="keyword">new</span> ActionForward();</span><br><span class="line">forward.setPath(<span class="string">"./AdminGoodsList.ag"</span>);</span><br><span class="line">forward.setRedirect(<span class="keyword">true</span>);</span><br><span class="line"><span class="keyword">return</span> forward;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><br><br><br></p><h2 id="admin-goods-write-jsp-생성"><a href="#admin-goods-write-jsp-생성" class="headerlink" title="admin_goods_write.jsp 생성"></a><code>admin_goods_write.jsp</code> 생성</h2><ul><li>반드시 post방식을 써야하는 이유 : file업로드를 할 것이기때문에 필수이다.<ul><li>input태그 속성으로 file을 사용했다면 폼태그 속성으로 <code>method=&quot;post&quot; enctype=&quot;multipart/form-data&quot;</code> 필수!</li></ul></li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">%</span></span></span><br><span class="line"><span class="tag">//관리자만 페이지 볼 수 있게 추가</span></span><br><span class="line"><span class="tag"><span class="attr">String</span> <span class="attr">id</span> = <span class="string">(String)</span> <span class="attr">session.getAttribute</span>("<span class="attr">id</span>");</span></span><br><span class="line"><span class="tag"><span class="attr">if</span>(<span class="attr">id</span> == <span class="string">null</span> || !<span class="attr">id.equals</span>("<span class="attr">admin</span>"))&#123;</span></span><br><span class="line"><span class="tag"><span class="attr">response.sendRedirect</span>("<span class="attr">.</span>/<span class="attr">Main.me</span>");</span></span><br><span class="line"><span class="tag">&#125;</span></span><br><span class="line"><span class="tag">%&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">fieldset</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">legend</span>&gt;</span>상품등록<span class="tag">&lt;/<span class="name">legend</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">form</span> <span class="attr">action</span>=<span class="string">""</span> <span class="attr">method</span>=<span class="string">"post"</span> <span class="attr">name</span>=<span class="string">"fr"</span>&gt;</span></span><br><span class="line"> <span class="tag">&lt;<span class="name">table</span> <span class="attr">border</span>=<span class="string">"1"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">td</span>&gt;</span>카테고리<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">td</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">select</span> <span class="attr">name</span>=<span class="string">"category"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">"outwear"</span>&gt;</span>아우터<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">"fulldress"</span>&gt;</span>정장<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">"Tshirts"</span>&gt;</span>티셔츠<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">"shirts"</span>&gt;</span>셔츠<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">"pants"</span>&gt;</span>바지<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">"shoes"</span>&gt;</span>신발<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">td</span>&gt;</span>상품이름<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">td</span>&gt;</span><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"text"</span> <span class="attr">name</span>=<span class="string">"name"</span>&gt;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">td</span>&gt;</span>판매가격<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">td</span>&gt;</span><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"text"</span> <span class="attr">name</span>=<span class="string">"price"</span>&gt;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">td</span>&gt;</span>색상<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">td</span>&gt;</span><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"text"</span> <span class="attr">name</span>=<span class="string">"color"</span>&gt;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">td</span>&gt;</span>수량<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">td</span>&gt;</span><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"text"</span> <span class="attr">name</span>=<span class="string">"amount"</span>&gt;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">td</span>&gt;</span>사이즈<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">td</span>&gt;</span><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"text"</span> <span class="attr">name</span>=<span class="string">"size"</span>&gt;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">td</span>&gt;</span>제품정보<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">td</span>&gt;</span><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"text"</span> <span class="attr">name</span>=<span class="string">"content"</span>&gt;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">td</span>&gt;</span>메인이미지<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">td</span>&gt;</span><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"file"</span> <span class="attr">name</span>=<span class="string">"file1"</span>&gt;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">td</span>&gt;</span>제품이미지1<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">td</span>&gt;</span><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"file"</span> <span class="attr">name</span>=<span class="string">"file2"</span>&gt;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">td</span>&gt;</span>제품이미지2<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">td</span>&gt;</span><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"file"</span> <span class="attr">name</span>=<span class="string">"file3"</span>&gt;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">td</span>&gt;</span>제품이미지3<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">td</span>&gt;</span><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"file"</span> <span class="attr">name</span>=<span class="string">"file4"</span>&gt;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">td</span> <span class="attr">colspan</span>=<span class="string">"2"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"submit"</span> <span class="attr">value</span>=<span class="string">"상품등록"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"reset"</span> <span class="attr">value</span>=<span class="string">"상품등록취소"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">table</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">fieldset</span>&gt;</span></span><br></pre></td></tr></table></figure><p><br><br><br></p><h2 id="GoodsDTO-java-생성-후-코드-추가"><a href="#GoodsDTO-java-생성-후-코드-추가" class="headerlink" title="GoodsDTO.java 생성 후 코드 추가"></a><code>GoodsDTO.java</code> 생성 후 코드 추가</h2><ul><li>adminDTO가 아닌 GoodsDTO를 생성 하는 이유는? <ul><li>관리자가 등록하는 상품과 구매자가 보는 상품이 같기때문에, 관리자상품과 사용자상품으로 나눠서 중복으로 DTO를 생성할 필요가 없다.</li></ul></li><li>DBMS에 테이블 생성</li></ul><p><img src="/img/200908jsp.PNG" alt=""></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">GoodsDTO</span> </span>&#123;</span><br><span class="line"><span class="comment">//1번규칙만족 : 클래스는 public</span></span><br><span class="line"><span class="comment">//2번규칙만족 : 멤버변수선언 private</span></span><br><span class="line"><span class="keyword">private</span> <span class="keyword">int</span> gno;</span><br><span class="line"><span class="keyword">private</span> String category;</span><br><span class="line"><span class="keyword">private</span> String name;</span><br><span class="line"><span class="keyword">private</span> <span class="keyword">int</span> price;</span><br><span class="line"><span class="keyword">private</span> String color;</span><br><span class="line"><span class="keyword">private</span> <span class="keyword">int</span> amount;</span><br><span class="line"><span class="keyword">private</span> String size;</span><br><span class="line"><span class="keyword">private</span> String content;</span><br><span class="line"><span class="keyword">private</span> String image;</span><br><span class="line"><span class="keyword">private</span> <span class="keyword">int</span> best;</span><br><span class="line"><span class="keyword">private</span> Date date;</span><br><span class="line"></span><br><span class="line"><span class="comment">//4번규칙만족 : 기본생성자존재하지만 생략됨</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//3번규칙만족 : 멤버변수마다 별도의 get/set메소드가 존재해야한다.</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">getGno</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="keyword">return</span> gno;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setGno</span><span class="params">(<span class="keyword">int</span> gno)</span> </span>&#123;</span><br><span class="line"><span class="keyword">this</span>.gno = gno;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">중략</span><br><span class="line"></span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> String <span class="title">toString</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="keyword">return</span> <span class="string">"GoodsDTO [gno="</span> + gno + <span class="string">", category="</span> + category + <span class="string">", name="</span> + name + <span class="string">", price="</span> + price + <span class="string">", color="</span></span><br><span class="line">+ color + <span class="string">", amount="</span> + amount + <span class="string">", size="</span> + size + <span class="string">", content="</span> + content + <span class="string">", image="</span> + image</span><br><span class="line">+ <span class="string">", best="</span> + best + <span class="string">", date="</span> + date + <span class="string">"]"</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><br><br><br></p><h2 id="AdminGoodsDAO-java-생성-후-insertGoods-메서드-코드-추가"><a href="#AdminGoodsDAO-java-생성-후-insertGoods-메서드-코드-추가" class="headerlink" title="AdminGoodsDAO.java 생성 후 insertGoods()메서드 코드 추가"></a><code>AdminGoodsDAO.java</code> 생성 후 insertGoods()메서드 코드 추가</h2><ul><li>DB연결 메서드인 getCon()구현</li><li>자원해제 메서드인 closeDB()구현</li><li>insertGoods()구현</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//상품등록</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">insertGoods</span><span class="params">(GoodsDTO gdto)</span> </span>&#123;</span><br><span class="line"><span class="keyword">int</span> num = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">try</span>&#123;</span><br><span class="line">getCon();</span><br><span class="line"><span class="comment">//1. 상품등록번호계산</span></span><br><span class="line">sql = <span class="string">"select max(gno) from itwill_goods"</span>;</span><br><span class="line">pstmt = con.prepareStatement(sql);</span><br><span class="line">rs = pstmt.executeQuery();</span><br><span class="line"><span class="keyword">if</span>(rs.next())&#123;</span><br><span class="line">num = rs.getInt(<span class="number">1</span>)+<span class="number">1</span>; <span class="comment">//인덱스 사용 호출</span></span><br><span class="line"><span class="comment">//rs.getInt("max(bno)"); // 컬럼명 사용 호출</span></span><br><span class="line">&#125;</span><br><span class="line">System.out.println(<span class="string">"DAO : 상품번호 "</span>+num);</span><br><span class="line"></span><br><span class="line"><span class="comment">//2. 상품등록</span></span><br><span class="line">sql = <span class="string">"insert into itwill_goods values(?,?,?,?,?,"</span></span><br><span class="line">+ <span class="string">"?,?,?,?,?,"</span></span><br><span class="line">+ <span class="string">"now())"</span>;</span><br><span class="line">pstmt = con.prepareStatement(sql);</span><br><span class="line">pstmt.setInt(<span class="number">1</span>, num);</span><br><span class="line">pstmt.setString(<span class="number">2</span>, gdto.getCategory());</span><br><span class="line">pstmt.setString(<span class="number">3</span>, gdto.getName());</span><br><span class="line">pstmt.setInt(<span class="number">4</span>, gdto.getPrice());</span><br><span class="line">pstmt.setString(<span class="number">5</span>, gdto.getColor());</span><br><span class="line">pstmt.setInt(<span class="number">6</span>, gdto.getAmount());</span><br><span class="line">pstmt.setString(<span class="number">7</span>, gdto.getSize());</span><br><span class="line">pstmt.setString(<span class="number">8</span>, gdto.getContent());</span><br><span class="line">pstmt.setString(<span class="number">9</span>, gdto.getImage());</span><br><span class="line">pstmt.setInt(<span class="number">10</span>, gdto.getBest());</span><br><span class="line">pstmt.executeUpdate();</span><br><span class="line">System.out.println(<span class="string">"상품등록완료"</span>);</span><br><span class="line">&#125;<span class="keyword">catch</span>(Exception e)&#123;</span><br><span class="line">e.printStackTrace();</span><br><span class="line">&#125;<span class="keyword">finally</span>&#123;</span><br><span class="line">closeDB();</span><br><span class="line">&#125;</span><br><span class="line">&#125;<span class="comment">//end of insertGoods()</span></span><br></pre></td></tr></table></figure>]]></content:encoded>
      
      
      <category domain="https://sowon-dev.github.io/categories/JSP/">JSP</category>
      
      
      <category domain="https://sowon-dev.github.io/tags/TIL/">TIL</category>
      
      <category domain="https://sowon-dev.github.io/tags/ITWILL-JAVA/">ITWILL(JAVA)</category>
      
      
      <comments>https://sowon-dev.github.io/2020/09/07/200907jspi5/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>Servlet관리자용상품1 : 기초</title>
      <link>https://sowon-dev.github.io/2020/09/07/200907jspi4/</link>
      <guid>https://sowon-dev.github.io/2020/09/07/200907jspi4/</guid>
      <pubDate>Mon, 07 Sep 2020 00:00:00 GMT</pubDate>
      
      <description>&lt;h2 id=&quot;쇼핑몰기능을-만들려면-무슨-기능이-필요할까&quot;&gt;&lt;a href=&quot;#쇼핑몰기능을-만들려면-무슨-기능이-필요할까&quot; class=&quot;headerlink&quot; title=&quot;쇼핑몰기능을 만들려면 무슨 기능이 필요할까?&quot;&gt;&lt;/a&gt;쇼핑몰기능을 만들려면 무슨 기능이 필요할까?&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;실무에서 필요한 모든 기능은 요구명세서에 작성된다. 그거 보고 처리하면 된다. &lt;/li&gt;
&lt;li&gt;대략적으로 뭐가 필요할까? 상품, 구매자, 판매자, 주문(결제, 장바구니 등등), 재고관리 등등</description>
      
      
      
      <content:encoded><![CDATA[<h2 id="쇼핑몰기능을-만들려면-무슨-기능이-필요할까"><a href="#쇼핑몰기능을-만들려면-무슨-기능이-필요할까" class="headerlink" title="쇼핑몰기능을 만들려면 무슨 기능이 필요할까?"></a>쇼핑몰기능을 만들려면 무슨 기능이 필요할까?</h2><ul><li>실무에서 필요한 모든 기능은 요구명세서에 작성된다. 그거 보고 처리하면 된다. </li><li>대략적으로 뭐가 필요할까? 상품, 구매자, 판매자, 주문(결제, 장바구니 등등), 재고관리 등등  <a id="more"></a></li><li>관리자기눙 추가 : 상품등록</li></ul><p><br><br><br></p><h2 id="index-jsp-코드-변경"><a href="#index-jsp-코드-변경" class="headerlink" title="index.jsp 코드 변경"></a><code>index.jsp</code> 코드 변경</h2><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">%</span></span></span><br><span class="line"><span class="tag">//관리자<span class="attr">-</span>상품등록</span></span><br><span class="line"><span class="tag"><span class="attr">response.sendRedirect</span>("<span class="attr">.</span>/<span class="attr">GoodsAdd.ag</span>");</span></span><br><span class="line"><span class="tag">%&gt;</span></span><br></pre></td></tr></table></figure><p><br><br><br></p><h2 id="web-xml’에-코드-추가"><a href="#web-xml’에-코드-추가" class="headerlink" title="`web.xml’에 코드 추가"></a>`web.xml’에 코드 추가</h2><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- Model2 상품등록  --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">servlet</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">servlet-name</span>&gt;</span>AdminGoodsFrontController<span class="tag">&lt;/<span class="name">servlet-name</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">servlet-class</span>&gt;</span>com.itwillbs.admin.goods.action.AdminGoodsFrontController<span class="tag">&lt;/<span class="name">servlet-class</span>&gt;</span> <span class="comment">&lt;!-- 컨트롤로 주소와 동일하게  --&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">servlet</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">servlet-mapping</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">servlet-name</span>&gt;</span>AdminGoodsFrontController<span class="tag">&lt;/<span class="name">servlet-name</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">url-pattern</span>&gt;</span>*.ag<span class="tag">&lt;/<span class="name">url-pattern</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">servlet-mapping</span>&gt;</span></span><br></pre></td></tr></table></figure><p><br><br><br></p><h2 id="src폴더아래에-새로운-패키지와-AdminGoodsFrontController-java생성"><a href="#src폴더아래에-새로운-패키지와-AdminGoodsFrontController-java생성" class="headerlink" title="src폴더아래에 새로운 패키지와 AdminGoodsFrontController.java생성"></a><code>src</code>폴더아래에 새로운 패키지와 <code>AdminGoodsFrontController.java</code>생성</h2><ul><li>일반 클래스는 controller역할을 할 수 없다. 일반 클래스를 서블릿을 상속해서 컨트롤러 역활 할수있도록 설정해야한다</li><li>따라서 HttpServlet 상속한 뒤 doGet(), doPost() 오버라이딩해야한다.</li><li>그리고 get방식이든 post방식이든 한 번에 처리할 수 있는 doProcess()를 생성한다.</li><li>doProcess()에서 처리하는 기능<ol><li>주소 계산</li><li>command사용해서 주소 비교 후 처리</li><li>ActionForward를 가지고 페이지 이동</li></ol></li><li>변수명 짓기 어려울때 <a href="https://www.curioustore.com/#!/util/naming">변수명짓기 사이트</a></li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">AdminGoodsFrontController</span>  <span class="keyword">extends</span> <span class="title">HttpServlet</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 일반 클래스를 서블릿을 상속해서 컨트롤러 역활 할수있도록 설정</span></span><br><span class="line"><span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">doProcess</span><span class="params">(HttpServletRequest request, HttpServletResponse response)</span></span></span><br><span class="line"><span class="function"><span class="keyword">throws</span> ServletException, IOException </span>&#123;</span><br><span class="line">System.out.println(<span class="string">"doProcess() 호출 (페이지 GET/POST방식 모두 사용호출)"</span>);</span><br><span class="line"></span><br><span class="line">System.out.println(<span class="string">"--------------@ 주소 계산 @-------------"</span>);</span><br><span class="line"><span class="comment">// 주소 비교 (주소 매핑)</span></span><br><span class="line"><span class="comment">// requestURI : /Model2JSP7/test.me (프로젝트명 + 주소)</span></span><br><span class="line">String requestURI = request.getRequestURI();</span><br><span class="line">System.out.println(<span class="string">" requestURI : "</span> + requestURI);</span><br><span class="line"><span class="comment">// contextPath : /Model2JSP7 (프로젝트명)</span></span><br><span class="line">String contextPath = request.getContextPath();</span><br><span class="line">System.out.println(<span class="string">" contextPath : "</span> + contextPath);</span><br><span class="line"><span class="comment">// 가상주소(/test.me)</span></span><br><span class="line">String command = requestURI.substring(contextPath.length());</span><br><span class="line">System.out.println(<span class="string">" command(가상주소) : "</span> + command);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">System.out.println(<span class="string">"--------------@ 주소 비교후 처리 @-------------"</span>);</span><br><span class="line">Action action = <span class="keyword">null</span>;</span><br><span class="line">ActionForward forward = <span class="keyword">null</span>;</span><br><span class="line"><span class="comment">// 주소에 따른 처리 구분 (주소 매핑후 이동)</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">System.out.println(<span class="string">"-----------------@ 페이지 이동 @--------------"</span>);</span><br><span class="line"><span class="keyword">if</span>(forward != <span class="keyword">null</span>)&#123; <span class="comment">// 이동할 정보가 있다</span></span><br><span class="line"><span class="keyword">if</span>(forward.isRedirect())&#123; <span class="comment">// true - sendRedirect()</span></span><br><span class="line"><span class="comment">// 가상주소(.bo -&gt; .bo), 화면전환(주소변경,화면 변경)</span></span><br><span class="line">System.out.println(<span class="string">"C : "</span>+forward.getPath()+<span class="string">"주소로 이동(Redirect)"</span>);</span><br><span class="line">response.sendRedirect(forward.getPath());</span><br><span class="line">&#125;<span class="keyword">else</span>&#123; <span class="comment">// false - forward()</span></span><br><span class="line">System.out.println(<span class="string">"C : "</span>+forward.getPath()+<span class="string">"주소로 이동(forward)"</span>);</span><br><span class="line"><span class="comment">// 가상주소 -&gt; 실제페이지 (.bo -&gt; .jsp) + reqeust 객체 정보를 가지고 이동</span></span><br><span class="line">RequestDispatcher dis =</span><br><span class="line">request.getRequestDispatcher(forward.getPath());</span><br><span class="line">dis.forward(request, response);</span><br><span class="line">&#125;</span><br><span class="line">&#125;<span class="comment">//end of 페이지이동</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">doGet</span><span class="params">(HttpServletRequest req, HttpServletResponse resp)</span> <span class="keyword">throws</span> ServletException, IOException </span>&#123;</span><br><span class="line">System.out.println(<span class="string">"doGet() 호출 (페이지 GET방식 호출)"</span>);</span><br><span class="line">doProcess(req, resp);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">doPost</span><span class="params">(HttpServletRequest req, HttpServletResponse resp)</span> <span class="keyword">throws</span> ServletException, IOException </span>&#123;</span><br><span class="line">System.out.println(<span class="string">"doPost() 호출 (페이지 POST방식 호출)"</span>);</span><br><span class="line">doProcess(req, resp);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><br><br><br></p><h2 id="Action-java-생성"><a href="#Action-java-생성" class="headerlink" title="Action.java 생성"></a><code>Action.java</code> 생성</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">Action</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 상수,추상메서드</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 추상메서드 -&gt; 서브클래스들 한태 강제성 부여</span></span><br><span class="line"><span class="comment">// =&gt; 개발 형식의 통일(틀이 정해짐)</span></span><br><span class="line"><span class="comment">// =&gt; 객체간의 관계가 약화됨 =&gt; 각각의 객체가 해당 동작만 처리/제어</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// Action 페이지의 동작을 미리 선언해서 사용</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> ActionForward <span class="title">execute</span><span class="params">(HttpServletRequest request,</span></span></span><br><span class="line"><span class="function"><span class="params">HttpServletResponse response)</span> <span class="keyword">throws</span> Exception</span>;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><br><br><br></p><h2 id="ActionForward-java-생성"><a href="#ActionForward-java-생성" class="headerlink" title="ActionForward.java 생성"></a><code>ActionForward.java</code> 생성</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">ActionForward</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="comment">//1.외부접근 못하도록 이동할 페이지와 이동할 방식 멤버변수 생성</span></span><br><span class="line"><span class="keyword">private</span> String path;</span><br><span class="line"><span class="keyword">private</span> <span class="keyword">boolean</span> isRedirect;</span><br><span class="line"><span class="comment">// true면 sendRedirect방식으로 이동</span></span><br><span class="line"><span class="comment">//사용처: 주소와 화면의 전환이 동시에 일어날때 (가상주소 -&gt; 가상주소로 )</span></span><br><span class="line"><span class="comment">// false면  forward방식으로 이동</span></span><br><span class="line"><span class="comment">//사용처: 주소는 그대로인데 화면이 바뀔때 (가상주소에서 jsp보여줌)</span></span><br><span class="line"><span class="comment">//2. getter setter생성</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> String <span class="title">getPath</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="keyword">return</span> path;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setPath</span><span class="params">(String path)</span> </span>&#123;</span><br><span class="line"><span class="keyword">this</span>.path = path;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">isRedirect</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="keyword">return</span> isRedirect;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setRedirect</span><span class="params">(<span class="keyword">boolean</span> isRedirect)</span> </span>&#123;</span><br><span class="line"><span class="keyword">this</span>.isRedirect = isRedirect;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//3.toString</span></span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> String <span class="title">toString</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="keyword">return</span> <span class="string">"ActionForward [path="</span> + path + <span class="string">", isRedirect="</span> + isRedirect + <span class="string">"]"</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content:encoded>
      
      
      <category domain="https://sowon-dev.github.io/categories/JSP/">JSP</category>
      
      
      <category domain="https://sowon-dev.github.io/tags/TIL/">TIL</category>
      
      <category domain="https://sowon-dev.github.io/tags/ITWILL-JAVA/">ITWILL(JAVA)</category>
      
      
      <comments>https://sowon-dev.github.io/2020/09/07/200907jspi4/#disqus_thread</comments>
      
    </item>
    
  </channel>
</rss>
