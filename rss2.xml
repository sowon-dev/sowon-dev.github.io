<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0"
  xmlns:atom="http://www.w3.org/2005/Atom"
  xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>야망찬 개발자의 블로그</title>
    <link>https://sowon-dev.github.io/</link>
    
    <atom:link href="https://sowon-dev.github.io/rss2.xml" rel="self" type="application/rss+xml"/>
    
    <description></description>
    <pubDate>Sun, 07 Mar 2021 14:43:28 GMT</pubDate>
    <generator>http://hexo.io/</generator>
    
    <item>
      <title>Algorithm전체목록List</title>
      <link>https://sowon-dev.github.io/2021/12/29/algorithmList/</link>
      <guid>https://sowon-dev.github.io/2021/12/29/algorithmList/</guid>
      <pubDate>Wed, 29 Dec 2021 15:00:00 GMT</pubDate>
      
      <description>&lt;h2 id=&quot;🌊코드업&quot;&gt;&lt;a href=&quot;#🌊코드업&quot; class=&quot;headerlink&quot; title=&quot;🌊코드업&quot;&gt;&lt;/a&gt;🌊&lt;a href=&quot;https://github.com/sowon-dev/AlgorithmStudy_Java/tree/master/src/codeup100&quot;&gt;코드업&lt;/a&gt;&lt;/h2&gt;&lt;ol&gt;
&lt;li&gt;&lt;a href=&quot;https://sowon-dev.github.io/2020/09/29/200930al-1/&quot;&gt;1011 : 문자 한 개 입력받아 그대로 출력하기&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://sowon-dev.github.io/2020/09/29/200930al/&quot;&gt;1012 : 실수 한 개 입력받아 그대로 출력하기, float실수소수점 표현하기&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://sowon-dev.github.io/2020/12/27/201227al-c1014/&quot;&gt;1014 : 문자 2개 입력받아 순서 바꿔 출력하기, Scanner vs BufferedReader 차이&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://sowon-dev.github.io/2020/09/29/200930al-2/&quot;&gt;1018 : 시간 입력받아 그대로 출력하기, next()와 nextLine()차이, parseInt, valueOf의 차이&lt;/a&gt;</description>
      
      
      
      <content:encoded><![CDATA[<h2 id="🌊코드업"><a href="#🌊코드업" class="headerlink" title="🌊코드업"></a>🌊<a href="https://github.com/sowon-dev/AlgorithmStudy_Java/tree/master/src/codeup100">코드업</a></h2><ol><li><a href="https://sowon-dev.github.io/2020/09/29/200930al-1/">1011 : 문자 한 개 입력받아 그대로 출력하기</a></li><li><a href="https://sowon-dev.github.io/2020/09/29/200930al/">1012 : 실수 한 개 입력받아 그대로 출력하기, float실수소수점 표현하기</a></li><li><a href="https://sowon-dev.github.io/2020/12/27/201227al-c1014/">1014 : 문자 2개 입력받아 순서 바꿔 출력하기, Scanner vs BufferedReader 차이</a></li><li><a href="https://sowon-dev.github.io/2020/09/29/200930al-2/">1018 : 시간 입력받아 그대로 출력하기, next()와 nextLine()차이, parseInt, valueOf의 차이</a><a id="more"></a></li><li><a href="https://sowon-dev.github.io/2020/10/05/201006al/">1023 : 실수 1개 입력받아 부분별로 출력하기, split대신 StringTokenizer사용하기</a></li><li><a href="https://sowon-dev.github.io/2020/10/06/201007al-c1034/">1034 : 8진 정수 1개 입력받아 10진수로 출력하기(설명), Scanner로 2진수, 8진수 16진수 받기</a></li><li><a href="https://sowon-dev.github.io/2020/10/07/201008al-c1041/">1041 : 문자 1개 입력받아 다음 문자 출력하기(설명), Scanner로 char받기</a></li><li><a href="https://sowon-dev.github.io/2020/10/11/201012al-c1059/">1059 : 비트단위로 NOT 하여 출력하기(설명), Scanner로 2진수받기</a></li><li><a href="https://sowon-dev.github.io/2020/10/12/201012al-c1064/">1064 : 정수 3개 입력받아 가장 작은 수 출력하기(설명), 삼항연산자로 최소값찾기</a></li><li><a href="https://sowon-dev.github.io/2020/10/12/201012al-c1066/">1066 : 정수 3개 입력받아 짝/홀 출력하기(설명), Scanner 기본구분자, whitespace(화이트스페이스)뜻</a></li><li><a href="https://sowon-dev.github.io/2020/10/13/201014al-c1071/">1071 : 0 입력될 때까지 무한 출력하기1, goto말고while문사용</a></li><li><a href="https://sowon-dev.github.io/2020/10/14/201015al-c1082/">1082 : 16진수 구구단?</a></li><li><a href="https://sowon-dev.github.io/2020/10/14/201015al-c1084/">1084 : 빛 섞어 색 만들기(설명)</a></li><li><a href="https://sowon-dev.github.io/2020/10/18/201019al-c1093/">1093 : 이상한 출석 번호 부르기1(설명)</a></li><li><a href="https://sowon-dev.github.io/2020/11/20/201121al-c1097/">1097 : 바둑알 십자 뒤집기(설명)</a></li><li><a href="https://sowon-dev.github.io/2020/11/20/201121al-c1099/">1099 : 성실한 개미(설명)</a></li></ol><p><br><br><br></p><h2 id="🌊leetcode-Easy레벨-전체"><a href="#🌊leetcode-Easy레벨-전체" class="headerlink" title="🌊leetcode Easy레벨 전체"></a>🌊<a href="https://github.com/sowon-dev/AlgorithmStudy_Java/tree/master/src/leetcodeEasyLevel">leetcode Easy레벨 전체</a></h2><ol><li><a href="https://sowon-dev.github.io/2020/12/06/201206al-l0013/">13. Roman to Integer</a></li><li><a href="https://sowon-dev.github.io/2020/12/06/201206al-l0014/">14. Longest Common Prefix</a></li><li><a href="https://sowon-dev.github.io/2021/01/09/210110replacevsreplaceall/">125. Valid Palindrome</a></li><li><a href="https://sowon-dev.github.io/2021/01/11/210111al-l0136/">136. Single Number</a></li><li><a href="https://sowon-dev.github.io/2021/01/18/210118al-l0172/">172. Factorial Trailing Zeroes</a></li><li><a href="https://sowon-dev.github.io/2021/01/21/210122al-l0190/">190. Reverse Bits</a></li></ol><p><br><br><br></p><h2 id="🌊Hackker-Rank-Easy레벨"><a href="#🌊Hackker-Rank-Easy레벨" class="headerlink" title="🌊Hackker Rank Easy레벨"></a>🌊<a href="https://github.com/sowon-dev/AlgorithmStudy_Java/tree/master/src/hackerrank">Hackker Rank Easy레벨</a></h2><ol><li><a href="https://sowon-dev.github.io/2021/02/14/210214al-hackerrank-between-two-sets/">Between Two Sets</a></li><li><a href="https://sowon-dev.github.io/2021/02/17/210217al-hackerrank-Picking-Numbers/">Picking Numbers</a></li><li><a href="https://sowon-dev.github.io/2021/02/18/210218al-hakkerrank-Sherlock-and-Squares/">Sherlock and Squares</a></li><li><a href="https://sowon-dev.github.io/2021/02/27/210228al-hackerrank-Two-Characters/">Two Characters</a></li><li><a href="https://sowon-dev.github.io/2021/03/01/210302al-hackerrank-Separate-the-Numbers/#more">Separate the Numbers</a></li><li><a href="https://sowon-dev.github.io/2021/03/07/210307al-hackerrank-MissingNumbers/">Missing Numbers</a></li><li><a href="https://sowon-dev.github.io/2021/03/07/210307al-hackkerrank-bigsorting/">Big Sorting</a></li></ol><p><br><br><br></p><h2 id="🌊백준"><a href="#🌊백준" class="headerlink" title="🌊백준"></a>🌊백준</h2><ol><li><a href="https://sowon-dev.github.io/2020/10/18/201018al-b11005/">11005번 진법 변환2</a></li></ol><p><br><br><br></p><h2 id="🌊프로그래머스"><a href="#🌊프로그래머스" class="headerlink" title="🌊프로그래머스"></a>🌊프로그래머스</h2><ol><li><a href="https://sowon-dev.github.io/2021/02/27/210228al-programmers-The-Number-of-pandy-in-String/">문자열 내 p와 y의 개수</a></li><li><a href="https://sowon-dev.github.io/2021/03/07/210307al-programmers-thesmallestnum/">제일 작은 수 제거하기</a></li></ol><p><br><br><br><br><span style="color:white;display:none;"><br>모든 코드업(codeup)(CodeUp)100제 자바(java)(JAVA) 풀이 : 1001 1002 1003 1004 1005 1006 1007 1008 1009 1010 1011 1012 1013 1014 1015 1016 1017 1018 1019 1020 1021 1022 1023 1024 1025 1026 1027 1028 1029 1030 1031 1032 1033 1034 1035 1036 1037 1038 1039 1040 1041 1042 1043 1044 1045 1046 1047 1048 1049 1050 1051 1052 1053 1054 1055 1056 1057 1058 1059 1060 1061 1062 1063 1064 1065 1066 1067 1068 1069 1070 1071 1072 1073 1074 1075 1076 1077 1078 1079 1080 1081 1082 1083 1084 1085 1086 1087 1088 1089 1090 1091 1092 1093 1094 1095 1096 1097 1098 1099 1100 1101 1102 1103 1104 1105 1106 1107 1108 1109 1110 1111 1112 1113 1114 1115 1116 1117 1118 1119 1120 1121 1122 1123 1124 1125 1126 1127 1128 1129 1130 1131 1132 1133 1134 1135 1136 1137 1138 1139 1140 1141 1142 1143 1144 1145 1146 1147 1148 1149 1150 1151 1152 1153 1154 1155 1156 1157 1158 1159 1160 1161 1162 1163 1164 1165 1166 1167 1168 1169 1170 1171 1172 1173 1174 1175 1176 1177 1178 1179 1180 1181 1182 1183 1184 1185 1186 1187 1188 1189 1190 1191 1192 1193 1194 1195 1196 1197 1198 1199 1200 1201 1202 1203 1204 1205 1206 1207 1208 1209 1210 1211 1212 1213 1214 1215 1216 1217 1218 1219 1220 1221 1222 1223 1224 1225 1226 1227 1228 1229 1230 1231 1232 1233 1234 1235 1236 1237 1238 1239 1240 1241 1242 1243 1244 1245 1246 1247 1248 1249 1250 1251 1252 1253 1254 1255 1256 1257 1258 1259 1260 1261 1262 1263 1264 1265 1266 1267 1268 1269 1270 1271 1272 1273 1274 1275 1276 1277 1278 1279 1280 1281 1282 1283 1284 1285 1286 1287 1288 1289 1290 1291 1292 1293 1294 1295 1296 1297 1298 1299 1300 1301 1302 1303 1304 1305 1306 1307 1308 1309 1310 1311 1312 1313 1314 1315 1316 1317 1318 1319 1320 1321 1322 1323 1324 1325 1326 1327 1328 1329 1330 1331 1332 1333 1334 1335 1336 1337 1338 1339 1340 1341 1342 1343 1344 1345 1346 1347 1348 1349 1350 1351 1352 1353 1354 1355 1356 1357 1358 1359 1360 1361 1362 1363 1364 1365 1366 1367 1368 1369 1370 1371 1372 1373 1374 1375 1376 1377 1378 1379 1380 1381 1382 1383 1384 1385 1386 1387 1388 1389 1390 1391 1392 1393 1394 1395 1396 1397 1398 1399 1400 1401 1402 1403 1404 1405 1406 1407 1408 1409 1410 1411 1412 1413 1414 1415 1416 1417 1418 1419 1420 1421 1422 1423 1424 1425 1426 1427 1428 1429 1430 1431 1432 1433 1434 1435 1436 1437 1438 1439 1440 1441 1442 1443 1444 1445 1446 1447 1448 1449 1450 1451 1452 1453 1454 1455 1456 1457 1458 1459 1460 1461 1462 1463 1464 1465 1466 1467 1468 1469 1470 1471 1472 1473 1474 1475 1476 1477 1478 1479 1480 1481 1482 1483 1484 1485 1486 1487 1488 1489 1490 1491 1492 1493 1494 1495 1496 1497 1498 1499 1500 1501 1502 1503 1504 1505 1506 1507 1508 1509 1510 1511 1512 1513 1514 1515 1516 1517 1518 1519 1520 1521 1522 1523 1524 1525 1526 1527 1528 1529 1530 1531 1532 1533 1534 1535 1536 1537 1538 1539 1540 1541 1542 1543 1544 1545 1546 1547 1548 1549 1550 1551 1552 1553 1554 1555 1556 1557 1558 1559 1560 1561 1562 1563 1564 1565 1566 1567 1568 1569 1570 1571 1572 1573 1574 1575 1576 1577 1578 1579 1580 1581 1582 1583 1584 1585 1586 1587 1588 1589 1590 1591 1592 1593 1594 1595 1596 1597 1598 1599 1600 1601 1602 1603 1604 1605 1606 1607 1608 1609 1610 1611 1612 1613 1614 1615 1616 1617 1618 1619 1620 1621 1622 1623 1624 1625 1626 1627 1628 1629 1630 1631 1632 1633 1634 1635 1636 1637 1638 1639 1640 1641 1642 1643 1644 1645 1646 1647 1648 1649 1650 1651 1652 1653 1654 1655 1656 1657 1658 1659 1660 1661 1662 1663 1664 1665 1666 1667 1668 1669 1670 1671 1672 1673 1674 1675 1676 1677 1678 1679 1680 1681 1682 1683 1684 1685 1686 1687 1688 1689 1690 1691 1692 1693 1694 1695 1696 1697 1698 1699 1700 1701 1702 1703 1704 1705 1706 1707 1708 1709 1710 1711 1712 1713 1714 1715 1716 1717 1718 1719 1720 1721 1722 1723 1724 1725 1726 1727 1728 1729 1730 1731 1732 1733 1734 1735 1736 1737 1738 1739 1740 1741 1742 1743 1744 1745 1746 1747 1748 1749 1750 1751 1752 1753 1754 1755 1756 1757 1758 1759 1760 1761 1762 1763 1764 1765 1766 1767 1768 1769 1770 1771 1772 1773 1774 1775 1776 1777 1778 1779 1780 1781 1782 1783 1784 1785 1786 1787 1788 1789 1790 1791 1792 1793 1794 1795 1796 1797 1798 1799 1800 1801 1802 1803 1804 1805 1806 1807 1808 1809 1810 1811 1812 1813 1814 1815 1816 1817 1818 1819 1820 1821 1822 1823 1824 1825 1826 1827 1828 1829 1830 1831 1832 1833 1834 1835 1836 1837 1838 1839 1840 1841 1842 1843 1844 1845 1846 1847 1848 1849 1850 1851 1852 1853 1854 1855 1856 1857 1858 1859 1860 1861 1862 1863 1864 1865 1866 1867 1868 1869 1870 1871 1872 1873 1874 1875 1876 1877 1878 1879 1880 1881 1882 1883 1884 1885 1886 1887 1888 1889 1890 1891 1892 1893 1894 1895 1896 1897 1898 1899 1900 1901 1902 1903 1904 1905 1906 1907 1908 1909 1910 1911 1912 1913 1914 1915 1916 1917 1918 1919 1920 1921 1922 1923 1924 1925 1926 1927 1928 1929 1930 1931 1932 1933 1934 1935 1936 1937 1938 1939 1940 1941 1942 1943 1944 1945 1946 1947 1948 1949 1950 1951 1952 1953 1954 1955 1956 1957 1958 1959 1960 1961 1962 1963 1964 1965 1966 1967 1968 1969 1970 1971 1972 1973 1974 1975 1976 1977 1978 1979 1980 1981 1982 1983 1984 1985 1986 1987 1988 1989 1990 1991 1992 1993 1994 1995 1996 1997 1998 1999<br></span></p>]]></content:encoded>
      
      
      <category domain="https://sowon-dev.github.io/categories/Algorithm/">Algorithm</category>
      
      
      <category domain="https://sowon-dev.github.io/tags/List/">List</category>
      
      
      <comments>https://sowon-dev.github.io/2021/12/29/algorithmList/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>[자바JAVA]Big Sorting 해커랭크</title>
      <link>https://sowon-dev.github.io/2021/03/07/210307al-hackkerrank-bigsorting/</link>
      <guid>https://sowon-dev.github.io/2021/03/07/210307al-hackkerrank-bigsorting/</guid>
      <pubDate>Sun, 07 Mar 2021 05:14:22 GMT</pubDate>
      
      <description>&lt;h2 id=&quot;문제&quot;&gt;&lt;a href=&quot;#문제&quot; class=&quot;headerlink&quot; title=&quot;문제&quot;&gt;&lt;/a&gt;문제&lt;/h2&gt;&lt;p&gt;String 타입의 정렬안된 배열을 숫자오름차순으로 숫자를 정렬하는 문제이다.&lt;/p&gt;
&lt;p&gt;Consider an array of numeric strings where each string is a positive number with anywhere from  to  digits. Sort the array’s elements in non-decreasing, or ascending order of their integer values and return the sorted array.&lt;/p&gt;</description>
      
      
      
      <content:encoded><![CDATA[<h2 id="문제"><a href="#문제" class="headerlink" title="문제"></a>문제</h2><p>String 타입의 정렬안된 배열을 숫자오름차순으로 숫자를 정렬하는 문제이다.</p><p>Consider an array of numeric strings where each string is a positive number with anywhere from  to  digits. Sort the array’s elements in non-decreasing, or ascending order of their integer values and return the sorted array.</p><a id="more"></a><ul><li><p>입출력예시1</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//입력</span></span><br><span class="line">[<span class="number">1</span> <span class="number">200</span> <span class="number">150</span> <span class="number">3</span>]</span><br><span class="line"></span><br><span class="line"><span class="comment">//출력</span></span><br><span class="line">[<span class="number">1</span> <span class="number">3</span> <span class="number">150</span> <span class="number">200</span>]</span><br></pre></td></tr></table></figure></li><li><p>입출력예시2</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//입력</span></span><br><span class="line"><span class="number">6</span> &lt;-길이</span><br><span class="line"><span class="number">31415926535897932384626433832795</span></span><br><span class="line"><span class="number">1</span></span><br><span class="line"><span class="number">3</span></span><br><span class="line"><span class="number">10</span></span><br><span class="line"><span class="number">3</span></span><br><span class="line"><span class="number">5</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//출력</span></span><br><span class="line"><span class="number">1</span></span><br><span class="line"><span class="number">3</span></span><br><span class="line"><span class="number">3</span></span><br><span class="line"><span class="number">5</span></span><br><span class="line"><span class="number">10</span></span><br><span class="line"><span class="number">31415926535897932384626433832795</span></span><br></pre></td></tr></table></figure></li><li><p>입출력예시3</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//입력</span></span><br><span class="line"><span class="number">8</span> &lt;-길이</span><br><span class="line"><span class="number">1</span></span><br><span class="line"><span class="number">2</span></span><br><span class="line"><span class="number">100</span></span><br><span class="line"><span class="number">12303479849857341718340192371</span></span><br><span class="line"><span class="number">3084193741082937</span></span><br><span class="line"><span class="number">3084193741082938</span></span><br><span class="line"><span class="number">111</span></span><br><span class="line"><span class="number">200</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//출력</span></span><br><span class="line"><span class="number">1</span></span><br><span class="line"><span class="number">2</span></span><br><span class="line"><span class="number">100</span></span><br><span class="line"><span class="number">111</span></span><br><span class="line"><span class="number">200</span></span><br><span class="line"><span class="number">3084193741082937</span></span><br><span class="line"><span class="number">3084193741082938</span></span><br><span class="line"><span class="number">12303479849857341718340192371</span></span><br></pre></td></tr></table></figure></li></ul><p><br><br><br></p><h2 id="첫-시도-NumberFormatException"><a href="#첫-시도-NumberFormatException" class="headerlink" title="첫 시도: NumberFormatException"></a>첫 시도: NumberFormatException</h2><p>처음에는 String[]을 long[]로 바꾼 뒤 오름차순 정렬 후 다시 String[]로 만들어서 출력하고자했다.<br>하지만 숫자가 long보다 더 커서 NumberFormatException이 발생했다.</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">BigSorting</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">static</span> String[] bigSorting(String[] unsorted) &#123;</span><br><span class="line"><span class="comment">//String arr를 long arr로 바꾼다.</span></span><br><span class="line">    <span class="keyword">long</span>[] arr = <span class="keyword">new</span> <span class="keyword">long</span>[unsorted.length];</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; unsorted.length; i++) &#123;</span><br><span class="line">      arr[i] = Long.parseLong(unsorted[i]);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//long 배열을 오름차순정렬한다.</span></span><br><span class="line">    Arrays.sort(arr);</span><br><span class="line"></span><br><span class="line"><span class="comment">//정렬한 long배열을 String 배열로 바꾼 뒤 리턴한다.</span></span><br><span class="line">    String[] result = <span class="keyword">new</span> String[unsorted.length];</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; unsorted.length; i++) &#123;</span><br><span class="line">      result[i] = Long.toString(arr[i]);</span><br><span class="line">    &#125;</span><br><span class="line">    System.out.println(Arrays.toString(result));</span><br><span class="line">    <span class="keyword">return</span> result;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">    System.out.println(bigSorting(<span class="keyword">new</span> String[]&#123;<span class="string">"1"</span>, <span class="string">"200"</span>, <span class="string">"150"</span>, <span class="string">"3"</span>&#125;) + <span class="string">", ans: [1 3 150 200]"</span>);</span><br><span class="line">    System.out.println(</span><br><span class="line">        bigSorting(<span class="keyword">new</span> String[]&#123;<span class="string">"31415926535897932384626433832795"</span>, <span class="string">"1"</span>, <span class="string">"3"</span>, <span class="string">"10"</span>, <span class="string">"3"</span>, <span class="string">"5"</span>&#125;)</span><br><span class="line">            + <span class="string">", ans: [1 3 3 5 10 31415926535897932384626433832795]"</span>);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><br><br><br></p><h2 id="두번째-시도-Terminated-due-to-timeout"><a href="#두번째-시도-Terminated-due-to-timeout" class="headerlink" title="두번째 시도: Terminated due to timeout"></a>두번째 시도: Terminated due to timeout</h2><p>데이터타입이 다른 배열로 바꾸지 않고 String 배열 그대로 sort했지만 테스트케이스 6번에서 Terminated due to timeout 가 발생했다.</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">BigSorting</span> </span>&#123;</span><br><span class="line"><span class="keyword">static</span> String[] bigSorting(String[] unsorted) &#123;</span><br><span class="line"><span class="comment">//sol2 -&gt; Terminated due to timeout</span></span><br><span class="line">Arrays.sort(unsorted, (left, right) -&gt; &#123;</span><br><span class="line">  <span class="keyword">if</span> (left.length() != right.length()) &#123;</span><br><span class="line"><span class="keyword">return</span> left.length() - right.length();</span><br><span class="line">  &#125; <span class="keyword">else</span> &#123;</span><br><span class="line"><span class="keyword">return</span> left.compareTo(right);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;);</span><br><span class="line"><span class="keyword">for</span> (String s : unsorted) &#123;</span><br><span class="line">  System.out.print(s + <span class="string">" "</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> unsorted;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">System.out.println(bigSorting(<span class="keyword">new</span> String[]&#123;<span class="string">"1"</span>, <span class="string">"200"</span>, <span class="string">"150"</span>, <span class="string">"3"</span>&#125;) + <span class="string">", ans: [1 3 150 200]"</span>);</span><br><span class="line">System.out.println(</span><br><span class="line">bigSorting(<span class="keyword">new</span> String[]&#123;<span class="string">"31415926535897932384626433832795"</span>, <span class="string">"1"</span>, <span class="string">"3"</span>, <span class="string">"10"</span>, <span class="string">"3"</span>, <span class="string">"5"</span>&#125;)</span><br><span class="line">+ <span class="string">", ans: [1 3 3 5 10 31415926535897932384626433832795]"</span>);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">&#x2F;&#x2F;테스트케이스6번 입력값</span><br><span class="line">33636</span><br><span class="line">2</span><br><span class="line">89</span><br><span class="line">42</span><br><span class="line">66</span><br><span class="line">17</span><br><span class="line">6</span><br><span class="line">14</span><br><span class="line">61</span><br><span class="line">95</span><br><span class="line">1</span><br><span class="line">96</span><br><span class="line">7</span><br><span class="line">6</span><br><span class="line">79</span><br><span class="line">8</span><br><span class="line">8</span><br><span class="line">1</span><br><span class="line">85</span><br><span class="line">5</span><br></pre></td></tr></table></figure><p><br><br><br></p><h2 id="완성된-코드"><a href="#완성된-코드" class="headerlink" title="완성된 코드"></a>완성된 코드</h2><p>따라서 더 빠른 방법이 필요했다.</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">BigSorting</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">  <span class="function"><span class="keyword">void</span> <span class="title">solve</span><span class="params">(Scanner in, PrintWriter out)</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="comment">//unsorted 배열을 생성한다.</span></span><br><span class="line">String a[] = <span class="keyword">new</span> String[in.nextInt()];</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; a.length; i++) &#123;</span><br><span class="line">      a[i] = in.next();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//배열을 오름차순으로 정렬한다.</span></span><br><span class="line">    Arrays.sort(a, (left, right) -&gt; &#123;</span><br><span class="line">      <span class="keyword">if</span> (left.length() != right.length()) &#123;</span><br><span class="line">        <span class="keyword">return</span> left.length() - right.length();</span><br><span class="line">      &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> left.compareTo(right);</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;);</span><br><span class="line"></span><br><span class="line"><span class="comment">//배열을 출력한다.</span></span><br><span class="line">    <span class="keyword">for</span> (String s : a) &#123;</span><br><span class="line">      out.println(s);</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="function"><span class="keyword">void</span> <span class="title">run</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="keyword">try</span> (</span><br><span class="line">        Scanner in = <span class="keyword">new</span> Scanner(System.in);</span><br><span class="line">        PrintWriter out = <span class="keyword">new</span> PrintWriter(System.out);</span><br><span class="line">    ) &#123;</span><br><span class="line">      solve(in, out);</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">  </span><br><span class="line">  <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">new</span> BigSorting().run();</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><br><br><br></p><h2 id="해커랭크의-다른-문제-풀이가-보고싶다면"><a href="#해커랭크의-다른-문제-풀이가-보고싶다면" class="headerlink" title="해커랭크의 다른 문제 풀이가 보고싶다면?"></a>해커랭크의 다른 문제 풀이가 보고싶다면?</h2><ul><li><a href="https://github.com/sowon-dev/AlgorithmStudy_Java/tree/master/src/hackerrank">해커랭크(HackerRank) Easy Level java 풀이 모음</a></li></ul>]]></content:encoded>
      
      
      <category domain="https://sowon-dev.github.io/categories/Algorithm/">Algorithm</category>
      
      
      <category domain="https://sowon-dev.github.io/tags/Hackerrank/">Hackerrank</category>
      
      
      <comments>https://sowon-dev.github.io/2021/03/07/210307al-hackkerrank-bigsorting/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>[자바JAVA]제일 작은 수 제거하기 프로그래머스</title>
      <link>https://sowon-dev.github.io/2021/03/07/210307al-programmers-thesmallestnum/</link>
      <guid>https://sowon-dev.github.io/2021/03/07/210307al-programmers-thesmallestnum/</guid>
      <pubDate>Sun, 07 Mar 2021 04:13:38 GMT</pubDate>
      
      <description>&lt;h2 id=&quot;문제-제일-작은-수-제거하기&quot;&gt;&lt;a href=&quot;#문제-제일-작은-수-제거하기&quot; class=&quot;headerlink&quot; title=&quot;문제 : 제일 작은 수 제거하기&quot;&gt;&lt;/a&gt;문제 : 제일 작은 수 제거하기&lt;/h2&gt;&lt;p&gt;정수를 저장한 배열, arr 에서 가장 작은 수를 제거한 배열을 리턴하는 함수, solution을 완성해주세요. 단, 리턴하려는 배열이 빈 배열인 경우엔 배열에 -1을 채워 리턴하세요. 예를들어 arr이 [4,3,2,1]인 경우는 [4,3,2]를 리턴 하고, [10]면 [-1]을 리턴 합니다.&lt;/p&gt;</description>
      
      
      
      <content:encoded><![CDATA[<h2 id="문제-제일-작은-수-제거하기"><a href="#문제-제일-작은-수-제거하기" class="headerlink" title="문제 : 제일 작은 수 제거하기"></a>문제 : 제일 작은 수 제거하기</h2><p>정수를 저장한 배열, arr 에서 가장 작은 수를 제거한 배열을 리턴하는 함수, solution을 완성해주세요. 단, 리턴하려는 배열이 빈 배열인 경우엔 배열에 -1을 채워 리턴하세요. 예를들어 arr이 [4,3,2,1]인 경우는 [4,3,2]를 리턴 하고, [10]면 [-1]을 리턴 합니다.</p><a id="more"></a><ul><li>입출력예시1</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//입력</span></span><br><span class="line">[<span class="number">4</span>,<span class="number">3</span>,<span class="number">2</span>,<span class="number">1</span>]</span><br><span class="line"></span><br><span class="line"><span class="comment">//출력</span></span><br><span class="line">[<span class="number">4</span>,<span class="number">3</span>,<span class="number">2</span>]</span><br></pre></td></tr></table></figure><ul><li>입출력예시2</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//입력</span></span><br><span class="line">[<span class="number">10</span>]</span><br><span class="line"></span><br><span class="line"><span class="comment">//출력</span></span><br><span class="line">[-<span class="number">1</span>]</span><br></pre></td></tr></table></figure><p><br><br><br></p><h2 id="첫번째-시도-코드"><a href="#첫번째-시도-코드" class="headerlink" title="첫번째 시도 코드"></a>첫번째 시도 코드</h2><p>아래 코드는 프로그래머스에 <code>코드실행</code> (테스트케이스)는 정상 실행되나 <code>제출 후 채점하기</code>에서 실패가 되었다.<br>어떤 점이 문제인지 한참을 고민했다.</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">quizprogrammersthesmallestnum</span> </span>&#123;</span><br><span class="line">  <span class="keyword">static</span> <span class="keyword">int</span>[] solution(<span class="keyword">int</span>[] arr) &#123;</span><br><span class="line">    <span class="comment">// 제일 작은 수 제거한 배열을 리턴하는 문제</span></span><br><span class="line">    <span class="keyword">if</span> (arr.length &lt;= <span class="number">1</span>) &#123;</span><br><span class="line">      System.out.println(Arrays.toString(<span class="keyword">new</span> <span class="keyword">int</span>[] &#123;-<span class="number">1</span>&#125;));</span><br><span class="line">      <span class="keyword">return</span> <span class="keyword">new</span> <span class="keyword">int</span>[] &#123;-<span class="number">1</span>&#125;;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 배열에서 가장 작은 수 찾기</span></span><br><span class="line">    <span class="keyword">int</span> min = arr[<span class="number">0</span>];</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; arr.length; i++) &#123;</span><br><span class="line">      <span class="keyword">if</span> (arr[i] &lt; min) &#123;</span><br><span class="line">        min = arr[i];</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 찾은 가장 작은 수만 빼고 정답배열에 넣기</span></span><br><span class="line">    <span class="keyword">int</span>[] answer = <span class="keyword">new</span> <span class="keyword">int</span>[arr.length - <span class="number">1</span>];</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; arr.length; i++) &#123;</span><br><span class="line">      <span class="keyword">if</span> (arr[i] != min) &#123;</span><br><span class="line">        answer[i] = arr[i]; </span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    System.out.println(Arrays.toString(answer));</span><br><span class="line">    <span class="keyword">return</span> answer;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">    System.out.println(solution(<span class="keyword">new</span> <span class="keyword">int</span>[] &#123;<span class="number">4</span>, <span class="number">3</span>, <span class="number">2</span>, <span class="number">1</span>&#125;) + <span class="string">", ans: [4,3,2]"</span>);</span><br><span class="line">    System.out.println(solution(<span class="keyword">new</span> <span class="keyword">int</span>[] &#123;<span class="number">10</span>&#125;) + <span class="string">", ans: [-1]"</span>);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>answer 배열의 index문제였다.</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">(전략)</span><br><span class="line">    <span class="comment">// 찾은 가장 작은 수만 빼고 정답배열에 넣기</span></span><br><span class="line">    <span class="keyword">int</span>[] answer = <span class="keyword">new</span> <span class="keyword">int</span>[arr.length - <span class="number">1</span>];</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; arr.length; i++) &#123;</span><br><span class="line">      <span class="keyword">if</span> (arr[i] != min) &#123;</span><br><span class="line">        answer[i] = arr[i]; <span class="comment">//여기가 수상하다.</span></span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">(하략)</span><br></pre></td></tr></table></figure><p>제시된 두 테스트케이스는 제일 작은 수가 마지막에 위치해있기때문에 아무런 문제가 없으나 제일 작은 수가 배열의 중간에 위치한다면 answer의 index가 띄엄띄엄 되어버리는 문제가 발생하기때문이다.<br>예를 들어 입력값이 [4, 1, 2, 3]인 경우 출력값은 가장 작은 숫자 1을 뺀 [4,2,3]이다.</p><p>위의 코드로 실행시켜보면 아래와 같이 ArrayIndexOutOfBoundsException가 발생한다. </p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Exception in thread <span class="string">"main"</span> java.lang.ArrayIndexOutOfBoundsException: <span class="number">3</span></span><br></pre></td></tr></table></figure><p>그 이유는 코드에서 answer[1]이 1이기때문에 if문에 false가 되면서 다음 인덱스인 2로 넘어간다.<br>answer[2]는 2이기때문에 min값과 달라서 if문이 true라 실행이되면서 <code>answer[2] = arr[2]</code>가 된다.<br>그럼 answer 배열은 answer[1]이 없고 answer[3]가 생기면서 answer의 길이보다 1 많아지게 되면서 ArrayIndexOutOfBoundsException가 발생하게 되는 것이다.</p><p>이를 해결하기 위해서는 answer만의 index가 필요하다. </p><p><br><br><br></p><h2 id="완성된-코드"><a href="#완성된-코드" class="headerlink" title="완성된 코드"></a>완성된 코드</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">quizprogrammersthesmallestnum</span> </span>&#123;</span><br><span class="line">  <span class="keyword">static</span> <span class="keyword">int</span>[] solution(<span class="keyword">int</span>[] arr) &#123;</span><br><span class="line">    <span class="comment">// 제일 작은 수 제거한 배열을 리턴하는 문제</span></span><br><span class="line">    <span class="keyword">if</span> (arr.length &lt;= <span class="number">1</span>) &#123;</span><br><span class="line">      System.out.println(Arrays.toString(<span class="keyword">new</span> <span class="keyword">int</span>[] &#123;-<span class="number">1</span>&#125;));</span><br><span class="line">      <span class="keyword">return</span> <span class="keyword">new</span> <span class="keyword">int</span>[] &#123;-<span class="number">1</span>&#125;;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 배열에서 가장 작은 수 찾기</span></span><br><span class="line">    <span class="keyword">int</span> min = arr[<span class="number">0</span>];</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; arr.length; i++) &#123;</span><br><span class="line">      <span class="keyword">if</span> (arr[i] &lt; min) &#123;</span><br><span class="line">        min = arr[i];</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 찾은 가장 작은 수만 빼고 정답배열에 넣기</span></span><br><span class="line">    <span class="keyword">int</span> idx = <span class="number">0</span>; <span class="comment">//answer전용 index를 선언했다.</span></span><br><span class="line">    <span class="keyword">int</span>[] answer = <span class="keyword">new</span> <span class="keyword">int</span>[arr.length - <span class="number">1</span>];</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; arr.length; i++) &#123;</span><br><span class="line">      <span class="keyword">if</span> (arr[i] != min) &#123;</span><br><span class="line">        answer[idx] = arr[i]; <span class="comment">//answer전용 index를 사용</span></span><br><span class="line">        idx++;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    System.out.println(Arrays.toString(answer));</span><br><span class="line">    <span class="keyword">return</span> answer;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><br><br><br></p><h2 id="향상된-코드-Arrays-stream-사용"><a href="#향상된-코드-Arrays-stream-사용" class="headerlink" title="향상된 코드 : Arrays.stream() 사용"></a>향상된 코드 : Arrays.stream() 사용</h2><p>프로그래머스는 다른 사람의 풀이를 볼 수 있다.<br>이는 아주 큰 장점인데 세상에 얼마나 많은 천재가 있는지 보여준다!<br>그들의 풀이를 보면서 정말 많이 배운다!</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">  <span class="keyword">public</span> <span class="keyword">int</span>[] solution(<span class="keyword">int</span>[] arr) &#123;</span><br><span class="line">      <span class="keyword">if</span> (arr.length &lt;= <span class="number">1</span>) <span class="keyword">return</span> <span class="keyword">new</span> <span class="keyword">int</span>[]&#123; -<span class="number">1</span> &#125;;</span><br><span class="line">      <span class="keyword">int</span> min = Arrays.stream(arr).min().getAsInt();</span><br><span class="line">      <span class="keyword">return</span> Arrays.stream(arr).filter(i -&gt; i != min).toArray();</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>Arrays.stream()를 사용한 풀이는 정말 간결해서 놀라웠다.</p><p><br><br><br></p><h2 id="Arrays-stream-개념과-예제"><a href="#Arrays-stream-개념과-예제" class="headerlink" title="Arrays.stream() 개념과 예제"></a>Arrays.stream() 개념과 예제</h2><p>Arrays.stream()란 자바 8부터 Arrays.stream()를 사용할 수 있는 메서드로 배열이나 컬렉션에서 for 또는 foreach 문 도는 것을 대신하여 사용할 수 있다.<br>foreach문처럼 요소를 하나씩 참조하여 람다식으로 처리할 수 있다.</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 기본 배열과 리스트</span></span><br><span class="line">String[] strArr = &#123;<span class="string">"aaa"</span>, <span class="string">"bbb"</span>, <span class="string">"ccc"</span>&#125;;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 스트림 생성</span></span><br><span class="line">Stream&lt;String&gt; strStream1 = Arrays.stream(strArr);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 스트림 출력</span></span><br><span class="line">strStream1.sorted().forEach(System.out::println);</span><br><span class="line"></span><br><span class="line"><span class="comment">//출력값</span></span><br><span class="line">aaa</span><br><span class="line">bbb</span><br><span class="line">ccc</span><br></pre></td></tr></table></figure><ul><li>filter(): 주어진 조건(Predicate)에 맞지 않는 요소를 걸러낸다.</li></ul><p>아래는 스트림으로 1부터 10까지를 만든 뒤 <code>filter()</code>를 이용하여 짝수만 찾아내는 예제이다.</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// filter()</span></span><br><span class="line">IntStream example2Stream = IntStream.rangeClosed(<span class="number">1</span>, <span class="number">10</span>);</span><br><span class="line">example2Stream.filter(i -&gt; i%<span class="number">2</span> ==<span class="number">0</span>).forEach(System.out::print); <span class="comment">// 246810</span></span><br></pre></td></tr></table></figure><p><br><br><br></p><h2 id="참고"><a href="#참고" class="headerlink" title="참고"></a>참고</h2><ul><li><a href="https://ryan-han.com/post/java/java-stream/">https://ryan-han.com/post/java/java-stream/</a></li></ul>]]></content:encoded>
      
      
      <category domain="https://sowon-dev.github.io/categories/Algorithm/">Algorithm</category>
      
      
      <category domain="https://sowon-dev.github.io/tags/Programmers/">Programmers</category>
      
      
      <comments>https://sowon-dev.github.io/2021/03/07/210307al-programmers-thesmallestnum/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>[자바JAVA]Missing Numbers 해커랭크</title>
      <link>https://sowon-dev.github.io/2021/03/07/210307al-hackerrank-MissingNumbers/</link>
      <guid>https://sowon-dev.github.io/2021/03/07/210307al-hackerrank-MissingNumbers/</guid>
      <pubDate>Sun, 07 Mar 2021 04:05:52 GMT</pubDate>
      
      <description>&lt;h2 id=&quot;문제&quot;&gt;&lt;a href=&quot;#문제&quot; class=&quot;headerlink&quot; title=&quot;문제&quot;&gt;&lt;/a&gt;문제&lt;/h2&gt;&lt;p&gt;arr과 brr을 비교하여 brr에는 있지만 arr에는 없는 숫자(Missing Numbers)를 배열로 나타내는 문제.&lt;/p&gt;
&lt;p&gt;Given two arrays of integers, find which elements in the second array are missing from the first array.&lt;/p&gt;</description>
      
      
      
      <content:encoded><![CDATA[<h2 id="문제"><a href="#문제" class="headerlink" title="문제"></a>문제</h2><p>arr과 brr을 비교하여 brr에는 있지만 arr에는 없는 숫자(Missing Numbers)를 배열로 나타내는 문제.</p><p>Given two arrays of integers, find which elements in the second array are missing from the first array.</p><a id="more"></a><p>Function Description : Complete the missingNumbers function in the editor below. It should return a sorted array of missing numbers.<br>missingNumbers has the following parameter(s):</p><ul><li>int arr[n]: the array with missing numbers</li><li>int brr[m]: the original array of numbers</li></ul><p>Returns : int[]: an array of integers</p><ul><li>입출력예시</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//입력</span></span><br><span class="line"><span class="number">10</span></span><br><span class="line"><span class="number">203</span> <span class="number">204</span> <span class="number">205</span> <span class="number">206</span> <span class="number">207</span> <span class="number">208</span> <span class="number">203</span> <span class="number">204</span> <span class="number">205</span> <span class="number">206</span></span><br><span class="line"><span class="number">13</span></span><br><span class="line"><span class="number">203</span> <span class="number">204</span> <span class="number">204</span> <span class="number">205</span> <span class="number">206</span> <span class="number">207</span> <span class="number">205</span> <span class="number">208</span> <span class="number">203</span> <span class="number">206</span> <span class="number">205</span> <span class="number">206</span> <span class="number">204</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//출력</span></span><br><span class="line"><span class="number">204</span> <span class="number">205</span> <span class="number">206</span></span><br></pre></td></tr></table></figure><p><br><br><br></p><h2 id="코드"><a href="#코드" class="headerlink" title="코드"></a>코드</h2><p>두 배열을 각각 HashMap에 담은 뒤 (brr 해쉬맵 - arr 해쉬맵)을 통해 빠진 숫자를 효율적으로 찾을 수 있다.</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">MissingNumbers</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">static</span> <span class="keyword">int</span>[] missingNumbers(<span class="keyword">int</span>[] arr, <span class="keyword">int</span>[] brr) &#123;</span><br><span class="line"></span><br><span class="line">    HashMap&lt;Integer, Integer&gt; hashmapA = <span class="keyword">new</span> HashMap&lt;Integer, Integer&gt;();</span><br><span class="line">    HashMap&lt;Integer, Integer&gt; hashmapB = <span class="keyword">new</span> HashMap&lt;Integer, Integer&gt;();</span><br><span class="line"></span><br><span class="line">    <span class="comment">//arr을 HashMap으로 만든 뒤 반복되는 숫자가 있으면 value값을 1 누적합한다.</span></span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i : arr) &#123;</span><br><span class="line">      <span class="keyword">if</span> (hashmapA.containsKey(i)) &#123;</span><br><span class="line">        hashmapA.put(i, hashmapA.get(i) + <span class="number">1</span>);</span><br><span class="line">      &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        hashmapA.put(i, <span class="number">1</span>);</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//brr을 HashMap으로 만든 뒤 반복되는 숫자가 있으면 value값을 1 누적합한다.</span></span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> j : brr) &#123;</span><br><span class="line">      <span class="keyword">if</span> (hashmapB.containsKey(j)) &#123;</span><br><span class="line">        hashmapB.put(j, hashmapB.get(j) + <span class="number">1</span>);</span><br><span class="line">      &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        hashmapB.put(j, <span class="number">1</span>);</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//HashMapB - HashMapA한 값을 리스트 diff에 담는다.</span></span><br><span class="line">    ArrayList&lt;Integer&gt; diff = <span class="keyword">new</span> ArrayList&lt;Integer&gt;();</span><br><span class="line">    <span class="keyword">for</span> (Integer i : hashmapB.keySet()) &#123;</span><br><span class="line">      <span class="keyword">if</span> (hashmapA.get(i) == <span class="keyword">null</span> || hashmapA.get(i) &lt; hashmapB.get(i)) &#123;</span><br><span class="line">        diff.add(i);</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//리스트를 배열로 만든다.</span></span><br><span class="line">    <span class="keyword">int</span>[] result = <span class="keyword">new</span> <span class="keyword">int</span>[diff.size()];</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; diff.size(); i++) &#123;</span><br><span class="line">      result[i] = diff.get(i);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    System.out.println(Arrays.toString(result));</span><br><span class="line">    <span class="keyword">return</span> result;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">    System.out.println(missingNumbers(<span class="keyword">new</span> <span class="keyword">int</span>[]&#123;<span class="number">203</span>, <span class="number">204</span>, <span class="number">205</span>, <span class="number">206</span>, <span class="number">207</span>, <span class="number">208</span>, <span class="number">203</span>, <span class="number">204</span>, <span class="number">205</span>, <span class="number">206</span>&#125;,</span><br><span class="line">        <span class="keyword">new</span> <span class="keyword">int</span>[]&#123;<span class="number">203</span>, <span class="number">204</span>, <span class="number">204</span>, <span class="number">205</span>, <span class="number">206</span>, <span class="number">207</span>, <span class="number">205</span>, <span class="number">208</span>, <span class="number">203</span>, <span class="number">206</span>, <span class="number">205</span>, <span class="number">206</span>, <span class="number">204</span>&#125;)</span><br><span class="line">        + <span class="string">", ans: [204 205 206]"</span>);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><br><br><br></p><h2 id="참고"><a href="#참고" class="headerlink" title="참고"></a>참고</h2><iframe width="100%" height="400" src="https://www.youtube.com/embed/1g3WmjMG2OM" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture" allowfullscreen></iframe><p><br><br><br></p><h2 id="해커랭크의-다른-문제-풀이가-보고싶다면"><a href="#해커랭크의-다른-문제-풀이가-보고싶다면" class="headerlink" title="해커랭크의 다른 문제 풀이가 보고싶다면?"></a>해커랭크의 다른 문제 풀이가 보고싶다면?</h2><ul><li><a href="https://github.com/sowon-dev/AlgorithmStudy_Java/tree/master/src/hackerrank">해커랭크(HackerRank) Easy Level java 풀이 모음</a></li></ul>]]></content:encoded>
      
      
      <category domain="https://sowon-dev.github.io/categories/Algorithm/">Algorithm</category>
      
      
      <category domain="https://sowon-dev.github.io/tags/Hackerrank/">Hackerrank</category>
      
      
      <comments>https://sowon-dev.github.io/2021/03/07/210307al-hackerrank-MissingNumbers/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>[자바JAVA]Separate the Numbers 해커랭크</title>
      <link>https://sowon-dev.github.io/2021/03/01/210302al-hackerrank-Separate-the-Numbers/</link>
      <guid>https://sowon-dev.github.io/2021/03/01/210302al-hackerrank-Separate-the-Numbers/</guid>
      <pubDate>Mon, 01 Mar 2021 15:00:00 GMT</pubDate>
      
      <description>&lt;h2 id=&quot;Separate-the-Numbers&quot;&gt;&lt;a href=&quot;#Separate-the-Numbers&quot; class=&quot;headerlink&quot; title=&quot;Separate the Numbers&quot;&gt;&lt;/a&gt;Separate the Numbers&lt;/h2&gt;&lt;p&gt;아래 제약사항을 충족하면 YES와 가장 작은 숫자를 리턴, 충족하지않으면 NO를 리턴한다.&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;다음요소는 이전요소보다 항상 1이 더 커야한다.&lt;/li&gt;
&lt;li&gt;요소는 0로 시작해서는 안 된다.&lt;/li&gt;
&lt;li&gt;s안의 시퀀스를 재배열할 수 없다.</description>
      
      
      
      <content:encoded><![CDATA[<h2 id="Separate-the-Numbers"><a href="#Separate-the-Numbers" class="headerlink" title="Separate the Numbers"></a>Separate the Numbers</h2><p>아래 제약사항을 충족하면 YES와 가장 작은 숫자를 리턴, 충족하지않으면 NO를 리턴한다.</p><ol><li>다음요소는 이전요소보다 항상 1이 더 커야한다.</li><li>요소는 0로 시작해서는 안 된다.</li><li>s안의 시퀀스를 재배열할 수 없다.<a id="more"></a></li></ol><p>A numeric string, s, is beautiful if it can be split into a sequence of two or more positive integers, a[1], a[2], …, a[n], satisfying the following conditions:</p><ol><li>each element in the sequence is 1 more than the previous element.</li><li>No a[i] contains a leading zero.</li><li>The contents of the sequence cannot be rearranged.</li></ol><ul><li>입출력예시1</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">&#x2F;&#x2F;입력</span><br><span class="line">1234</span><br><span class="line">91011</span><br><span class="line">99100</span><br><span class="line">101103</span><br><span class="line">010203</span><br><span class="line">13</span><br><span class="line">1</span><br><span class="line"></span><br><span class="line">&#x2F;&#x2F;출력</span><br><span class="line">YES 1</span><br><span class="line">YES 9</span><br><span class="line">YES 99</span><br><span class="line">NO</span><br><span class="line">NO</span><br><span class="line">NO</span><br><span class="line">NO</span><br></pre></td></tr></table></figure><ul><li>입출력예시2</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">&#x2F;&#x2F;입력</span><br><span class="line">99910001001</span><br><span class="line">7891011</span><br><span class="line">9899100</span><br><span class="line">999100010001</span><br><span class="line"></span><br><span class="line">&#x2F;&#x2F;출력</span><br><span class="line">YES 999</span><br><span class="line">YES 7</span><br><span class="line">YES 98</span><br><span class="line">NO</span><br></pre></td></tr></table></figure><p><br><br><br></p><h2 id="풀이"><a href="#풀이" class="headerlink" title="풀이"></a>풀이</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">SeparatetheNumbers</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">  <span class="function"><span class="keyword">static</span> <span class="keyword">void</span> <span class="title">separateNumbers</span><span class="params">(String s)</span> </span>&#123;</span><br><span class="line">    String subStr = <span class="string">""</span>;</span><br><span class="line">    <span class="keyword">boolean</span> isVaild = <span class="keyword">false</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//subString을 0부터 시작하니까 i는 1부터 시작하고 s 길이의 반을 넘을 수 없다.</span></span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= s.length() / <span class="number">2</span>; i++) &#123;</span><br><span class="line">      subStr = s.substring(<span class="number">0</span>, i);</span><br><span class="line">      Long num = Long.parseLong(subStr);</span><br><span class="line"></span><br><span class="line">      <span class="comment">//0부터 i까지 자른 String을 vaildStr변수에 담고 vaildStr를 1씩증가시킨값을 누적합한다.</span></span><br><span class="line">      String vaildStr = subStr;</span><br><span class="line">      <span class="keyword">while</span> (vaildStr.length() &lt; s.length()) &#123;</span><br><span class="line">        vaildStr += Long.toString(++num);</span><br><span class="line">      &#125;</span><br><span class="line"></span><br><span class="line">      <span class="comment">//누적합한 vaildStr과 s를 비교하여 일치하면 isVaild= true바꿔주고</span></span><br><span class="line">      <span class="comment">// 가장 작은 숫자를 리턴해야하기때문에 for문을 바로 종료한다.</span></span><br><span class="line">      <span class="keyword">if</span> (s.equals(vaildStr)) &#123;</span><br><span class="line">        isVaild = <span class="keyword">true</span>;</span><br><span class="line">        <span class="keyword">break</span>;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    System.out.println(isVaild ? <span class="string">"YES "</span> + subStr : <span class="string">"NO"</span>);</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">    separateNumbers(<span class="string">"1234"</span>);</span><br><span class="line">    System.out.print(<span class="string">"ans: YES 1\n"</span>);</span><br><span class="line">    separateNumbers(<span class="string">"91011"</span>);</span><br><span class="line">    System.out.print(<span class="string">"ans: YES 9\n"</span>);</span><br><span class="line">    separateNumbers(<span class="string">"99100"</span>);</span><br><span class="line">    System.out.print(<span class="string">"ans: YES 99\n"</span>);</span><br><span class="line">    separateNumbers(<span class="string">"101103"</span>);</span><br><span class="line">    System.out.print(<span class="string">"ans: NO \n"</span>);</span><br><span class="line">    separateNumbers(<span class="string">"010203"</span>);</span><br><span class="line">    System.out.print(<span class="string">"ans: NO \n"</span>);</span><br><span class="line">    separateNumbers(<span class="string">"13"</span>);</span><br><span class="line">    System.out.print(<span class="string">"ans: NO \n"</span>);</span><br><span class="line">    separateNumbers(<span class="string">"1"</span>);</span><br><span class="line">    System.out.print(<span class="string">"ans: NO \n"</span>);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><br><br><br></p><h2 id="참고"><a href="#참고" class="headerlink" title="참고"></a>참고</h2><iframe width="100%" height="400" src="https://www.youtube.com/embed/q9d7MZpuWSE" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture" allowfullscreen></iframe><p><br><br><br></p><h2 id="해커랭크의-다른-문제-풀이가-보고싶다면"><a href="#해커랭크의-다른-문제-풀이가-보고싶다면" class="headerlink" title="해커랭크의 다른 문제 풀이가 보고싶다면?"></a>해커랭크의 다른 문제 풀이가 보고싶다면?</h2><ul><li><a href="https://github.com/sowon-dev/AlgorithmStudy_Java/tree/master/src/hackerrank">해커랭크(HackerRank) Easy Level java 풀이 모음</a></li></ul>]]></content:encoded>
      
      
      <category domain="https://sowon-dev.github.io/categories/Algorithm/">Algorithm</category>
      
      
      <category domain="https://sowon-dev.github.io/tags/Hackerrank/">Hackerrank</category>
      
      
      <comments>https://sowon-dev.github.io/2021/03/01/210302al-hackerrank-Separate-the-Numbers/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>[자바JAVA]문자열 내 p와 y의 개수 프로그래머스</title>
      <link>https://sowon-dev.github.io/2021/02/27/210228al-programmers-The-Number-of-pandy-in-String/</link>
      <guid>https://sowon-dev.github.io/2021/02/27/210228al-programmers-The-Number-of-pandy-in-String/</guid>
      <pubDate>Sat, 27 Feb 2021 21:59:33 GMT</pubDate>
      
      <description>&lt;h2 id=&quot;문자열-내-p와-y의-개수&quot;&gt;&lt;a href=&quot;#문자열-내-p와-y의-개수&quot; class=&quot;headerlink&quot; title=&quot;문자열 내 p와 y의 개수&quot;&gt;&lt;/a&gt;문자열 내 p와 y의 개수&lt;/h2&gt;&lt;p&gt;대문자와 소문자가 섞여있는 문자열 s가 주어집니다. s에 ‘p’의 개수와 ‘y’의 개수를 비교해 같으면 True, 다르면 False를 return 하는 solution를 완성하세요. ‘p’, ‘y’ 모두 하나도 없는 경우는 항상 True를 리턴합니다. 단, 개수를 비교할 때 대문자와 소문자는 구별하지 않습니다.&lt;br&gt;예를 들어 s가 “pPoooyY”면 true를 return하고 “Pyy”라면 false를 return합니다.&lt;/p&gt;</description>
      
      
      
      <content:encoded><![CDATA[<h2 id="문자열-내-p와-y의-개수"><a href="#문자열-내-p와-y의-개수" class="headerlink" title="문자열 내 p와 y의 개수"></a>문자열 내 p와 y의 개수</h2><p>대문자와 소문자가 섞여있는 문자열 s가 주어집니다. s에 ‘p’의 개수와 ‘y’의 개수를 비교해 같으면 True, 다르면 False를 return 하는 solution를 완성하세요. ‘p’, ‘y’ 모두 하나도 없는 경우는 항상 True를 리턴합니다. 단, 개수를 비교할 때 대문자와 소문자는 구별하지 않습니다.<br>예를 들어 s가 “pPoooyY”면 true를 return하고 “Pyy”라면 false를 return합니다.</p><a id="more"></a><ul><li><p>제한사항<br>문자열 s의 길이 : 50 이하의 자연수<br>문자열 s는 알파벳으로만 이루어져 있습니다.</p></li><li><p>입출력 예시1</p></li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&#x2F;&#x2F;입력</span><br><span class="line">pPoooyY</span><br><span class="line"></span><br><span class="line">&#x2F;&#x2F;출력</span><br><span class="line">true</span><br></pre></td></tr></table></figure><ul><li>입출력 예시2</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&#x2F;&#x2F;입력</span><br><span class="line">Pyy</span><br><span class="line"></span><br><span class="line">&#x2F;&#x2F;출력</span><br><span class="line">false</span><br></pre></td></tr></table></figure><p><br><br><br></p><h2 id="코드1"><a href="#코드1" class="headerlink" title="코드1"></a>코드1</h2><p>제일 처음 생각했던 방법이다.</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">static</span> <span class="keyword">boolean</span> <span class="title">solution</span><span class="params">(String s)</span> </span>&#123;</span><br><span class="line"><span class="comment">//sol1. score 1004, 평균 통과 (0.02ms, 51.8MB)</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> cntP = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">int</span> cntY = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">char</span> c : s.toCharArray())&#123;</span><br><span class="line">  <span class="keyword">if</span>(c == <span class="string">'p'</span> || c ==<span class="string">'P'</span>)&#123;</span><br><span class="line">cntP ++;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">if</span>(c == <span class="string">'y'</span> || c == <span class="string">'Y'</span>)&#123;</span><br><span class="line">cntY ++;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> cntP == cntY;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><br><br><br></p><h2 id="코드2"><a href="#코드2" class="headerlink" title="코드2"></a>코드2</h2><p>int cnt를 하나로 가져가면서 toUpperCase 사용하는 방법이다.<br>평균 통과 (0.04ms, 53.9MB)</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">static</span> <span class="keyword">boolean</span> <span class="title">solution</span><span class="params">(String s)</span> </span>&#123;</span><br><span class="line"><span class="keyword">int</span> cnt = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">char</span> c : s.toUpperCase().toCharArray())&#123;</span><br><span class="line">      <span class="keyword">if</span>(c == <span class="string">'P'</span>)&#123;</span><br><span class="line">        cnt ++;</span><br><span class="line">      &#125;</span><br><span class="line">      <span class="keyword">if</span>(c == <span class="string">'Y'</span>)&#123;</span><br><span class="line">        cnt --;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line"> </span><br><span class="line">    <span class="keyword">return</span> cnt == <span class="number">0</span> ? <span class="keyword">true</span> : <span class="keyword">false</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><br><br><br></p><h2 id="코드3-람다식-사용"><a href="#코드3-람다식-사용" class="headerlink" title="코드3 : 람다식 사용"></a>코드3 : 람다식 사용</h2><p>평균 통과 (3.37ms, 53.3MB)</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">static</span> <span class="keyword">boolean</span> <span class="title">solution</span><span class="params">(String s)</span> </span>&#123;</span><br><span class="line">    s = s.toUpperCase();</span><br><span class="line">    <span class="keyword">return</span> s.chars().filter( e -&gt; <span class="string">'P'</span>== e).count() == s.chars().filter( e -&gt; <span class="string">'Y'</span>== e).count();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content:encoded>
      
      
      <category domain="https://sowon-dev.github.io/categories/Algorithm/">Algorithm</category>
      
      
      <category domain="https://sowon-dev.github.io/tags/Programmers/">Programmers</category>
      
      
      <comments>https://sowon-dev.github.io/2021/02/27/210228al-programmers-The-Number-of-pandy-in-String/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>[자바JAVA]Two Characters 해커랭크</title>
      <link>https://sowon-dev.github.io/2021/02/27/210228al-hackerrank-Two-Characters/</link>
      <guid>https://sowon-dev.github.io/2021/02/27/210228al-hackerrank-Two-Characters/</guid>
      <pubDate>Sat, 27 Feb 2021 18:53:14 GMT</pubDate>
      
      <description>&lt;h2 id=&quot;Two-Characters&quot;&gt;&lt;a href=&quot;#Two-Characters&quot; class=&quot;headerlink&quot; title=&quot;Two Characters&quot;&gt;&lt;/a&gt;Two Characters&lt;/h2&gt;&lt;p&gt;주어진 String의 요소 2가지만을 추출하여 String을 만들때 가장 길이가 긴 String의 길이값을 리턴하는 문제이다.&lt;br&gt;Given a string, remove characters until the string is made up of any two alternating characters. When you choose a character to remove, all instances of that character must be removed. Determine the longest string possible that contains just two alternating letters&lt;/p&gt;</description>
      
      
      
      <content:encoded><![CDATA[<h2 id="Two-Characters"><a href="#Two-Characters" class="headerlink" title="Two Characters"></a>Two Characters</h2><p>주어진 String의 요소 2가지만을 추출하여 String을 만들때 가장 길이가 긴 String의 길이값을 리턴하는 문제이다.<br>Given a string, remove characters until the string is made up of any two alternating characters. When you choose a character to remove, all instances of that character must be removed. Determine the longest string possible that contains just two alternating letters</p><a id="more"></a><ul><li>입출력예시1</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//입력</span></span><br><span class="line">beabeefeab</span><br><span class="line"></span><br><span class="line"><span class="comment">//출력</span></span><br><span class="line"><span class="number">5</span></span><br></pre></td></tr></table></figure><p><br><br><br></p><h2 id="코드"><a href="#코드" class="headerlink" title="코드"></a>코드</h2><p>2차원 배열로 접근할 수 있다.</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">TwoCharacters</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="keyword">int</span> NUM_LETTERS = <span class="number">26</span>;</span><br><span class="line"></span><br><span class="line">  <span class="function"><span class="keyword">static</span> <span class="keyword">int</span> <span class="title">alternate</span><span class="params">(<span class="keyword">int</span> length, String s)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">int</span> maxPattern = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span>(s.length() == <span class="number">1</span>)<span class="comment">//Edge case where length is 1</span></span><br><span class="line">    &#123;</span><br><span class="line">      <span class="keyword">return</span> maxPattern;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/* Create arrays representing the 26^2 subproblems */</span></span><br><span class="line">    <span class="keyword">int</span>[][] pair = <span class="keyword">new</span> <span class="keyword">int</span>[NUM_LETTERS][NUM_LETTERS];</span><br><span class="line">    <span class="keyword">int</span>[][] count = <span class="keyword">new</span> <span class="keyword">int</span>[NUM_LETTERS][NUM_LETTERS];</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; length; i++) &#123;</span><br><span class="line">      <span class="keyword">char</span> letter = s.charAt(i);</span><br><span class="line">      <span class="keyword">int</span> letterNum = letter - <span class="string">'a'</span>;</span><br><span class="line"></span><br><span class="line">      <span class="comment">/* Update row */</span></span><br><span class="line">      <span class="keyword">for</span> (<span class="keyword">int</span> col = <span class="number">0</span>; col &lt; NUM_LETTERS; col++) &#123;</span><br><span class="line">        <span class="keyword">if</span> (pair[letterNum][col] == letter) &#123;</span><br><span class="line">          count[letterNum][col] = -<span class="number">1</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (count[letterNum][col] != -<span class="number">1</span>) &#123;</span><br><span class="line">          pair[letterNum][col] = letter;</span><br><span class="line">          count[letterNum][col]++;</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;</span><br><span class="line"></span><br><span class="line">      <span class="comment">/* Update column */</span></span><br><span class="line">      <span class="keyword">for</span> (<span class="keyword">int</span> row = <span class="number">0</span>; row &lt; NUM_LETTERS; row++) &#123;</span><br><span class="line">        <span class="keyword">if</span> (pair[row][letterNum] == letter) &#123;</span><br><span class="line">          count[row][letterNum] = -<span class="number">1</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (count[row][letterNum] != -<span class="number">1</span>) &#123;</span><br><span class="line">          pair[row][letterNum] = letter;</span><br><span class="line">          count[row][letterNum]++;</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/* Find max in "count" array */</span></span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> row = <span class="number">0</span>; row &lt; NUM_LETTERS; row++) &#123;</span><br><span class="line">      <span class="keyword">for</span> (<span class="keyword">int</span> col = <span class="number">0</span>; col &lt; NUM_LETTERS; col++) &#123;</span><br><span class="line">        maxPattern = Math.max(maxPattern, count[row][col]);</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> maxPattern;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">    System.out.println(alternate(<span class="number">10</span>, <span class="string">"beabeefeab"</span>)+<span class="string">", ans: 5"</span>);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>참고 : <a href="https://studyalgorithms.com/string/hackerrank-two-characters/">https://studyalgorithms.com/string/hackerrank-two-characters/</a></li></ul><p><br><br><br></p><h2 id="해커랭크의-다른-문제-풀이가-보고싶다면"><a href="#해커랭크의-다른-문제-풀이가-보고싶다면" class="headerlink" title="해커랭크의 다른 문제 풀이가 보고싶다면?"></a>해커랭크의 다른 문제 풀이가 보고싶다면?</h2><ul><li><a href="https://github.com/sowon-dev/AlgorithmStudy_Java/tree/master/src/hackerrank">해커랭크(HackerRank) Easy Level java 풀이 모음</a></li></ul>]]></content:encoded>
      
      
      <category domain="https://sowon-dev.github.io/categories/Algorithm/">Algorithm</category>
      
      
      <category domain="https://sowon-dev.github.io/tags/Hackerrank/">Hackerrank</category>
      
      
      <comments>https://sowon-dev.github.io/2021/02/27/210228al-hackerrank-Two-Characters/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>SVN lock 해제하기, commit시 already lock 충돌 해결하기</title>
      <link>https://sowon-dev.github.io/2021/02/23/210224svn-unlock/</link>
      <guid>https://sowon-dev.github.io/2021/02/23/210224svn-unlock/</guid>
      <pubDate>Tue, 23 Feb 2021 19:43:32 GMT</pubDate>
      
      <description>&lt;h2 id=&quot;문제상황&quot;&gt;&lt;a href=&quot;#문제상황&quot; class=&quot;headerlink&quot; title=&quot;문제상황&quot;&gt;&lt;/a&gt;문제상황&lt;/h2&gt;&lt;p&gt;commit을 치는데 계속 svn 충돌문제가 발생했다. console을 확인해보니 already lock이라는 에러메세지가 보였다. 이로 인해 commit도 update도 되지 않았다.&lt;br&gt;문제 발생 원인을 생각해보니 최근 소스파일을 수정하고 commit 명령어를 날렸는데 그 사이 svn서버가 재시작하게된 일이있었다.&lt;br&gt;이때문에 commit은 svn서버에 정상반영되었으나 내 로컬에는 해당 commit이 반영되지않는 이상한 일있었다. svn의 모든 기능이 잠겨버리는 바람에 해결해야만했다.&lt;br&gt;해결하고보니 간단한 문제였다. 미리 겁먹지말자!&lt;/p&gt;</description>
      
      
      
      <content:encoded><![CDATA[<h2 id="문제상황"><a href="#문제상황" class="headerlink" title="문제상황"></a>문제상황</h2><p>commit을 치는데 계속 svn 충돌문제가 발생했다. console을 확인해보니 already lock이라는 에러메세지가 보였다. 이로 인해 commit도 update도 되지 않았다.<br>문제 발생 원인을 생각해보니 최근 소스파일을 수정하고 commit 명령어를 날렸는데 그 사이 svn서버가 재시작하게된 일이있었다.<br>이때문에 commit은 svn서버에 정상반영되었으나 내 로컬에는 해당 commit이 반영되지않는 이상한 일있었다. svn의 모든 기능이 잠겨버리는 바람에 해결해야만했다.<br>해결하고보니 간단한 문제였다. 미리 겁먹지말자!</p><a id="more"></a><p><a href="http://svnbook.red-bean.com/en/1.8/svn.advanced.locking.html">SVN official doc</a>에는 Harry and Sally의 예시를 통해 어떤 경우에 LOCK이 발생하는 지 설명해놓았다.<br>다양한 상황에 따라 LOCK발생하지만 딱 한마디로 요약해보자면 clashing commits(커밋충돌)을 방지하기 위해서이다.</p><p><br><br><br></p><h2 id="해결방법"><a href="#해결방법" class="headerlink" title="해결방법"></a>해결방법</h2><ol><li><a href="https://sqlitebrowser.org/">sqlite browser사이트에서 DB Browser for SQLite를</a> 자신의 상황에 맞게 다운로드한다.<br>나는 윈도우 64비트를 사용중이므로 가장 최신 버전중에 설치가 필요없는 파일을 다운로드했다.</li></ol><p><img src="/img/210224svn-unlock.PNG" alt=""></p><ol start="2"><li><code>DB Browser for SQLite.exe</code> 실행<br>설치된 파일안의 DB Browser for SQLite.exe 파일을 실행한다.</li></ol><ol start="3"><li><code>데이터베이스 열기</code>를 클릭</li></ol><ol start="4"><li>사용중인 프로젝트안의 <code>wc.db</code> 파일 열기<br>나의 경우 D:\workspace\프로젝트명.svn 안의 wc.db 파일을 열었다.</li></ol><ol start="5"><li>SQL실행 탭에서 unlock명령어 실행<br>lock이 생성된 경우 데이터보기 탭에서 WC_LOCK 테이블과 WORK_QUEUE테이블에 데이터가 존재하는 것을 확인할 수 있다.<br>svn에 이상이 없는경우 두 테이블에 데이터가 존재하지 않는다.<br>두 테이블에 데이터가 존재하는 경우 SQL실행탭을 클릭하여 아래와 같이 명령어를 실행한다.</li></ol><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">DELETE</span> <span class="keyword">FROM</span> WC_LOCK</span><br><span class="line"><span class="keyword">DELETE</span> <span class="keyword">FROM</span> WORK_QUEUE;</span><br></pre></td></tr></table></figure><p><img src="/img/210224svn-unlock2.PNG" alt=""></p><p>이제 이클립스로 돌아가서 commit이나 update를 하면 svn이 정상적으로 작동된다.<br>해결!</p>]]></content:encoded>
      
      
      <category domain="https://sowon-dev.github.io/categories/Version-control/">Version control</category>
      
      
      <category domain="https://sowon-dev.github.io/tags/Eclipse/">Eclipse</category>
      
      <category domain="https://sowon-dev.github.io/tags/SVN/">SVN</category>
      
      <category domain="https://sowon-dev.github.io/tags/%EC%98%A4%EB%A5%98%EC%9D%BC%EC%A7%80/">오류일지</category>
      
      
      <comments>https://sowon-dev.github.io/2021/02/23/210224svn-unlock/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>[자바JAVA]Sherlock and Squares 해커랭크</title>
      <link>https://sowon-dev.github.io/2021/02/18/210218al-hakkerrank-Sherlock-and-Squares/</link>
      <guid>https://sowon-dev.github.io/2021/02/18/210218al-hakkerrank-Sherlock-and-Squares/</guid>
      <pubDate>Thu, 18 Feb 2021 04:29:16 GMT</pubDate>
      
      <description>&lt;h2 id=&quot;Sherlock-and-Squares&quot;&gt;&lt;a href=&quot;#Sherlock-and-Squares&quot; class=&quot;headerlink&quot; title=&quot;Sherlock and Squares&quot;&gt;&lt;/a&gt;Sherlock and Squares&lt;/h2&gt;&lt;p&gt;주어진 수의 범위 안의 제곱근(square integer)의 갯수를 구하는 문제이다.&lt;br&gt;Watson likes to challenge Sherlock’s math ability. He will provide a starting and ending value that describe a range of integers, inclusive of the endpoints. Sherlock must determine the number of square integers within that range.&lt;br&gt;Note: A square integer is an integer which is the square of an integer, e.g. 1,4,9.16,25&lt;/p&gt;</description>
      
      
      
      <content:encoded><![CDATA[<h2 id="Sherlock-and-Squares"><a href="#Sherlock-and-Squares" class="headerlink" title="Sherlock and Squares"></a>Sherlock and Squares</h2><p>주어진 수의 범위 안의 제곱근(square integer)의 갯수를 구하는 문제이다.<br>Watson likes to challenge Sherlock’s math ability. He will provide a starting and ending value that describe a range of integers, inclusive of the endpoints. Sherlock must determine the number of square integers within that range.<br>Note: A square integer is an integer which is the square of an integer, e.g. 1,4,9.16,25</p><a id="more"></a><ul><li>입출력예시1</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//입력</span></span><br><span class="line"><span class="number">3</span> <span class="number">9</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//출력</span></span><br><span class="line"><span class="number">2</span></span><br></pre></td></tr></table></figure><ul><li>입출력예시2</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//입력</span></span><br><span class="line"><span class="number">17</span> <span class="number">24</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//출력</span></span><br><span class="line"><span class="number">0</span></span><br></pre></td></tr></table></figure><p><br><br><br></p><h2 id="풀이"><a href="#풀이" class="headerlink" title="풀이"></a>풀이</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">SherlockandSquares</span> </span>&#123;</span><br><span class="line"><span class="function"><span class="keyword">static</span> <span class="keyword">int</span> <span class="title">squares</span><span class="params">(<span class="keyword">int</span> a, <span class="keyword">int</span> b)</span> </span>&#123;</span><br><span class="line"><span class="comment">//sol1</span></span><br><span class="line"><span class="keyword">int</span> start = (<span class="keyword">int</span>) Math.sqrt(a);</span><br><span class="line"><span class="keyword">int</span> end = (<span class="keyword">int</span>) Math.sqrt(b);</span><br><span class="line"></span><br><span class="line">start = (Math.pow(start, <span class="number">2</span>) &gt;= a) ? start-<span class="number">1</span> : start;</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> end - start;&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">System.out.println(squares(<span class="number">24</span>, <span class="number">49</span>) + <span class="string">", ans: 3"</span>);</span><br><span class="line">System.out.println(squares(<span class="number">3</span>, <span class="number">9</span>) + <span class="string">", ans: 2"</span>);</span><br><span class="line">System.out.println(squares(<span class="number">17</span>, <span class="number">24</span>) + <span class="string">", ans: 0"</span>);</span><br><span class="line">System.out.println(squares(<span class="number">100</span>, <span class="number">1000</span>) + <span class="string">", ans: 22"</span>);</span><br><span class="line">System.out.println(squares(<span class="number">9</span>, <span class="number">16</span>) + <span class="string">", ans: 2"</span>);</span><br><span class="line">System.out.println(squares(<span class="number">11</span>, <span class="number">734</span>) + <span class="string">", ans: 24"</span>);</span><br><span class="line">System.out.println(squares(<span class="number">228</span>, <span class="number">919</span>) + <span class="string">", ans: 15"</span>);</span><br><span class="line">System.out.println(squares(<span class="number">71</span>, <span class="number">188</span>) + <span class="string">", ans: 5"</span>); <span class="comment">//9 10 11 12 13</span></span><br><span class="line">System.out.println(squares(<span class="number">4</span>, <span class="number">4</span>) + <span class="string">", ans: 1"</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><br><br><br></p><h2 id="한-줄-풀이"><a href="#한-줄-풀이" class="headerlink" title="한 줄 풀이"></a>한 줄 풀이</h2><p>Math 적절히 사용하면 한 줄 코드로 문제 해결아 가능하다.</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">SherlockandSquares</span> </span>&#123;</span><br><span class="line"><span class="function"><span class="keyword">static</span> <span class="keyword">int</span> <span class="title">squares</span><span class="params">(<span class="keyword">int</span> a, <span class="keyword">int</span> b)</span> </span>&#123;</span><br><span class="line"><span class="comment">//sol2. one line code</span></span><br><span class="line"><span class="keyword">return</span> (<span class="keyword">int</span>) Math.floor(Math.sqrt(b)) - (<span class="keyword">int</span>) Math.ceil(Math.sqrt(a)) + <span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">System.out.println(squares(<span class="number">24</span>, <span class="number">49</span>) + <span class="string">", ans: 3"</span>);</span><br><span class="line">System.out.println(squares(<span class="number">3</span>, <span class="number">9</span>) + <span class="string">", ans: 2"</span>);</span><br><span class="line">System.out.println(squares(<span class="number">17</span>, <span class="number">24</span>) + <span class="string">", ans: 0"</span>);</span><br><span class="line">System.out.println(squares(<span class="number">100</span>, <span class="number">1000</span>) + <span class="string">", ans: 22"</span>);</span><br><span class="line">System.out.println(squares(<span class="number">9</span>, <span class="number">16</span>) + <span class="string">", ans: 2"</span>);</span><br><span class="line">System.out.println(squares(<span class="number">11</span>, <span class="number">734</span>) + <span class="string">", ans: 24"</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><br><br><br></p><h2 id="해커랭크의-다른-문제-풀이가-보고싶다면"><a href="#해커랭크의-다른-문제-풀이가-보고싶다면" class="headerlink" title="해커랭크의 다른 문제 풀이가 보고싶다면?"></a>해커랭크의 다른 문제 풀이가 보고싶다면?</h2><ul><li><a href="https://github.com/sowon-dev/AlgorithmStudy_Java/tree/master/src/hackerrank">해커랭크(HackerRank) Easy Level java 풀이 모음</a></li></ul>]]></content:encoded>
      
      
      <category domain="https://sowon-dev.github.io/categories/Algorithm/">Algorithm</category>
      
      
      <category domain="https://sowon-dev.github.io/tags/Hackerrank/">Hackerrank</category>
      
      
      <comments>https://sowon-dev.github.io/2021/02/18/210218al-hakkerrank-Sherlock-and-Squares/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>[자바JAVA]Picking Numbers 해커랭크</title>
      <link>https://sowon-dev.github.io/2021/02/17/210217al-hackerrank-Picking-Numbers/</link>
      <guid>https://sowon-dev.github.io/2021/02/17/210217al-hackerrank-Picking-Numbers/</guid>
      <pubDate>Wed, 17 Feb 2021 03:54:51 GMT</pubDate>
      
      <description>&lt;h2 id=&quot;Picking-Numbers&quot;&gt;&lt;a href=&quot;#Picking-Numbers&quot; class=&quot;headerlink&quot; title=&quot;Picking Numbers&quot;&gt;&lt;/a&gt;Picking Numbers&lt;/h2&gt;&lt;p&gt;list의 모든 요소들의 절대편차(absolute difference) &amp;lt;= 1 인 가장 긴 list의 길이를 출력하는 문제이다&lt;br&gt;Given an array of integers, find the longest subarray where the absolute difference between any two elements is less than or equal to 1.&lt;/p&gt;</description>
      
      
      
      <content:encoded><![CDATA[<h2 id="Picking-Numbers"><a href="#Picking-Numbers" class="headerlink" title="Picking Numbers"></a>Picking Numbers</h2><p>list의 모든 요소들의 절대편차(absolute difference) &lt;= 1 인 가장 긴 list의 길이를 출력하는 문제이다<br>Given an array of integers, find the longest subarray where the absolute difference between any two elements is less than or equal to 1.</p><a id="more"></a><ul><li>입출력예시1</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//입력</span></span><br><span class="line"><span class="number">4</span> <span class="number">6</span> <span class="number">5</span> <span class="number">3</span> <span class="number">3</span> <span class="number">1</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//출력</span></span><br><span class="line"><span class="number">3</span></span><br></pre></td></tr></table></figure><ul><li>입출력예시2</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//입력</span></span><br><span class="line"><span class="number">1</span> <span class="number">2</span> <span class="number">2</span> <span class="number">3</span> <span class="number">1</span> <span class="number">2</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//출력</span></span><br><span class="line"><span class="number">5</span></span><br></pre></td></tr></table></figure><p><br><br><br></p><h2 id="풀이"><a href="#풀이" class="headerlink" title="풀이"></a>풀이</h2><p>문제의 조건에서 0 &lt; a[i] &lt; 100이므로 maxIndex는 100이다.<br>0부터 99까지의 숫자배열 temp를 만든 뒤 a의 요소값과 동일한 temp인덱스에 1씩 카운트를 증가시킨다.<br>예를 들어, a=[1,1,2,2,4,4,5,5,5]인 경우 temp[0]=0, temp[1]=2, temp[2]=2, temp[3]=0, temp[4]=2, temp[5]=3, temp[6]=0, temp[7]=0, … , temp[99]=0이다.</p><p>temp[i]와 temp[i+1]의 합은 항상 절대편차가 &lt;= 1이다. 따라서 배열 전체를 반복문으로 돌려서 두 요소의 합의 최대값을 리턴하면 되는 문제이다.<br>예를 들어, 0번1번 인덱스를 더하면 2가 되고, 1번2번 인덱스를 더하면 4, 2번3번인덱스의 합은 2, 3번4번 인덱스를 더하면 2, 4번5번 인덱스 합은 5, 5번6번 인덱스합은 3, 6번7번 인덱스합은 0, 7번8번인덱스합은 0, …, 98번99번 인덱스합은 0 처럼 바로 옆 인덱스의 값을 합해서 99까지 반복한다.</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">PickingNumbers</span> </span>&#123;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">int</span> <span class="title">pickingNumbers</span><span class="params">(List&lt;Integer&gt; a)</span> </span>&#123;</span><br><span class="line"><span class="comment">// 문제의 조건에서 0&lt; a[i] &lt;100이므로 maxIndex는 100이다.</span></span><br><span class="line">        <span class="keyword">int</span> maxIndex = <span class="number">100</span>;</span><br><span class="line">        <span class="keyword">int</span>[] temp = <span class="keyword">new</span> <span class="keyword">int</span>[maxIndex];</span><br><span class="line"> </span><br><span class="line">        <span class="comment">//0부터 99까지의 숫자배열에 a의 요소와 동일한 숫자가 있으면 1씩 카운트룰 증가시킨다.</span></span><br><span class="line">        <span class="comment">//예를 들어 a = [1,2,1]인경우 temp[1]=2이고 temp[2]=1이다.</span></span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> number : a) &#123;</span><br><span class="line">        temp[number]++;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">int</span> result = <span class="number">0</span>;</span><br><span class="line"> </span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; maxIndex - <span class="number">1</span>; i++) &#123;</span><br><span class="line">            result = Math.max(result, temp[i] + temp[i + <span class="number">1</span>]);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> result;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">System.out.println(pickingNumbers(<span class="keyword">new</span> ArrayList&lt;&gt;(Arrays.asList(<span class="number">1</span>, <span class="number">1</span>, <span class="number">2</span>, <span class="number">2</span>, <span class="number">4</span>, <span class="number">4</span>, <span class="number">5</span>, <span class="number">5</span>, <span class="number">5</span>)))+<span class="string">", ans: 5"</span>);</span><br><span class="line">System.out.println(pickingNumbers(<span class="keyword">new</span> ArrayList&lt;&gt;(Arrays.asList(<span class="number">4</span>, <span class="number">6</span>, <span class="number">5</span>, <span class="number">3</span>, <span class="number">3</span>, <span class="number">1</span>)))+<span class="string">", ans: 3"</span>);</span><br><span class="line">System.out.println(pickingNumbers(<span class="keyword">new</span> ArrayList&lt;&gt;(Arrays.asList(<span class="number">1</span>, <span class="number">2</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">1</span>, <span class="number">2</span>)))+<span class="string">", ans: 5"</span>);</span><br><span class="line">System.out.println(pickingNumbers(Arrays.asList(<span class="number">98</span>, <span class="number">3</span>, <span class="number">99</span>, <span class="number">1</span>, <span class="number">97</span>, <span class="number">2</span>)) == <span class="number">2</span>);</span><br><span class="line">        System.out.println(pickingNumbers(Arrays.asList(<span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>)) == <span class="number">3</span>);</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><br><br><br></p><h2 id="해커랭크의-다른-문제-풀이가-보고싶다면"><a href="#해커랭크의-다른-문제-풀이가-보고싶다면" class="headerlink" title="해커랭크의 다른 문제 풀이가 보고싶다면?"></a>해커랭크의 다른 문제 풀이가 보고싶다면?</h2><ul><li><a href="https://github.com/sowon-dev/AlgorithmStudy_Java/tree/master/src/hackerrank">해커랭크(HackerRank) Easy Level java 풀이 모음</a></li></ul>]]></content:encoded>
      
      
      <category domain="https://sowon-dev.github.io/categories/Algorithm/">Algorithm</category>
      
      
      <category domain="https://sowon-dev.github.io/tags/Hackerrank/">Hackerrank</category>
      
      
      <comments>https://sowon-dev.github.io/2021/02/17/210217al-hackerrank-Picking-Numbers/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>[자바JAVA]Between Two Sets 해커랭크</title>
      <link>https://sowon-dev.github.io/2021/02/14/210214al-hackerrank-between-two-sets/</link>
      <guid>https://sowon-dev.github.io/2021/02/14/210214al-hackerrank-between-two-sets/</guid>
      <pubDate>Sun, 14 Feb 2021 06:48:35 GMT</pubDate>
      
      <description>&lt;h2 id=&quot;Between-Two-Sets&quot;&gt;&lt;a href=&quot;#Between-Two-Sets&quot; class=&quot;headerlink&quot; title=&quot;Between Two Sets&quot;&gt;&lt;/a&gt;Between Two Sets&lt;/h2&gt;&lt;p&gt;배열a와 배열b가 주어지고 a요소가 약수이면서 b요소가 배수인 숫자 X가 몇 개인 지 찾는 문제이다.&lt;/p&gt;
&lt;p&gt;There will be two arrays of integers. Determine all integers that satisfy the following two conditions:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;The elements of the first array are all factors of the integer being considered&lt;/li&gt;
&lt;li&gt;The integer being considered is a factor of all elements of the second array&lt;/li&gt;
&lt;/ol&gt;</description>
      
      
      
      <content:encoded><![CDATA[<h2 id="Between-Two-Sets"><a href="#Between-Two-Sets" class="headerlink" title="Between Two Sets"></a>Between Two Sets</h2><p>배열a와 배열b가 주어지고 a요소가 약수이면서 b요소가 배수인 숫자 X가 몇 개인 지 찾는 문제이다.</p><p>There will be two arrays of integers. Determine all integers that satisfy the following two conditions:</p><ol><li>The elements of the first array are all factors of the integer being considered</li><li>The integer being considered is a factor of all elements of the second array</li></ol><a id="more"></a><p>These numbers are referred to as being between the two arrays. Determine how many such numbers exist.</p><ul><li>입출력예시1</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//입력</span></span><br><span class="line">a = [<span class="number">2</span>, <span class="number">6</span>]</span><br><span class="line">b = [<span class="number">24</span>, <span class="number">36</span>]</span><br><span class="line"></span><br><span class="line"><span class="comment">//출력</span></span><br><span class="line"><span class="number">2</span></span><br></pre></td></tr></table></figure><ul><li>입출력예시2</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//입력</span></span><br><span class="line">a = [<span class="number">2</span>, <span class="number">4</span>]</span><br><span class="line">b = [<span class="number">16</span>, <span class="number">32</span>, <span class="number">96</span>]</span><br><span class="line"></span><br><span class="line"><span class="comment">//출력</span></span><br><span class="line"><span class="number">3</span></span><br></pre></td></tr></table></figure><p><br><br><br></p><h2 id="풀이"><a href="#풀이" class="headerlink" title="풀이"></a>풀이</h2><ul><li><code>int flag;</code> : a의 요소가 current의 약수가 아니거나 b의 요소가 current의 배수가 아닌 경우 flag 1 대입 후 break -&gt; current를 1 더해준 뒤 다시 while문 반복 실행한다.</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">BetweenTwoSets</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">  <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">int</span> <span class="title">getTotalX</span><span class="params">(List&lt;Integer&gt; a, List&lt;Integer&gt; b)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">int</span> cnt = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">int</span> current = a.get(a.size() - <span class="number">1</span>);</span><br><span class="line">    <span class="keyword">int</span> flag;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">while</span> (current &lt;= b.get(<span class="number">0</span>)) &#123;</span><br><span class="line">      flag = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">      <span class="comment">//a 요소가 current의 약수면 flag=0 유지</span></span><br><span class="line">      <span class="keyword">for</span> (<span class="keyword">int</span> i : a) &#123;</span><br><span class="line">        <span class="keyword">if</span> (current % i != <span class="number">0</span>) &#123;</span><br><span class="line">          flag = <span class="number">1</span>;</span><br><span class="line">          <span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;</span><br><span class="line"></span><br><span class="line">      <span class="comment">//b 요소가 current의 배수면 flag=0 유지</span></span><br><span class="line">      <span class="keyword">if</span> (flag == <span class="number">0</span>) &#123;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i : b) &#123;</span><br><span class="line">          <span class="keyword">if</span> (i % current != <span class="number">0</span>) &#123;</span><br><span class="line">            flag = <span class="number">1</span>;</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">          &#125;</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;</span><br><span class="line"></span><br><span class="line">      <span class="comment">//위의 두 for문이 참이면 cnt 1씩 증가</span></span><br><span class="line">      <span class="keyword">if</span> (flag == <span class="number">0</span>) &#123;</span><br><span class="line">        cnt++;</span><br><span class="line">      &#125;</span><br><span class="line"></span><br><span class="line">      System.out.printf(<span class="string">"cnt: %d, current: %d, flag: %d%n"</span>, cnt, current, flag);</span><br><span class="line">      current++;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> cnt;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="comment">//테스트케이스</span></span><br><span class="line">  <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">    <span class="comment">//test case 1</span></span><br><span class="line">System.out.println(getTotalX(</span><br><span class="line"><span class="keyword">new</span> ArrayList&lt;&gt;(Arrays.asList(<span class="number">2</span>, <span class="number">6</span>)), </span><br><span class="line"><span class="keyword">new</span> ArrayList&lt;&gt;(Arrays.asList(<span class="number">24</span>, <span class="number">36</span>))) + <span class="string">", ans: 2"</span>);</span><br><span class="line"><span class="comment">//test case 2</span></span><br><span class="line">    System.out.println(getTotalX(</span><br><span class="line"><span class="keyword">new</span> ArrayList&lt;&gt;(Arrays.asList(<span class="number">2</span>, <span class="number">4</span>)), </span><br><span class="line"><span class="keyword">new</span> ArrayList&lt;&gt;(Arrays.asList(<span class="number">16</span>, <span class="number">32</span>, <span class="number">96</span>))) + <span class="string">", ans: 3"</span>);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>test case 1번의 콘솔<br>이 문제는 배열a와 배열b가 주어지고 a요소가 약수이면서 b요소가 배수인 숫자 X가 몇 개인 지 찾는 문제이다.<br>flag가 0일때의 current값이 내가 찾던 x의 값이다.<br>x는 6, 12 총 2개이다. 따라서 2를 리턴한다.</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">&#x2F;&#x2F;test case 1번의 콘솔</span><br><span class="line">cnt: 1, current: 6, flag: 0</span><br><span class="line">cnt: 1, current: 7, flag: 1</span><br><span class="line">cnt: 1, current: 8, flag: 1</span><br><span class="line">cnt: 1, current: 9, flag: 1</span><br><span class="line">cnt: 1, current: 10, flag: 1</span><br><span class="line">cnt: 1, current: 11, flag: 1</span><br><span class="line">cnt: 2, current: 12, flag: 0</span><br><span class="line">cnt: 2, current: 13, flag: 1</span><br><span class="line">cnt: 2, current: 14, flag: 1</span><br><span class="line">cnt: 2, current: 15, flag: 1</span><br><span class="line">cnt: 2, current: 16, flag: 1</span><br><span class="line">cnt: 2, current: 17, flag: 1</span><br><span class="line">cnt: 2, current: 18, flag: 1</span><br><span class="line">cnt: 2, current: 19, flag: 1</span><br><span class="line">cnt: 2, current: 20, flag: 1</span><br><span class="line">cnt: 2, current: 21, flag: 1</span><br><span class="line">cnt: 2, current: 22, flag: 1</span><br><span class="line">cnt: 2, current: 23, flag: 1</span><br><span class="line">cnt: 2, current: 24, flag: 1</span><br><span class="line">2, ans: 2</span><br></pre></td></tr></table></figure><ul><li>test case 2번의 콘솔<br>위의 설명과 동일하게 flag가 0일때의 current값이 내가 찾던 x의 값이다.<br>x는 4, 8, 16으로 총 3개이다. 따라서 3를 리턴한다.</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">&#x2F;&#x2F;test case 2번의 콘솔</span><br><span class="line">cnt: 1, current: 4, flag: 0</span><br><span class="line">cnt: 1, current: 5, flag: 1</span><br><span class="line">cnt: 1, current: 6, flag: 1</span><br><span class="line">cnt: 1, current: 7, flag: 1</span><br><span class="line">cnt: 2, current: 8, flag: 0</span><br><span class="line">cnt: 2, current: 9, flag: 1</span><br><span class="line">cnt: 2, current: 10, flag: 1</span><br><span class="line">cnt: 2, current: 11, flag: 1</span><br><span class="line">cnt: 2, current: 12, flag: 1</span><br><span class="line">cnt: 2, current: 13, flag: 1</span><br><span class="line">cnt: 2, current: 14, flag: 1</span><br><span class="line">cnt: 2, current: 15, flag: 1</span><br><span class="line">cnt: 3, current: 16, flag: 0</span><br><span class="line">3, ans: 3</span><br></pre></td></tr></table></figure><p><br><br><br></p><h2 id="해커랭크의-다른-문제-풀이가-보고싶다면"><a href="#해커랭크의-다른-문제-풀이가-보고싶다면" class="headerlink" title="해커랭크의 다른 문제 풀이가 보고싶다면?"></a>해커랭크의 다른 문제 풀이가 보고싶다면?</h2><ul><li><a href="https://github.com/sowon-dev/AlgorithmStudy_Java/tree/master/src/hackerrank">해커랭크(HackerRank) Easy Level java 풀이 모음</a></li></ul><p><br><br><br></p><h2 id="참고"><a href="#참고" class="headerlink" title="참고"></a>참고</h2><ul><li><a href="https://www.youtube.com/watch?v=gtvE0vxuvy8">https://www.youtube.com/watch?v=gtvE0vxuvy8</a></li></ul>]]></content:encoded>
      
      
      <category domain="https://sowon-dev.github.io/categories/Algorithm/">Algorithm</category>
      
      
      <category domain="https://sowon-dev.github.io/tags/Hackerrank/">Hackerrank</category>
      
      
      <comments>https://sowon-dev.github.io/2021/02/14/210214al-hackerrank-between-two-sets/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>유튜브 맞춤동영상/추천영상/관련동영상 안뜨게 하기(ft. youtube API 사용법)</title>
      <link>https://sowon-dev.github.io/2021/01/31/210201youtubeAPI/</link>
      <guid>https://sowon-dev.github.io/2021/01/31/210201youtubeAPI/</guid>
      <pubDate>Sun, 31 Jan 2021 21:03:12 GMT</pubDate>
      
      <description>&lt;p&gt;웹 사이트에 iframe으로 유튜브 동영상을 연결을 하면 영상 재생이 끝나면 관련 동영상이 뜬다.&lt;br&gt;유튜브API를 통해서 관련 동영상 사용 중지할 수 없지만 우회방법이 두 가지 있다.&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;반복재생을 통해서 관련 동영상 나올 틈을 주지 않는 방법&lt;/li&gt;
&lt;li&gt;rel속성 설정으로 재생된 채널에서 관련 동영상을 가지고 오는 방법&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;아래 예시를 통해 &lt;a href=&quot;https://developers.google.com/youtube/player_parameters?hl=ko&quot;&gt;유튜브 API의 다른 매개변수&lt;/a&gt; 사용방법도 익힐 수 있다.&lt;/p&gt;</description>
      
      
      
      <content:encoded><![CDATA[<p>웹 사이트에 iframe으로 유튜브 동영상을 연결을 하면 영상 재생이 끝나면 관련 동영상이 뜬다.<br>유튜브API를 통해서 관련 동영상 사용 중지할 수 없지만 우회방법이 두 가지 있다.</p><ol><li>반복재생을 통해서 관련 동영상 나올 틈을 주지 않는 방법</li><li>rel속성 설정으로 재생된 채널에서 관련 동영상을 가지고 오는 방법</li></ol><p>아래 예시를 통해 <a href="https://developers.google.com/youtube/player_parameters?hl=ko">유튜브 API의 다른 매개변수</a> 사용방법도 익힐 수 있다.</p><a id="more"></a><p><br><br><br></p><h1 id="유튜브-소스코드-복사하기"><a href="#유튜브-소스코드-복사하기" class="headerlink" title="유튜브 소스코드 복사하기"></a>유튜브 소스코드 복사하기</h1><p>연결을 원하는 유튜브 동영상에서 우클릭을 하여 <code>소스 코드 복사</code>를 클릭한다.<br>아래처럼 기본 값이 복사된다.</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">iframe</span> <span class="attr">width</span>=<span class="string">"1065"</span> <span class="attr">height</span>=<span class="string">"599"</span> <span class="attr">src</span>=<span class="string">"https://www.youtube.com/embed/영상코드"</span> <span class="attr">frameborder</span>=<span class="string">"0"</span> <span class="attr">allow</span>=<span class="string">"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture"</span> <span class="attr">allowfullscreen</span>&gt;</span><span class="tag">&lt;/<span class="name">iframe</span>&gt;</span></span><br></pre></td></tr></table></figure><p><br><br><br></p><h2 id="반복재생하는-방법"><a href="#반복재생하는-방법" class="headerlink" title="반복재생하는 방법"></a>반복재생하는 방법</h2><p>src 뒤에 <code>VIDEO_ID?version=3&amp;loop=1&amp;playlist=VIDEO_ID</code> 속성을 이용하면 된다.<br>loop 기본값은 0이고 1로 설정할 경우 반복재생된다.<br>VIDEO_ID는 물음표앞의 VIDEO_ID와 동일하게 설정해주면 해당 동영상만 반복재생된다.</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">iframe</span> <span class="attr">width</span>=<span class="string">"1065"</span> <span class="attr">height</span>=<span class="string">"599"</span> <span class="attr">src</span>=<span class="string">"https://www.youtube.com/embed/영상코드?version=3&amp;loop=1&amp;playlist=VIDEO_ID"</span> <span class="attr">frameborder</span>=<span class="string">"0"</span> <span class="attr">allow</span>=<span class="string">"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture"</span> <span class="attr">allowfullscreen</span>&gt;</span><span class="tag">&lt;/<span class="name">iframe</span>&gt;</span></span><br></pre></td></tr></table></figure><p><br><br><br></p><h2 id="rel-매개변수로-동일-채널의-다른-동영상만-보여주는-방법"><a href="#rel-매개변수로-동일-채널의-다른-동영상만-보여주는-방법" class="headerlink" title="rel 매개변수로 동일 채널의 다른 동영상만 보여주는 방법"></a>rel 매개변수로 동일 채널의 다른 동영상만 보여주는 방법</h2><p>src뒤에 <code>VIDEO_ID?rel=1</code>속성을 넣어주면 된다.<br>이 방법은 사용자가 다른 채널로 유출되는 것을 방지한다.</p><p><img src="/img/210201youtubeAPI.PNG" alt=""></p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">iframe</span> <span class="attr">width</span>=<span class="string">"1065"</span> <span class="attr">height</span>=<span class="string">"599"</span> <span class="attr">src</span>=<span class="string">"https://www.youtube.com/embed/영상코드?rel=1"</span> <span class="attr">frameborder</span>=<span class="string">"0"</span> <span class="attr">allow</span>=<span class="string">"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture"</span> <span class="attr">allowfullscreen</span>&gt;</span><span class="tag">&lt;/<span class="name">iframe</span>&gt;</span></span><br></pre></td></tr></table></figure><p><br><br><br></p><h2 id="참고"><a href="#참고" class="headerlink" title="참고"></a>참고</h2><ul><li><a href="https://rubybox.tistory.com/25">https://rubybox.tistory.com/25</a></li><li><a href="https://developers.google.com/youtube/player_parameters?hl=ko">https://developers.google.com/youtube/player_parameters?hl=ko</a></li></ul>]]></content:encoded>
      
      
      <category domain="https://sowon-dev.github.io/categories/Journal/">Journal</category>
      
      
      <category domain="https://sowon-dev.github.io/tags/YouTube/">YouTube</category>
      
      
      <comments>https://sowon-dev.github.io/2021/01/31/210201youtubeAPI/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>페이스북 영구 토큰 발급하기</title>
      <link>https://sowon-dev.github.io/2021/01/31/210201facebookPermanentToken/</link>
      <guid>https://sowon-dev.github.io/2021/01/31/210201facebookPermanentToken/</guid>
      <pubDate>Sun, 31 Jan 2021 16:56:41 GMT</pubDate>
      
      <description>&lt;p&gt;[SNS연결하기] FACEBOOK 페이지의 게시글을 웹사이트에 불러오는 방법!&lt;br&gt;구글링을 정말 많이 했으나 하나같이 제대로 적용되지않았다.&lt;br&gt;결국 글에서 찾는 건 포기하고 stackoverflow의 댓글 하나하나를 읽으며 테스트했고 끝내 성공했다.&lt;br&gt;댓글의 중요성을 배웠다. 앞으로는 이걸로 삽질하진 않겠지!!&lt;br&gt;많은 분들이 나처럼 헤매지않았으면 좋겠다는 마음에서 기록을 남겨본다.&lt;/p&gt;</description>
      
      
      
      <content:encoded><![CDATA[<p>[SNS연결하기] FACEBOOK 페이지의 게시글을 웹사이트에 불러오는 방법!<br>구글링을 정말 많이 했으나 하나같이 제대로 적용되지않았다.<br>결국 글에서 찾는 건 포기하고 stackoverflow의 댓글 하나하나를 읽으며 테스트했고 끝내 성공했다.<br>댓글의 중요성을 배웠다. 앞으로는 이걸로 삽질하진 않겠지!!<br>많은 분들이 나처럼 헤매지않았으면 좋겠다는 마음에서 기록을 남겨본다.</p><a id="more"></a><h2 id="FB-앱만들기"><a href="#FB-앱만들기" class="headerlink" title="FB 앱만들기"></a>FB 앱만들기</h2><ol><li>페이스북 디벨로퍼 <a href="https://developers.facebook.com/?no_redirect=1">https://developers.facebook.com/</a> 에 페이스북 아이디로 로그인하기</li><li>오른쪽 상단의 <code>내 앱</code> 탭 클릭하기</li><li><code>앱 만들기</code> 버튼 클릭 → 비즈니스 통합관리하기<ol><li>표시할 앱 이름 : 원하는 이름 기재 ex)testPermanentToken</li><li>앱 목적 : 회원님 또는 소유한 비즈니스</li><li>비즈니스 관리자계정 : 연결해도되고 안해도 됨</li></ol></li></ol><p><img src="/img/210201FBtoken1.PNG" alt=""></p><ol start="4"><li>보안확인 : 로봇이 아닙니다 체크 후 <code>제출</code> 클릭</li></ol><p><br><br><br></p><h2 id="단기-토큰-생성하기"><a href="#단기-토큰-생성하기" class="headerlink" title="단기 토큰 생성하기"></a>단기 토큰 생성하기</h2><ol><li>최상단 메뉴바의 <code>도구</code> 탭 클릭 → <a href="https://developers.facebook.com/tools/explorer/"><code>그래프 API 탐색기</code> 클릭</a></li><li>Facebook 앱 : 위에서 내가 만든 앱이름 클릭</li><li>사용자 또는 페이지 : <code>페이지 엑세스로 토큰받기</code> 선택<ol><li><code>토큰받기</code> 클릭</li><li><code>페이지 액세스 토큰 받기</code> 클릭</li></ol></li></ol><p><img src="/img/210201FBtoken2.PNG" alt=""></p><ol start="4"><li>팝업창 Facebook으로 로그인 팝업창 활성화.<ol><li>팝업창에서 <code>000(페이스북 명의)으로 계속</code> 클릭</li><li>연결을 원하는 페이지 선택<ul><li>로그인한 페이스북 아이디로 운영중이 페이지가 있어야한다.</li><li>본 포스팅에서는 ipsi라는 테스트페이지를 만들어서 연결했다.</li></ul></li><li>어떤 권한이 허용되었나요? :  <ol><li>관리 중인 페이지 리스트를 표시 : 예</li><li>페이지에 게시된 콘텐츠 읽기 : 예</li></ol></li><li>Facebook에 앱이 연결되었습니다 → 확인 클릭 → 팝업 자동으로 닫힘</li><li>페이지용 액세스 토큰이 자동으로 생성</li></ol></li></ol><p><br><br><br></p><h2 id="단기토큰을-장기토큰으로-만들기"><a href="#단기토큰을-장기토큰으로-만들기" class="headerlink" title="단기토큰을 장기토큰으로 만들기"></a>단기토큰을 장기토큰으로 만들기</h2><p>토큰을 발급하면 기본적으로 1시간짜리 단기 토큰이 발행된다.<br>이를 60일짜리 장기토큰으로 만든 후 영구토큰으로 만들 수 있다.</p><ol><li>엑세스 토큰 자동으로 생성완료 후 엑세스 토큰 도구열기<ol><li><code>!</code> (1번) 클릭</li><li><code>엑세스 토큰 도구에서 열기</code> 클릭<br><img src="/img/210201FBtoken3.PNG" alt=""></li></ol></li><li>엑세스 토큰 디버거로 자동으로 이동<ul><li>유형 : page 맞는 지 확인하기</li><li>만료일 : (약 1시간 이내) =&gt; 단기 토큰을 의미함.</li></ul></li><li><code>액세스토큰 확장</code> 버튼 클릭(1번) → 페이스북 비밀번호 입력 팝업창에 비밀번호 입력<br><img src="/img/210201FBtoken4.PNG" alt=""></li><li>페이지가 새로고침 되면서 장기토큰이 발행됨.<ol><li>1번은 새로 발행된 장기 액세스 토큰임</li><li><code>디버그</code> 버튼 클릭(2번)<br><img src="/img/210201FBtoken5.PNG" alt=""></li></ol></li><li>새창에서 액세스 토큰 디버거가 열림<ul><li>유형 : page 맞는 지 확인하기</li><li>만료일 : (약 2개월 이내) =&gt; 장기 토큰을 의미함.</li><li>1번 장기토큰을 메모장등에 복사해두기</li><li>2번 페이지 ID를 메모장등에 복사해두기<br><img src="/img/210201FBtoken6.PNG" alt=""></li></ul></li></ol><p><br><br><br></p><h2 id="장기토큰을-영구토큰으로-만들기"><a href="#장기토큰을-영구토큰으로-만들기" class="headerlink" title="장기토큰을 영구토큰으로 만들기"></a>장기토큰을 영구토큰으로 만들기</h2><p>60일짜리 장기토큰을 영구 토큰으로 변경해보자.<br>이 부분에서 엄청난 삽질을 했다…<br>나의 삽질을 구원해준 건 stackoverflow의 댓글들이었다.</p><ol><li>최상단 메뉴바의 <code>내 앱</code> 탭 클릭 → <code>도구</code> 클릭 → <a href="https://developers.facebook.com/tools/explorer/"><code>그래프 API 탐색기</code> 클릭</a></li><li>액세스 토큰<ol><li>토큰 : 기록해둔 장기 토큰을 1번에 붙여넣기</li><li>Facebook앱이 맞는지 확인한다. 내 앱이 여러 개인 경우 다른 앱이 선택되어있기도 함.</li><li><code>복사해둔_페이지아이디?fields=access_token</code>를 기입한다.</li><li>제출 클릭</li><li>access_token의 값을 복사한다. =&gt; 이것이 영구토큰이다.</li></ol></li></ol><p><img src="/img/210201FBtoken7.PNG" alt=""></p><p>이렇게 쉽게????! 이 방법에 오기까지 며칠을 헤맸왔던가…<br>진짜 영구 토큰이 맞을까? 의심-<br>엑세스 토큰 디버거에서 확인해보자!<br>5번의 영구토큰을 복사한 뒤 액세스 토큰 디버거로 이동한다.<br>만료일에 날짜가 아닌 <code>받지 않기</code>가 있는 것을 확인해볼 수 있다!</p><p><img src="/img/210201FBtoken8.PNG" alt=""></p><p>성공!</p><p><br><br><br></p><h2 id="참고"><a href="#참고" class="headerlink" title="참고"></a>참고</h2><ul><li><a href="https://mixedanalytics.com/knowledge-base/import-facebook-page-data-to-google-sheets/">https://mixedanalytics.com/knowledge-base/import-facebook-page-data-to-google-sheets/</a></li><li><a href="https://stackoverflow.com/questions/17197970/facebook-permanent-page-access-token">https://stackoverflow.com/questions/17197970/facebook-permanent-page-access-token</a></li></ul>]]></content:encoded>
      
      
      <category domain="https://sowon-dev.github.io/categories/Journal/">Journal</category>
      
      
      <category domain="https://sowon-dev.github.io/tags/Facebook/">Facebook</category>
      
      
      <comments>https://sowon-dev.github.io/2021/01/31/210201facebookPermanentToken/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>request.getParameter()시 null이 뜰때 해결방법, ModelAndView 넘겨받는 방법</title>
      <link>https://sowon-dev.github.io/2021/01/29/210129pageContextNrequest/</link>
      <guid>https://sowon-dev.github.io/2021/01/29/210129pageContextNrequest/</guid>
      <pubDate>Fri, 29 Jan 2021 01:30:42 GMT</pubDate>
      
      <description>&lt;h2 id=&quot;문제상황&quot;&gt;&lt;a href=&quot;#문제상황&quot; class=&quot;headerlink&quot; title=&quot;문제상황&quot;&gt;&lt;/a&gt;문제상황&lt;/h2&gt;&lt;p&gt;&lt;a href=&quot;https://mozilla.github.io/pdf.js/examples/&quot;&gt;pdf.js&lt;/a&gt;&lt;br&gt;DB에서 param으로 page정보를 받아서 PDF파일의 특정 페이지로 바로 출력하고싶었다.&lt;br&gt;request객체를 시도했는데 계속 null을 가져왔다.&lt;br&gt;왜 실패했을까? &lt;/p&gt;</description>
      
      
      
      <content:encoded><![CDATA[<h2 id="문제상황"><a href="#문제상황" class="headerlink" title="문제상황"></a>문제상황</h2><p><a href="https://mozilla.github.io/pdf.js/examples/">pdf.js</a><br>DB에서 param으로 page정보를 받아서 PDF파일의 특정 페이지로 바로 출력하고싶었다.<br>request객체를 시도했는데 계속 null을 가져왔다.<br>왜 실패했을까? </p><a id="more"></a><h2 id="공통코드"><a href="#공통코드" class="headerlink" title="공통코드"></a>공통코드</h2><ul><li>Controller.java 코드</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@RequestMapping</span>(value = <span class="string">"/content/&#123;path&#125;"</span>, method = &#123;RequestMethod.GET, RequestMethod.POST&#125;)</span><br><span class="line">    <span class="function"><span class="keyword">public</span> ModelAndView <span class="title">homeMain</span><span class="params">(HttpServletRequest request, HttpServletResponse response, @PathVariable String path)</span> </span>&#123;</span><br><span class="line">    ModelAndView model = <span class="keyword">new</span> ModelAndView();</span><br><span class="line">        SiteMenuContent siteMenuContent = siteMenuContentService.getSiteMenuContent(path);</span><br><span class="line">        model.addObject(<span class="string">"siteMenuContent"</span>, siteMenuContent);</span><br><span class="line">        model.setViewName(<span class="string">"/html"</span>);</span><br><span class="line">        <span class="keyword">return</span> model;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>입력값<br>DB의 param컬럼에는 <code>page=4</code>가 들어있다.</li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">id</span>=<span class="string">"param"</span> <span class="attr">name</span>=<span class="string">"param"</span> <span class="attr">value</span>=<span class="string">""</span>&gt;</span></span><br></pre></td></tr></table></figure><p><br><br><br></p><h2 id="시도1-request-getParameter-사용"><a href="#시도1-request-getParameter-사용" class="headerlink" title="시도1 : request.getParameter() 사용"></a>시도1 : request.getParameter() 사용</h2><p><code>request.getParameter()</code> 를 사용했지만 null값이 나타났다.<br>왜일까? 아직도 답을 모르겠다.</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">%@</span> <span class="attr">page</span> <span class="attr">language</span>=<span class="string">"java"</span> <span class="attr">contentType</span>=<span class="string">"text/html; charset=UTF-8"</span> <span class="attr">pageEncoding</span>=<span class="string">"UTF-8"</span> %&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">%</span></span></span><br><span class="line"><span class="tag"><span class="attr">String</span> <span class="attr">pageParam</span> = <span class="string">"2"</span>;</span></span><br><span class="line"><span class="tag"><span class="attr">if</span>(<span class="attr">request.getParameter</span>("<span class="attr">param</span>") != <span class="string">null)&#123;</span></span></span><br><span class="line"><span class="tag"><span class="attr">pageParam</span> = <span class="string">request.getParameter(</span>"<span class="attr">param</span>");</span></span><br><span class="line"><span class="tag">&#125;</span></span><br><span class="line"><span class="tag">%&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"pdf-box"</span>&gt;</span></span><br><span class="line">     <span class="tag">&lt;<span class="name">iframe</span> <span class="attr">id</span>=<span class="string">"docIframe"</span> <span class="attr">src</span>=<span class="string">"/resources/js/jquery/pdfjs-dist/web/viewer.html?file=/upload/down/파일명.pdf#page=&lt;%=pageParam %&gt;"</span> <span class="attr">width</span>=<span class="string">"100%"</span> <span class="attr">height</span>=<span class="string">"860"</span>&gt;</span><span class="tag">&lt;/<span class="name">iframe</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure><p><br><br><br></p><h2 id="헤결방법1-request-getAttribute-이용"><a href="#헤결방법1-request-getAttribute-이용" class="headerlink" title="헤결방법1 : request.getAttribute() 이용"></a>헤결방법1 : request.getAttribute() 이용</h2><p>request.getParameter() 대신 request.getAttribute()를 사용했다.<br>컨트롤러에서 request.setAttribute()을 하지 않으면 null값이 출력되기때문에 컨트롤러에서 set해줘야한다.<br>하지만 컨트롤러의 소스코드를 바꾸고 싶지 않았으므로 이 방법을 사용하지않았다.</p><ul><li>Controller.java 코드</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@RequestMapping</span>(value = <span class="string">"/content/&#123;path&#125;"</span>, method = &#123;RequestMethod.GET, RequestMethod.POST&#125;)</span><br><span class="line">    <span class="function"><span class="keyword">public</span> ModelAndView <span class="title">homeMain</span><span class="params">(HttpServletRequest request, HttpServletResponse response, @PathVariable String path)</span> </span>&#123;</span><br><span class="line">    ModelAndView model = <span class="keyword">new</span> ModelAndView();</span><br><span class="line">        SiteMenuContent siteMenuContent = siteMenuContentService.getSiteMenuContent(path);</span><br><span class="line">        model.addObject(<span class="string">"siteMenuContent"</span>, siteMenuContent);</span><br><span class="line">        model.setViewName(<span class="string">"/html"</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">//set해준다.</span></span><br><span class="line">request.setAttribute(<span class="string">"paramAttri"</span>, siteMenuContent.getParam());</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> model;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>jsp코드</li></ul><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">%@</span> <span class="attr">page</span> <span class="attr">language</span>=<span class="string">"java"</span> <span class="attr">contentType</span>=<span class="string">"text/html; charset=UTF-8"</span> <span class="attr">pageEncoding</span>=<span class="string">"UTF-8"</span> %&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">%</span></span></span><br><span class="line"><span class="tag"><span class="attr">String</span> <span class="attr">pageParam</span> = <span class="string">"2"</span>;</span></span><br><span class="line"><span class="tag"><span class="attr">String</span> <span class="attr">paramFormC</span> = <span class="string">(String)</span> <span class="attr">request.getAttribute</span>("<span class="attr">paramAttri</span>");</span></span><br><span class="line"><span class="tag"><span class="attr">if</span>(<span class="attr">paramFormC</span> != <span class="string">null)&#123;</span></span></span><br><span class="line"><span class="tag"><span class="attr">pageParam</span> = <span class="string">paramFormC.split(</span>"=<span class="string">")[1];</span></span></span><br><span class="line"><span class="tag"><span class="string">&#125;</span></span></span><br><span class="line"><span class="tag"><span class="string">%&gt;</span></span></span><br><span class="line"><span class="tag"><span class="string"></span></span></span><br><span class="line"><span class="tag"><span class="string">&lt;div class="</span><span class="attr">pdf-box</span>"&gt;</span></span><br><span class="line">     <span class="tag">&lt;<span class="name">iframe</span> <span class="attr">id</span>=<span class="string">"docIframe"</span> <span class="attr">src</span>=<span class="string">"/resources/js/jquery/pdfjs-dist/web/viewer.html?file=/upload/down/파일명.pdf#page=&lt;%=pageParam %&gt;"</span> <span class="attr">width</span>=<span class="string">"100%"</span> <span class="attr">height</span>=<span class="string">"860"</span>&gt;</span><span class="tag">&lt;/<span class="name">iframe</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure><p><br><br><br></p><h2 id="getParameter-와-getAttribute-의-차이점"><a href="#getParameter-와-getAttribute-의-차이점" class="headerlink" title="getParameter()와 getAttribute()의 차이점"></a>getParameter()와 getAttribute()의 차이점</h2><table><thead><tr><th align="center"></th><th align="center">getParameter()</th><th align="center">getAttribute()</th></tr></thead><tbody><tr><td align="center">가져오는 값</td><td align="center">웹브라우저에서 전송받은 request영역</td><td align="center">setAttribute()</td></tr><tr><td align="center">리턴타입</td><td align="center">String</td><td align="center">Object</td></tr></tbody></table><ul><li><a href="http://hsprnote.blogspot.com/2017/03/jsp-getparameter-getattribute.html">참고 : JSP - getParameter()와 getAttribute()의 차이점</a></li></ul><p><br><br><br></p><h2 id="시도2-el태그-이용"><a href="#시도2-el태그-이용" class="headerlink" title="시도2 : el태그 ${} 이용"></a>시도2 : el태그 ${} 이용</h2><p>el태그를 사용할 경우 console에는 정상출력되지만 iframe안에서는 정상 출력이 되지않는다.<br>왜일까…? </p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">&lt;%@ page language=<span class="string">"java"</span> contentType=<span class="string">"text/html; charset=UTF-8"</span> pageEncoding=<span class="string">"UTF-8"</span> %&gt;</span><br><span class="line">&lt;%@ taglib prefix=<span class="string">"c"</span> uri=<span class="string">"http://java.sun.com/jsp/jstl/core"</span> %&gt;</span><br><span class="line"></span><br><span class="line">&lt;div <span class="class"><span class="keyword">class</span></span>=<span class="string">"pdf-box"</span>&gt;</span><br><span class="line">     &lt;iframe id="docIframe" src="/resources/js/jquery/pdfjs-dist/web/viewer.html?file=/upload/down/파일명.pdf#page=$&#123;siteMenuContent.param &#125;" width="100%" height="860"&gt;&lt;/iframe&gt;</span><br><span class="line">&lt;/div&gt;</span><br><span class="line"></span><br><span class="line">&lt;script type=<span class="string">"text/javascript"</span>&gt;</span><br><span class="line"><span class="keyword">var</span> $param = $&#123;siteMenuContent.param &#125;</span><br><span class="line">console.log($param )</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure><p><br><br><br></p><h2 id="해결방법2-pageContext-getAttribute-이용"><a href="#해결방법2-pageContext-getAttribute-이용" class="headerlink" title="해결방법2 : pageContext.getAttribute(); 이용"></a>해결방법2 : pageContext.getAttribute(); 이용</h2><p>따라서 jstl로 el태그를 스크립틀릿안으로 pageContext를 이용하여 불러왔다.</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">%@</span> <span class="attr">page</span> <span class="attr">language</span>=<span class="string">"java"</span> <span class="attr">contentType</span>=<span class="string">"text/html; charset=UTF-8"</span> <span class="attr">pageEncoding</span>=<span class="string">"UTF-8"</span> %&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">%@</span> <span class="attr">taglib</span> <span class="attr">prefix</span>=<span class="string">"c"</span> <span class="attr">uri</span>=<span class="string">"http://java.sun.com/jsp/jstl/core"</span> %&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">c:set</span> <span class="attr">value</span>=<span class="string">"$&#123;siteMenuContent.param &#125;"</span> <span class="attr">var</span>=<span class="string">"paramFormC"</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">%</span></span></span><br><span class="line"><span class="tag"><span class="attr">String</span> <span class="attr">pageParam</span> = <span class="string">"2"</span>;</span></span><br><span class="line"><span class="tag"><span class="attr">String</span> <span class="attr">paramFormC</span> = <span class="string">(String)</span> <span class="attr">pageContext.getAttribute</span>("<span class="attr">paramFormC</span>");</span></span><br><span class="line"><span class="tag"><span class="attr">if</span>(<span class="attr">paramFormC</span> != <span class="string">null)&#123;</span></span></span><br><span class="line"><span class="tag"><span class="attr">pageParam</span> = <span class="string">paramFormC.split(</span>"=<span class="string">")[1];</span></span></span><br><span class="line"><span class="tag"><span class="string">&#125;</span></span></span><br><span class="line"><span class="tag"><span class="string">%&gt;</span></span></span><br><span class="line"><span class="tag"><span class="string"></span></span></span><br><span class="line"><span class="tag"><span class="string">&lt;div class="</span><span class="attr">pdf-box</span>"&gt;</span></span><br><span class="line">     <span class="tag">&lt;<span class="name">iframe</span> <span class="attr">id</span>=<span class="string">"docIframe"</span> <span class="attr">src</span>=<span class="string">"/resources/js/jquery/pdfjs-dist/web/viewer.html?file=/upload/down/파일명.pdf#page=&lt;%=pageParam %&gt;"</span> <span class="attr">width</span>=<span class="string">"100%"</span> <span class="attr">height</span>=<span class="string">"860"</span>&gt;</span><span class="tag">&lt;/<span class="name">iframe</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure><p>성공!!</p><p><br><br><br></p><h2 id="참고"><a href="#참고" class="headerlink" title="참고"></a>참고</h2><ul><li><a href="https://stackoverflow.com/questions/19183747/modelandview-addobject-vs-model-addattribute">https://stackoverflow.com/questions/19183747/modelandview-addobject-vs-model-addattribute</a></li></ul>]]></content:encoded>
      
      
      <category domain="https://sowon-dev.github.io/categories/JSP/">JSP</category>
      
      
      <category domain="https://sowon-dev.github.io/tags/%EC%98%A4%EB%A5%98%EC%9D%BC%EC%A7%80/">오류일지</category>
      
      
      <comments>https://sowon-dev.github.io/2021/01/29/210129pageContextNrequest/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>JSP 페이지 등록일순 역순출력</title>
      <link>https://sowon-dev.github.io/2021/01/28/210129PaginationInReverseOrder/</link>
      <guid>https://sowon-dev.github.io/2021/01/28/210129PaginationInReverseOrder/</guid>
      <pubDate>Thu, 28 Jan 2021 19:56:39 GMT</pubDate>
      
      <description>&lt;p&gt;프로그래머는 매 순간 버그와의 싸움이다.&lt;br&gt;한 번에 문제 원인을 찾고 해결하면 정말 좋겠지만 아직 나는 많이 부족하다.&lt;br&gt;그렇게 될 수 있도록 문제상황에 어떻게 원인을 찾고 해결을 했는지 기록하고자 한다.&lt;br&gt;기억보다 기록은 힘이 세다고 믿으니까.&lt;/p&gt;
&lt;h2 id=&quot;문제상황&quot;&gt;&lt;a href=&quot;#문제상황&quot; class=&quot;headerlink&quot; title=&quot;문제상황&quot;&gt;&lt;/a&gt;문제상황&lt;/h2&gt;&lt;p&gt;리스트를 idx순으로 출력하는데 순번이상했다.&lt;/p&gt;</description>
      
      
      
      <content:encoded><![CDATA[<p>프로그래머는 매 순간 버그와의 싸움이다.<br>한 번에 문제 원인을 찾고 해결하면 정말 좋겠지만 아직 나는 많이 부족하다.<br>그렇게 될 수 있도록 문제상황에 어떻게 원인을 찾고 해결을 했는지 기록하고자 한다.<br>기억보다 기록은 힘이 세다고 믿으니까.</p><h2 id="문제상황"><a href="#문제상황" class="headerlink" title="문제상황"></a>문제상황</h2><p>리스트를 idx순으로 출력하는데 순번이상했다.</p><a id="more"></a><p><img src="/img/210129pagination.PNG" alt=""></p><p><br><br><br></p><h2 id="원인"><a href="#원인" class="headerlink" title="원인"></a>원인</h2><p>쿼리 먼저 돌려보면서 SELECT되는 데이터를 체크해보았다.<br>DB를 테스트 한 뒤 테스트데이터를 삭제해야하는데 그 위에 타DB의 데이터를 이관하면서 DB의 INDEX순서와 게시글 등록순서가 아래 예시처럼 일치하지 않았다.</p><ul><li>예시<table><thead><tr><th align="center">idx</th><th align="center">reg_date</th></tr></thead><tbody><tr><td align="center">1</td><td align="center">2021-01-20</td></tr><tr><td align="center">2</td><td align="center">2021-01-25</td></tr><tr><td align="center">3</td><td align="center">2020-12-10</td></tr><tr><td align="center">4</td><td align="center">2021-01-23</td></tr></tbody></table></li></ul><p><br><br><br></p><h2 id="기존-코드"><a href="#기존-코드" class="headerlink" title="기존 코드"></a>기존 코드</h2><ul><li>Mapper.xml 코드</li></ul><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">select</span> <span class="attr">id</span>=<span class="string">"List"</span> <span class="attr">parameterType</span>=<span class="string">"model"</span> <span class="attr">resultType</span>=<span class="string">"model"</span> &gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">include</span> <span class="attr">refid</span>=<span class="string">"pagingStart"</span>/&gt;</span></span><br><span class="line">&lt;![CDATA[</span><br><span class="line">SELECT</span><br><span class="line">ROW_NUMBER() OVER (ORDER BY IDX DESC) rn</span><br><span class="line">, IDX, NAME, REGDATE, CONTENT </span><br><span class="line">FROM</span><br><span class="line">테이블명</span><br><span class="line">]]&gt;</span><br><span class="line"><span class="tag">&lt;<span class="name">include</span> <span class="attr">refid</span>=<span class="string">"withSearchWhere"</span>/&gt;</span></span><br><span class="line">ORDER BY IDX DESC</span><br><span class="line"><span class="tag">&lt;<span class="name">include</span> <span class="attr">refid</span>=<span class="string">"pagingEnd"</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br></pre></td></tr></table></figure><ul><li>view.jsp코드</li></ul><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">&lt;c:forEach <span class="keyword">var</span>=<span class="string">"result"</span> items=<span class="string">"$&#123;pageInfo.data&#125;"</span> varStatus=<span class="string">"i"</span>&gt;</span><br><span class="line">&lt;tr&gt;</span><br><span class="line">&lt;td&gt;$&#123;result.idx&#125;&lt;/td&gt;</span><br><span class="line">&lt;td&gt;$&#123;result.name&#125;&lt;/td&gt;</span><br><span class="line">&lt;td&gt;&lt;c:if test="$&#123;not empty result.content&#125;"&gt;$&#123;result.content&#125;&lt;/c:if&gt;&lt;/td&gt;</span><br><span class="line">&lt;/tr&gt;</span><br><span class="line">&lt;/c:forEach&gt;</span><br></pre></td></tr></table></figure><p>DB에서 순번을 가져오지말고 뷰단에서 직접 게시글을 카운팅해주는 것으로 해결 방향을 잡았다.<br>${pageInfo.data} 가 어떤 데이터를 들고 오는 지 먼저 확인한 후 필요한 변수들을 체크했다.<br>totalCount, pageIndex, pageSize를 사용할 수 있을 것 같아 가져왔다.</p><p>또한 DB데이터들 중 index 순서 대신 다른 정렬기준을 찾아야헸고 나는 REG_DATE를 선택했다.</p><p><br><br><br></p><h2 id="수정한-코드"><a href="#수정한-코드" class="headerlink" title="수정한 코드"></a>수정한 코드</h2><ul><li>Mapper.xml 코드</li></ul><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">select</span> <span class="attr">id</span>=<span class="string">"List"</span> <span class="attr">parameterType</span>=<span class="string">"model"</span> <span class="attr">resultType</span>=<span class="string">"model"</span> &gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">include</span> <span class="attr">refid</span>=<span class="string">"pagingStart"</span>/&gt;</span></span><br><span class="line">&lt;![CDATA[</span><br><span class="line">SELECT</span><br><span class="line">ROW_NUMBER() OVER (ORDER BY IDX DESC) rn</span><br><span class="line">, IDX, NAME, REGDATE, CONTENT </span><br><span class="line">FROM</span><br><span class="line">테이블명</span><br><span class="line">]]&gt;</span><br><span class="line"><span class="tag">&lt;<span class="name">include</span> <span class="attr">refid</span>=<span class="string">"withSearchWhere"</span>/&gt;</span></span><br><span class="line">ORDER BY REGDATE DESC</span><br><span class="line"><span class="tag">&lt;<span class="name">include</span> <span class="attr">refid</span>=<span class="string">"pagingEnd"</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br></pre></td></tr></table></figure><ul><li>view.jsp코드</li></ul><p>총 게시글이 14개가 있고 한 페이지당 10개씩 보여준다고 설정했다고 하자.<br>그렇다면 총 2페이지가 될 것이다.<br>첫번째페이지에서는 14부터 5까지 출력되고 두번째페이지에서는 4부터 1까지 번호가 출력되어야한다.<br>핵심은 2번째페이지이다. 두번째 페이지 번호가 4부터 출력되어야한다.<br>총 14개 중에서 pageSize인 10을 빼야 4가 출력된다.<br>이를 식으로 나타내면 <code>(PageIndex - 1)*pageSize</code>이다.</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">&lt;c:set value=<span class="string">"$&#123;pageInfo.totalCount&#125;"</span> <span class="keyword">var</span>=<span class="string">"totalCountj_JO"</span> /&gt;</span><br><span class="line">&lt;c:set value=<span class="string">"$&#123;pageInfo.pageIndex&#125;"</span> <span class="keyword">var</span>=<span class="string">"PageIndex_JO"</span> /&gt;</span><br><span class="line">&lt;c:set value=<span class="string">"$&#123;pageInfo.pageSize&#125;"</span> <span class="keyword">var</span>=<span class="string">"pageSize_JO"</span> /&gt;</span><br><span class="line">&lt;% </span><br><span class="line"><span class="keyword">int</span> cntJO = (<span class="keyword">int</span>)pageContext.getAttribute(<span class="string">"totalCountj_JO"</span>);</span><br><span class="line"><span class="keyword">int</span> PageIndex_JO = (<span class="keyword">int</span>)pageContext.getAttribute(<span class="string">"PageIndex_JO"</span>);</span><br><span class="line"><span class="keyword">int</span> pageSize_JO = (<span class="keyword">int</span>)pageContext.getAttribute(<span class="string">"pageSize_JO"</span>);</span><br><span class="line">cntJO = cntJO - ((PageIndex_JO - <span class="number">1</span>)*pageSize_JO);</span><br><span class="line">%&gt; </span><br><span class="line">&lt;c:forEach <span class="keyword">var</span>=<span class="string">"result"</span> items=<span class="string">"$&#123;pageInfo.data&#125;"</span> varStatus=<span class="string">"i"</span>&gt;</span><br><span class="line">&lt;tr&gt;</span><br><span class="line">&lt;td class="tit"&gt;&lt;%=cntJO %&gt;&lt;/td&gt;</span><br><span class="line">  &lt;%</span><br><span class="line">  cntJO = cntJO - <span class="number">1</span> ;</span><br><span class="line">  %&gt;</span><br><span class="line">&lt;/tr&gt;</span><br><span class="line">&lt;/c:forEach&gt;</span><br></pre></td></tr></table></figure><p>EL과 JSTL, 스크립틀릿을 왔다갔다하면서 컨트롤러에서 처리한 데이터를 받을 때 익숙하지 않아서 많이 해맸다.<br>처음에는 for문을 사용하려고 했으나 forEach문이 이미 있기에 코드가 복잡해졌다.<br>더 좋은 코드가 있을 것 같은데 시간도 부족해서 <code>cntJO = cntJO - 1;</code>처럼 직관적으로 처리했다.<br>코드 리팩토링을 생각해봐야겠다.</p><p><br><br><br></p><h2 id="또-다른-문제-발생"><a href="#또-다른-문제-발생" class="headerlink" title="또 다른 문제 발생"></a>또 다른 문제 발생</h2><p>위에서 수정한 코드는 로그인 세션이 있을때는 정상출력되었지만 로그인 세션이 없는 경우 404페이지가 발생했다.<br>DB에 바로 갈 수 없도록 해야했다.<br>그래서 <code>int cntJO = 0</code>으로 초기화 먼저 한 후 if문 안에서 DB에서 데이터를 가져오는 변수를 생성했다. </p><ul><li>view.jsp코드</li></ul><figure class="highlight jsp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">&lt;% </span><br><span class="line"><span class="keyword">int</span> cntJO = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">if</span>(request.getAttribute(<span class="string">"conText"</span>) != <span class="keyword">null</span>)&#123;</span><br><span class="line">cntJO = (<span class="keyword">int</span>)pageContext.getAttribute(<span class="string">"totalCountj_JO"</span>);</span><br><span class="line"><span class="keyword">int</span> PageIndex_JO = (<span class="keyword">int</span>)pageContext.getAttribute(<span class="string">"PageIndex_JO"</span>);</span><br><span class="line"><span class="keyword">int</span> pageSize_JO = (<span class="keyword">int</span>)pageContext.getAttribute(<span class="string">"pageSize_JO"</span>);</span><br><span class="line">cntJO = cntJO - ((PageIndex_JO - <span class="number">1</span>)*pageSize_JO);</span><br><span class="line">&#125;</span><br><span class="line">%&gt;</span><br></pre></td></tr></table></figure><p>TA-DA 문제해결!</p>]]></content:encoded>
      
      
      <category domain="https://sowon-dev.github.io/categories/JAVA/">JAVA</category>
      
      
      <category domain="https://sowon-dev.github.io/tags/%EC%98%A4%EB%A5%98%EC%9D%BC%EC%A7%80/">오류일지</category>
      
      
      <comments>https://sowon-dev.github.io/2021/01/28/210129PaginationInReverseOrder/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>이클립스 svn 계정변경, 비밀번호 잊어버렸을 때 해결하기</title>
      <link>https://sowon-dev.github.io/2021/01/25/210125findSVNpw/</link>
      <guid>https://sowon-dev.github.io/2021/01/25/210125findSVNpw/</guid>
      <pubDate>Mon, 25 Jan 2021 03:31:27 GMT</pubDate>
      
      <description>&lt;h2 id=&quot;비번이-뭐더라…&quot;&gt;&lt;a href=&quot;#비번이-뭐더라…&quot; class=&quot;headerlink&quot; title=&quot;비번이 뭐더라…?&quot;&gt;&lt;/a&gt;비번이 뭐더라…?&lt;/h2&gt;&lt;p&gt;이클립스에서 svn 계정을 변경해야할 상황이 생겼다.&lt;br&gt;문제는 변경할 계정의 비밀번호가 기억이 안난다는 사실…&lt;br&gt;그나저나 아이디는 뭐였더라? 아이디도 함께 찾아보자.&lt;/p&gt;</description>
      
      
      
      <content:encoded><![CDATA[<h2 id="비번이-뭐더라…"><a href="#비번이-뭐더라…" class="headerlink" title="비번이 뭐더라…?"></a>비번이 뭐더라…?</h2><p>이클립스에서 svn 계정을 변경해야할 상황이 생겼다.<br>문제는 변경할 계정의 비밀번호가 기억이 안난다는 사실…<br>그나저나 아이디는 뭐였더라? 아이디도 함께 찾아보자.</p><a id="more"></a><p><br><br><br></p><h2 id="svn-계정-아이디찾기"><a href="#svn-계정-아이디찾기" class="headerlink" title="svn 계정 아이디찾기"></a>svn 계정 아이디찾기</h2><p>먼저 실행 중인 이클립스를 종료한다.<br>파일탐색기를 통해 <code>C:\Users\[컴터아이디]\AppData\Roaming\Subversion\auth\svn.simple</code> 로 이동한다.<br>폴더 안에는 계정정보가 담겨져있다.<br>하단에 username을 통해 아이디를 찾을 수 있다!<br>이제 비밀번호만 찾으면 된다!</p><p><br><br><br></p><h2 id="svn-계정-비밀번호찾기"><a href="#svn-계정-비밀번호찾기" class="headerlink" title="svn 계정 비밀번호찾기"></a>svn 계정 비밀번호찾기</h2><p>비밀번호를 찾는 방법보다 새로운 비밀번호로 설정하는 방법이 더 쉬워보였다.<br>VisualSVN server를 통해 새로운 비밀번호를 설정할 수 있다.<br>나는 svn서버를 관리하지않기때문에 서버관리자의 도움을 받아 비밀번호를 재설정했다.</p><p><img src="https://t1.daumcdn.net/cfile/tistory/214BF03E57C7DE3C2D" alt="출처 : https://jsp-making.tistory.com/347"></p><p><br><br><br></p><h2 id="이클립스-내-svn-계정-바꾸기"><a href="#이클립스-내-svn-계정-바꾸기" class="headerlink" title="이클립스 내 svn 계정 바꾸기"></a>이클립스 내 svn 계정 바꾸기</h2><p>이제 이클립스의 svn계정을 변경해보자 그럴려면 이클립스를 종료해야한다.<br>파일탐색기를 통해 <code>C:\Users\[컴터아이디]\AppData\Roaming\Subversion\auth\svn.simple</code> 로 이동한다.<br>안의 파일들 중 svn주소가 일치하는 파일을 찾은 뒤 필요없는 username인 경우 해당 파일을 삭제한다.<br>그리고 이클립스를 재접속하면 svn 로그인창이 열리고 새로 등록할 계정을 입력해주면 된다!</p><ul><li>파일을 건드리지 않고 <a href="https://blog.nachal.com/1213">이클립스 설정에서 SNV 계정정보를 변경</a>할 수도 있다.</li></ul><p>해결!</p>]]></content:encoded>
      
      
      <category domain="https://sowon-dev.github.io/categories/Version-control/">Version control</category>
      
      
      <category domain="https://sowon-dev.github.io/tags/Eclipse/">Eclipse</category>
      
      <category domain="https://sowon-dev.github.io/tags/SVN/">SVN</category>
      
      <category domain="https://sowon-dev.github.io/tags/%EC%98%A4%EB%A5%98%EC%9D%BC%EC%A7%80/">오류일지</category>
      
      
      <comments>https://sowon-dev.github.io/2021/01/25/210125findSVNpw/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>[오류일지]PatternSyntaxException 오류 해결</title>
      <link>https://sowon-dev.github.io/2021/01/25/210125fileDownloadError/</link>
      <guid>https://sowon-dev.github.io/2021/01/25/210125fileDownloadError/</guid>
      <pubDate>Mon, 25 Jan 2021 00:51:04 GMT</pubDate>
      
      <description>&lt;h2 id=&quot;문제상황&quot;&gt;&lt;a href=&quot;#문제상황&quot; class=&quot;headerlink&quot; title=&quot;문제상황&quot;&gt;&lt;/a&gt;문제상황&lt;/h2&gt;&lt;p&gt;파일 다운로드 클릭시 아래와 같은 콘솔에러가 발생했다.&lt;/p&gt;
&lt;figure class=&quot;highlight xml&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;java.util.regex.PatternSyntaxException: Unexpected internal error near index 1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;\&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;</description>
      
      
      
      <content:encoded><![CDATA[<h2 id="문제상황"><a href="#문제상황" class="headerlink" title="문제상황"></a>문제상황</h2><p>파일 다운로드 클릭시 아래와 같은 콘솔에러가 발생했다.</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">java.util.regex.PatternSyntaxException: Unexpected internal error near index 1</span><br><span class="line">\</span><br></pre></td></tr></table></figure><a id="more"></a><p><br><br><br></p><h2 id="해결순서"><a href="#해결순서" class="headerlink" title="해결순서"></a>해결순서</h2><h3 id="파일을-업로드한-위치에-파일이-있는지-확인하기"><a href="#파일을-업로드한-위치에-파일이-있는지-확인하기" class="headerlink" title="파일을 업로드한 위치에 파일이 있는지 확인하기"></a>파일을 업로드한 위치에 파일이 있는지 확인하기</h3><p>나는 아래의 파일에 다운로드 할 파일 원본이 있는지 확인해본다.</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">D:\\workspace\\프로젝트명\\webapp\\upload</span><br></pre></td></tr></table></figure><p><br><br><br></p><h3 id="FileController-java로-가서-해당-Mapping부분을-확인하기"><a href="#FileController-java로-가서-해당-Mapping부분을-확인하기" class="headerlink" title="FileController.java로 가서 해당 Mapping부분을 확인하기"></a><code>FileController.java</code>로 가서 해당 Mapping부분을 확인하기</h3><p>아래처럼 Mapping 부분을 체크해본다</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@RequestMapping</span>(value = <span class="string">"/downloadn"</span>, method = RequestMethod.GET)</span><br><span class="line"><span class="meta">@AuthMapping</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">downloadDo</span><span class="params">()</span></span>&#123;</span><br><span class="line"><span class="keyword">if</span>(savename != <span class="keyword">null</span> &amp;&amp; !<span class="string">""</span>.equals(savename)) &#123;</span><br><span class="line">savename = savename.replaceAll(<span class="string">"/"</span>, <span class="string">""</span>);</span><br><span class="line">savename = savename.replaceAll(<span class="string">"\\"</span>, <span class="string">""</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(realname != <span class="keyword">null</span> &amp;&amp; !<span class="string">""</span>.equals(realname)) &#123;</span><br><span class="line">realname = realname.replaceAll(<span class="string">"/"</span>, <span class="string">""</span>);</span><br><span class="line">realname = realname.replaceAll(<span class="string">"\\"</span>, <span class="string">""</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//코드 생략</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><br><br><br></p><h3 id="이스케이프-문자-사용하기"><a href="#이스케이프-문자-사용하기" class="headerlink" title="이스케이프 문자 사용하기"></a>이스케이프 문자 사용하기</h3><p>문자열을 다루는 메서드를 사용할 때는 <code>\</code>를 주의해야한다.<br>split이나 replace메서드의 인자로 들어가는 String 토큰이 regex 정규식이기 때문에 이스케이프 문자를 사용해야한다.</p><ul><li><code>\</code>이라면 <code>\\</code>로 사용해야한다.<br>자세한 내용은 <a href="https://mytory.net/archives/285">여기 split 메서드 사용시 실수하기 쉬운 것</a>를 참고하자.</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//수정전</span></span><br><span class="line"><span class="keyword">if</span>(savename != <span class="keyword">null</span> &amp;&amp; !<span class="string">""</span>.equals(savename)) &#123;</span><br><span class="line">savename = savename.replaceAll(<span class="string">"/"</span>, <span class="string">""</span>);</span><br><span class="line">savename = savename.replaceAll(<span class="string">"\\"</span>, <span class="string">""</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(realname != <span class="keyword">null</span> &amp;&amp; !<span class="string">""</span>.equals(realname)) &#123;</span><br><span class="line">realname = realname.replaceAll(<span class="string">"/"</span>, <span class="string">""</span>);</span><br><span class="line">realname = realname.replaceAll(<span class="string">"\\"</span>, <span class="string">""</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//수정후</span></span><br><span class="line"><span class="keyword">if</span>(savename != <span class="keyword">null</span> &amp;&amp; !<span class="string">""</span>.equals(savename)) &#123;</span><br><span class="line">savename = savename.replaceAll(<span class="string">"/"</span>, <span class="string">""</span>);</span><br><span class="line">savename = savename.replaceAll(<span class="string">"\\\\"</span>, <span class="string">"\\"</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(realname != <span class="keyword">null</span> &amp;&amp; !<span class="string">""</span>.equals(realname)) &#123;</span><br><span class="line">realname = realname.replaceAll(<span class="string">"/"</span>, <span class="string">""</span>);</span><br><span class="line">realname = realname.replaceAll(<span class="string">"\\\\"</span>, <span class="string">"\\"</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><br><br><br></p><h3 id="파일-경로-자체의-문제"><a href="#파일-경로-자체의-문제" class="headerlink" title="파일 경로 자체의 문제"></a>파일 경로 자체의 문제</h3><p>위 방법으로 해결안된다면 파일 경로 자체의 문제일 수 있다.<br><code>local.properties</code>에서 <code>file.base.path</code>를 확인해본다.<br>파일이 저장된 곳이랑 일치하는 지 확인한다.<br>나의 경우 달랐기때문에 1번의 경로와 일치시켜주었다.</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">file.base.path=D:\\workspace\\프로젝트명\\webapp\\upload</span><br></pre></td></tr></table></figure><p>오류 해결!!<br>문자열을 다루는 메서드를 사용할 때는 <code>\</code>를 꼭 주의하자!</p>]]></content:encoded>
      
      
      <category domain="https://sowon-dev.github.io/categories/Journal/">Journal</category>
      
      
      <category domain="https://sowon-dev.github.io/tags/Eclipse/">Eclipse</category>
      
      <category domain="https://sowon-dev.github.io/tags/%EC%98%A4%EB%A5%98%EC%9D%BC%EC%A7%80/">오류일지</category>
      
      
      <comments>https://sowon-dev.github.io/2021/01/25/210125fileDownloadError/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>[오류일지]Error creating bean with name 에러 해결(이클립스, STS)</title>
      <link>https://sowon-dev.github.io/2021/01/24/210125lombokerror/</link>
      <guid>https://sowon-dev.github.io/2021/01/24/210125lombokerror/</guid>
      <pubDate>Sun, 24 Jan 2021 16:16:02 GMT</pubDate>
      
      <description>&lt;h2 id=&quot;Error-creating-bean-with-name-“SiteMenuContentServiceImpl”&quot;&gt;&lt;a href=&quot;#Error-creating-bean-with-name-“SiteMenuContentServiceImpl”&quot; class=&quot;headerlink&quot; title=&quot;Error creating bean with name “SiteMenuContentServiceImpl”&quot;&gt;&lt;/a&gt;Error creating bean with name “SiteMenuContentServiceImpl”&lt;/h2&gt;&lt;p&gt;프로젝트를 세팅하는 중에 &lt;code&gt;Error creating bean with name &amp;quot;SiteMenuContentServiceImpl&amp;quot;&lt;/code&gt;에러를 만났다.&lt;br&gt;ServiceImpl.java파일의 빈 생성이 왜 안될까?&lt;/p&gt;</description>
      
      
      
      <content:encoded><![CDATA[<h2 id="Error-creating-bean-with-name-“SiteMenuContentServiceImpl”"><a href="#Error-creating-bean-with-name-“SiteMenuContentServiceImpl”" class="headerlink" title="Error creating bean with name “SiteMenuContentServiceImpl”"></a>Error creating bean with name “SiteMenuContentServiceImpl”</h2><p>프로젝트를 세팅하는 중에 <code>Error creating bean with name &quot;SiteMenuContentServiceImpl&quot;</code>에러를 만났다.<br>ServiceImpl.java파일의 빈 생성이 왜 안될까?</p><a id="more"></a><p><br><br><br></p><h2 id="원인-찾기"><a href="#원인-찾기" class="headerlink" title="원인 찾기"></a>원인 찾기</h2><ul><li><code>SiteMenuContentServiceImpl.java</code> 파일로 이동한다.<br>파일을 열어보니 lombok이 제대로 연결되어있지 않은채 빨간줄이 나타나있었다.<br>나의 경우 lombok에러였고 대게 servlet-context.xml에 오류가 있는 경우 발생하는 에러이므로 <a href="https://needneo.tistory.com/10">servlet-context.xml에서 컴포넌트 추가를 통해 해결가능하다.</a></li></ul><p>STS도 이클립스기반이므로 전반적으로 해결 순서가 동일하다.<br>하지만 설치과정에서 각각 다른 문제를 만났기에 나눠서 적어보려고한다.</p><p><br><br><br></p><h2 id="이클립스-해결순서"><a href="#이클립스-해결순서" class="headerlink" title="이클립스 해결순서"></a>이클립스 해결순서</h2><h3 id="pom-xml에-lombok이-추가-되어-있는지-확인"><a href="#pom-xml에-lombok이-추가-되어-있는지-확인" class="headerlink" title="pom.xml에 lombok이 추가 되어 있는지 확인"></a><code>pom.xml</code>에 lombok이 추가 되어 있는지 확인</h3><p>나의 경우 잘 추가되어있었다.</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.projectlombok<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>lombok<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">version</span>&gt;</span>1.18.6<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">scope</span>&gt;</span>provided<span class="tag">&lt;/<span class="name">scope</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure><p><br><br><br></p><h3 id="lombok-jar-설치"><a href="#lombok-jar-설치" class="headerlink" title="lombok.jar 설치"></a>lombok.jar 설치</h3><ul><li><a href="https://projectlombok.org/download">projectlombok 사이트</a>에서 lombok을 다운로드해준 뒤 사용하는 IDE(이클립스, STS등등)경로를 지정하여 INSTALL을 해준다.</li><li><a href="https://blog.naver.com/10hsb04/221659315804">참고 링크 : 이미 다운로드 되어있는 lombok 위치 찾고 설치하는 방법</a></li></ul><p>나의 경우 이미 다운로드 되어있었다.<br>처음 다운로드 하는 경우에는 다운 후 롬북을 실행해야한다.</p><p><br><br><br></p><h3 id="eclipse-ini파일에-lombok을-추가해준다"><a href="#eclipse-ini파일에-lombok을-추가해준다" class="headerlink" title="eclipse.ini파일에 lombok을 추가해준다."></a><code>eclipse.ini</code>파일에 lombok을 추가해준다.</h3><ul><li><code>eclipse.ini</code>파일의 위치는 이클립스 설치한 폴더 안에 있다. 예시 : <code>C:\Users\eclipse-jee-2020-06-R-win32-x86_64\eclipse</code></li><li><code>eclipse.ini</code>에 아래 두 줄을 추가해준다</li><li>STS인 경우 <code>S</code></li></ul><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">-javaagent:lombok.jar</span><br><span class="line">-Xbootclasspath/a:lombok.jar</span><br></pre></td></tr></table></figure><p><br><br><br></p><h3 id="IDE-이클립스-STS등-을-재시작한다"><a href="#IDE-이클립스-STS등-을-재시작한다" class="headerlink" title="IDE(이클립스, STS등)을 재시작한다."></a>IDE(이클립스, STS등)을 재시작한다.</h3><p><br><br><br></p><h3 id="다시-어노테이션-쓰기"><a href="#다시-어노테이션-쓰기" class="headerlink" title="다시 어노테이션 쓰기."></a>다시 어노테이션 쓰기.</h3><p>4단계까지 했는데도 오류가 발생한다면 <code>@Data</code>, <code>@Getter</code>, <code>@Setter</code>등의 어노테이션을 지웠다가 다시 적어본다.</p><p><br><br><br></p><h2 id="STS-해결순서"><a href="#STS-해결순서" class="headerlink" title="STS 해결순서"></a>STS 해결순서</h2><h3 id="pom-xml에-lombok이-추가-되어-있는지-확인-1"><a href="#pom-xml에-lombok이-추가-되어-있는지-확인-1" class="headerlink" title="pom.xml에 lombok이 추가 되어 있는지 확인"></a><code>pom.xml</code>에 lombok이 추가 되어 있는지 확인</h3><p>나의 경우 잘 추가되어있었다.</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.projectlombok<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>lombok<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">version</span>&gt;</span>1.18.6<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">scope</span>&gt;</span>provided<span class="tag">&lt;/<span class="name">scope</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure><p><br><br><br></p><h3 id="lombok-jar-설치-1"><a href="#lombok-jar-설치-1" class="headerlink" title="lombok.jar 설치"></a>lombok.jar 설치</h3><ul><li><a href="https://projectlombok.org/download">projectlombok 사이트</a>에서 lombok을 다운로드해준 뒤 사용하는 IDE(이클립스, STS등등)경로를 지정하여 INSTALL을 해준다.</li><li><a href="https://blog.naver.com/10hsb04/221659315804">참고 링크 : 이미 다운로드 되어있는 lombok 위치 찾고 설치하는 방법</a></li></ul><p>나의 경우 이미 다운로드 되어있었다. <code>lombok.jar</code>를 더블클릭했지만 실행이 되지않아 lombok이 프로젝트에 적용되지 않는 문제였다. </p><p><br><br><br></p><h3 id="lombok-jar-실행-안-될때"><a href="#lombok-jar-실행-안-될때" class="headerlink" title="lombok.jar 실행 안 될때"></a>lombok.jar 실행 안 될때</h3><ol><li>자바 설치 확인<br>먼저 cmd에서 자바가 잘 설치되어있는지 확인한다.</li></ol><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">javac -version</span><br></pre></td></tr></table></figure><p>자바가 없는 경우 <a href="https://sowon-dev.github.io/2020/05/15/200515javae/">JDK를 다운로드해야한다.</a><br>나의 경우 1.8버전으로 잘 설치되어있었다.</p><ol start="2"><li><p>lombok.jar 더블클릭으로 실행<br>더블클릭하면 바로 실행이 되어야하는데 되지를 않았다.<br>jar 파일아이콘이 아닌 알집exe아이콘으로 표시되어있는 점이 수상했다.<br>알집이나 반디집등의 환경설정에서 jar파일 체크를 해제해주면 된다.<br><a href="https://eating-coding.tistory.com/69">jar 파일 알집으로 실행되는 문제 해결 포스팅</a>을<br>그리고 더블클릭하니까 성공!</p></li><li><p>lombok.jar cmd에서 실행<br>cmd에서 명령어로 lombok.jar를 실행시키는 방법도 있다.</p></li></ol><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">//cmd 명령어</span><br><span class="line">java -jar lombok.jar</span><br></pre></td></tr></table></figure><p><br><br><br></p><h3 id="SpringTools4-ini-또는-STS-ini-파일에-lombok을-추가해준다"><a href="#SpringTools4-ini-또는-STS-ini-파일에-lombok을-추가해준다" class="headerlink" title="SpringTools4.ini 또는 STS.ini 파일에 lombok을 추가해준다."></a><code>SpringTools4.ini</code> 또는 <code>STS.ini</code> 파일에 lombok을 추가해준다.</h3><ul><li>아래 두 줄을 추가해준다</li></ul><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">-javaagent:lombok.jar</span><br><span class="line">-Xbootclasspath/a:lombok.jar</span><br></pre></td></tr></table></figure><p><br><br><br></p><h3 id="IDE-이클립스-STS등-을-재시작한다-1"><a href="#IDE-이클립스-STS등-을-재시작한다-1" class="headerlink" title="IDE(이클립스, STS등)을 재시작한다."></a>IDE(이클립스, STS등)을 재시작한다.</h3><p><br><br><br></p><h3 id="다시-어노테이션-쓰기-1"><a href="#다시-어노테이션-쓰기-1" class="headerlink" title="다시 어노테이션 쓰기."></a>다시 어노테이션 쓰기.</h3><p>4단계까지 했는데도 오류가 발생한다면 <code>@Data</code>, <code>@Getter</code>, <code>@Setter</code>등의 어노테이션을 지웠다가 다시 적어본다.<br>이렇게 나는 문제를 해결했다!</p>]]></content:encoded>
      
      
      <category domain="https://sowon-dev.github.io/categories/Journal/">Journal</category>
      
      
      <category domain="https://sowon-dev.github.io/tags/Eclipse/">Eclipse</category>
      
      <category domain="https://sowon-dev.github.io/tags/%EC%98%A4%EB%A5%98%EC%9D%BC%EC%A7%80/">오류일지</category>
      
      <category domain="https://sowon-dev.github.io/tags/STS/">STS</category>
      
      
      <comments>https://sowon-dev.github.io/2021/01/24/210125lombokerror/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>웹접근성</title>
      <link>https://sowon-dev.github.io/2021/01/22/210122webAccessibility/</link>
      <guid>https://sowon-dev.github.io/2021/01/22/210122webAccessibility/</guid>
      <pubDate>Fri, 22 Jan 2021 02:45:31 GMT</pubDate>
      
      <description>&lt;h2 id=&quot;웹접근성이란&quot;&gt;&lt;a href=&quot;#웹접근성이란&quot; class=&quot;headerlink&quot; title=&quot;웹접근성이란?&quot;&gt;&lt;/a&gt;웹접근성이란?&lt;/h2&gt;&lt;p&gt;웹 접근성(web accessibility)은 장애인이나 고령자들이 웹 사이트에서 제공하는 정보를 비장애인과 동등하게 접근하고 이용 할 수 있도록 보장하는 것으로 웹 접근성 준수는 법적의무사항이다.&lt;br&gt;브라우저들은 HTML의 사소한(?) 에러들은 자동으로 고쳐준다.&lt;br&gt;따라서 태그가 닫혔는지 굳이 체크하지않아도 괜찮다. 하지만 웹접근성을 준수하기 위해선 직접 닫아줘야한다.&lt;/p&gt;</description>
      
      
      
      <content:encoded><![CDATA[<h2 id="웹접근성이란"><a href="#웹접근성이란" class="headerlink" title="웹접근성이란?"></a>웹접근성이란?</h2><p>웹 접근성(web accessibility)은 장애인이나 고령자들이 웹 사이트에서 제공하는 정보를 비장애인과 동등하게 접근하고 이용 할 수 있도록 보장하는 것으로 웹 접근성 준수는 법적의무사항이다.<br>브라우저들은 HTML의 사소한(?) 에러들은 자동으로 고쳐준다.<br>따라서 태그가 닫혔는지 굳이 체크하지않아도 괜찮다. 하지만 웹접근성을 준수하기 위해선 직접 닫아줘야한다.</p><a id="more"></a><ul><li>원칙 1    인식의 용이성 (Perceivable) : 모든 콘텐츠는 사용자가 인식할 수 있어야 한다.<ol><li>적절한 대체 텍스트 제공해야 한다.</li><li>멀티미디어 콘텐츠에는 자막, 원고 또는 수화를 제공해야 한다.</li><li>콘텐츠는 색에 관계없이 인식될 수 있어야 한다.</li><li>명확한 지시사항 제공해야 한다.</li><li>텍스트 콘텐츠와 배경 간의 명도 대비는 4.5대 1 이상이어야 한다.</li><li>자동 재생 금지</li><li>이웃한 콘텐츠는 구별될 수 있어야 한다.</li></ol></li><li>원칙 2    운용의 용이성(Operable) : 사용자 인터페이스 구성요소는 조작 가능하고 내비게이션 할 수 있어야 한다.<ol><li>키보드 사용 보장</li><li>터치(touch) 기반 모바일 기기의 모든 컨트롤은 누르기 동작으로 제어할 수 있어야 한다. (모바일웹)</li><li>깜빡임과 번쩍임 사용 제한</li><li>제목 제공</li><li>적절한 링크 텍스트</li></ol></li><li>원칙 3    이해의 용이성(Understandable) : 콘텐츠는 이해할 수 있어야 한다.</li><li>원칙 4    견고성(Robust) : 웹 콘텐츠는 미래의 기술로도 접근할 수 있도록 견고하게 만들어야 한다.<ol><li>마크업 오류 방지</li><li>웹 애플리케이션 접근성 준수</li></ol></li></ul><p><img src="http://www.cnweb.co.kr/images/business/accessibility_13.gif" alt=""></p><p><br><br><br></p><h2 id="웹-접근성-확인-가능한-웹사이트"><a href="#웹-접근성-확인-가능한-웹사이트" class="headerlink" title="웹 접근성 확인 가능한 웹사이트"></a>웹 접근성 확인 가능한 웹사이트</h2><ul><li><a href="https://validator.w3.org/">W3C Markup Validation</a> : 웹 접근성을 위한 HTML 유효성을 확인할 수 있다.</li><li><a href="https://jigsaw.w3.org/css-validator/">W3C CSS Validation</a> : 웹 접근성을 위한 CSS 유효성을 확인할 수 있다.</li></ul><p><br><br><br></p><h2 id="참고"><a href="#참고" class="headerlink" title="참고"></a>참고</h2><ul><li><a href="http://www.wa.or.kr/m1/sub1.asp">http://www.wa.or.kr/m1/sub1.asp</a></li><li><a href="https://seulbinim.github.io/WSA/accessibility.html#%EC%9B%B9%EC%A0%91%EA%B7%BC%EC%84%B1%EC%9D%98-%EA%B0%9C%EC%9A%94">https://seulbinim.github.io/WSA/accessibility.html#%EC%9B%B9%EC%A0%91%EA%B7%BC%EC%84%B1%EC%9D%98-%EA%B0%9C%EC%9A%94</a></li><li><a href="http://www.websoul.co.kr/accessibility/define.asp">http://www.websoul.co.kr/accessibility/define.asp</a></li></ul>]]></content:encoded>
      
      
      <category domain="https://sowon-dev.github.io/categories/Journal/">Journal</category>
      
      
      <category domain="https://sowon-dev.github.io/tags/Web-Development/">Web Development</category>
      
      
      <comments>https://sowon-dev.github.io/2021/01/22/210122webAccessibility/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>[자바JAVA]190. Reverse Bits</title>
      <link>https://sowon-dev.github.io/2021/01/21/210122al-l0190/</link>
      <guid>https://sowon-dev.github.io/2021/01/21/210122al-l0190/</guid>
      <pubDate>Thu, 21 Jan 2021 06:06:50 GMT</pubDate>
      
      <description>&lt;h2 id=&quot;문제-190-Reverse-Bits&quot;&gt;&lt;a href=&quot;#문제-190-Reverse-Bits&quot; class=&quot;headerlink&quot; title=&quot;문제 190. Reverse Bits&quot;&gt;&lt;/a&gt;문제 190. Reverse Bits&lt;/h2&gt;&lt;p&gt;주어진 32비트 unsigned integer를 역순으로 만들어 리턴하는 문제이다.&lt;br&gt;Reverse bits of a given 32 bits unsigned integer.&lt;/p&gt;</description>
      
      
      
      <content:encoded><![CDATA[<h2 id="문제-190-Reverse-Bits"><a href="#문제-190-Reverse-Bits" class="headerlink" title="문제 190. Reverse Bits"></a>문제 190. Reverse Bits</h2><p>주어진 32비트 unsigned integer를 역순으로 만들어 리턴하는 문제이다.<br>Reverse bits of a given 32 bits unsigned integer.</p><a id="more"></a><p>Note:<br>Note that in some languages such as Java, there is no unsigned integer type. In this case, both input and output will be given as a signed integer type. They should not affect your implementation, as the integer’s internal binary representation is the same, whether it is signed or unsigned.<br>In Java, the compiler represents the signed integers using 2’s complement notation. Therefore, in Example 2 above, the input represents the signed integer -3 and the output represents the signed integer -1073741825.</p><ul><li>입출력예시</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//예시1</span></span><br><span class="line">Input: n = <span class="number">00000010100101000001111010011100</span></span><br><span class="line">Output:    <span class="number">964176192</span> (<span class="number">00111001011110000010100101000000</span>)</span><br><span class="line">Explanation: The input binary string <span class="number">00000010100101000001111010011100</span> represents the unsigned integer <span class="number">43261596</span>, so <span class="keyword">return</span> <span class="number">964176192</span> which its binary representation is <span class="number">00111001011110000010100101000000</span>.</span><br><span class="line"></span><br><span class="line"><span class="comment">//예시2</span></span><br><span class="line">Input: n = <span class="number">11111111111111111111111111111101</span></span><br><span class="line">Output:   <span class="number">3221225471</span> (<span class="number">10111111111111111111111111111111</span>)</span><br><span class="line">Explanation: The input binary string <span class="number">11111111111111111111111111111101</span> represents the unsigned integer <span class="number">4294967293</span>, so <span class="keyword">return</span> <span class="number">3221225471</span> which its binary representation is <span class="number">10111111111111111111111111111111</span>.</span><br></pre></td></tr></table></figure><ul><li>제약조건 : 길이32의 이진수만 입력값으로 가능하다. The input must be a binary string of length 32</li></ul><p><br><br><br></p><h2 id="unsigned-integer란"><a href="#unsigned-integer란" class="headerlink" title="unsigned integer란?"></a>unsigned integer란?</h2><p>자바에는 unsigned integer가 없다. 생소하기때문에 개념을 찾아보았다.<br>unsigned와 signed integer가 있다. 여기서 sign은 부호를 뜻한다.<br>int의 범위는 <code>–2,147,483,648 ~ 2,147,483,647</code>이다.<br>unsigned integer는 음수를 가질 수 없다. 양수인 부분 즉, <code>0 ~ 2,147,483,647</code>만을 unsigned integer라고 한다.<br>단어가 생소해서 그렇지 그리 어려운 개념은 아니다.</p><blockquote><p>int and unsigned int are two distinct integer types. (int can also be referred to as signed int, or just signed; unsigned int can also be referred to as unsigned.)<br>As the names imply, int is a signed integer type, and unsigned int is an unsigned integer type. That means that int is able to represent negative values, and unsigned int can represent only non-negative values.<br>출처 : <a href="https://stackoverflow.com/questions/5739888/what-is-the-difference-between-signed-and-unsigned-int">https://stackoverflow.com/questions/5739888/what-is-the-difference-between-signed-and-unsigned-int</a></p></blockquote><p><br><br><br></p><h2 id="비트-AND-와-SHIFT-연산자"><a href="#비트-AND-와-SHIFT-연산자" class="headerlink" title="비트 AND 와 SHIFT 연산자"></a>비트 AND 와 SHIFT 연산자</h2><p>예를들어 <code>00110</code>이 있다면 <code>11001</code>을, <code>11100</code>이면 <code>00111</code>을 리턴해줘야한다.<br>비트가 나왔으니 비트연산자를 떠올려보자.</p><ul><li>비트 AND 연산자 : 비트연산자 <code>&amp;</code>를 사용하면 같은 값이면 해당 값을 반환하고 다른 값이면 0을 반환환다.</li></ul><p><img src="http://www.tcpschool.com/lectures/img_php_bitwise_and.png" alt="http://www.tcpschool.com/c/c_operator_bitwise"></p><ul><li>비트 SHIFT 연산자 : <code>&lt;&lt;n</code> n만큼 왼쪽으로 이동한다. 이동하고 빈곳에는 0을 넣는다.</li></ul><p><img src="https://gblobscdn.gitbook.com/assets%2F-LKLx6PA5iF3Uq2IzQsf%2F-LKMgRwYbvGFY2p9XMN-%2F-LKMgrv8kpnwpG0Isfym%2FbitshiftUnsigned_2x.png?alt=media&token=7a9539f4-b7c6-404c-b1bf-5da485e88ed5" alt="https://jusung.gitbook.io/the-swift-language-guide/language-guide/26-advanced-operators"></p><p>위 둘을 이용해 한 비트씩 계산할 수 있다. </p><ul><li>비트 OR 연산자 : 두 비트가 모두 0일때만 0을 반환한다.</li></ul><p><img src="http://www.tcpschool.com/lectures/img_php_bitwise_or.png" alt="http://www.tcpschool.com/c/c_operator_bitwise"></p><p>제일 오른쪽의 비트부터 AND연산시 0보다 숫자가 클 경우 OR연산자를 이용해 역으로 출력해준다.</p><p><br><br><br></p><h2 id="코드"><a href="#코드" class="headerlink" title="코드"></a>코드</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="comment">// you need treat n as an unsigned value</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">reverseBits</span><span class="params">(<span class="keyword">int</span> n)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">int</span> ans = <span class="number">0</span>;</span><br><span class="line"><span class="comment">// 32비트 제약</span></span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>; i&lt;<span class="number">32</span>; i++)&#123;</span><br><span class="line">            ans = ans &lt;&lt;<span class="number">1</span>;</span><br><span class="line">            <span class="keyword">if</span>((n &amp; <span class="number">1</span>) &gt;<span class="number">0</span>)&#123;</span><br><span class="line">                ans = ans | <span class="number">1</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            n = n &gt;&gt;<span class="number">1</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> ans;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><br><br><br></p><h2 id="다른-문제-풀이가-보고싶다면"><a href="#다른-문제-풀이가-보고싶다면" class="headerlink" title="다른 문제 풀이가 보고싶다면?"></a>다른 문제 풀이가 보고싶다면?</h2><ul><li><a href="https://github.com/sowon-dev/AlgorithmStudy_Java/tree/master/src/leetcodeEasyLevel">모든 릿코드(LeetCode)(leetcode) java 풀이</a></li></ul><p><br><br><br></p><h2 id="참고"><a href="#참고" class="headerlink" title="참고"></a>참고</h2><ul><li><a href="https://dojang.io/mod/page/view.php?id=174">https://dojang.io/mod/page/view.php?id=174</a></li></ul><iframe width="100%" height="400" src="https://www.youtube.com/embed/KE5Axm7uzok" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture" allowfullscreen></iframe>]]></content:encoded>
      
      
      <category domain="https://sowon-dev.github.io/categories/Algorithm/">Algorithm</category>
      
      
      <category domain="https://sowon-dev.github.io/tags/Leetcode/">Leetcode</category>
      
      
      <comments>https://sowon-dev.github.io/2021/01/21/210122al-l0190/#disqus_thread</comments>
      
    </item>
    
  </channel>
</rss>
