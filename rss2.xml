<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0"
  xmlns:atom="http://www.w3.org/2005/Atom"
  xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>야망찬 개발자의 블로그</title>
    <link>https://sowon-dev.github.io/</link>
    
    <atom:link href="https://sowon-dev.github.io/rss2.xml" rel="self" type="application/rss+xml"/>
    
    <description>devlog</description>
    <pubDate>Tue, 29 Nov 2022 06:45:21 GMT</pubDate>
    <generator>http://hexo.io/</generator>
    
    <item>
      <title>[MySQL/MariaDB] 함수(function) vs 프로시저(Procedure) 차이</title>
      <link>https://sowon-dev.github.io/2022/11/28/221129MySQL-function-Procedure/</link>
      <guid>https://sowon-dev.github.io/2022/11/28/221129MySQL-function-Procedure/</guid>
      <pubDate>Mon, 28 Nov 2022 21:03:57 GMT</pubDate>
      
      <description>&lt;p&gt;이번에 진행중인 프로젝트는 프로시저보다 함수가 더 많이 사용되었다. 지난번 담당했던 프로젝트는 오직 프로시저만 썼었다. 둘의 차이가 뭘까? 언뜻 생각해봤을땐 return유무정도인데 깊이있게 알고싶어졌다.&lt;/p&gt;</description>
      
      
      
      <content:encoded><![CDATA[<p>이번에 진행중인 프로젝트는 프로시저보다 함수가 더 많이 사용되었다. 지난번 담당했던 프로젝트는 오직 프로시저만 썼었다. 둘의 차이가 뭘까? 언뜻 생각해봤을땐 return유무정도인데 깊이있게 알고싶어졌다.</p><a id="more"></a><p><br><br><br></p><h1 id="함수"><a href="#함수" class="headerlink" title="함수"></a>함수</h1><ol><li>정의: 항상 리턴값을 가짐</li><li>특징<ul><li>리턴값은 필수이고 오직 하나</li><li>try catch 사용 불가</li></ul></li><li>단점<ul><li>클라이언트실행으로 프로시저보다 속도가 느리다.</li></ul></li><li>선언 <figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">CREATE</span> <span class="keyword">FUNCTION</span> function_name(</span><br><span class="line">param1,</span><br><span class="line">param2,…</span><br><span class="line">)</span><br><span class="line"><span class="keyword">RETURNS</span> datatype</span><br><span class="line">[<span class="keyword">NOT</span>] <span class="keyword">DETERMINISTIC</span></span><br><span class="line"><span class="keyword">BEGIN</span></span><br><span class="line"> <span class="comment">-- statements</span></span><br><span class="line"><span class="keyword">END</span></span><br></pre></td></tr></table></figure></li><li>선언예시 <figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">create</span> <span class="keyword">function</span> MultiplyNumbers(@int1 <span class="keyword">as</span> <span class="built_in">int</span>,@int2 <span class="keyword">as</span> <span class="built_in">int</span>)</span><br><span class="line"><span class="keyword">As</span></span><br><span class="line"><span class="keyword">BEGIN</span></span><br><span class="line"><span class="keyword">Return</span> (@int1 * @int2)</span><br><span class="line"><span class="keyword">end</span></span><br></pre></td></tr></table></figure></li><li>호출 <figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">MultiplyNumbers(2,2) </span><br><span class="line">// RETURN: 4</span><br></pre></td></tr></table></figure></li></ol><h1 id="프로시저"><a href="#프로시저" class="headerlink" title="프로시저"></a>프로시저</h1><ol><li>정의: 특정 작업을 수행. 여러 SQL문을 한 번에 실행 가능</li><li>특징<ul><li>개발업무와 DB처리를 구분하여 개발할 수 있음</li><li>보수성 뛰어남</li><li>서버 실행이라 속도가 함수보다 상대적으로 빠름</li><li>리턴값 없거나 여러개도 가능 -&gt; 유연성</li><li>try catch 사용가능 -&gt; 에러처리가능</li></ul></li><li>단점<ul><li>재사용성이 좋지 않음</li></ul></li><li>선언 <figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">Create</span> <span class="keyword">Procedure</span> [<span class="keyword">Procedure</span> <span class="keyword">Name</span>] ([Parameter <span class="number">1</span>], [Parameter <span class="number">2</span>], [Parameter <span class="number">3</span>] )</span><br><span class="line"><span class="keyword">Begin</span></span><br><span class="line"><span class="comment">-- SQL Queries..</span></span><br><span class="line"><span class="keyword">End</span></span><br></pre></td></tr></table></figure></li><li>선언 예시 <figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">CREATE</span> <span class="keyword">PROCEDURE</span> GetAllProducts()</span><br><span class="line"><span class="keyword">BEGIN</span></span><br><span class="line"><span class="keyword">SELECT</span> *  <span class="keyword">FROM</span> products;</span><br><span class="line"><span class="keyword">END</span></span><br></pre></td></tr></table></figure></li><li>호출 <figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">CALL</span> GetAllProducts()</span><br></pre></td></tr></table></figure></li></ol><p><br><br><br></p><h1 id="차이"><a href="#차이" class="headerlink" title="차이"></a>차이</h1><table><thead><tr><th align="center"></th><th align="left">함수(Function)</th><th align="left">프로시저(Procedure)</th></tr></thead><tbody><tr><td align="center">처리주체</td><td align="left">클라이언트에서 처리</td><td align="left">서버로 보내서 처리</td></tr><tr><td align="center">리턴값 유무</td><td align="left">필수</td><td align="left">선택</td></tr><tr><td align="center">리턴값 갯수</td><td align="left">하나만 반환가능</td><td align="left">여러개 반환가능</td></tr></tbody></table><p><br><br><br></p><h1 id="참고"><a href="#참고" class="headerlink" title="참고"></a>참고</h1><ul><li><a href="https://www.geeksforgeeks.org/difference-between-function-and-procedure/">https://www.geeksforgeeks.org/difference-between-function-and-procedure/</a></li><li><a href="https://www.mysqltutorial.org/getting-started-with-mysql-stored-procedures.aspx">https://www.mysqltutorial.org/getting-started-with-mysql-stored-procedures.aspx</a></li><li><a href="https://velog.io/@devjooj/Mysql-Function%EA%B3%BC-Procedure-%EC%B0%A8%EC%9D%B4">https://velog.io/@devjooj/Mysql-Function%EA%B3%BC-Procedure-%EC%B0%A8%EC%9D%B4</a></li><li><a href="https://spiderwebcoding.tistory.com/7">https://spiderwebcoding.tistory.com/7</a></li></ul>]]></content:encoded>
      
      
      <category domain="https://sowon-dev.github.io/categories/Database/">Database</category>
      
      <category domain="https://sowon-dev.github.io/categories/Database/MySQL/">MySQL</category>
      
      
      
      <comments>https://sowon-dev.github.io/2022/11/28/221129MySQL-function-Procedure/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>레디스(Redis)가 뭐길래</title>
      <link>https://sowon-dev.github.io/2022/11/21/221122Redis/</link>
      <guid>https://sowon-dev.github.io/2022/11/21/221122Redis/</guid>
      <pubDate>Mon, 21 Nov 2022 20:33:44 GMT</pubDate>
      
      <description>&lt;p&gt;종종 들었던 Redis, 이번 레거시프로젝트 소스코드분석중 RedisTemplate을 만나면서 그 개념을 함께 정리해보고자한다.&lt;/p&gt;</description>
      
      
      
      <content:encoded><![CDATA[<p>종종 들었던 Redis, 이번 레거시프로젝트 소스코드분석중 RedisTemplate을 만나면서 그 개념을 함께 정리해보고자한다.</p><a id="more"></a><h1 id="In-Memory-DB란"><a href="#In-Memory-DB란" class="headerlink" title="In Memory DB란?"></a>In Memory DB란?</h1><blockquote><p>인메모리 데이터베이스(In-memory Database)는 데이터 스토리지의 메인 메모리에 설치되어 운영되는 방식의 데이터베이스 관리 시스템이다.<br>인메모리 데이터베이스는 디스크에 최적화된 데이터베이스보다 더 빠른데 그 까닭은 디스크 접근이 메모리 접근보다 느리기 때문이며, 이 데이터베이스는 내부 최적화 알고리즘이 더 단순하며 더 적은 CPU 명령을 실행한다. 메모리의 데이터에 접근하면 데이터를 조회할 때 검색 시간이 줄어들며 디스크보다 더 빠르고 더 예측 가능성 성능을 제공한다.<br>인메모리 데이터 스토리지의 잠재적인 기술적 문제는 RAM의 휘발성이다. 구체적으로 말해 전원이 소실될 경우나 고의적인 상황 등에서 휘발성 RAM 안에 저장된 데이터는 손실된다.비휘발성 RAM 기술의 도입으로 인메모리 데이터베이스는 전력 손실에도 완전한 속도로 데이터를 유지할 수 있게 되었다.<br>출처: <a href="https://ko.wikipedia.org/wiki/%EC%9D%B8%EB%A9%94%EB%AA%A8%EB%A6%AC_%EB%8D%B0%EC%9D%B4%ED%84%B0%EB%B2%A0%EC%9D%B4%EC%8A%A4">위키백과</a></p></blockquote><p><br><br><br></p><h2 id="인메모리DB-특징"><a href="#인메모리DB-특징" class="headerlink" title="인메모리DB 특징"></a>인메모리DB 특징</h2><p>인메모리디비의 가장 큰 특징은 2가지이다.</p><ol><li>인메모리 데이터구조: 디스크 아닌 메모리 기반. Redis의 가장 큰 특징.</li><li>캐시를 사용하여 속도가 빠름</li></ol><p><br><br><br></p><h2 id="인메모리DB-사용처"><a href="#인메모리DB-사용처" class="headerlink" title="인메모리DB 사용처"></a>인메모리DB 사용처</h2><p>크게 3가지 용도로 사용한다.</p><ol><li>데이터베이스</li><li>캐시</li><li>메세지 브로커</li></ol><p>결국 빠른 속도를 위해서 메모리에 올려서 사용하는 데이터 저장소이다.<br>인메모리DB의 종류에는 Redis, Memcached, Amazon ElastiCache 등이 있고 그 중 Redis의 인기가 압도적으로 높다. </p><p><br><br><br></p><h1 id="Redis란"><a href="#Redis란" class="headerlink" title="Redis란?"></a>Redis란?</h1><p>Redis는 REmote DIctionary Server의 약어로 Key와 Value를 가진 오픈소스 NoSQL 데이터베이스이다.<br>여기서 NoSQL이란 스키마없이 데이터를 표현한 데이터베이스로 <a href="https://sowon-dev.github.io/2022/02/26/220226NoSQL/">NoSQL이 뭐길래</a>포스팅을 참고하면된다.</p><p><br><br><br></p><h2 id="Redis-특징"><a href="#Redis-특징" class="headerlink" title="Redis 특징"></a>Redis 특징</h2><ol><li>다양한 데이터 구조: String, Set, Sorted Set, Hash, List 등 다양한 타입을 지원</li><li>스냅샷: 장애시 복구 가능</li><li>Master-Slave 구조로 여러 개의 복제본 만들기 용이</li><li>트랜잭션 지원</li><li>Pub(발행) / Sub(구독) 방식의 메시징을 지원</li></ol><p><br><br><br></p><h1 id="DB가-있는데-인메모리DB를-왜-쓸까"><a href="#DB가-있는데-인메모리DB를-왜-쓸까" class="headerlink" title="DB가 있는데 인메모리DB를 왜 쓸까?"></a>DB가 있는데 인메모리DB를 왜 쓸까?</h1><p>근원적인 궁금증을 해결해준 글을 발견해서 발췌해왔다.</p><blockquote><p>데이터 베이스가 있는데도 Redis라는 인메모리 데이터 구조 저장소를 사용하는 이유는 무엇일까요?<br>데이터 베이스는 데이터를 물리 디스크에 직접 쓰기 때문에 서버에 문제가 발생하여 다운되더라도 데이터가 손실되지 않습니다. 하지만 매번 디스크에 접근해야 하기 때문에 사용자가 많아질수록 부하가 많아져서 느려질 수 있는데요.<br>일반적으로 서비스 운영 초반이거나 규모가 작은, 사용자가 많지 않은 서비스의 경우에는 WEB - WAS - DB 의 구조로도 데이터 베이스에 무리가 가지 않습니다.<br>하지만 사용자가 늘어난다면 데이터 베이스가 과부하 될 수 있기 때문에 이때 캐시 서버를 도입하여 사용합니다.<br>그리고 이 캐시 서버로 이용할 수 있는 것이 바로 Redis 입니다.<br>캐시는 한번 읽어온 데이터를 임의의 공간에 저장하여 다음에 읽을 때는 빠르게 결괏값을 받을 수 있도록 도와주는 공간입니다.<br>같은 요청이 여러 번 들어오는 경우 매번 데이터 베이스를 거치는 것이 아니라 캐시 서버에서 첫 번째 요청 이후 저장된 결괏값을 바로 내려주기 때문에 DB의 부하를 줄이고 서비스의 속도도 느려지지 않는 장점이 있습니다.<br>출처: <a href="https://wildeveloperetrain.tistory.com/m/21">Jan92님 블로그 - Redis란? 레디스의 기본적인 개념</a></p></blockquote><p><br><br><br></p><h1 id="MSSQL이나-MYSQL도-인메모리테이블을-지원하는데-왜-굳이-레디스-Redis-를-사용할까"><a href="#MSSQL이나-MYSQL도-인메모리테이블을-지원하는데-왜-굳이-레디스-Redis-를-사용할까" class="headerlink" title="MSSQL이나 MYSQL도 인메모리테이블을 지원하는데 왜 굳이 레디스(Redis)를 사용할까?"></a>MSSQL이나 MYSQL도 인메모리테이블을 지원하는데 왜 굳이 레디스(Redis)를 사용할까?</h1><p>레디스에 대해 이야기를 나누다가 팀장님이 RDB에서도 인메모리를 지원하는데 왜 굳이 레디스를 사용하는 지 알아보는게 어떠냐고 제안해주셨다.<br>RDB에서도 메모리DB를 쓸수있다니! 전혀 몰랐던 사실이어서 공부해봤다.</p><table><thead><tr><th align="center">DB명</th><th align="left">인메모리DB 사용</th><th align="left">적용법</th></tr></thead><tbody><tr><td align="center">Oracle</td><td align="left">In Memory Option</td><td align="left"><a href="http://www.koreaoug.org/c12/935">Oracle Database In-Memory Option –I (설명과 설정방법)</a></td></tr><tr><td align="center">MySQL</td><td align="left">메모리테이블</td><td align="left"><a href="https://m.blog.naver.com/PostView.naver?isHttpsRedirect=true&blogId=oralol&logNo=222198862146">DB 튜닝 - MySQL Memory 테이블 사용</a></td></tr><tr><td align="center">MSSQL</td><td align="left">메모리테이블</td><td align="left"><a href="https://mozi.tistory.com/566">MSSQL 테이블을 인메모리(in-memory)로 사용하는 방법</a></td></tr></tbody></table><p><br><br><br></p><h2 id="왜-굳이-레디스를-사용할까"><a href="#왜-굳이-레디스를-사용할까" class="headerlink" title="왜 굳이 레디스를 사용할까?"></a>왜 굳이 레디스를 사용할까?</h2><p>먼저, 레디스는 사용자가 많아 자료가 많다. 커뮤니티가 큰 오픈소스를 사용해야 적용 및 대응이 쉽다.<br>두번째로 인메모리데이블은 제약사항이 많은 반면에 레디스는 다양한 데이터구조 사용가능, 스냅샷으로 복구시 활용가능한 점등이 확장성을 고려해봤을때도 여전히 좋다.</p><p><br><br><br></p><h1 id="참고"><a href="#참고" class="headerlink" title="참고"></a>참고</h1><ul><li><a href="https://aws.amazon.com/ko/elasticache/what-is-redis/">https://aws.amazon.com/ko/elasticache/what-is-redis/</a></li><li><a href="https://wildeveloperetrain.tistory.com/m/21">https://wildeveloperetrain.tistory.com/m/21</a></li><li><a href="https://ko.wikipedia.org/wiki/%EC%9D%B8%EB%A9%94%EB%AA%A8%EB%A6%AC_%EB%8D%B0%EC%9D%B4%ED%84%B0%EB%B2%A0%EC%9D%B4%EC%8A%A4">위키백과 - 인메모리데이터베이스</a></li><li><a href="http://www.koreaoug.org/c12/935">http://www.koreaoug.org/c12/935</a></li><li><a href="https://m.blog.naver.com/PostView.naver?isHttpsRedirect=true&amp;blogId=oralol&amp;logNo=222198862146">https://m.blog.naver.com/PostView.naver?isHttpsRedirect=true&amp;blogId=oralol&amp;logNo=222198862146</a></li><li><a href="https://mozi.tistory.com/566">https://mozi.tistory.com/566</a></li><li><a href="https://kdhyo98.tistory.com/89">https://kdhyo98.tistory.com/89</a></li></ul>]]></content:encoded>
      
      
      <category domain="https://sowon-dev.github.io/categories/Database/">Database</category>
      
      
      <category domain="https://sowon-dev.github.io/tags/Redis/">Redis</category>
      
      
      <comments>https://sowon-dev.github.io/2022/11/21/221122Redis/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>[JS]Web Storage vs 쿠키(Cookie) vs 세션(Session) vs 캐시(Cache)</title>
      <link>https://sowon-dev.github.io/2022/11/21/221121JS-webstorage/</link>
      <guid>https://sowon-dev.github.io/2022/11/21/221121JS-webstorage/</guid>
      <pubDate>Mon, 21 Nov 2022 04:27:19 GMT</pubDate>
      
      <description>&lt;p&gt;레거시프로젝트의 소스코드를 분석하다가 Web Storage를 만났다.&lt;br&gt;localStorage와 sessionStorage를 둘 다 사용하고 있었기에 둘 차이가 궁금해졌다.&lt;/p&gt;</description>
      
      
      
      <content:encoded><![CDATA[<p>레거시프로젝트의 소스코드를 분석하다가 Web Storage를 만났다.<br>localStorage와 sessionStorage를 둘 다 사용하고 있었기에 둘 차이가 궁금해졌다.</p><a id="more"></a><p>구글링할수도록 쿠키, 세션, 캐시까지 다양한 개념이 나오길래 이참에 다 정리해봤다.</p><h1 id="Web-Storage"><a href="#Web-Storage" class="headerlink" title="Web Storage"></a>Web Storage</h1><ul><li>클라이언트에 저장</li><li>Key-Value 형태</li><li>쿠키와 달리 서버에 전송안함</li><li>CSRF로부터 안전 why? Origin단위로 접근이 제한되기때문에.</li><li>쿠키(4GB)보다 큰 저장용량(5GB)지원</li><li>문자형(String) 데이터 타입만 지원</li><li>종류<ul><li>localStorage: 사용자가 데이터를 지우지 않는 이상, 브라우저나 OS를 종료해도 계속 브라우저에 남아있음 (영구성) 단, 동일한 브라우저를 사용할 때만 해당</li><li>sessionStorage: 브라우저 탭에도 종속되기 때문에, 윈도우나 브라우저 탭을 닫을 경우 제거</li></ul></li></ul><p><br><br><br></p><h2 id="Origin-오리진이란"><a href="#Origin-오리진이란" class="headerlink" title="Origin 오리진이란?"></a>Origin 오리진이란?</h2><p>오리진 = 프로토콜 + 도메인 + 포트</p><p><br><br><br></p><h1 id="비교"><a href="#비교" class="headerlink" title="비교"></a>비교</h1><table><thead><tr><th align="center"></th><th align="left">localStorage</th><th align="left">sessionStorage</th><th align="left">Cookie</th><th align="left">Session</th></tr></thead><tbody><tr><td align="center">저장위치</td><td align="left">클라이언트</td><td align="left">클라이언트</td><td align="left">클라이언트</td><td align="left">서버</td></tr><tr><td align="center">저장형식</td><td align="left">String</td><td align="left">String</td><td align="left">String</td><td align="left">Obejct</td></tr><tr><td align="center">전송</td><td align="left">서버전송x <br> -&gt; 서버 부담없음</td><td align="left">서버전송x <br> -&gt; 서버 부담없음</td><td align="left">매번 서버에 자동 전송 <br> -&gt; 크기가 크면 서버에 부담</td><td align="left">서버에서 클라이언트를 구분하기 위해 세션 ID를 부여 <br> -&gt; 사용자가 많아질수록 서버 메모리를 많이 차지</td></tr><tr><td align="center">유효기간 설정</td><td align="left">불가능</td><td align="left">불가능</td><td align="left">가능</td><td align="left">가능(기본 30분)</td></tr><tr><td align="center">데이터영구성</td><td align="left">브라우저 종료해도 유지 <br> 명시적 삭제 필요</td><td align="left">윈도우나 브라우저 탭을 닫을 경우 삭제됨</td><td align="left">쿠키 저장시 설정(설정 없을 시에는 브라우저 종료시 만료)</td><td align="left">브라우저 종료 시 만료기간에 상관없이 삭제됨</td></tr><tr><td align="center">생성단위</td><td align="left">Origin별로 생성<br>다른 오리진의 로컬 스토리지에는 접근 불가<br>서로 다른 브라우저 탭이라도 동일한 오리진이라면 동일한 로컬 스토리지를 사용함<br></td><td align="left">Origin별마다 탭/윈도우 단위로 생성-&gt;탭/윈도우를 닫을 시 데이터가 삭제됨</td><td align="left">브라우저에 여러개 생성가능</td><td align="left">브라우저당 하나의 세션SessionID이 생성</td></tr><tr><td align="center">주 사용처</td><td align="left">지속적으로 필요한 정보를 저장할때<br>e.g.자동 로그인 등</td><td align="left">잠시 동안 필요한 정보를 저장할 때<br>e.g.입력 폼 저장, 일회성 로그인 등</td><td align="left">로그인유지, 자동완성, 일주일간 다시 보지 않기, 최근 검색한 상품들을 광고에서 추천, 쇼핑몰 장바구니 기능</td><td align="left">로그인유지</td></tr></tbody></table><p><br><br><br></p><h1 id="캐시-Cache-는-또-뭘까"><a href="#캐시-Cache-는-또-뭘까" class="headerlink" title="캐시(Cache)는 또 뭘까?"></a>캐시(Cache)는 또 뭘까?</h1><p>쿠키와 세션을 이야기하다보면 자연스럽게 캐시가 나온다.<br>어떤 차이가 있을까?</p><ul><li>캐시: 웹 페이지 요소(e.g.img,css,js등 리소스파일)를 저장하기 위한 임시 저장소 for 빠른 웹페이지 랜더링</li><li>쿠키,세션: 정보 저장소 for 사용자인증</li></ul><p><br><br><br></p><h1 id="참고"><a href="#참고" class="headerlink" title="참고"></a>참고</h1><ul><li><a href="https://developer.mozilla.org/ko/docs/Web/API/Window/sessionStorage">https://developer.mozilla.org/ko/docs/Web/API/Window/sessionStorage</a></li><li><a href="https://it-eldorado.tistory.com/90">IT엘도라도 - 쿠키, 웹 스토리지(로컬 스토리지, 세션 스토리지)</a></li><li><a href="https://doqtqu.tistory.com/m/306">푸고배님 - 쿠키 vs 세션 vs 웹 스토리지(로컬 스토리지, 세션 스토리지)</a></li><li><a href="https://sowon-dev.github.io/2020/06/30/200701jspi/">https://sowon-dev.github.io/2020/06/30/200701jspi/</a></li></ul>]]></content:encoded>
      
      
      <category domain="https://sowon-dev.github.io/categories/JavaScript/">JavaScript</category>
      
      
      
      <comments>https://sowon-dev.github.io/2022/11/21/221121JS-webstorage/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>Cron표현식이 뭐길래</title>
      <link>https://sowon-dev.github.io/2022/11/16/221116cron/</link>
      <guid>https://sowon-dev.github.io/2022/11/16/221116cron/</guid>
      <pubDate>Wed, 16 Nov 2022 05:14:08 GMT</pubDate>
      
      <description>&lt;p&gt;신규로 맡은 프로젝트의 코드분석 중 크론표현식을 만났다.&lt;br&gt;크론표현식을 한 번 공부한 적이 있어서 당연히 술술 읽힐 줄 알았는데 웬걸… 기억이 나질않았다.&lt;br&gt;역시 안다고 생각하는 것과 아는 것은 다르다.&lt;/p&gt;</description>
      
      
      
      <content:encoded><![CDATA[<p>신규로 맡은 프로젝트의 코드분석 중 크론표현식을 만났다.<br>크론표현식을 한 번 공부한 적이 있어서 당연히 술술 읽힐 줄 알았는데 웬걸… 기억이 나질않았다.<br>역시 안다고 생각하는 것과 아는 것은 다르다.</p><a id="more"></a><p>이참에 포스팅을 통해 확실히 내 것으로 만들어야겠다.</p><h1 id="개념"><a href="#개념" class="headerlink" title="개념"></a>개념</h1><p>Cron 표현식은 스케줄러 시간을 세팅할 때 주로 사용되는 표현식으로 7개의 필드를 띄어쓰기로 구분한다.<br>연도는 생략가능하다!</p><p><br><br><br></p><h1 id="형태"><a href="#형태" class="headerlink" title="형태"></a>형태</h1><p>시간을 나타내는 표현식인만큼 필드를 외우기는 참 쉽다!</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;초&gt; &lt;분&gt; &lt;시&gt; &lt;일&gt; &lt;월&gt; &lt;요일&gt; &lt;년&gt;</span><br></pre></td></tr></table></figure><p>각 필드마다 허용되는 값과 허용되는 특수문자가 다르다. 각 특수문자의 의미도 알아둬야한다!</p><table><thead><tr><th align="center">필드</th><th align="center">필수여부</th><th align="center">허용되는 값</th><th align="center">허용되는 특수문자</th></tr></thead><tbody><tr><td align="center">초</td><td align="center">Y</td><td align="center">0-59</td><td align="center">, - * /</td></tr><tr><td align="center">분</td><td align="center">Y</td><td align="center">0-59</td><td align="center">, - * /</td></tr><tr><td align="center">시간</td><td align="center">Y</td><td align="center">0-23</td><td align="center">, - * /</td></tr><tr><td align="center">일</td><td align="center">Y</td><td align="center">1-31</td><td align="center">, - * ? / L W C</td></tr><tr><td align="center">월</td><td align="center">Y</td><td align="center">0-11 or JAN-DEC</td><td align="center">, - * /</td></tr><tr><td align="center">요일</td><td align="center">Y</td><td align="center">1-7 or SUN-SAT or sun-sat</td><td align="center">, - * ? / L C #</td></tr><tr><td align="center">년</td><td align="center">N</td><td align="center">empty or 1970-2099</td><td align="center">, - * /</td></tr></tbody></table><p><br><br><br></p><h1 id="특수문자의-의미"><a href="#특수문자의-의미" class="headerlink" title="특수문자의 의미"></a>특수문자의 의미</h1><table><thead><tr><th align="center">특수문자</th><th align="center">의미</th></tr></thead><tbody><tr><td align="center"><code>*</code></td><td align="center">모든 값</td></tr><tr><td align="center">?</td><td align="center">특정한 값이 없음</td></tr><tr><td align="center">-</td><td align="center">범위 지정</td></tr><tr><td align="center">,</td><td align="center">여러 값을 지정</td></tr><tr><td align="center">/</td><td align="center">증가하는 값을 지정(초기값/증가값)</td></tr><tr><td align="center">L</td><td align="center">마지막 값 지</td></tr><tr><td align="center">W</td><td align="center">가장 가까운 평일</td></tr><tr><td align="center">#</td><td align="center">몇 번째 무슨 요일인지 지정</td></tr></tbody></table><p><br><br><br></p><h1 id="예시"><a href="#예시" class="headerlink" title="예시"></a>예시</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">0 30 13 * * ?</span><br><span class="line">&#x2F;&#x2F; 매일 오후 1시 30분마다</span><br><span class="line"></span><br><span class="line">0 30 10 ? * MON-FRI</span><br><span class="line">&#x2F;&#x2F;평일 오전 10시 30분마다</span><br><span class="line"></span><br><span class="line">0 15 15 L * ?</span><br><span class="line">&#x2F;&#x2F; 매월 말일 3시 15분마다</span><br></pre></td></tr></table></figure><p>사실 가장 쉬운 방법은 <a href="http://www.cronmaker.com/;jsessionid=node01e568mpg1sqg9132x6b0diwtkc1083568.node0?0">cronmaker</a>사이트를 이용하면된다.</p><p><br><br><br></p><h1 id="참고"><a href="#참고" class="headerlink" title="참고"></a>참고</h1><ul><li><a href="https://docs.oracle.com/cd/E12058_01/doc/doc.1014/e12030/cron_expressions.htm">https://docs.oracle.com/cd/E12058_01/doc/doc.1014/e12030/cron_expressions.htm</a></li><li><a href="https://dev-bri.tistory.com/4">https://dev-bri.tistory.com/4</a></li></ul>]]></content:encoded>
      
      
      <category domain="https://sowon-dev.github.io/categories/Journal/">Journal</category>
      
      
      
      <comments>https://sowon-dev.github.io/2022/11/16/221116cron/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>asp.net 웹폼(Web Form)프로젝트를 끝내며 내가 배운 것</title>
      <link>https://sowon-dev.github.io/2022/11/10/221111projectreview8/</link>
      <guid>https://sowon-dev.github.io/2022/11/10/221111projectreview8/</guid>
      <pubDate>Thu, 10 Nov 2022 19:59:26 GMT</pubDate>
      
      <description>&lt;p&gt;이번 프로젝트는 나에게 효율이 나질않는 프로젝트였다.&lt;br&gt;MVC패턴이 아닌 웹폼프레임워크를 처음 사용하면서 효율이 제대로 나오지않아 많이 답답했다.&lt;/p&gt;</description>
      
      
      
      <content:encoded><![CDATA[<p>이번 프로젝트는 나에게 효율이 나질않는 프로젝트였다.<br>MVC패턴이 아닌 웹폼프레임워크를 처음 사용하면서 효율이 제대로 나오지않아 많이 답답했다.</p><a id="more"></a><p>이번 프로젝트에서는 Code-Behind Page Model을 사용했는데 <code>*.aspx.cs</code>로부터 클래스를 상속받는 <code>*.aspx</code>파일에 html과 js로 화면작업을 했다.<br>화면작업 위주로 했기에 백단을 많이 다루지 못해 개인적으로 아쉬운 프로젝트였다.</p><h1 id="keep"><a href="#keep" class="headerlink" title="keep"></a>keep</h1><p>현재 만족하고 있는 부분과 계속해서 이어갔으면 하는 부분</p><ol><li>레거시 코드를 분석하고 페이지테스트없이 코드를 이해하는 능력: 레거시 프로젝트를 고도화하는 작업이었기 때문에 레거시 코드를 정확히 읽어 기능을 이해하는 것이 작업의 핵심이였다. 프로젝트 특성상 기능을 테스트해볼수있는 페이지없이 오로지 코드만 보고 기능을 이해해야했기에 처음에는 버벅거렸으나 프로젝트 후반에는 술술 읽혀서 나조차 신기했다. 스스로 가장 많이 성장했다고 생각하는 부분이다.</li><li>프로시저 바로 이해하기: 이번 프로젝트는 전체가 프로시저로 구현되어있어 프로시저를 읽고 해석하는 부분이 많았고 덕분에 프로시저와 엄청나게 친숙해졌다.  </li></ol><p><br><br><br></p><h1 id="Problem"><a href="#Problem" class="headerlink" title="Problem"></a>Problem</h1><p>개선이 필요하다고 생각되는 부분</p><ol><li>엑셀파일을 업로드하면 엑셀파일을 읽어서 DB에 등록하는 부분 코드 뜯어보기: 호출만 하고 넘어간 부분인데 스스로 구현할 수 있을정도로 깊게 봤으면 더 성장했겠다는 생각이 들었다.</li></ol><p><br><br><br></p><h1 id="Try"><a href="#Try" class="headerlink" title="Try"></a>Try</h1><p>Problem의 해결책이 될 수 있는 부분</p><ol><li>이번에는 백엔드를 거의 건들이지 않았는데 욕심내서 뜯어볼 수도 있었는데 호출만해서 사용한 점이 아쉽다.</li></ol>]]></content:encoded>
      
      
      <category domain="https://sowon-dev.github.io/categories/Journal/">Journal</category>
      
      <category domain="https://sowon-dev.github.io/categories/Journal/%ED%9A%8C%EA%B3%A0%EB%A1%9D/">회고록</category>
      
      
      <category domain="https://sowon-dev.github.io/tags/%ED%9A%8C%EA%B3%A0%EB%A1%9D/">회고록</category>
      
      
      <comments>https://sowon-dev.github.io/2022/11/10/221111projectreview8/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>[jQuery] checkbox와 select 다루기</title>
      <link>https://sowon-dev.github.io/2022/11/08/221109jQuery-input-type/</link>
      <guid>https://sowon-dev.github.io/2022/11/08/221109jQuery-input-type/</guid>
      <pubDate>Tue, 08 Nov 2022 23:04:34 GMT</pubDate>
      
      <description>&lt;p&gt;jQuery로 checkbox와 select 다루는 법을 전체적으로 정리해보자.&lt;/p&gt;</description>
      
      
      
      <content:encoded><![CDATA[<p>jQuery로 checkbox와 select 다루는 법을 전체적으로 정리해보자.</p><a id="more"></a><h1 id="✍Checkbox"><a href="#✍Checkbox" class="headerlink" title="✍Checkbox"></a>✍Checkbox</h1><p><br><br></p><h2 id="1-체크하기"><a href="#1-체크하기" class="headerlink" title="1. 체크하기"></a>1. 체크하기</h2><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// ID로 지정하는 방법</span></span><br><span class="line">$(<span class="string">'#체크박스아이디'</span>).prop(<span class="string">'checked'</span>,<span class="literal">true</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">// input 속성으로 지정하는 방법</span></span><br><span class="line">$(<span class="string">'input:checkbox[name="체크박스네임"]'</span>).prop(<span class="string">'checked'</span>,<span class="literal">true</span>);</span><br></pre></td></tr></table></figure><p><br><br></p><h2 id="2-체크여부-확인"><a href="#2-체크여부-확인" class="headerlink" title="2. 체크여부 확인"></a>2. 체크여부 확인</h2><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$(<span class="string">'#체크박스아이디'</span>).is(<span class="string">':checked'</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 반환값: true, false</span></span><br></pre></td></tr></table></figure><p>참고로 <code>$(&#39;#체크박스아이디&#39;).val()</code>을 하면 반환값이 on이나 undifined가 뜬다.</p><p><br><br></p><h2 id="3-한번에-전체-체크하기"><a href="#3-한번에-전체-체크하기" class="headerlink" title="3. 한번에 전체 체크하기"></a>3. 한번에 전체 체크하기</h2><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">$(<span class="string">'#allCheck'</span>).click(<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line"><span class="keyword">var</span> isChecked = $(<span class="string">'#allCheck'</span>).is(<span class="string">':checked'</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(isChecked)</span><br><span class="line">$(<span class="string">'input:checkbox'</span>).prop(<span class="string">'checked'</span>,<span class="literal">true</span>);</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><p><br><br></p><h1 id="✍-Select"><a href="#✍-Select" class="headerlink" title="✍ Select"></a>✍ Select</h1><p><br><br></p><h2 id="1-값-읽기-가져오기"><a href="#1-값-읽기-가져오기" class="headerlink" title="1. 값 읽기(가져오기)"></a>1. 값 읽기(가져오기)</h2><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// ID로 접근하는 방법</span></span><br><span class="line">$(<span class="string">"#셀렉트박스아이디 option:selected"</span>).val();</span><br><span class="line"></span><br><span class="line"><span class="comment">// input 속성으로 접근하는 방법</span></span><br><span class="line">$(<span class="string">"select[name=셀렉트박스네임]"</span>).val();</span><br></pre></td></tr></table></figure><p><br><br></p><h2 id="2-옵션-추가하기"><a href="#2-옵션-추가하기" class="headerlink" title="2. 옵션 추가하기"></a>2. 옵션 추가하기</h2><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 옵션추가</span></span><br><span class="line">$(<span class="string">"#셀렉트박스아이디"</span>).append(<span class="string">"&lt;option value='1번'&gt;1번 테스트&lt;/option&gt;"</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 옵션을 맨 앞에 추가</span></span><br><span class="line">$(<span class="string">"#셀렉트박스ID"</span>).prepend(<span class="string">"&lt;option value='맨앞'&gt;맨앞&lt;/option&gt;"</span>);</span><br></pre></td></tr></table></figure><p><br><br></p><h2 id="3-옵션-삭제하기"><a href="#3-옵션-삭제하기" class="headerlink" title="3. 옵션 삭제하기"></a>3. 옵션 삭제하기</h2><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 옵션 전체 삭제</span></span><br><span class="line">$(<span class="string">"#셀렉트박스아이디 option"</span>).remove();</span><br><span class="line">$(<span class="string">"select[name=셀렉트박스네임] option"</span>).remove();</span><br><span class="line"></span><br><span class="line"><span class="comment">// 특정 옵션 벨류 값으로 삭제</span></span><br><span class="line">$(<span class="string">"#셀렉트박스아이디 option[value='맨앞']"</span>).remove();</span><br><span class="line"></span><br><span class="line"><span class="comment">// 특정 옵션 인덱스 값으로 삭제</span></span><br><span class="line">$(<span class="string">"#셀렉트박스아이디 option:eq(0)"</span>).remove();</span><br><span class="line"></span><br><span class="line"><span class="comment">// 첫번째 옵션 삭제</span></span><br><span class="line">$(<span class="string">"#셀렉트박스아이디 option:first"</span>).remove();</span><br><span class="line"></span><br><span class="line"><span class="comment">// 마지막 옵션 삭제</span></span><br><span class="line">$(<span class="string">"#셀렉트박스아이디 option:last"</span>).remove();</span><br></pre></td></tr></table></figure><p><br><br></p><h2 id="4-선택하기"><a href="#4-선택하기" class="headerlink" title="4. 선택하기"></a>4. 선택하기</h2><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 옵션 전체 삭제</span></span><br><span class="line">$(<span class="string">"#셀렉트ID option:eq(1)"</span>).attr(<span class="string">"selected"</span>, <span class="string">"selected"</span>);</span><br></pre></td></tr></table></figure>]]></content:encoded>
      
      
      <category domain="https://sowon-dev.github.io/categories/JavaScript/">JavaScript</category>
      
      
      <category domain="https://sowon-dev.github.io/tags/jQuery/">jQuery</category>
      
      
      <comments>https://sowon-dev.github.io/2022/11/08/221109jQuery-input-type/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>[JSTL] java.util.Date 현재날짜의 시간을 0으로 설정하기</title>
      <link>https://sowon-dev.github.io/2022/11/02/221103JSP-utilDatefmt/</link>
      <guid>https://sowon-dev.github.io/2022/11/02/221103JSP-utilDatefmt/</guid>
      <pubDate>Wed, 02 Nov 2022 16:15:38 GMT</pubDate>
      
      <description>&lt;p&gt;JSTL로 현재날짜와 DB에서 가져오는 날짜 차이를 계산했었다.&lt;br&gt;잘 되는 줄 알았던 코드가 특정 시간을 기점으로 버그가 발생한다는 것을 알게되었다.&lt;/p&gt;</description>
      
      
      
      <content:encoded><![CDATA[<p>JSTL로 현재날짜와 DB에서 가져오는 날짜 차이를 계산했었다.<br>잘 되는 줄 알았던 코드가 특정 시간을 기점으로 버그가 발생한다는 것을 알게되었다.</p><a id="more"></a><p><br><br><br></p><h1 id="기존코드와-문제점"><a href="#기존코드와-문제점" class="headerlink" title="기존코드와 문제점"></a>기존코드와 문제점</h1><p>구글링하면 가장 많이 사용하는 방법으로 <a href="https://sowon-dev.github.io/2022/08/18/220818JSTL-date/">포스팅 - 날짜 차이 계산하기</a>을 작성했다.<br>날짜차이 계산은 모든 날짜를 시간으로 바꾼 뒤 뺄셈을 통해 날짜가 얼마나 남았는지 계산할 수 있다. </p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&lt;jsp:useBean id=<span class="string">"now"</span> <span class="class"><span class="keyword">class</span></span>=<span class="string">"java.util.Date"</span> /&gt;</span><br><span class="line">&lt;fmt:parseNumber <span class="keyword">var</span>=<span class="string">"nowfmtTime"</span> value=<span class="string">"$&#123;now.time / (1000*60*60*24)&#125;"</span> integerOnly=<span class="string">"true"</span> scope=<span class="string">"request"</span>/&gt;</span><br><span class="line">&lt;fmt:parseNumber <span class="keyword">var</span>=<span class="string">"dbDtParse"</span> value=<span class="string">"$&#123;list.dbDt.time / (1000*60*60*24)&#125;"</span> integerOnly=<span class="string">"true"</span> scope=<span class="string">"request"</span>/&gt;</span><br><span class="line"></span><br><span class="line">$&#123;nowfmtTime &#125;</span><br></pre></td></tr></table></figure><p>코드상의 문제는 전혀없으나 요구사항이 하루전에는 예약할 수 없는 예약프로그램을 구현하는 것이라서 수정이 필요했다.<br>현재시간을 time로 변경하는데 HH:mm:ss가 00:00:00이 아니라서 위 방식으로 시간계산시 미세하게 차이가 발생했다.<br>이를 해결하기 위해 현재날짜의 시간을 0으로 설정해야했다.</p><p><br><br><br></p><h1 id="해결코드"><a href="#해결코드" class="headerlink" title="해결코드"></a>해결코드</h1><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">&lt;jsp:useBean id=<span class="string">"now"</span> <span class="class"><span class="keyword">class</span></span>=<span class="string">"java.util.Date"</span> /&gt;</span><br><span class="line">&lt;fmt:formatDate <span class="keyword">var</span>=<span class="string">"today"</span> value=<span class="string">"$&#123;now&#125;"</span> pattern=<span class="string">"yyyyMMdd000000"</span> /&gt;</span><br><span class="line">&lt;fmt:parseDate <span class="keyword">var</span>=<span class="string">"nowfmt"</span> value=<span class="string">"$&#123;today&#125;"</span> pattern=<span class="string">"yyyyMMddHHmmss"</span>/&gt;</span><br><span class="line">&lt;fmt:parseNumber <span class="keyword">var</span>=<span class="string">"nowfmtTime"</span> value=<span class="string">"$&#123;nowfmt.time / (1000*60*60*24)&#125;"</span> integerOnly=<span class="string">"true"</span> scope=<span class="string">"request"</span>/&gt;</span><br><span class="line"></span><br><span class="line">$&#123;nowfmtTime &#125;</span><br></pre></td></tr></table></figure><p><code>fmt:formatDate</code>의 pattern속성으로 시간을 0으로 설정한다.<br>그리고 <code>fmt:parseDate</code>로 Date 타입으로 파싱해준 뒤 바로 날짜를 이용할 수 있고 나처럼 날짜계산을 위해 다시 <code>fmt:parseNumber</code> 숫자타입으로 변경해서 이용할수도 있다.</p><p><br><br><br></p><h1 id="참고"><a href="#참고" class="headerlink" title="참고"></a>참고</h1><ul><li><a href="https://sowon-dev.github.io/2020/08/11/200812jspi2/">JSTL과 EL : fmt 라이브러리(formatDate, formatNumber)</a></li></ul>]]></content:encoded>
      
      
      <category domain="https://sowon-dev.github.io/categories/JSP/">JSP</category>
      
      
      <category domain="https://sowon-dev.github.io/tags/JSTL/">JSTL</category>
      
      
      <comments>https://sowon-dev.github.io/2022/11/02/221103JSP-utilDatefmt/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>[SQLD] 슈퍼타입과 서브타입</title>
      <link>https://sowon-dev.github.io/2022/10/31/221101SQLD-super-sub/</link>
      <guid>https://sowon-dev.github.io/2022/10/31/221101SQLD-super-sub/</guid>
      <pubDate>Mon, 31 Oct 2022 21:31:02 GMT</pubDate>
      
      <description>&lt;p&gt;슈퍼/서브타입 데이터 모델은 Extended ER모델이라고도 불린다.&lt;/p&gt;</description>
      
      
      
      <content:encoded><![CDATA[<p>슈퍼/서브타입 데이터 모델은 Extended ER모델이라고도 불린다.</p><a id="more"></a><ul><li>슈퍼타입: 공통의 부분</li><li>서브타입: 공통으로부터 상속받아 서</li></ul><p>if 10만건도 되지 않는 데이터 or 시스템을 운영하는 도중에도 데이터가 증가하지 않는다, 트랜잭션의 성격을 고려하지않고 전체를 하나의 테이블로 묶는 것도 괜찮은 방법이다.<br>하지만 데이터 양이 이미 많고 지속적으로 증가한다면 슈퍼/서브타입 물리적 데이터 모델로 변환하는 세 가지 유형을 고려해야한다.</p><p><br><br><br></p><h1 id="성능을-고려한-슈퍼-서브타입-데이터-모델-변환"><a href="#성능을-고려한-슈퍼-서브타입-데이터-모델-변환" class="headerlink" title="성능을 고려한 슈퍼/서브타입 데이터 모델 변환"></a>성능을 고려한 슈퍼/서브타입 데이터 모델 변환</h1><p><img src="https://img1.daumcdn.net/thumb/R1280x0/?scode=mtistory2&fname=https%3A%2F%2Fk.kakaocdn.net%2Fdn%2FdIB9Iq%2FbtqCbgT9pcy%2FxrapasEiGw1KvgUTjG4k31%2Fimg.jpg" alt="https://hec-ker.tistory.com/68"></p><p><img src="https://img1.daumcdn.net/thumb/R1280x0/?scode=mtistory2&fname=https%3A%2F%2Fk.kakaocdn.net%2Fdn%2FFLEnX%2FbtqCbhrWGzj%2FJk1PxKYOQNEXq8zkDbqGz0%2Fimg.jpg" alt="https://hec-ker.tistory.com/68"></p><table><thead><tr><th align="center">논리모델</th><th align="center">One to One Type(1:1 타입)</th><th align="center">Plus Type(슈퍼+서브 타입)</th><th align="center">Single Type(All in One 타입)</th></tr></thead><tbody><tr><td align="center">정의</td><td align="center">if 슈퍼타입과 서브타입 각각 트랜잭션이 발생, 개별 테이블로 구성(1:1 관계)</td><td align="center">if 슈퍼타입과 서브타입 함께 트랜잭션이 발생, 슈퍼타입의 PK와 각 서브타입의 속성을 묶어 N개의 테이블을 구성</td><td align="center">if 슈퍼타입과 서브타입 정확히 지정x상황, 하나의 테이블로 통합</td></tr><tr><td align="center">예시</td><td align="center">고객엔티티 하위에 개인고객, 법인고객으로 구분</td><td align="center">개인고객엔티티, 법인고객엔티티</td><td align="center">고객엔티티</td></tr><tr><td align="center">물리모델 결정기준</td><td align="center">개별로 발생되는 경우가 많은 서비스는 Identity로</td><td align="center">슈퍼타입+서브타입에 대해 발생되는 서비스는 RollDown 으로!</td><td align="center">전체를 하나로 묶어 트랜잭션이 발생할 때는 RollUp 으로!</td></tr></tbody></table><p><br><br><br></p><h1 id="출처"><a href="#출처" class="headerlink" title="출처"></a>출처</h1><ul><li><a href="https://hec-ker.tistory.com/68">마띠의블로그 - 데이터베이스 구조와 성능</a></li><li><a href="https://dataonair.or.kr/db-tech-reference/d-lounge/expert-column/?mod=document&uid=54034">데이터온에어 - ‘6개의 열쇠’로 데이터 모델링의 고수가 되자</a></li><li><a href="https://developer-ping9.tistory.com/293">공부하는 개발자 핑구 - 슈퍼-서브타입 모델의 물리모델 결정기준</a></li></ul>]]></content:encoded>
      
      
      <category domain="https://sowon-dev.github.io/categories/Database/">Database</category>
      
      
      <category domain="https://sowon-dev.github.io/tags/SQLD/">SQLD</category>
      
      
      <comments>https://sowon-dev.github.io/2022/10/31/221101SQLD-super-sub/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>[SQLD] 테이블 분할</title>
      <link>https://sowon-dev.github.io/2022/10/29/221029SQLD-tablepartition/</link>
      <guid>https://sowon-dev.github.io/2022/10/29/221029SQLD-tablepartition/</guid>
      <pubDate>Sat, 29 Oct 2022 05:37:20 GMT</pubDate>
      
      <description>&lt;p&gt;SQL을 더 잘 다루고싶어서 공부하다가 하는 김에 결과가 남는 자격증을 도전하게되었다.&lt;br&gt;테이블 반정규화 과정에는 3가지가 있다.&lt;/p&gt;</description>
      
      
      
      <content:encoded><![CDATA[<p>SQL을 더 잘 다루고싶어서 공부하다가 하는 김에 결과가 남는 자격증을 도전하게되었다.<br>테이블 반정규화 과정에는 3가지가 있다.</p><a id="more"></a><h1 id="🏷️-테이블-반정규화"><a href="#🏷️-테이블-반정규화" class="headerlink" title="🏷️ 테이블 반정규화"></a>🏷️ 테이블 반정규화</h1><ol><li>테이블 병합: 1:1관계, 1:M관계, 슈퍼/서브타입</li><li>테이블 분할: 수직분할, 수평분할</li><li>테이블 추가: 중복, 통계, 이력</li></ol><p>이 중 테이블 분할에 대해 궁금해져 자세히 알아보았다.<br>테이블은 합치는 것보다 나누는 것이 더 어렵다. 사실 기존 테이블을 바꾼다는 것 자체가 큰 위험이 따른다.</p><p><br><br></p><h2 id="이렇게-위험한-테이블-반정규화를-왜-하는걸까"><a href="#이렇게-위험한-테이블-반정규화를-왜-하는걸까" class="headerlink" title="이렇게 위험한 테이블 반정규화를 왜 하는걸까?"></a>이렇게 위험한 테이블 반정규화를 왜 하는걸까?</h2><p>반정규화는 시스템 성능향상과 개바로가 운영의 단순화를 위해 중복, 통합, 분리 등을 수행하는 데이터 기법이다. 즉, 장기적으로 봤을 때 기존 시스템보다 개선효과가 클때 반정규화를 한다.</p><ul><li>테이블 컬럼 수 많을수록  -&gt; I/O(Input/Output) 부하 생김</li><li>테이블 Row 수 많을수록 -&gt; Index 부하 생김</li></ul><p>따라서, 컬럼 또는 로우 기준으로 수직 또는 수평으로 테이블 분리를 통한 성능 개선을 검토한다.<br>그럼 이제 수직분할과 수평분할을 알아보자.</p><p><br><br><br></p><h1 id="🏷️-수직분할"><a href="#🏷️-수직분할" class="headerlink" title="🏷️ 수직분할"></a>🏷️ 수직분할</h1><ol><li>정의: 컬럼 기준으로 테이블 분리</li><li>분리이유<ul><li>만약 한 테이블에 너무 많은 컬럼이 존재한다면 디스크의 여러 블록에 데이터가 저장되어 디스크I/O성능 저하가 일어난다. </li></ul></li><li>왜 디스크의 여러 블록에 데이터가 저장될까? <ul><li>로우체이닝과 로우 마이그레이션이 많아지기때문! 로우체이닝과 로우마이그레이션이 많아지면 디스크I/O 성능저하가 나타난다.</li><li>Row Chaining: 길이가 너무 길어 하나의 블록에 저장되지 못하고 다수의 블록에 나눠 저장</li><li>Row Migration: 수정된 데이터를 해당 데이터 블록에 저장하지 못하고 다른 블록 빈 공간에 저장</li></ul></li><li>분리기준<ul><li>조회 조건에 맞게 이용되는 컬럼들을 그룹화하여 분리</li></ul></li></ol><p><img src="https://img1.daumcdn.net/thumb/R1280x0/?scode=mtistory2&fname=https%3A%2F%2Fblog.kakaocdn.net%2Fdn%2FbK6vM6%2FbtqxJaKhzIM%2FNLAp7u63ZC87MIiDXXOfIK%2Fimg.png" alt="출처: https://umbum.dev/969"></p><p><br><br><br></p><h1 id="🏷️-수평분할"><a href="#🏷️-수평분할" class="headerlink" title="🏷️ 수평분할"></a>🏷️ 수평분할</h1><ol><li>정의: Row 기준으로 테이블 분리</li><li>분리이유<ul><li>대량의 데이터가 하나의 테이블에 있으면 인덱스 정보 생성시 부하가 터진다. </li><li>집중 발생되는 트랙잰션 해소를 통한 성능 향상</li></ul></li><li>왜 인덱시 정보 생성시 부하가 커질까?<ul><li>인덱스 깊이(Depth)가 깊어지면 찾아가는데 해당 depth까지 시간이 오래 걸림</li><li>인덱스 크기가 커질수록 더 많은 성능 저하</li></ul></li><li>분리기준<ul><li>논리적으로 같은 테이블이지만 물리적으로 나누는 파티션 방법 이용</li></ul></li></ol><p><img src="https://img1.daumcdn.net/thumb/R1280x0/?scode=mtistory2&fname=https%3A%2F%2Fblog.kakaocdn.net%2Fdn%2F0OIvd%2FbtqxKq6sYRh%2F2lKlThTW3Yr7kELKJjubP0%2Fimg.png" alt="출처: https://umbum.dev/969"> </p><p>수평분할시 분리기준으로 파티션 방법이 있다. 파티션 방법이 구체적으로 뭘까? </p><p><br><br><br></p><h2 id="파티셔닝-종류"><a href="#파티셔닝-종류" class="headerlink" title="파티셔닝 종류"></a>파티셔닝 종류</h2><p><img src="https://docs.oracle.com/cd/B10500_01/server.920/a96524/cncpt158.gif" alt="출처: docs.oracle.com"></p><table><thead><tr><th align="center">파티셔닝명</th><th align="center">분리기준</th><th align="center">예시</th></tr></thead><tbody><tr><td align="center">List</td><td align="center">사용자가 지정한 값으로 분리(불연속적, 보통 핵심적인 코드값)</td><td align="center">판매데이터를 지역별로</td></tr><tr><td align="center">Range</td><td align="center">주로 날짜 또는 숫자값 기준으로 분리</td><td align="center">판매데이터를 분기별로</td></tr><tr><td align="center">Hash</td><td align="center">파티션 키 값에 해시 함수를 적용하여 지정된 Hash조건에 따라 분리</td><td align="center">고객번호, 주문일련번호 등</td></tr><tr><td align="center">Composite</td><td align="center">Range나 List 파티션 내 다른 서브파티션</td><td align="center">Range + List 또는 List + Hash</td></tr></tbody></table><p><br><br><br></p><h1 id="참고"><a href="#참고" class="headerlink" title="참고"></a>참고</h1><ul><li><a href="https://dataonair.or.kr/db-tech-reference/d-lounge/expert-column/?mod=document&uid=51990#:~:text=%ED%85%8C%EC%9D%B4%EB%B8%94%EC%9D%98%20%EC%88%98%EC%A7%81%EB%B6%84%ED%95%A0%EC%9D%80,%EC%84%B1%EB%8A%A5%20%EA%B0%9C%EC%84%A0%EC%9D%84%20%EC%9C%84%ED%95%9C%20%EA%B2%83%EC%9D%B4%EB%8B%A4.">데이타온에어 전문가칼럼 - 테이블의 수직분할과 수평분할에 대한 이해</a></li><li><a href="https://umbum.dev/969">엄범 기술블로그 - 분산 DB, 파티셔닝 (partitioning ), 샤딩 (sharding)</a></li></ul>]]></content:encoded>
      
      
      <category domain="https://sowon-dev.github.io/categories/Database/">Database</category>
      
      
      <category domain="https://sowon-dev.github.io/tags/SQLD/">SQLD</category>
      
      
      <comments>https://sowon-dev.github.io/2022/10/29/221029SQLD-tablepartition/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>[jQuery] attr과 prop차이</title>
      <link>https://sowon-dev.github.io/2022/10/27/221028jQuery-attr-vs-prop/</link>
      <guid>https://sowon-dev.github.io/2022/10/27/221028jQuery-attr-vs-prop/</guid>
      <pubDate>Thu, 27 Oct 2022 19:42:41 GMT</pubDate>
      
      <description>&lt;p&gt;제이쿼리를 사용하면서 attr와 prop는 아주 유사한 기능인데 어떠한 차이점이 있고 어떤 상황일때 어떤 걸 쓰는 게 더 좋은지 궁금해서 찾아봤다.&lt;/p&gt;</description>
      
      
      
      <content:encoded><![CDATA[<p>제이쿼리를 사용하면서 attr와 prop는 아주 유사한 기능인데 어떠한 차이점이 있고 어떤 상황일때 어떤 걸 쓰는 게 더 좋은지 궁금해서 찾아봤다.</p><a id="more"></a><p>역시 제일 좋은 건 jQuery 공식문서이다.<br>jQuery 1.6.0 버전에서부터 jQuery.attr()과 jQuery.prop()가 나눠졌다.</p><table><thead><tr><th align="center"></th><th align="center">jQuery.attr()</th><th align="center">jQuery.prop()</th></tr></thead><tbody><tr><td align="center">정의</td><td align="center">changes attributes for that HTML tag.</td><td align="center">changes properties for that HTML tag as per the DOM tree</td></tr><tr><td align="center">취급</td><td align="center">HTML 속성 (Attribute) 취급</td><td align="center">javascript 프로퍼티 (Property) 취급</td></tr><tr><td align="center">반환값</td><td align="center">returns the default value (Original state)</td><td align="center">returns the current value (Current state)</td></tr></tbody></table><p>많은 상황에서 둘은 같은 값을 반환하지만 attr()는 원래 값을 prop()는 현재 값을 반환한다.<br>예를 들어보자.</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&lt;input type=<span class="string">"checkbox"</span> id=<span class="string">"test1"</span> checked=<span class="string">"checked"</span>&gt; 테스트<span class="number">1</span></span><br><span class="line">&lt;input type=<span class="string">"checkbox"</span> id=<span class="string">"test2"</span>&gt; 테스트<span class="number">2</span></span><br></pre></td></tr></table></figure><p>위 두가지 체크박스의 차이는 checked가 기본값인지 아닌지이다.<br>이를 콘솔에 찍어보면 차이를 발견할 수 있다.</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">$(&quot;#test1&quot;).attr(&quot;checked&quot;)</span><br><span class="line">$(&quot;#test2&quot;).attr(&quot;checked&quot;)</span><br><span class="line"></span><br><span class="line">&#x2F;&#x2F;결과값</span><br><span class="line">checked</span><br><span class="line">undefined</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">$(&quot;#test1&quot;).prop(&quot;checked&quot;)</span><br><span class="line">$(&quot;#test2&quot;).prop(&quot;checked&quot;)</span><br><span class="line"></span><br><span class="line">&#x2F;&#x2F;결과값</span><br><span class="line">true</span><br><span class="line">false</span><br></pre></td></tr></table></figure><p>attr()은 최초 element 랜더링시 defalut value를 반환하지만 prop()는 현재상태를 반환한다.</p><p><br><br><br></p><h1 id="결론"><a href="#결론" class="headerlink" title="결론"></a>결론</h1><ul><li><code>.attr()</code> : element가 가지는 속성 조회 권장<ul><li>style, src, rowspan</li></ul></li><li><code>.prop()</code>: element가 가지는 실제적인 상태 제어 사용 권장<ul><li>form요소의 disabled, selected, checked 속성값 확인 혹은 변경</li></ul></li></ul><p><br><br><br></p><h1 id="참고"><a href="#참고" class="headerlink" title="참고"></a>참고</h1><ul><li><a href="https://api.jquery.com/attr/">https://api.jquery.com/attr/</a></li><li><a href="https://api.jquery.com/prop/">https://api.jquery.com/prop/</a></li><li><a href="http://net-informations.com/jq/iq/prop.htm">http://net-informations.com/jq/iq/prop.htm</a></li></ul>]]></content:encoded>
      
      
      <category domain="https://sowon-dev.github.io/categories/JavaScript/">JavaScript</category>
      
      
      <category domain="https://sowon-dev.github.io/tags/jQuery/">jQuery</category>
      
      
      <comments>https://sowon-dev.github.io/2022/10/27/221028jQuery-attr-vs-prop/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>[JS] 배열Array와 객체Object 내 포함 여부</title>
      <link>https://sowon-dev.github.io/2022/10/25/221026JS-some/</link>
      <guid>https://sowon-dev.github.io/2022/10/25/221026JS-some/</guid>
      <pubDate>Tue, 25 Oct 2022 20:20:15 GMT</pubDate>
      
      <description>&lt;p&gt;자바스크립트에서 &lt;code&gt;배열[]&lt;/code&gt; 안의 &lt;code&gt;객체{}&lt;/code&gt;가 있는 경우가 많은데 여기서 내가 원하는 값이 포함되어있는지 확인할 수 있는 좋은 메서드가 있는데 바로 some()이다.&lt;br&gt;some()메서드를 알아볼땐 함께 알아봐야할 메서드가 있다. 짝궁인 every()메서드이다. 또한 개인적으로 includes()와 비슷해서 함께 알아보았다.&lt;/p&gt;</description>
      
      
      
      <content:encoded><![CDATA[<p>자바스크립트에서 <code>배열[]</code> 안의 <code>객체{}</code>가 있는 경우가 많은데 여기서 내가 원하는 값이 포함되어있는지 확인할 수 있는 좋은 메서드가 있는데 바로 some()이다.<br>some()메서드를 알아볼땐 함께 알아봐야할 메서드가 있다. 짝궁인 every()메서드이다. 또한 개인적으로 includes()와 비슷해서 함께 알아보았다.</p><a id="more"></a><h1 id="📌-Some"><a href="#📌-Some" class="headerlink" title="📌 Some"></a>📌 Some</h1><p>특정 조건을 만족하는지 배열 내부를 차례대로 검사한다.<br>조건에 <code>내부 원소 한 개라도</code> 만족하면 true, 아니면 false를 리턴한다.<br>차례대로 검사하던 중 조건을 만족하는 내부 값이 발견되면 즉시 검사가 중단되고 return값이 나온다. -&gt; 성능에 GOOD<br>es5이상 사용가능하다.</p><p><br><br></p><h2 id="배열-내-객체-예시"><a href="#배열-내-객체-예시" class="headerlink" title="배열 내 객체 예시"></a>배열 내 객체 예시</h2><p>예약프로그램을 예시로 들어보자. 아래처럼 휴일 객체가 있다.</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">const holiday &#x3D; [</span><br><span class="line">  &#123;RESTDE_DATE: &#39;2022-10-03&#39;, RESTDE_NM: &#39;개천절&#39;&#125;</span><br><span class="line">  , &#123;RESTDE_DATE: &#39;2022-10-28&#39;, RESTDE_NM: &#39;정기휴관&#39;&#125;</span><br><span class="line">  , &#123;RESTDE_DATE: &#39;2022-10-30&#39;, RESTDE_NM: &#39;임시휴관&#39;&#125;</span><br><span class="line">];</span><br></pre></td></tr></table></figure><p>holiday 객체안에 <code>2022-10-28</code> 있는지 확인해보자.</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">holiday.some(date &#x3D;&gt; date.RESTDE_DATE &#x3D;&#x3D; &#39;2022-10-28&#39;)</span><br><span class="line"></span><br><span class="line">&#x2F;&#x2F; 결과값</span><br><span class="line">true</span><br></pre></td></tr></table></figure><p>moment.js를 이용해서 오늘이 휴일객체 안에 있는지 확인해볼 수도 있다.</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">holiday.some(date &#x3D;&gt; date.RESTDE_DATE &#x3D;&#x3D; moment().format(&#39;YYYY-MM-DD&#39;))</span><br><span class="line"></span><br><span class="line">&#x2F;&#x2F; 결과값</span><br><span class="line">true or false</span><br></pre></td></tr></table></figure><p><br><br><br></p><h1 id="📌-Every"><a href="#📌-Every" class="headerlink" title="📌 Every"></a>📌 Every</h1><p>some과 비교되는 메서드로 every가 있다.<br>특정 조건을 만족하는지 배열 내부를 차례대로 검사한다.<br>조건에 <code>내부 원소 모두</code> 만족하면 true, 아니면 false를 리턴한다.<br>차례대로 검사하던 중 조건을 만족하지 않는 내부 값이 발견되면 즉시 검사가 중단되고 return값이 나온다. -&gt; 성능에 GOOD<br>es5이상 사용가능하다.</p><p><br><br></p><h2 id="배열-내-객체-예시-1"><a href="#배열-내-객체-예시-1" class="headerlink" title="배열 내 객체 예시"></a>배열 내 객체 예시</h2><p>예약프로그램을 예시로 들어보자. 아래처럼 휴일 객체가 있다.</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">const holiday &#x3D; [</span><br><span class="line">  &#123;RESTDE_DATE: &#39;2022-10-03&#39;, RESTDE_NM: &#39;개천절&#39;&#125;</span><br><span class="line">  , &#123;RESTDE_DATE: &#39;2022-10-28&#39;, RESTDE_NM: &#39;정기휴관&#39;&#125;</span><br><span class="line">  , &#123;RESTDE_DATE: &#39;2022-10-30&#39;, RESTDE_NM: &#39;임시휴관&#39;&#125;</span><br><span class="line">];</span><br></pre></td></tr></table></figure><p>holiday 객체가 모두 <code>2022-10-31</code> 이전 일자인지 확인해보자.</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">holiday.some(date &#x3D;&gt; date.RESTDE_DATE &lt; &#39;2022-10-31&#39;)</span><br><span class="line"></span><br><span class="line">&#x2F;&#x2F; 결과값</span><br><span class="line">true</span><br></pre></td></tr></table></figure><p>moment.js를 이용해서 오늘보다 이전날짜만 있는지도 확인가능하다.</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">holiday.some(date &#x3D;&gt; date.RESTDE_DATE &lt; moment().format(&#39;YYYY-MM-DD&#39;))</span><br><span class="line"></span><br><span class="line">&#x2F;&#x2F; 결과값</span><br><span class="line">true or false</span><br></pre></td></tr></table></figure><p><br><br><br></p><h1 id="📌-includes"><a href="#📌-includes" class="headerlink" title="📌 includes"></a>📌 includes</h1><p>배열이 특정 요소를 포함하고 있는 지 검사한다.<br>있으면 true, 없으면 false를 리턴한다.<br>대소문자를 구별하고 <code>배열[]</code> 에서만 사용할 수 있다.</p><p><br><br></p><h2 id="배열-예시"><a href="#배열-예시" class="headerlink" title="배열 예시"></a>배열 예시</h2><p>예약프로그램을 예시로 들어보자. 아래처럼 휴일 객체가 있다.</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">const holiday &#x3D; [&#39;2022-10-03&#39;, &#39;2022-10-28&#39;, &#39;2022-10-30&#39;];</span><br></pre></td></tr></table></figure><p>holiday배열에 <code>2022-10-28</code>이 있는지 확인해보자.</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">holiday.includes(&#39;2022-10-28&#39;))</span><br><span class="line"></span><br><span class="line">&#x2F;&#x2F; 결과값</span><br><span class="line">true</span><br></pre></td></tr></table></figure><p><br><br><br></p><h1 id="📌-참고"><a href="#📌-참고" class="headerlink" title="📌 참고"></a>📌 참고</h1><p> -<a href="https://stackoverflow.com/questions/64946404/when-use-js-includes-vs-some">스택오버플로우 질문글 when use JS .includes() vs .some() </a></p>]]></content:encoded>
      
      
      <category domain="https://sowon-dev.github.io/categories/JavaScript/">JavaScript</category>
      
      
      
      <comments>https://sowon-dev.github.io/2022/10/25/221026JS-some/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>[Spring/MySQL] 현재 서버에서 접속한 DB 이름 로그에 나타내기</title>
      <link>https://sowon-dev.github.io/2022/10/10/221011DBMessageQuery/</link>
      <guid>https://sowon-dev.github.io/2022/10/10/221011DBMessageQuery/</guid>
      <pubDate>Mon, 10 Oct 2022 21:46:45 GMT</pubDate>
      
      <description>&lt;p&gt;DB를 여러 가지 쓰는 경우 현재 어느 DB에 접속되어있는지 서버 런할때 로그로 알 수 있으면 좋겠다고 생각했는데 팀장님이 그 방법을 알려주셨다.&lt;br&gt;바로 local.properties에 message.query를 이용하면 된다.&lt;/p&gt;</description>
      
      
      
      <content:encoded><![CDATA[<p>DB를 여러 가지 쓰는 경우 현재 어느 DB에 접속되어있는지 서버 런할때 로그로 알 수 있으면 좋겠다고 생각했는데 팀장님이 그 방법을 알려주셨다.<br>바로 local.properties에 message.query를 이용하면 된다.</p><a id="more"></a><h1 id="local-properties에-message-query-속성-사용하기"><a href="#local-properties에-message-query-속성-사용하기" class="headerlink" title="local.properties에 message.query 속성 사용하기"></a>local.properties에 message.query 속성 사용하기</h1><p>local.properties파일에서 message.query 속성을 이용하면 된다.<br>아래처럼 입력해주면 끝!</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">message.query&#x3D;SELECT &#39;ko&#39; as LOCALE, &#39;0000001&#39; as CODE, concat(database(), &#39; ver.&#39;, version() , &#39; hostname - &#39;, @@hostname) as MSG FROM DUAL</span><br></pre></td></tr></table></figure>]]></content:encoded>
      
      
      <category domain="https://sowon-dev.github.io/categories/Database/">Database</category>
      
      <category domain="https://sowon-dev.github.io/categories/Database/MySQL/">MySQL</category>
      
      
      <category domain="https://sowon-dev.github.io/tags/MySQL/">MySQL</category>
      
      
      <comments>https://sowon-dev.github.io/2022/10/10/221011DBMessageQuery/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>[JS] 자바스크립트 파일 문서화해주는 유용한 라이브러리 JSDoc</title>
      <link>https://sowon-dev.github.io/2022/09/27/220928JS-JSDoc/</link>
      <guid>https://sowon-dev.github.io/2022/09/27/220928JS-JSDoc/</guid>
      <pubDate>Tue, 27 Sep 2022 20:11:55 GMT</pubDate>
      
      <description>&lt;p&gt;REST API 문서화할때 자주 사용되는 &lt;a href=&quot;https://sowon-dev.github.io/2020/09/21/200921opemsource/#%EC%8A%A4%EC%9B%A8%EA%B1%B0&quot;&gt;Swagger 라이브러리&lt;/a&gt;처럼 자바스크립트 파일을 문서화해주는 라이브러리가 있다.&lt;/p&gt;</description>
      
      
      
      <content:encoded><![CDATA[<p>REST API 문서화할때 자주 사용되는 <a href="https://sowon-dev.github.io/2020/09/21/200921opemsource/#%EC%8A%A4%EC%9B%A8%EA%B1%B0">Swagger 라이브러리</a>처럼 자바스크립트 파일을 문서화해주는 라이브러리가 있다.</p><a id="more"></a><p>개발뿐만아니라 프로젝트 산출물시에도 활용할 수 있어 유용한 라이브러이이다.</p><h1 id="JSDoc"><a href="#JSDoc" class="headerlink" title="JSDoc"></a>JSDoc</h1><p>JavaScript용 API 문서 생성기이다. 공식사이트에 정말 자세히 잘 나와있다!</p><ul><li><a href="https://jsdoc.app/">공식 사이트</a></li><li><a href="https://github.com/jsdoc/jsdoc">공식 깃헙 리포지토리</a></li></ul><p><br><br><br></p><h1 id="설치"><a href="#설치" class="headerlink" title="설치"></a>설치</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install -g jsdoc</span><br></pre></td></tr></table></figure><p><br><br><br></p><h1 id="사용-예시"><a href="#사용-예시" class="headerlink" title="사용 예시"></a>사용 예시</h1><p>애노테이션(@)을 가지고 정말 쉽게 사용할 수 있다.<br>문서확인은 <code>http://localhost/docs/</code> 로 가면 확인할 수 있다!</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">&#x2F;**</span><br><span class="line"> * 이 메서드는 유저서비스에 사용합니다</span><br><span class="line"> * </span><br><span class="line"> * @module UserHelper</span><br><span class="line"> * @author sowon-dev</span><br><span class="line"> * @example </span><br><span class="line"> * &#x2F;&#x2F; require에 모듈을 등록하고 사용합니다.</span><br><span class="line"> * require([..., &#39;UserHelper&#39;], function (..., UserHelper) </span><br><span class="line"> *&#x2F;</span><br></pre></td></tr></table></figure>]]></content:encoded>
      
      
      <category domain="https://sowon-dev.github.io/categories/JavaScript/">JavaScript</category>
      
      
      
      <comments>https://sowon-dev.github.io/2022/09/27/220928JS-JSDoc/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>[IT용어] AS-IS VS TO-BE</title>
      <link>https://sowon-dev.github.io/2022/09/26/220927as-is-to-be/</link>
      <guid>https://sowon-dev.github.io/2022/09/26/220927as-is-to-be/</guid>
      <pubDate>Mon, 26 Sep 2022 22:42:45 GMT</pubDate>
      
      <description>&lt;p&gt;프로젝트문서를 읽던 중 AS-IS 시스템 설명과 TO-BE 시스템 설명을 읽게되었다.&lt;br&gt;영어로 적혀있어 감은 오지만 정확히 어떤 의미로 IT업계에서 사용하는지 궁금해서 찾아보았다.&lt;/p&gt;</description>
      
      
      
      <content:encoded><![CDATA[<p>프로젝트문서를 읽던 중 AS-IS 시스템 설명과 TO-BE 시스템 설명을 읽게되었다.<br>영어로 적혀있어 감은 오지만 정확히 어떤 의미로 IT업계에서 사용하는지 궁금해서 찾아보았다.</p><a id="more"></a><h1 id="AS-IS"><a href="#AS-IS" class="headerlink" title="AS-IS"></a>AS-IS</h1><p>영어 의미로는 <code>지금 현재</code> 또는 <code>있는 그대로</code>로 쓰이는데 IT업게예서도 이와 비슷하다.<br>AS-IS 뒤에 다양한 단어들을 붙여서 기존 서비스, 레거시 프로젝트, 기존 시스템등을 의미한다.<br>AS-IS 분석을 잘해놓으면 추후 구현하고자하는 신규 서비스의 TO-BE분석이 수월하다.</p><p>예시</p><ul><li>AS-IS 시스템: 현재의(기존) 시스템을 의미</li><li>AS-IS 분석: 현재의 업무 프로세스를 분석한다는 의미</li></ul><p><br><br><br></p><h1 id="TO-BE"><a href="#TO-BE" class="headerlink" title="TO-BE"></a>TO-BE</h1><p>영어 의미로는 <code>미래의</code> 로 쓰이는데 IT업게예서도 이와 비슷하다.<br>미래에 개선될 업무나 프로젝트, 프로세스, 신규 시스템등을 의미한다.</p><p>예시</p><ul><li>TO-BE 시스템: 신규 시스템을 의미로 프로젝트에 투입될 시스템</li><li>TO-BE 분석: 신규 업무 프로세스를 분석한다는 의미로 보통 각 모듈별로 TO-BE 프로세스 작성함</li></ul>]]></content:encoded>
      
      
      <category domain="https://sowon-dev.github.io/categories/Journal/">Journal</category>
      
      
      <category domain="https://sowon-dev.github.io/tags/%EC%98%A4%EB%8A%98%EB%98%90%EB%AA%BB%EC%95%8C%EC%95%84%EB%93%A3%EA%B3%A0%EB%A7%90%EC%95%98%EC%8A%B5%EB%8B%88%EB%8B%A4/">오늘또못알아듣고말았습니다</category>
      
      <category domain="https://sowon-dev.github.io/tags/%EC%B0%A8%EC%9D%B4/">차이</category>
      
      
      <comments>https://sowon-dev.github.io/2022/09/26/220927as-is-to-be/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>[ASP.NET] 웹폼(WebForm) VS MVC</title>
      <link>https://sowon-dev.github.io/2022/09/20/220921ASPNET-WEBFORM-VS-MVC/</link>
      <guid>https://sowon-dev.github.io/2022/09/20/220921ASPNET-WEBFORM-VS-MVC/</guid>
      <pubDate>Tue, 20 Sep 2022 19:49:51 GMT</pubDate>
      
      <description>&lt;p&gt;이번 프로젝트에서는 웹폼(WebForm)기반으로 개발하게 되었다. MVC 패턴에만 익숙한 내게 웹폼(WebForm)은 생소했다.&lt;br&gt;그래서 웹폼과 MVC이 어떤 차이가 있는지 비교해봤다.&lt;/p&gt;</description>
      
      
      
      <content:encoded><![CDATA[<p>이번 프로젝트에서는 웹폼(WebForm)기반으로 개발하게 되었다. MVC 패턴에만 익숙한 내게 웹폼(WebForm)은 생소했다.<br>그래서 웹폼과 MVC이 어떤 차이가 있는지 비교해봤다.</p><a id="more"></a><h1 id="WebFrom-VS-MVC"><a href="#WebFrom-VS-MVC" class="headerlink" title="WebFrom VS MVC"></a>WebFrom VS MVC</h1><p><img src="https://pediaa.com/wp-content/uploads/2018/10/Difference-Between-Webform-and-MVC-Comparison-Summary-743x1024.jpg" alt="https://pediaa.com/what-is-the-difference-between-webform-and-mvc/"></p><p>가장 큰 차이점은 웹폼(WebForm)은 전통적인 이벤트 중심 개발모델이고 MVC는 Model, View, Controller 기반의 개발모델이다.</p><ul><li>웹폼 프로세스(로그인예시)<ol><li>사용자가 로그인폼에 로그인정보 입력 후 로그인버튼 클릭</li><li>form데이터들이 POST방식으로 서버에 전송</li><li>ASP.NET 실행 엔진을 통해 파싱(데이터 구문 분석과정) -&gt; 클라이언트에서 로그인버튼이 클릭되었음을 확인</li><li>로그인버튼에 연결된 이벤트 핸들러 메서드를 찾아 호출</li><li>실행결과를 HTML코드로 클라이언트에게 전달</li><li>로그인 완료 또는 실패.</li></ol></li><li>웹폼 장점<ul><li>데이터 Control이 내장되어 있어 강력한 데이터 엑세스로 신속한 개발 가능.</li><li>단일 파일 페이지 모델: 코드와 태그를 한 파일에서 확인할 수 있으며 파일일간의 종속성이 없다.</li></ul></li><li>웹폼 단점<ul><li>개발자 설계 능력에 따라 웹폼 프로젝트 유지보수 강도가 정해진다. </li><li>이벤트 중심으로 전체 흐름을 파악하기 어렵다.</li><li>테스트 자동화가 어렵다. </li><li>SEO에 친화적이지 않다.</li></ul></li></ul><p><br><br><br></p><h1 id="참고"><a href="#참고" class="headerlink" title="참고"></a>참고</h1><ul><li><a href="https://pediaa.com/what-is-the-difference-between-webform-and-mvc/">What is the Difference Between Webform and MVC</a></li><li><a href="https://askanydifference.com/difference-between-asp-net-mvc-and-web-form-with-table/">Difference Between ASP.NET MVC and Web form</a></li><li><a href="https://m.blog.naver.com/PostView.naver?isHttpsRedirect=true&blogId=islove8587&logNo=220489016761">ASP.NET WebForm, MVC</a></li><li><a href="https://only1004.tistory.com/6">asp.net 웹폼에 대하여..</a></li></ul>]]></content:encoded>
      
      
      <category domain="https://sowon-dev.github.io/categories/NET/">.NET</category>
      
      
      <category domain="https://sowon-dev.github.io/tags/C/">C#</category>
      
      <category domain="https://sowon-dev.github.io/tags/%EC%B0%A8%EC%9D%B4/">차이</category>
      
      
      <comments>https://sowon-dev.github.io/2022/09/20/220921ASPNET-WEBFORM-VS-MVC/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>[리액트] useEffect에서 props사용하기</title>
      <link>https://sowon-dev.github.io/2022/09/12/220913React-useEffect-props/</link>
      <guid>https://sowon-dev.github.io/2022/09/12/220913React-useEffect-props/</guid>
      <pubDate>Mon, 12 Sep 2022 21:50:43 GMT</pubDate>
      
      <description>&lt;p&gt;부모 컴포넌트에서 위도와 경도를 props로 전달하여 자식컴포넌트에서 카카오맵API를 통해 특정 장소를 호출하고 싶었으나 오류가 발생했다.&lt;/p&gt;</description>
      
      
      
      <content:encoded><![CDATA[<p>부모 컴포넌트에서 위도와 경도를 props로 전달하여 자식컴포넌트에서 카카오맵API를 통해 특정 장소를 호출하고 싶었으나 오류가 발생했다.</p><a id="more"></a><h1 id="목표"><a href="#목표" class="headerlink" title="목표"></a>목표</h1><p>useEffect안에서 로직상 상태가 변하지않는 props를 쓰고 싶음</p><p><br><br><br></p><h1 id="상황"><a href="#상황" class="headerlink" title="상황"></a>상황</h1><p>부모컴포넌트인 <code>Detail.js</code>에서 자녀 컴포넌트인 <code>Map.js</code>로 좌표, 위도와 경도를 넘겨주었다.<br>이를 <code>Map.js</code>에서 props로 위도와 경도를 받아서 카카오맵API로 카카오맵을 호출하고자했다.<br>여기서 로직상 props로 받은 위도와 경도는 상태가 변하지 않는다.<br>componentDidUpdate용도로 useEffect를 사용했다.</p><ul><li>Detail.js 코드</li></ul><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// detail.addrLat는 위도이고 detail.addrLng는 경도이다.</span></span><br><span class="line">&lt;<span class="built_in">Map</span> latitude=&#123;detail.addrLat&#125; longitude=&#123;detail.addrLng&#125; /&gt;</span><br></pre></td></tr></table></figure><p><br><br><br></p><h1 id="❗문제발생"><a href="#❗문제발생" class="headerlink" title="❗문제발생"></a>❗문제발생</h1><p>위도와 경도는 업데이트가 되지않는 데이터이기때문에 Hooks버전에서 componentDidMount만 사용하고 무한루프를 예방하기 위해 빈배열로 나뒀다.</p><ul><li>Map.js 코드</li></ul><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> React, &#123; useEffect, useState &#125; <span class="keyword">from</span> <span class="string">'react'</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> <span class="function"><span class="keyword">function</span> <span class="title">Map</span>(<span class="params">props</span>) </span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="built_in">console</span>.log(<span class="string">`콘솔1번 props.latitude: <span class="subst">$&#123;props.latitude&#125;</span>`</span>)</span><br><span class="line">    </span><br><span class="line"><span class="keyword">const</span> &#123; kakao &#125; = <span class="built_in">window</span></span><br><span class="line">    <span class="keyword">const</span> lat = props.latitude</span><br><span class="line">    <span class="keyword">const</span> long = props.longitude</span><br><span class="line"></span><br><span class="line">    useEffect(<span class="function"><span class="params">()</span> =&gt;</span> &#123;</span><br><span class="line"><span class="built_in">console</span>.log(<span class="string">`콘솔2번 props.latitude: <span class="subst">$&#123;props.latitude&#125;</span>`</span>)</span><br><span class="line">        <span class="keyword">const</span> container = <span class="built_in">document</span>.getElementById(<span class="string">'map'</span>)</span><br><span class="line">        <span class="keyword">const</span> options = &#123;</span><br><span class="line">            center: <span class="keyword">new</span> kakao.maps.LatLng(lat, long),</span><br><span class="line">            level: <span class="number">3</span>,</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">const</span> map = <span class="keyword">new</span> kakao.maps.Map(container, options)</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 지도에 마커를 생성하고 표시한다</span></span><br><span class="line">        <span class="keyword">var</span> marker = <span class="keyword">new</span> kakao.maps.Marker(&#123;</span><br><span class="line">            position: <span class="keyword">new</span> kakao.maps.LatLng(lat, long), <span class="comment">// 마커의 좌표</span></span><br><span class="line">            map: map, <span class="comment">// 마커를 표시할 지도 객체</span></span><br><span class="line">        &#125;)</span><br><span class="line">    &#125;, [])</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> (</span><br><span class="line">        &lt;&gt;</span><br><span class="line">            &lt;div id=<span class="string">"map"</span> style=&#123;&#123; <span class="attr">width</span>: <span class="string">'750px'</span>, <span class="attr">height</span>: <span class="string">'350px'</span> &#125;&#125;&gt;&lt;<span class="regexp">/div&gt;</span></span><br><span class="line"><span class="regexp">        &lt;/</span>&gt;</span><br><span class="line">    )</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>그랬더니 콘솔결과는 아래와 같았다.</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">콘솔<span class="number">1</span>번 props.latitude: <span class="literal">undefined</span> <span class="built_in">Map</span>.js:<span class="number">4</span> </span><br><span class="line">콘솔<span class="number">1</span>번 props.latitude: <span class="literal">undefined</span> <span class="built_in">Map</span>.js:<span class="number">4</span></span><br><span class="line">콘솔<span class="number">2</span>번 props.latitude: <span class="literal">undefined</span> <span class="built_in">Map</span>.js:<span class="number">10</span> </span><br><span class="line">콘솔<span class="number">2</span>번 props.latitude: <span class="literal">undefined</span> <span class="built_in">Map</span>.js:<span class="number">10</span> </span><br><span class="line"></span><br><span class="line">콘솔<span class="number">1</span>번 props.latitude: <span class="number">35.101425</span> <span class="built_in">Map</span>.js:<span class="number">4</span> </span><br><span class="line">콘솔<span class="number">1</span>번 props.latitude: <span class="number">35.101425</span> <span class="built_in">Map</span>.js:<span class="number">4</span></span><br></pre></td></tr></table></figure><p>콘솔2번은 useEffect안에서 호출한 건데 props로 받아온 모든 값이 undefined로 되어있어서 카카오맵 API가 제대로 호출되지않았다.</p><p><br><br><br></p><h1 id="💡해결"><a href="#💡해결" class="headerlink" title="💡해결"></a>💡해결</h1><p><a href="https://www.reddit.com/r/learnreactjs/comments/oc23du/how_to_use_props_in_useeffect/">구글링해본 결과 props를 사용하려면 두번째 인수인 빈 배열에다가 props를 넣으면</a>된다고 한다.<br>물론 두번째 파라미터를 사용하는 경우 useEffect는 componentDidMount + componentDidUpdate역할을 동시에 하게 된다.</p><ul><li>Map.js 코드</li></ul><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> React, &#123; useEffect, useState &#125; <span class="keyword">from</span> <span class="string">'react'</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> <span class="function"><span class="keyword">function</span> <span class="title">Map</span>(<span class="params">props</span>) </span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="built_in">console</span>.log(<span class="string">`콘솔1번 props.latitude: <span class="subst">$&#123;props.latitude&#125;</span>`</span>)</span><br><span class="line">    </span><br><span class="line"><span class="keyword">const</span> &#123; kakao &#125; = <span class="built_in">window</span></span><br><span class="line">    <span class="keyword">const</span> lat = props.latitude</span><br><span class="line">    <span class="keyword">const</span> long = props.longitude</span><br><span class="line"></span><br><span class="line">    useEffect(<span class="function"><span class="params">()</span> =&gt;</span> &#123;</span><br><span class="line"><span class="built_in">console</span>.log(<span class="string">`콘솔2번 props.latitude: <span class="subst">$&#123;props.latitude&#125;</span>`</span>)</span><br><span class="line">        <span class="keyword">const</span> container = <span class="built_in">document</span>.getElementById(<span class="string">'map'</span>)</span><br><span class="line">        <span class="keyword">const</span> options = &#123;</span><br><span class="line">            center: <span class="keyword">new</span> kakao.maps.LatLng(lat, long),</span><br><span class="line">            level: <span class="number">3</span>,</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">const</span> map = <span class="keyword">new</span> kakao.maps.Map(container, options)</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 지도에 마커를 생성하고 표시한다</span></span><br><span class="line">        <span class="keyword">var</span> marker = <span class="keyword">new</span> kakao.maps.Marker(&#123;</span><br><span class="line">            position: <span class="keyword">new</span> kakao.maps.LatLng(lat, long), <span class="comment">// 마커의 좌표</span></span><br><span class="line">            map: map, <span class="comment">// 마커를 표시할 지도 객체</span></span><br><span class="line">        &#125;)</span><br><span class="line">    &#125;, [props])</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> (</span><br><span class="line">        &lt;&gt;</span><br><span class="line">            &lt;div id=<span class="string">"map"</span> style=&#123;&#123; <span class="attr">width</span>: <span class="string">'750px'</span>, <span class="attr">height</span>: <span class="string">'350px'</span> &#125;&#125;&gt;&lt;<span class="regexp">/div&gt;</span></span><br><span class="line"><span class="regexp">        &lt;/</span>&gt;</span><br><span class="line">    )</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>그랬더니 콘솔결과는 아래와 같았다.</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">콘솔<span class="number">1</span>번 props.latitude: <span class="literal">undefined</span> <span class="built_in">Map</span>.js:<span class="number">4</span> </span><br><span class="line">콘솔<span class="number">1</span>번 props.latitude: <span class="literal">undefined</span> <span class="built_in">Map</span>.js:<span class="number">4</span></span><br><span class="line">콘솔<span class="number">2</span>번 props.latitude: <span class="literal">undefined</span> <span class="built_in">Map</span>.js:<span class="number">10</span> </span><br><span class="line">콘솔<span class="number">2</span>번 props.latitude: <span class="literal">undefined</span> <span class="built_in">Map</span>.js:<span class="number">10</span> </span><br><span class="line"></span><br><span class="line">콘솔<span class="number">1</span>번 props.latitude: <span class="number">35.101425</span> <span class="built_in">Map</span>.js:<span class="number">4</span> </span><br><span class="line">콘솔<span class="number">1</span>번 props.latitude: <span class="number">35.101425</span> <span class="built_in">Map</span>.js:<span class="number">4</span></span><br><span class="line">콘솔<span class="number">2</span>번 props.latitude: <span class="number">35.101425</span> <span class="built_in">Map</span>.js:<span class="number">10</span></span><br></pre></td></tr></table></figure><p>콘솔2번에 제대로 된 값이 들어오면서 카카오맵이 내가 원하는 지도를 호출해줬다!<br>해결~!</p><p>이 과정을 해결하면서 2가지 궁금증이 생겼다.<br>첫번째는 왜 undefined일까? 였고 두번째는 동일한 콘솔로그가 왜 두번씩 호출될까?였다.</p><p><br><br><br></p><h1 id="💬근데-왜-undefined일까"><a href="#💬근데-왜-undefined일까" class="headerlink" title="💬근데 왜 undefined일까?"></a>💬근데 왜 undefined일까?</h1><p>리액트의 실행순서때문이다.</p><ol><li>Map.js(이하 자식컴포넌트) 호출</li><li>Detail.js(이하 부모컴포넌트) 호출</li><li>자식컴포넌트의 useEffect 실행</li><li>부모컴포넌트의 useEffect 실행 -&gt; axios 완료</li><li>부모컴포넌트 호출</li><li>자식컴포넌트 호출</li></ol><p>처음 자식컴포넌트를 호출되므로 부모한테서 props를 받을 수 없기에 아예 없는 값이다.<br>그리곤 부모컴포넌트에서 useEffect로 axios가 실행되어야지 setState()를 통해서 props를 자식컴포넌트에 전달할 수 있다.<br>근데 axios다녀오기도 전에 자식컴포넌트의 useEffect를 실행해버리니 props값이 undefined일수밖에 없다!</p><p>이 상황을 말씀드리니 팀장님이 한 가지 더 미션을 주셨다.</p><table><thead><tr><th align="center">팀장님</th><th align="center">나</th></tr></thead><tbody><tr><td align="center"></td><td align="center">팀장님, 아까 리액트 질문에서요~ 실행순서 때문에 undefined가 났었고 useEffect 두번째 인자에 props를 주니 해결되었습니다.</td></tr><tr><td align="center">props 받아서 고치는게 맞을것 같네요. 대신에 undefined에 대한 대책이 필요한 것 같아요.</td><td align="center"></td></tr><tr><td align="center"></td><td align="center">오호 대책이요?</td></tr><tr><td align="center">props가 값이 없을 때는 카카오 생성하고 하면 그만큼 비효율적일 것 같아서요</td><td align="center"></td></tr></tbody></table><p>오 역시 팀장님께 말씀드리길 잘했다. 생각도 못한 부분인데 어떻게 하면 해결할수 있을지 고심해봤다.</p><p><br><br><br></p><h1 id="💬undefined에-대한-대책"><a href="#💬undefined에-대한-대책" class="headerlink" title="💬undefined에 대한 대책"></a>💬undefined에 대한 대책</h1><p>props가 없을땐 자식컴포넌트를 실행시키지 않으면 되니까~ 내 머리속에 떠오른 방법은 크게 두 가지였다.</p><ol><li>자식컴포넌트에서 props가 없을 땐 실행하지않기.</li><li>부모컴포넌트에서 axios다녀온 뒤에, 즉 데이터가 있을때 자식컴포넌트 실행하기 </li></ol><p><br><br><br></p><h2 id="자식컴포넌트에서-useEffect-조건을-걸어볼까"><a href="#자식컴포넌트에서-useEffect-조건을-걸어볼까" class="headerlink" title="자식컴포넌트에서 useEffect 조건을 걸어볼까?"></a>자식컴포넌트에서 useEffect 조건을 걸어볼까?</h2><p>아래와 같은 소스코드에서 props가 없을땐 카카오의 maps객체르 호출하지 않아야겠다고 생각하고 if조건문을 걸어주려고 했다.</p><ul><li>자식컴포넌트 (Map.js) 소스코드<figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> <span class="function"><span class="keyword">function</span> <span class="title">Map</span>(<span class="params">props</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">const</span> &#123; kakao &#125; = <span class="built_in">window</span></span><br><span class="line">    <span class="keyword">const</span> lat = props.latitude</span><br><span class="line">    <span class="keyword">const</span> long = props.longitude</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="string">'Map 컴포넌트 실행.'</span>)</span><br><span class="line"></span><br><span class="line">    useEffect(<span class="function"><span class="params">()</span> =&gt;</span> &#123;</span><br><span class="line">        <span class="comment">//if (props) &#123;</span></span><br><span class="line">        <span class="keyword">debugger</span></span><br><span class="line">        <span class="keyword">const</span> container = <span class="built_in">document</span>.getElementById(<span class="string">'map'</span>)</span><br><span class="line">        <span class="keyword">const</span> options = &#123;</span><br><span class="line">            center: <span class="keyword">new</span> kakao.maps.LatLng(lat, long),</span><br><span class="line">            level: <span class="number">3</span>,</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">const</span> map = <span class="keyword">new</span> kakao.maps.Map(container, options)</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 지도에 마커를 생성하고 표시한다</span></span><br><span class="line">        <span class="keyword">var</span> marker = <span class="keyword">new</span> kakao.maps.Marker(&#123;</span><br><span class="line">            position: <span class="keyword">new</span> kakao.maps.LatLng(lat, long), <span class="comment">// 마커의 좌표</span></span><br><span class="line">            map: map, <span class="comment">// 마커를 표시할 지도 객체</span></span><br><span class="line">        &#125;)</span><br><span class="line">        <span class="comment">// &#125;</span></span><br><span class="line">    &#125;, [])</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> (</span><br><span class="line">        &lt;&gt;</span><br><span class="line">            &lt;div id=<span class="string">"map"</span> style=&#123;&#123; <span class="attr">width</span>: <span class="string">'750px'</span>, <span class="attr">height</span>: <span class="string">'350px'</span> &#125;&#125;&gt;&lt;<span class="regexp">/div&gt;</span></span><br><span class="line"><span class="regexp">        &lt;/</span>&gt;</span><br><span class="line">    )</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul><p>하지만!<br>디버깅해보니 디버킹타이밍에선 props가 아예 없는 객체였다! 두둥-<br>1번 방법은 실패!</p><p><br><br><br></p><h2 id="부모컴포넌트에서-props로-줄-데이터가-있을때-자식컴포넌트-호출하기"><a href="#부모컴포넌트에서-props로-줄-데이터가-있을때-자식컴포넌트-호출하기" class="headerlink" title="부모컴포넌트에서 props로 줄 데이터가 있을때 자식컴포넌트 호출하기"></a>부모컴포넌트에서 props로 줄 데이터가 있을때 자식컴포넌트 호출하기</h2><p>props로 넘겨줄 <code>detail.addr1</code> 라는 데이터가 있을때만 자식컴포넌트인 Map을 호출했다.</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">&#123;detail.addr1 &amp;&amp; (</span><br><span class="line">&lt;<span class="built_in">Map</span></span><br><span class="line">latitude=&#123;detail.addrLat&#125;</span><br><span class="line">longitude=&#123;detail.addrLng&#125;</span><br><span class="line">/&gt;</span><br><span class="line">)&#125;</span><br></pre></td></tr></table></figure><p>이렇게 undefined일때는 아예 자식컴포넌트를 호출하지 않는 방법으로 문제 해결!!</p><p><br><br><br></p><h1 id="💬또-다른-궁금증-왜-두번씩-호출될까"><a href="#💬또-다른-궁금증-왜-두번씩-호출될까" class="headerlink" title="💬또 다른 궁금증, 왜 두번씩 호출될까?"></a>💬또 다른 궁금증, 왜 두번씩 호출될까?</h1><p>useEffect안에서 props를 사용하는 과정에서 동일한 콘솔로그가 두 번씩 호출되는 게 궁금해져서 친구 중에 리액트 천재에게 물어봤다.<br>친구가 <code>혹시 index.js에 React.StrictMode 사용했어?</code> 라고 물어봤고 확인해보니 진짜였다!<br>어떻게 안거지? 😱<br>마치 내 코드를 본 것만 같은 정확도였다.</p><p><a href="https://ko.reactjs.org/docs/strict-mode.html">리액트공식문서: Strict 모드</a>에 따르면 Strict 모드는 개발 모드에서만 활성화되기 때문에, 프로덕션 빌드에는 영향을 끼치지 않고 애플리케이션의 잠재적인 문제를 알아내기 위해 사용한다고 한다. </p><ul><li>잠재적인 문제란?<ul><li>안전하지 않은 생명주기를 사용하는 컴포넌트 발견</li><li>레거시 문자열 ref 사용에 대한 경고</li><li>권장되지 않는 findDOMNode 사용에 대한 경고</li><li>예상치 못한 부작용 검사</li><li>레거시 context API 검사</li><li>Ensuring reusable state</li></ul></li></ul><p><br><br><br></p><h1 id="참고"><a href="#참고" class="headerlink" title="참고"></a>참고</h1><ul><li><a href="https://sowon-dev.github.io/2021/03/22/210323React-componentLifeCycle/">컴포넌트 생명주기</a></li></ul>]]></content:encoded>
      
      
      <category domain="https://sowon-dev.github.io/categories/React/">React</category>
      
      
      
      <comments>https://sowon-dev.github.io/2022/09/12/220913React-useEffect-props/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>[Server]아파치 vs 톰캣 같은 거 아냐? 차이점</title>
      <link>https://sowon-dev.github.io/2022/09/05/220906Tomcat-vs-Apatch/</link>
      <guid>https://sowon-dev.github.io/2022/09/05/220906Tomcat-vs-Apatch/</guid>
      <pubDate>Mon, 05 Sep 2022 19:05:43 GMT</pubDate>
      
      <description>&lt;p&gt;과장님과 서버구축 관련 이야기를 나누다 아파치와 톰캣이 차이가 있다는 걸 알게되었다.&lt;br&gt;띠용? 톰캣이 아파치 소프트웨어 재단에서 개발된 것이므로 아파치서버나 톰캣서버나 동일하다고 생각하고 있었다.&lt;br&gt;구글링결과 아파치서버와 톰캣서버는 아주 큰 차이점이 있었고 이를 공부해봤다.&lt;/p&gt;</description>
      
      
      
      <content:encoded><![CDATA[<p>과장님과 서버구축 관련 이야기를 나누다 아파치와 톰캣이 차이가 있다는 걸 알게되었다.<br>띠용? 톰캣이 아파치 소프트웨어 재단에서 개발된 것이므로 아파치서버나 톰캣서버나 동일하다고 생각하고 있었다.<br>구글링결과 아파치서버와 톰캣서버는 아주 큰 차이점이 있었고 이를 공부해봤다.</p><a id="more"></a><h2 id="아피치-톰캣-다-같은-거-아냐"><a href="#아피치-톰캣-다-같은-거-아냐" class="headerlink" title="아피치 톰캣 다 같은 거 아냐?"></a>아피치 톰캣 다 같은 거 아냐?</h2><p>NOPE!<br>아파치(Apach)란 아파치 소프트웨어 재단 이름이다. 실무에서 아파치서버라고 부른다면 아파치 재단의 오픈소스로 만든 Web Server를 칭한다.<br>우리가 헷갈리는 이유 WAS가 웹서버의 기능을 다 수행할 수 있기때문이다.<br>하지만 서버과부하, 보안강화 등의 목적으로 WAS와 Web Server를 분리하는 프로젝트들도 있다.</p><table><thead><tr><th align="center"></th><th align="center">Web Server</th><th align="center">WAS(Web Application Server)</th></tr></thead><tbody><tr><td align="center">정의</td><td align="center">웹 브라우저 클라이언트로부터 HTTP 요청을 받아 정적인 컨텐츠(.html .jpeg .css 등)를 제공하는 컴퓨터 프로그램</td><td align="center">DB 조회나 다양한 로직 처리를 요구하는 동적인 컨텐츠를 제공하기 위해 만들어진 Application Server</td></tr><tr><td align="center">데이터</td><td align="center">클라이언트측 정적 데이터</td><td align="center">서버측 동적 데이터</td></tr><tr><td align="center">DB데이터 사용</td><td align="center">불가능</td><td align="center">가능</td></tr><tr><td align="center">예시</td><td align="center">Apache Server, Nginx, IIS(Windows 전용 Web 서버)등</td><td align="center">Tomcat, JBoss, Jeus, Web Sphere 등</td></tr></tbody></table><p><br><br><br></p><h2 id="잠시만-IIS도-동적페이지-생성이-가능한데-Web-Server라고"><a href="#잠시만-IIS도-동적페이지-생성이-가능한데-Web-Server라고" class="headerlink" title="잠시만 IIS도 동적페이지 생성이 가능한데 Web Server라고?"></a>잠시만 IIS도 동적페이지 생성이 가능한데 Web Server라고?</h2><p>맞다. IIS는 Web Server와 WAS가 함께 있는 서버이다.<br>ms진영에서는 IIS를 웹서버라고 부르며, 웹서버와 WAS를 딱히 구별하지 않는 듯 하다.<br>IIS는 ms용, WAS는 범용이라 생각하면 되고 서로 바라보는 범위가 약간 다른 셈!</p><p><br><br><br></p><h2 id="참고"><a href="#참고" class="headerlink" title="참고"></a>참고</h2><ul><li><a href="https://sowon-dev.github.io/2020/10/04/201005jspProcessVSThreadNWebServerVSWAS/#%EC%9B%B9%EC%84%9C%EB%B2%84-WEB-SERVER-VS-%EC%9B%B9%EC%96%B4%ED%94%8C%EB%A6%AC%EC%BC%80%EC%9D%B4%EC%85%98%EC%84%9C%EB%B2%84-WAS-Web-Application-Server">웹서버(WEB SERVER) VS 웹어플리케이션서버(WAS, Web Application Server)</a></li></ul>]]></content:encoded>
      
      
      <category domain="https://sowon-dev.github.io/categories/Server/">Server</category>
      
      
      <category domain="https://sowon-dev.github.io/tags/%EC%B0%A8%EC%9D%B4/">차이</category>
      
      
      <comments>https://sowon-dev.github.io/2022/09/05/220906Tomcat-vs-Apatch/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>DB서버를 분리하는 이유가 뭘까</title>
      <link>https://sowon-dev.github.io/2022/09/04/220905Server-separation/</link>
      <guid>https://sowon-dev.github.io/2022/09/04/220905Server-separation/</guid>
      <pubDate>Sun, 04 Sep 2022 22:49:00 GMT</pubDate>
      
      <description>&lt;p&gt;프로젝트를 진행하다보면 다양한 서버 구죽 환경을 만난다.&lt;br&gt;단일서버도 있고 DB서버를 분리하여 서버를 구축하기도 한다.&lt;br&gt;실무에선 주로 DB서버를 분리하는 데 단일서버와의 차이점이 궁금했다.&lt;br&gt;어떨때 DB서버를 분리하고 어떨 때는 분리하지 않는걸까? 그로 인한 장단점에는 뭐가 있을까?&lt;/p&gt;</description>
      
      
      
      <content:encoded><![CDATA[<p>프로젝트를 진행하다보면 다양한 서버 구죽 환경을 만난다.<br>단일서버도 있고 DB서버를 분리하여 서버를 구축하기도 한다.<br>실무에선 주로 DB서버를 분리하는 데 단일서버와의 차이점이 궁금했다.<br>어떨때 DB서버를 분리하고 어떨 때는 분리하지 않는걸까? 그로 인한 장단점에는 뭐가 있을까?</p><a id="more"></a><h2 id="DB서버와-WAS를-나누는-이유"><a href="#DB서버와-WAS를-나누는-이유" class="headerlink" title="DB서버와 WAS를 나누는 이유"></a>DB서버와 WAS를 나누는 이유</h2><p>프로젝트 관리정책이나 클라이언트의 요구에 따라 단일 서버를 쓰기도 하고 DB서버를 분리하기도 한다.<br>DB서버를 분리하는 이유는 크게 두 가지를 들 수 있다.</p><ol><li>보안<ul><li>서버를 분리할수록 보안에 유리하다.</li></ul></li><li>성능<ul><li>DB 서버는 메모리를 빡빡하게 쓴다. 리소스를 많이 잡아먹으므로 서버분리를 통해 성능을 높일 수 있다. </li><li>실무에선 WAS에서 처리하는게 많은 경우,DB서버와 분리한다.</li></ul></li></ol><p><br><br><br></p><h2 id="DB서버-분리-단점"><a href="#DB서버-분리-단점" class="headerlink" title="DB서버 분리 단점"></a>DB서버 분리 단점</h2><p>보안과 성능이라는 두가지 장점이 있다면 단점도 분명 있을 것이다.<br>단점도 크게 두가지로 볼 수 잇다.</p><ol><li>서버 비용 증가</li><li>방화벽설정 문제가 발생할 수 있음<ul><li>단점이라기보단 예상할 수 있는 문제에 가깝지만, 실무에서 DB서버를 분리함으로서 방화벽설정에 문제가 있을 수 있다. 예를 들어 관리포인트가 많을 경우 한 쪽서버만 접속되는 문제가 발생할 수 있다.</li></ul></li></ol><p><br><br><br></p><h2 id="소스코드가-있는-프로그램을-부르는-명칭이-따로-있을까"><a href="#소스코드가-있는-프로그램을-부르는-명칭이-따로-있을까" class="headerlink" title="소스코드가 있는 프로그램을 부르는 명칭이 따로 있을까?"></a>소스코드가 있는 프로그램을 부르는 명칭이 따로 있을까?</h2><p>나는 늘 그랬듯 용어가 궁금했다. 소통을 잘하고싶은 마음때문에 항상 용어를 신경쓴다.<br>소스코드가 있는 그 프로그램을 뭐라고 부르는지 무척 궁금했는데 과장님이 프로그램을 소스코드 경로 최상단인 <code>webroot</code> 라고도 부른다고 알려주셨다.<br>감사합니다 과장님!</p><p>과장님과 얘기나누던 중에 내가 아파치와 톰캣을 명확히 구분하지 못한다는 사실을 발견했다.<br>이와 관련되서는 따로 포스팅했다. <a href="https://sowon-dev.github.io/2022/09/05/220906Tomcat-vs-Apatch/">참고 아파치 vs 톰캣 같은 거 아냐? 차이점</a></p><p>여담으로, 회사 선임분들이 너무 좋다. 팀장님도 좋고 과장님도 좋다. 내가 난해하게 물어볼때도 최대한 알기쉽게 알려주신다. 항상 감사하다. 덕분에 많이 배웁니다.</p><p><br><br><br></p><h2 id="출처"><a href="#출처" class="headerlink" title="출처"></a>출처</h2><ul><li>과장님 경험</li><li><a href="https://webisfree.com/2020-05-07/[%EC%84%9C%EB%B2%84%EA%B5%AC%EC%B6%95]-%EB%8B%A8%EC%9D%BC-%EC%84%9C%EB%B2%84%EC%99%80-%EB%8D%B0%EC%9D%B4%ED%84%B0%EB%B2%A0%EC%9D%B4%EC%8A%A4-%EC%84%9C%EB%B2%84%EC%9D%98-%EB%B6%84%EB%A6%AC%EA%B0%80-%EC%99%9C-%ED%95%84%EC%9A%94%ED%95%A0%EA%B9%8C">단일 서버와 데이터베이스 서버의 분리가 왜 필요할까</a></li></ul>]]></content:encoded>
      
      
      <category domain="https://sowon-dev.github.io/categories/Server/">Server</category>
      
      
      
      <comments>https://sowon-dev.github.io/2022/09/04/220905Server-separation/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>[JS]동적 달력(캘린더)만들기</title>
      <link>https://sowon-dev.github.io/2022/08/30/220831js-calendar/</link>
      <guid>https://sowon-dev.github.io/2022/08/30/220831js-calendar/</guid>
      <pubDate>Tue, 30 Aug 2022 20:43:18 GMT</pubDate>
      
      <description>&lt;p&gt;JS로 달에 맞게 생성되는 동적 달력을 그려보자.&lt;/p&gt;</description>
      
      
      
      <content:encoded><![CDATA[<p>JS로 달에 맞게 생성되는 동적 달력을 그려보자.</p><a id="more"></a><h2 id="html-태그로만-달력그리기"><a href="#html-태그로만-달력그리기" class="headerlink" title="html 태그로만 달력그리기"></a>html 태그로만 달력그리기</h2><p>html코드로만 달력을 그린다면 아래와 같은 것이다.<br>하지만 이렇게 그린다면 달마다 바뀌는 달력이 아닌 정적달력이 되버린다.<br>매달 달라지는 달력은 어떻게 만들까?</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">a</span>&gt;</span><span class="tag">&lt;<span class="name">i</span> <span class="attr">class</span>=<span class="string">"fa fa-arrow-left"</span> <span class="attr">aria-hidden</span>=<span class="string">"true"</span>&gt;</span><span class="tag">&lt;/<span class="name">i</span>&gt;</span>이전달<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span> <span class="attr">id</span>=<span class="string">"title-date"</span>&gt;</span>----년 -월<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">a</span>&gt;</span><span class="tag">&lt;<span class="name">i</span> <span class="attr">class</span>=<span class="string">"fa fa-arrow-right"</span> <span class="attr">aria-hidden</span>=<span class="string">"true"</span>&gt;</span><span class="tag">&lt;/<span class="name">i</span>&gt;</span>다음달<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">table</span> <span class="attr">id</span>=<span class="string">"month-table"</span> <span class="attr">class</span>=<span class="string">"table_cal"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">thead</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">th</span>&gt;</span>일<span class="tag">&lt;/<span class="name">th</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">th</span>&gt;</span>월<span class="tag">&lt;/<span class="name">th</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">th</span>&gt;</span>화<span class="tag">&lt;/<span class="name">th</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">th</span>&gt;</span>수<span class="tag">&lt;/<span class="name">th</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">th</span>&gt;</span>목<span class="tag">&lt;/<span class="name">th</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">th</span>&gt;</span>금<span class="tag">&lt;/<span class="name">th</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">th</span>&gt;</span>토<span class="tag">&lt;/<span class="name">th</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">thead</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">tbody</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">td</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">span</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">td</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">span</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">td</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">span</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">td</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">span</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">td</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">span</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">td</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span>1<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">span</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">td</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span>2<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">span</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">td</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span>3<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">span</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">td</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span>4<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">span</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">td</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span>5<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">span</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"javascript:void(0);"</span>&gt;</span><span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">td</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span>6<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">span</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">td</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span>7<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">span</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">td</span> &gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span>8<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">span</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">td</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span>9<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">span</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">td</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span>10<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">span</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">td</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span>11<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">span</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">td</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span>12<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">span</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">td</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span>13<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">span</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">td</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span>14<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">span</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">td</span> <span class="attr">class</span>=<span class="string">"possible"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span>15<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">span</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"javascript:void(0);"</span>&gt;</span><span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">td</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span>16<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">span</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">td</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span>17<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">span</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">td</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span>18<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">span</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">td</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span>19<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">span</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">td</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span>20<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">span</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">td</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span>21<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">span</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">td</span> <span class="attr">class</span>=<span class="string">"possible"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span>22<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">span</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"javascript:void(0);"</span>&gt;</span><span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">td</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span>23<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">span</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">td</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span>24<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">span</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">td</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span>25<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">span</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">td</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span>26<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">span</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">td</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span>27<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">span</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"javascript:void(0);"</span>&gt;</span><span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">td</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span>28<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">span</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">td</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span>29<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">span</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"javascript:void(0);"</span>&gt;</span><span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">td</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span>30<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">span</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">td</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span>31<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">span</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">td</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">span</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">td</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">span</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">td</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">span</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">td</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">span</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">td</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">span</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">td</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">span</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">tbody</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">table</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure><p><br><br><br></p><h2 id="동적-달력"><a href="#동적-달력" class="headerlink" title="동적 달력"></a>동적 달력</h2><p>위 html코드에서 thead와 tbody부분을 제거했다.<br>restDaysWeekNumber를 통해서 주말과 평일을 나눠서 달력에 특별한 표시를 할수도 있다.<br>해당 코드를 사용하기 위해서는 moment.js가 있어야한다.</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"https://cdnjs.cloudflare.com/ajax/libs/moment.js/2.29.4/moment.min.js"</span> <span class="attr">integrity</span>=<span class="string">"sha512-CryKbMe7sjSCDPl18jtJI5DR5jtkUWxPXWaLCst6QjH8wxDexfRJic2WRmRXmstr2Y8SxDDWuBO6CQC6IE4KTA=="</span> <span class="attr">crossorigin</span>=<span class="string">"anonymous"</span> <span class="attr">referrerpolicy</span>=<span class="string">"no-referrer"</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="javascript"><span class="keyword">const</span> createMonthTable = <span class="keyword">async</span> (date) =&gt; &#123;</span></span><br><span class="line"><span class="javascript"><span class="keyword">let</span> firstDate = <span class="keyword">new</span> <span class="built_in">Date</span>(date.getFullYear(), date.getMonth(), <span class="number">1</span>);</span></span><br><span class="line"><span class="javascript"><span class="keyword">let</span> lastDate = <span class="keyword">new</span> moment(firstDate).add(<span class="number">1</span>, <span class="string">'months'</span>).subtract(<span class="number">1</span>, <span class="string">'days'</span>);</span></span><br><span class="line"><span class="javascript"><span class="keyword">let</span> currentDate = firstDate;</span></span><br><span class="line"><span class="javascript">$(<span class="string">'#title-date'</span>).text(moment(firstDate).format(<span class="string">"YYYY년 MM월"</span>));</span></span><br><span class="line"><span class="javascript">$(<span class="string">'#title-date'</span>).data(<span class="string">"firstdate"</span>, firstDate);</span></span><br><span class="line"><span class="javascript"><span class="keyword">let</span> table = $(<span class="string">"#month-table"</span>);</span></span><br><span class="line"><span class="javascript"><span class="keyword">let</span> calenderTable = $(<span class="string">"&lt;table id='month-table'&gt;&lt;/table&gt;"</span>);</span></span><br><span class="line">calenderTable.empty();</span><br><span class="line"></span><br><span class="line"><span class="actionscript"><span class="keyword">const</span> today = moment();</span></span><br><span class="line"><span class="javascript"><span class="keyword">let</span> tempCurrentDate;</span></span><br><span class="line"><span class="javascript"><span class="keyword">let</span> daysNumber = <span class="number">0</span>;</span></span><br><span class="line"></span><br><span class="line"><span class="javascript"><span class="keyword">let</span> theadTr = $(<span class="string">"&lt;thead&gt;&lt;/thead&gt;"</span>);</span></span><br><span class="line">theadTr.appendTo(calenderTable);</span><br><span class="line"></span><br><span class="line"><span class="javascript"><span class="keyword">let</span> headTr = $(<span class="string">"&lt;tr&gt;&lt;/tr&gt;"</span>);</span></span><br><span class="line"><span class="javascript"><span class="keyword">for</span> (<span class="keyword">let</span> i = <span class="number">0</span>; i &lt; <span class="number">7</span>; i++) &#123;</span></span><br><span class="line"><span class="javascript"><span class="keyword">let</span> th = $(<span class="string">"&lt;th&gt;"</span> + moment().day(i).format(<span class="string">"ddd"</span>) + <span class="string">"&lt;/th&gt;"</span>);</span></span><br><span class="line">headTr.append(th);</span><br><span class="line">&#125;</span><br><span class="line">headTr.appendTo(theadTr);</span><br><span class="line"></span><br><span class="line"><span class="javascript"><span class="keyword">let</span> restDaysWeekNumber = <span class="string">"60"</span>; <span class="comment">/* 정기휴일(일:0,월:1,화:2, ... ,금:5,토:6) */</span></span></span><br><span class="line"><span class="actionscript"><span class="keyword">while</span> (currentDate &lt;= lastDate) &#123;</span></span><br><span class="line"><span class="actionscript">tempCurrentDate = <span class="keyword">new</span> moment(currentDate);</span></span><br><span class="line"><span class="javascript"><span class="keyword">let</span> daysTr = $(<span class="string">"&lt;tr&gt;&lt;/tr&gt;"</span>);</span></span><br><span class="line"></span><br><span class="line"><span class="javascript"><span class="keyword">for</span> (<span class="keyword">let</span> i = <span class="number">0</span>; i &lt; <span class="number">7</span>; i++) &#123; <span class="comment">// 여기서 i는 요일</span></span></span><br><span class="line"><span class="javascript"><span class="keyword">let</span> td = $(<span class="string">"&lt;td&gt;&lt;/td&gt;"</span>);</span></span><br><span class="line"></span><br><span class="line">if (restDaysWeekNumber.includes(i)) &#123;</span><br><span class="line"><span class="actionscript">td.addClass(<span class="string">"blocked"</span>); <span class="comment">// 주말표시가 된 class를 추가할 수 있음</span></span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="handlebars"><span class="xml">if (tempCurrentDate.day() == i &amp;&amp; firstDate <span class="tag">&lt;<span class="name">=</span> <span class="attr">tempCurrentDate</span> &amp;&amp; <span class="attr">tempCurrentDate</span> &lt;= <span class="string">lastDate)</span> &#123;</span></span></span></span><br><span class="line"><span class="javascript"><span class="keyword">let</span> p = $(<span class="string">"&lt;p&gt;"</span>+tempCurrentDate.date()+<span class="string">"&lt;/p&gt;"</span>);</span></span><br><span class="line">p.appendTo(td);</span><br><span class="line"></span><br><span class="line"><span class="javascript"><span class="keyword">let</span> span = $(<span class="string">"&lt;span&gt;&lt;/span&gt;"</span>);</span></span><br><span class="line">span.appendTo(td);</span><br><span class="line"></span><br><span class="line"><span class="actionscript">tempCurrentDate.add(<span class="number">1</span>, <span class="string">'days'</span>);</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">td.appendTo(daysTr);</span><br><span class="line">&#125;</span><br><span class="line">daysTr.appendTo(calenderTable);</span><br><span class="line"><span class="actionscript">currentDate = <span class="keyword">new</span> moment(tempCurrentDate);</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="javascript"><span class="keyword">let</span> parent = table.parent();</span></span><br><span class="line">table.remove();</span><br><span class="line">calenderTable.appendTo(parent);</span><br><span class="line">&#125;;</span><br><span class="line"><span class="actionscript"><span class="comment">// 달력 이전달 이동</span></span></span><br><span class="line"><span class="javascript"><span class="keyword">const</span> makePreCalender = <span class="function"><span class="params">()</span> =&gt;</span> &#123;</span></span><br><span class="line"><span class="javascript">preDateString = moment($(<span class="string">'#title-date'</span>).data(<span class="string">'firstdate'</span>)).add(<span class="string">'-1'</span>,<span class="string">'M'</span>).format(<span class="string">"YYYY-MM-DD"</span>);</span></span><br><span class="line"><span class="javascript">createMonthTable(<span class="keyword">new</span> <span class="built_in">Date</span>(preDateString));</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="actionscript"><span class="comment">// 달력 다음달 이동</span></span></span><br><span class="line"><span class="javascript"><span class="keyword">const</span> makeNextCalender = <span class="function"><span class="params">()</span> =&gt;</span> &#123;</span></span><br><span class="line"><span class="javascript">nextDateString = moment($(<span class="string">'#title-date'</span>).data(<span class="string">'firstdate'</span>)).add(<span class="string">'1'</span>,<span class="string">'M'</span>).format(<span class="string">"YYYY-MM-DD"</span>);</span></span><br><span class="line"><span class="javascript">createMonthTable(<span class="keyword">new</span> <span class="built_in">Date</span>(nextDateString));</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="javascript">$(<span class="built_in">document</span>).ready( <span class="function"><span class="params">()</span> =&gt;</span> &#123;</span></span><br><span class="line"></span><br><span class="line"><span class="javascript"><span class="keyword">var</span> data = createMonthTable(<span class="keyword">new</span> <span class="built_in">Date</span>());</span></span><br><span class="line"></span><br><span class="line">&#125;);</span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"javascript:makePreCalender();"</span>&gt;</span><span class="tag">&lt;<span class="name">i</span> <span class="attr">class</span>=<span class="string">"fa fa-arrow-left"</span> <span class="attr">aria-hidden</span>=<span class="string">"true"</span>&gt;</span><span class="tag">&lt;/<span class="name">i</span>&gt;</span>이전달<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span> <span class="attr">id</span>=<span class="string">"title-date"</span>&gt;</span>----년 -월<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"javascript:makeNextCalender();"</span>&gt;</span><span class="tag">&lt;<span class="name">i</span> <span class="attr">class</span>=<span class="string">"fa fa-arrow-right"</span> <span class="attr">aria-hidden</span>=<span class="string">"true"</span>&gt;</span><span class="tag">&lt;/<span class="name">i</span>&gt;</span>다음달<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">table</span> <span class="attr">id</span>=<span class="string">"month-table"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">thead</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">th</span>&gt;</span>일<span class="tag">&lt;/<span class="name">th</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">th</span>&gt;</span>월<span class="tag">&lt;/<span class="name">th</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">th</span>&gt;</span>화<span class="tag">&lt;/<span class="name">th</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">th</span>&gt;</span>수<span class="tag">&lt;/<span class="name">th</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">th</span>&gt;</span>목<span class="tag">&lt;/<span class="name">th</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">th</span>&gt;</span>금<span class="tag">&lt;/<span class="name">th</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">th</span>&gt;</span>토<span class="tag">&lt;/<span class="name">th</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">thead</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">table</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure><p>완성!</p>]]></content:encoded>
      
      
      <category domain="https://sowon-dev.github.io/categories/JavaScript/">JavaScript</category>
      
      
      
      <comments>https://sowon-dev.github.io/2022/08/30/220831js-calendar/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>예약 프로그램 프로젝트를 끝내며 내가 배운 것</title>
      <link>https://sowon-dev.github.io/2022/08/23/220824projectreview7/</link>
      <guid>https://sowon-dev.github.io/2022/08/23/220824projectreview7/</guid>
      <pubDate>Tue, 23 Aug 2022 20:40:31 GMT</pubDate>
      
      <description>&lt;p&gt;이번 프로젝트에서는 예약프로그램을 도맡아 개발했다. 요구사항에 맞게 기능을 제한하는 부분에 가장 많은 공을 들였다.&lt;br&gt;시간이 많이 촉박했던 프로젝트라 야근을 많이 했는데 테스트할때 생각보다 큰 버그가 없어서 뿌듯했다.&lt;/p&gt;</description>
      
      
      
      <content:encoded><![CDATA[<p>이번 프로젝트에서는 예약프로그램을 도맡아 개발했다. 요구사항에 맞게 기능을 제한하는 부분에 가장 많은 공을 들였다.<br>시간이 많이 촉박했던 프로젝트라 야근을 많이 했는데 테스트할때 생각보다 큰 버그가 없어서 뿌듯했다.</p><a id="more"></a><h2 id="Keep"><a href="#Keep" class="headerlink" title="Keep"></a>Keep</h2><p>현재 만족하고 있는 부분과 계속해서 이어갔으면 하는 부분</p><ol><li>성능을 고려하면서 SQL을 제대로 짜기위해 노력했다.</li><li>js와 jqeury로 달력그리기 마스터가 되었다. 데이터를 가져올때 async 와 await 도 사용하고 이해도가 훨씬 향상되었다. 다음에는 템플릿을 이용해서 그리고 싶다.</li></ol><p><br><br><br></p><h2 id="Problem"><a href="#Problem" class="headerlink" title="Problem"></a>Problem</h2><p>개선이 필요하다고 생각되는 부분</p><ol><li>고객사의 요구사항이 명확하지 않을때 해결하는 과정에서 많은 어려움이 있었다. 고객사 담당자도 구체적인 정책이 없는 상황에서 프로젝트 시간은 여전히 촉박하고 기다림의 시간이 반복되었다. 최대한 확장성이 있는 기능을 구현하는 게 해답이라는 걸 깨달았다. </li></ol><p><br><br><br></p><h2 id="Try"><a href="#Try" class="headerlink" title="Try"></a>Try</h2><p>Problem의 해결책이 될 수 있는 부분</p><ol><li>앞으로도 요구사항이 명확하지 않은 프로젝트를 할 수 있는데 어떤 설계를 해야 확장성을 갖추면서 효율적으로 개발할 수 있을까? 디자인패턴을 공부해야겠다.</li></ol><p><br><br><br></p><h2 id="관련-포스팅"><a href="#관련-포스팅" class="headerlink" title="관련 포스팅"></a>관련 포스팅</h2><ul><li><a href="https://sowon-dev.github.io/2022/08/09/220809SQL-refact-subquery-to-join/">서브쿼리(Subquery)보다 조인(Join)을 써야하는 이유(코드비교)</a></li><li><a href="https://sowon-dev.github.io/2022/08/10/220811Json-convert-map/">gson을 이용하여 JSON을 HashMap으로 변환하기(영화관 좌석 예매 예시)</a></li><li><a href="https://sowon-dev.github.io/2022/08/11/220812SQL-variable/">변수 @사용법, 사용자 정의 변수 직접 사용해보기</a></li><li><a href="https://sowon-dev.github.io/2022/08/15/220816Jsp-restart/">jsp파일을 수정하면 서버를 재시작해야할까?</a></li><li><a href="https://sowon-dev.github.io/2022/08/18/220818JSTL-date/">JSTL 날짜 차이 계산하기</a></li><li><a href="https://sowon-dev.github.io/2022/08/30/220831js-calendar/">동적 달력(캘린더)만들기</a></li></ul>]]></content:encoded>
      
      
      <category domain="https://sowon-dev.github.io/categories/Journal/">Journal</category>
      
      <category domain="https://sowon-dev.github.io/categories/Journal/%ED%9A%8C%EA%B3%A0%EB%A1%9D/">회고록</category>
      
      
      <category domain="https://sowon-dev.github.io/tags/%ED%9A%8C%EA%B3%A0%EB%A1%9D/">회고록</category>
      
      
      <comments>https://sowon-dev.github.io/2022/08/23/220824projectreview7/#disqus_thread</comments>
      
    </item>
    
  </channel>
</rss>
