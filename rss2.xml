<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0"
  xmlns:atom="http://www.w3.org/2005/Atom"
  xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>야망찬 개발자의 블로그</title>
    <link>https://sowon-dev.github.io/</link>
    
    <atom:link href="https://sowon-dev.github.io/rss2.xml" rel="self" type="application/rss+xml"/>
    
    <description></description>
    <pubDate>Wed, 23 Sep 2020 08:37:54 GMT</pubDate>
    <generator>http://hexo.io/</generator>
    
    <item>
      <title>[ITWILL : JSP] JSP전체목록List</title>
      <link>https://sowon-dev.github.io/2020/11/17/jspList/</link>
      <guid>https://sowon-dev.github.io/2020/11/17/jspList/</guid>
      <pubDate>Tue, 17 Nov 2020 00:00:00 GMT</pubDate>
      
      <description>&lt;h2 id=&quot;🌷프로그래밍기초&quot;&gt;&lt;a href=&quot;#🌷프로그래밍기초&quot; class=&quot;headerlink&quot; title=&quot;🌷프로그래밍기초&quot;&gt;&lt;/a&gt;🌷프로그래밍기초&lt;/h2&gt;&lt;ol&gt;
&lt;li&gt;&lt;a href=&quot;https://sowon-dev.github.io/2020/05/28/200528jspi/&quot;&gt;프로그래밍기초이론, 하드웨어 vs 소프트웨어 vs 펌웨어, 기억장치, 클라이언트 vs 서버&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&quot;🌷JS기초&quot;&gt;&lt;a href=&quot;#🌷JS기초&quot; class=&quot;headerlink&quot; title=&quot;🌷JS기초&quot;&gt;&lt;/a&gt;🌷JS기초&lt;/h2&gt;&lt;ol&gt;
&lt;li&gt;&lt;a href=&quot;https://sowon-dev.github.io/2020/06/01/200601jspi/&quot;&gt;JS기초이론, Compile VS Interprete, 변수, js라이브러리,객체타입&lt;/a&gt;</description>
      
      
      
      <content:encoded><![CDATA[<h2 id="🌷프로그래밍기초"><a href="#🌷프로그래밍기초" class="headerlink" title="🌷프로그래밍기초"></a>🌷프로그래밍기초</h2><ol><li><a href="https://sowon-dev.github.io/2020/05/28/200528jspi/">프로그래밍기초이론, 하드웨어 vs 소프트웨어 vs 펌웨어, 기억장치, 클라이언트 vs 서버</a></li></ol><h2 id="🌷JS기초"><a href="#🌷JS기초" class="headerlink" title="🌷JS기초"></a>🌷JS기초</h2><ol><li><a href="https://sowon-dev.github.io/2020/06/01/200601jspi/">JS기초이론, Compile VS Interprete, 변수, js라이브러리,객체타입</a><a id="more"></a></li><li><a href="https://sowon-dev.github.io/2020/06/02/200602jspi/">JS를 문서에 나타내는 3가지방법, undefined VS null, 백의자리 Math.floor(), 복합대입연산자로table생성, A++과 ++A차이점, ==과===차이점, 논리표</a></li><li><a href="https://sowon-dev.github.io/2020/06/03/200603jspi/">JAVA SE/EE/ME 차이점, JAVA EE 설정. Tomcat 설치및설정, 이클립스 단축키</a></li><li><a href="https://sowon-dev.github.io/2020/06/04/200604jspi/">아이디와 비번입력, 새로고침location.reload(), 주석한번에 단축키, switch문 출력문 한줄리팩토링</a></li><li><a href="https://sowon-dev.github.io/2020/06/09/200609jspi/">반복문 for 순서 자세히, 개발자 도구로 디버깅, 기본 반복문암기, for문과 if문의 자리바꿈에 따른 변화, 반복문의 전위연산 VS 후위연산, do while문</a></li><li><a href="https://sowon-dev.github.io/2020/06/11/200611jspi/">무한반복문, 보조제어(break와continue)문, 익명함수, 재귀함수, 지역변수를 전역에서 사용하는 방법, 내장함수</a></li></ol><h2 id="🌷JS기초-객체-내장객체-브라우저객체모델-BOM-문서객체모델-DOM"><a href="#🌷JS기초-객체-내장객체-브라우저객체모델-BOM-문서객체모델-DOM" class="headerlink" title="🌷JS기초 : 객체 (내장객체, 브라우저객체모델(BOM), 문서객체모델(DOM))"></a>🌷JS기초 : 객체 (내장객체, 브라우저객체모델(BOM), 문서객체모델(DOM))</h2><ol><li><a href="https://sowon-dev.github.io/2020/06/12/200612jspi/">Object객체 전체개념, tv채널객체함수, new를 쓰고 안쓰고의 차이</a></li><li><a href="https://sowon-dev.github.io/2020/06/12/200612jspi2/">Date객체 자세히, 디데이구하는 함수</a></li><li><a href="https://sowon-dev.github.io/2020/06/15/200615jspi/">Array객체 (for ~ in구문, join(), reverse(), sort())</a></li><li><a href="https://sowon-dev.github.io/2020/06/15/200615jspi2/">String객체, 짤라오는 함수 4종류 .substring(), slice(), substr(), charAt(), .indexOf()와 .lastIndexOf()차이, .concat(), .split(), ID자릿수를 제한하는 이메일 유효성검사</a></li><li><a href="https://sowon-dev.github.io/2020/06/15/200615jspi3/">이벤트리스너와 이벤트핸들러, 브라우저객체모델, window객체전체</a></li><li><a href="https://sowon-dev.github.io/2020/06/16/200616jspi/">브라우저객체모델안의 Document객체 (bgColor와 fgColor사용,  img태그에 접근하여 속성 사용, 랜덤 img 출력하기)</a></li><li><a href="https://sowon-dev.github.io/2020/06/16/200616jspi2/">브라우저객체모델안의 location객체</a></li><li><a href="https://sowon-dev.github.io/2020/06/17/200617jspi/">브라우저객체모델안의 history객체, screen객체, navigator객체</a></li><li><a href="https://sowon-dev.github.io/2020/06/17/200617jspi2/">문서 객체 모델안의 form태그, 페이지이동방식(get과 post), focus() vs blur() vs select()</a></li><li><a href="https://sowon-dev.github.io/2020/06/18/200618jspi/">문서 객체 모델안의 if문에 return;의 역할, radio태그, checkbox태그</a></li></ol><h2 id="🌷JS실습"><a href="#🌷JS실습" class="headerlink" title="🌷JS실습"></a>🌷JS실습</h2><ol><li><a href="https://sowon-dev.github.io/2020/06/22/200622jspi/">js로 간단한 회원가입페이지 작성하기</a></li></ol><h2 id="🌷JSP기초"><a href="#🌷JSP기초" class="headerlink" title="🌷JSP기초"></a>🌷JSP기초</h2><ol><li><a href="https://sowon-dev.github.io/2020/06/22/200622jspi2/">JSP 첫 프로젝트 톰캣과 연결</a></li><li><a href="https://sowon-dev.github.io/2020/06/23/200623jspi/">JSP 주석과 JSP directive, JSP 스크립트 요소</a></li><li><a href="https://sowon-dev.github.io/2020/06/24/200624jspi/">JAVA DATATYPE, Integer.parseInt(문자열), 동일한 파라미터의 값을 가지는 데이터가 여러개있을 경우 변수로 가져오기</a></li><li><a href="https://sowon-dev.github.io/2020/07/15/200715jspi2/">커넥션풀(Connection Pool)</a></li><li><a href="https://sowon-dev.github.io/2020/07/16/200716jspi/">Wrapper클래스, 오토 박싱과 오토 언박싱, hierarchy확인법</a></li><li><a href="https://sowon-dev.github.io/2020/09/23/200923jspi-2/">자바 클래스(객체) vs 추상클래스 vs 인터페이스</a></li></ol><h2 id="🌷JSP기초-내장객체-중-영역객체"><a href="#🌷JSP기초-내장객체-중-영역객체" class="headerlink" title="🌷JSP기초 : 내장객체 중 영역객체"></a>🌷JSP기초 : 내장객체 중 영역객체</h2><ol><li><a href="https://sowon-dev.github.io/2020/06/23/200623jspi2/">내장객체</a></li><li><a href="https://sowon-dev.github.io/2020/06/24/200624jspi2/">영역객체scope</a></li><li><a href="https://sowon-dev.github.io/2020/06/25/200625jspi/">영역객체 안에서 사용하는 속성(Attribute), 링크이동 방법별 전달가능한 영역(scope)</a></li><li><a href="https://sowon-dev.github.io/2020/06/25/200625jspi2/">JSP 디렉티브(directive) 중 include VS 액션태그 include, jspf확장자 파일</a></li><li><a href="https://sowon-dev.github.io/2020/06/29/200629jspi/">세션(Session)</a></li><li><a href="https://sowon-dev.github.io/2020/06/29/200629jspi2/">==과 str.equals(str2) 차이, 객체와 클래스</a></li><li><a href="https://sowon-dev.github.io/2020/07/01/200701jspi/">쿠키(Cookie)</a></li></ol><h2 id="🌷MySQL"><a href="#🌷MySQL" class="headerlink" title="🌷MySQL"></a>🌷MySQL</h2><ol><li><a href="https://sowon-dev.github.io/2020/06/30/200701jspi2/">MYSQL 설치, MYSQL환경변수설정, cmd에서 명령어 잘못입력해서 mysql못빠져나갈때</a></li><li><a href="https://sowon-dev.github.io/2020/07/01/200702jspi/">MYSQL 접속순서, DB명령어, 테이블명령어, 데이터명령어</a></li><li><a href="https://sowon-dev.github.io/2020/07/01/200702jspi2/">MySQL 한글깨짐현상 두가지 해결방법 : cmd와 Workbench, 이클립스와 MYSQL연결</a></li></ol><h2 id="🌷JDBC"><a href="#🌷JDBC" class="headerlink" title="🌷JDBC"></a>🌷JDBC</h2><ol><li><a href="https://sowon-dev.github.io/2020/07/03/200703jspi/">JDBC활용 - import쓰는 이유, form페이지로 받은 데이터를 DB에 insert하는 방법</a></li><li><a href="https://sowon-dev.github.io/2020/07/03/200703jspi2/">JDBC활용 - JAVA에서 DB 정보 지우기 2가지방법</a></li><li><a href="https://sowon-dev.github.io/2020/07/06/200706jspi/">JDBC활용 - DB에서 고객정보를 불러와서 HTML테이블에 담기</a></li><li><a href="https://sowon-dev.github.io/2020/07/06/200706jspi2/">JDBC활용 - TIMESTAMP주의점, JDBC에서 데이터처리</a></li><li><a href="https://sowon-dev.github.io/2020/07/07/200707jspi/">JDBC활용 - 회원정보수정페이지만들기</a></li><li><a href="https://sowon-dev.github.io/2020/07/08/200708jspi/">JDBC활용 - 회원목록출력하는데 관리자는 빼고 출력하기, 자바 에러 두종류</a></li></ol><h2 id="🌷JAVABEAN"><a href="#🌷JAVABEAN" class="headerlink" title="🌷JAVABEAN"></a>🌷JAVABEAN</h2><ol><li><a href="https://sowon-dev.github.io/2020/07/09/200709jspi/">Javabean : 기초</a></li><li><a href="https://sowon-dev.github.io/2020/07/09/200709jspi2/">자바빈 실습1 : 회원가입페이지만들기</a></li><li><a href="https://sowon-dev.github.io/2020/07/14/200714jspi/">자바빈 실습2 : 로그인 및 로그아웃페이지만들기</a></li><li><a href="https://sowon-dev.github.io/2020/07/14/200714jspi2/">자바빈 실습3 : 회원정보조회 및 수정페이지만들기</a></li><li><a href="https://sowon-dev.github.io/2020/07/15/200715jspi/">자바빈 실습4 : web.xml, 회원정보삭제페이지</a></li><li><a href="https://sowon-dev.github.io/2020/07/15/200715jspi3/">자바빈 실습5 : 관리자만 확인할 수 있는 회원목록페이지만들기</a></li><li><a href="https://sowon-dev.github.io/2020/07/20/200720jspi2/">자바빈 실습6 : 게시판만들기(글쓰기)</a></li><li><a href="https://sowon-dev.github.io/2020/07/21/200721jspi/">자바빈 실습7 : 게시판만들기(글 총 갯수, 글목록, 페이징처리)</a></li><li><a href="https://sowon-dev.github.io/2020/07/22/200722jspi/">자바빈 실습8 : 게시판만들기(글내용보기, 글수정하기)</a></li><li><a href="https://sowon-dev.github.io/2020/07/23/200723jspi/">자바빈 실습9 : 게시판만들기(글삭제하기)</a></li><li><a href="https://sowon-dev.github.io/2020/07/23/200723jspi2/">자바빈 실습10 : 게시판만들기(답글쓰기)</a></li></ol><h2 id="🌷파일업로드와-다운로드-기능-구현"><a href="#🌷파일업로드와-다운로드-기능-구현" class="headerlink" title="🌷파일업로드와 다운로드 기능 구현"></a>🌷파일업로드와 다운로드 기능 구현</h2><ol><li><a href="https://sowon-dev.github.io/2020/07/27/200727jspi/">자바빈 실습11 : MultipartRequest클래스</a></li><li><a href="https://sowon-dev.github.io/2020/07/27/200727jspi2/">자바빈 실습12 : 파일업로드</a></li><li><a href="https://sowon-dev.github.io/2020/07/27/200727jspi3/">자바빈 실습13 : 파일다운로드</a></li><li><a href="https://sowon-dev.github.io/2020/07/28/200728jspi/">자바빈 실습14 : ServletContext 사용하여 파일업로드와 다운로드</a></li></ol><h2 id="🌷자료구조"><a href="#🌷자료구조" class="headerlink" title="🌷자료구조"></a>🌷자료구조</h2><ol><li><a href="https://sowon-dev.github.io/2020/07/16/200716jspi2/">자료구조1 : Collections Framwork(Set계열, List계열)</a></li><li><a href="https://sowon-dev.github.io/2020/07/20/200720jspi/">자료구조2 : Stack클래스, Queue인터페이스, Map인터페이스</a></li></ol><h2 id="🌷model1-홈페이지만들기"><a href="#🌷model1-홈페이지만들기" class="headerlink" title="🌷model1 홈페이지만들기"></a>🌷model1 홈페이지만들기</h2><ol><li><a href="https://sowon-dev.github.io/2020/07/29/200729jspi/">홈페이지만들기1 : 프로젝트 시작 설정 및 자바빈생성과 DB연결</a></li><li><a href="https://sowon-dev.github.io/2020/07/30/200730jspi/">홈페이지만들기2 : 아이디중복체크 포함한 회원가입기능 구현</a></li><li><a href="https://sowon-dev.github.io/2020/07/30/200730jspi2/">홈페이지만들기3 : 로그인/로그아웃 기능 구현</a></li><li><a href="https://sowon-dev.github.io/2020/08/03/200803jspi/">홈페이지만들기4 : 게시판글쓰기구현</a></li><li><a href="https://sowon-dev.github.io/2020/08/04/200804jspi/">홈페이지만들기5 : 게시판에 글목록표시구현</a></li></ol><h2 id="🌷JQuery"><a href="#🌷JQuery" class="headerlink" title="🌷JQuery"></a>🌷JQuery</h2><ol><li><a href="https://sowon-dev.github.io/2020/08/04/200804jspi2/">JQuery1 : JQuery 사용설정, 선택자, css()</a></li><li><a href="https://sowon-dev.github.io/2020/08/05/200805jspi/">JQuery2 : attr(), html()와 text(), append()와 prepend()</a></li><li><a href="https://sowon-dev.github.io/2020/08/05/200805jspi2/">JQuery3 : setInterval()와 clearInteval(), CDATA VS PCDATA</a></li><li><a href="https://sowon-dev.github.io/2020/08/06/200806jspi/">JQuery4 : click(), bind(), event.preventDefault(), unbind(), keyup(), 유효성체크(자바스크립트 vs 제이쿼리)</a></li><li><a href="https://sowon-dev.github.io/2020/08/06/200806jspi2/">JQuery5 : 유효성체크(자바스크립트 vs 제이쿼리), 제이쿼리 기본효과</a></li><li><a href="https://sowon-dev.github.io/2020/08/07/200807jspi/">JQuery6 : innerfade 라이브러리, animate(속성, 속도, 콜백함수)</a></li></ol><h2 id="🌷Ajax"><a href="#🌷Ajax" class="headerlink" title="🌷Ajax"></a>🌷Ajax</h2><ol><li><a href="https://sowon-dev.github.io/2020/08/07/200807jspi2/">Ajax : Ajax특징, XMLHttpRequest클래스, txt 페이지 처리</a></li><li><a href="https://sowon-dev.github.io/2020/08/10/200810jspi/">Ajax : xml처리, json처리</a></li><li><a href="https://sowon-dev.github.io/2020/08/10/200810jspi2/">Ajax : DB데이터를 불러와서 json형태로 변경하여 출력하기</a></li></ol><h2 id="🌷JSTL과-EL"><a href="#🌷JSTL과-EL" class="headerlink" title="🌷JSTL과 EL"></a>🌷JSTL과 EL</h2><ol><li><a href="https://sowon-dev.github.io/2020/08/11/200811jspi/">JSTL과 EL : JSTL과 EL개념, CORE 라이브러리(out)</a></li><li><a href="https://sowon-dev.github.io/2020/08/11/200811jspi2/">JSTL과 EL : CORE 라이브러리(set)</a></li><li><a href="https://sowon-dev.github.io/2020/08/12/200812jspi/">JSTL과 EL : CORE 라이브러리(if, forEach, forTokens, choose)</a></li><li><a href="https://sowon-dev.github.io/2020/08/12/200812jspi2/">JSTL과 EL : fmt 라이브러리(formatDate, formatNumber)</a></li><li><a href="https://sowon-dev.github.io/2020/08/13/200813jspi/">JSTL과 EL : EL태그로 동일한 name의 파라미터를 EL태그로 쉽게 가져오기</a></li><li><a href="https://sowon-dev.github.io/2020/08/14/200814jspi/">JSTL과 EL : EL태그 연산자</a></li><li><a href="https://sowon-dev.github.io/2020/08/14/200814jspi2/">EL과 Servlet : RequestDispatcher.forward 로 페이지 이동 후 데이터별 출력방법</a></li></ol><h2 id="🌷model2-MVC패턴-쇼핑몰만들기"><a href="#🌷model2-MVC패턴-쇼핑몰만들기" class="headerlink" title="🌷model2(MVC패턴) 쇼핑몰만들기"></a>🌷model2(MVC패턴) 쇼핑몰만들기</h2><ol><li><a href="https://sowon-dev.github.io/2020/08/17/200817jspi/">Servlet : Servlet용어정리, model1과 model2(MVC구조) 개발방식 비교</a></li></ol><h3 id="쇼핑몰회원관리"><a href="#쇼핑몰회원관리" class="headerlink" title="쇼핑몰회원관리"></a>쇼핑몰회원관리</h3><ol><li><a href="https://sowon-dev.github.io/2020/08/17/200817jspi2/">Servlet회원관리1: 기본설정 및 가상주소생성</a></li><li><a href="https://sowon-dev.github.io/2020/08/19/200819jspi/">Servlet회원관리2: 회원가입</a></li><li><a href="https://sowon-dev.github.io/2020/08/19/200819jspi2/">Servlet회원관리3: 로그인</a></li><li><a href="https://sowon-dev.github.io/2020/08/19/200819jspi3/">Servlet회원관리4: 메인페이지와 로그아웃</a></li><li><a href="https://sowon-dev.github.io/2020/08/27/200827jspi/">Servlet회원관리5: 회원정보조회</a></li><li><a href="https://sowon-dev.github.io/2020/08/27/200827jspi2/">Servlet회원관리6: 회원탈퇴</a></li><li><a href="https://sowon-dev.github.io/2020/08/31/200831jspi/">Servlet회원관리7: 회원전체목록조회(관리자기능)</a></li></ol><h3 id="게시판"><a href="#게시판" class="headerlink" title="게시판"></a>게시판</h3><ol><li><a href="https://sowon-dev.github.io/2020/08/31/200831jspi2/">Servlet게시판1: 기초</a></li><li><a href="https://sowon-dev.github.io/2020/09/01/200901jspi/">Servlet게시판2: 게시판 글쓰기</a></li><li><a href="https://sowon-dev.github.io/2020/09/01/200901jspi2/">Servlet게시판3: 게시판 리스트·게시글전체목록·페이징처리</a></li><li><a href="https://sowon-dev.github.io/2020/09/03/200903jspi/">Servlet게시판4: 글 내용보기</a></li><li><a href="https://sowon-dev.github.io/2020/09/03/200903jspi2/">Servlet게시판5: 글 수정하기</a></li><li><a href="https://sowon-dev.github.io/2020/09/07/200907jspi/">Servlet게시판6: 글 삭제하기</a></li><li><a href="https://sowon-dev.github.io/2020/09/07/200907jspi2/">Servlet게시판7: 답글하기</a></li><li><a href="https://sowon-dev.github.io/2020/09/07/200907jspi3/">Servlet게시판8: 파일업로드·파일보기</a></li></ol><h3 id="관리자전용-상품목록과-등록게시판"><a href="#관리자전용-상품목록과-등록게시판" class="headerlink" title="관리자전용 상품목록과 등록게시판"></a>관리자전용 상품목록과 등록게시판</h3><ol><li><a href="https://sowon-dev.github.io/2020/09/07/200907jspi4/">Servlet관리자전용상품1 : 기초</a></li><li><a href="https://sowon-dev.github.io/2020/09/07/200907jspi5/">Servlet관리자전용상품2 : 상품등록</a></li><li><a href="https://sowon-dev.github.io/2020/09/08/200908jspi/">Servlet관리자전용상품3 : 상품목록·상품리스트</a></li><li><a href="https://sowon-dev.github.io/2020/09/09/200909jspi/">Servlet관리자전용상품4 : 상품수정·인기상품처리</a></li><li><a href="https://sowon-dev.github.io/2020/09/09/200909jspi2/">Servlet관리자전용상품5 : 상품삭제</a></li></ol><h3 id="일반유저용-상품목록"><a href="#일반유저용-상품목록" class="headerlink" title="일반유저용 상품목록"></a>일반유저용 상품목록</h3><ol><li><a href="https://sowon-dev.github.io/2020/09/10/200910jspi/">Servlet일반상품1 : 기초</a></li><li><a href="https://sowon-dev.github.io/2020/09/10/200910jspi2/">Servlet일반상품2 : 카테고리별 상품목록·상품리스트</a></li><li><a href="https://sowon-dev.github.io/2020/09/15/200915jspi/">Servlet일반상품3 : 상품상세정보</a></li></ol><h3 id="장바구니"><a href="#장바구니" class="headerlink" title="장바구니"></a>장바구니</h3><ol><li><a href="https://sowon-dev.github.io/2020/09/15/200915jspi2/">Servlet장바구니1 : 기초</a></li><li><a href="https://sowon-dev.github.io/2020/09/15/200915jspi3basket/">Servlet장바구니2 : 장바구니에 담기</a></li><li><a href="https://sowon-dev.github.io/2020/09/15/200915jspi4/">Servlet장바구니3 : 장바구니리스트, 장바구니에서 상품삭제</a></li></ol><h3 id="구매하기"><a href="#구매하기" class="headerlink" title="구매하기"></a>구매하기</h3><ol><li><a href="https://sowon-dev.github.io/2020/09/16/200916jspi/">Servlet구매하기1 : 기초</a></li><li><a href="https://sowon-dev.github.io/2020/09/17/200917jspi/">Servlet구매하기2 : 구매하기</a></li><li><a href="https://sowon-dev.github.io/2020/09/22/200922jspi/">Servlet구매하기3 : 주문목록</a></li><li><a href="https://sowon-dev.github.io/2020/09/22/200922jspi2/">Servlet구매하기4 : 주문상세정보페이지</a></li></ol><h3 id="관리자용-주문리스트"><a href="#관리자용-주문리스트" class="headerlink" title="관리자용 주문리스트"></a>관리자용 주문리스트</h3><ol><li><a href="https://sowon-dev.github.io/2020/09/23/200923jspi/">Servlet관리자용주문목록1 : 기초</a></li><li><a href="https://sowon-dev.github.io/2020/09/23/200923jspi-1/">Servlet관리자용주문목록2 : 고객주문목록</a></li><li><a href="https://sowon-dev.github.io/2020/09/23/200923jspi-3/">Servlet관리자용주문목록3 : 고객주문목록에서 수정</a></li></ol>]]></content:encoded>
      
      
      <category domain="https://sowon-dev.github.io/categories/JSP/">JSP</category>
      
      
      <category domain="https://sowon-dev.github.io/tags/ITWILL-JAVA/">ITWILL(JAVA)</category>
      
      <category domain="https://sowon-dev.github.io/tags/List/">List</category>
      
      
      <comments>https://sowon-dev.github.io/2020/11/17/jspList/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>[ITWILL : DB] DB전체목록List</title>
      <link>https://sowon-dev.github.io/2020/11/16/DBList/</link>
      <guid>https://sowon-dev.github.io/2020/11/16/DBList/</guid>
      <pubDate>Mon, 16 Nov 2020 00:00:00 GMT</pubDate>
      
      <description>&lt;h2 id=&quot;🌱리눅스와-SQL&quot;&gt;&lt;a href=&quot;#🌱리눅스와-SQL&quot; class=&quot;headerlink&quot; title=&quot;🌱리눅스와 SQL&quot;&gt;&lt;/a&gt;🌱리눅스와 SQL&lt;/h2&gt;&lt;ol&gt;
&lt;li&gt;&lt;a href=&quot;https://sowon-dev.github.io/2020/06/01/200602dbi/&quot;&gt;간단 리눅스명령어(복붙포함), Oracle 명령어, DB작동방법, 접속순서&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://sowon-dev.github.io/2020/06/15/200616dbi/&quot;&gt;virtualBox로 가상컴퓨터만들어서 리눅스Linux 설치하기&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://sowon-dev.github.io/2020/06/18/200619dbi/&quot;&gt;CUI환경 VS GUI환경, 리눅스명령어자세히, vi단축키&lt;/a&gt;</description>
      
      
      
      <content:encoded><![CDATA[<h2 id="🌱리눅스와-SQL"><a href="#🌱리눅스와-SQL" class="headerlink" title="🌱리눅스와 SQL"></a>🌱리눅스와 SQL</h2><ol><li><a href="https://sowon-dev.github.io/2020/06/01/200602dbi/">간단 리눅스명령어(복붙포함), Oracle 명령어, DB작동방법, 접속순서</a></li><li><a href="https://sowon-dev.github.io/2020/06/15/200616dbi/">virtualBox로 가상컴퓨터만들어서 리눅스Linux 설치하기</a></li><li><a href="https://sowon-dev.github.io/2020/06/18/200619dbi/">CUI환경 VS GUI환경, 리눅스명령어자세히, vi단축키</a><a id="more"></a></li><li><a href="https://sowon-dev.github.io/2020/07/09/200710dbi/">SQL DEVELOPER사용방법</a></li></ol><h2 id="🌱DB와-SQL개념"><a href="#🌱DB와-SQL개념" class="headerlink" title="🌱DB와 SQL개념"></a>🌱DB와 SQL개념</h2><ol><li><a href="https://sowon-dev.github.io/2020/05/28/200529dbi/">DB기초이론, DBMS</a></li><li><a href="https://sowon-dev.github.io/2020/06/02/200602dbi2/">데이터베이스기초활용</a></li><li><a href="https://sowon-dev.github.io/2020/06/05/200605dbi/">DDL vs DML vs DCL</a></li><li><a href="https://sowon-dev.github.io/2020/06/07/200608dbi/">제약조건의 컬럼레벨과 테이블레벨문법, 제약조건 5가지, 버퍼에 있는 자주 사용할 쿼리구문을 저장하는 방법</a></li><li><a href="https://sowon-dev.github.io/2020/06/09/200610dbi/">select as from where, order by, 동일유저 동시접속 가능, 트랜잭션 commit과 rollback</a></li><li><a href="https://sowon-dev.github.io/2020/07/16/200717dbi/">트랜잭션(Transaction), 치환변수, save명령어, 리소스부족에러발생시</a></li><li><a href="https://sowon-dev.github.io/2020/08/03/200804dbi/">Data Dictionary</a></li></ol><h2 id="🌱Select-구문"><a href="#🌱Select-구문" class="headerlink" title="🌱Select 구문"></a>🌱Select 구문</h2><ol><li><a href="https://sowon-dev.github.io/2020/06/22/200623dbi/">Select 구문을 사용한 데이터 검색, null VS 0 VS 공백, Distinct</a></li><li><a href="https://sowon-dev.github.io/2020/06/25/200626dbi/">테이블 전체목록조회, 테이블구조조회, WHERE(조건문)절</a></li><li><a href="https://sowon-dev.github.io/2020/06/25/200626dbi2/">Order by 정렬</a></li></ol><h2 id="🌱단일행함수"><a href="#🌱단일행함수" class="headerlink" title="🌱단일행함수"></a>🌱단일행함수</h2><ol><li><a href="https://sowon-dev.github.io/2020/06/30/200630dbi/">단일행함수 : 문자함수</a></li><li><a href="https://sowon-dev.github.io/2020/06/30/200630dbi2/">단일행함수 : 숫자함수, 날짜함수</a></li><li><a href="https://sowon-dev.github.io/2020/06/30/200630dbi3/">단일행함수 : 변환함수, 일반함수</a></li><li><a href="https://sowon-dev.github.io/2020/08/10/200811dbi/">단일행함수 : 조건부 표현식</a></li></ol><h2 id="🌱여러행함수"><a href="#🌱여러행함수" class="headerlink" title="🌱여러행함수"></a>🌱여러행함수</h2><ol><li><a href="https://sowon-dev.github.io/2020/06/30/200630dbi4/">여러행함수 : 그룹함수</a></li><li><a href="https://sowon-dev.github.io/2020/07/07/200707dbi/">여러행함수 : Group by절, Having절</a></li></ol><h2 id="🌱중요-구문"><a href="#🌱중요-구문" class="headerlink" title="🌱중요 구문"></a>🌱중요 구문</h2><ol><li><a href="https://sowon-dev.github.io/2020/07/09/200710dbi2/">JOIN</a></li><li><a href="https://sowon-dev.github.io/2020/07/13/200714dbi/">Subquery1: Subquery개념, 중첩Subquery</a></li><li><a href="https://sowon-dev.github.io/2020/08/23/200824dbi/">Subquery2: Inlineview, Scalar Subquery</a></li><li><a href="https://sowon-dev.github.io/2020/08/24/200825dbi/">Subquery3: exists연산자, not exists연산자</a></li><li><a href="https://sowon-dev.github.io/2020/08/24/200825dbi/">Subquery4: with절</a></li><li><a href="https://sowon-dev.github.io/2020/07/28/200729dbi3/">SQL 기억해야 할 쿼리</a></li><li><a href="https://sowon-dev.github.io/2020/08/19/200820dbi/">Top-N분석</a></li></ol><h2 id="🌱데이터조작어-DML-데이터정의어-DDL"><a href="#🌱데이터조작어-DML-데이터정의어-DDL" class="headerlink" title="🌱데이터조작어 (DML) / 데이터정의어 (DDL)"></a>🌱데이터조작어 (DML) / 데이터정의어 (DDL)</h2><ol><li><a href="https://sowon-dev.github.io/2020/07/13/200714dbi2/">데이터조작어DML : insert/update/delete구문</a></li><li><a href="https://sowon-dev.github.io/2020/07/20/200721dbi/">데이터정의어DDL : table 생성 table 복사, varchar2와 varchar와 char비교</a></li><li><a href="https://sowon-dev.github.io/2020/07/23/200724dbi/">데이터정의어DDL : 테이블수정(컬럼수정, 제약조건수정, 컬럼명수정, 제약조건명수정), 테이블명변경, 테이블삭제, 테이블절단, truncate과 delete과 drop차이</a></li></ol><h2 id="🌱SQL의-OBJECT-종류"><a href="#🌱SQL의-OBJECT-종류" class="headerlink" title="🌱SQL의 OBJECT 종류"></a>🌱SQL의 OBJECT 종류</h2><ol><li><a href="https://sowon-dev.github.io/2020/07/27/200728dbi/">SQL의 OBJECT종류 : view</a></li><li><a href="https://sowon-dev.github.io/2020/07/28/200729dbi/">SQL의 OBJECT종류 : 시퀀스(Sequence)</a></li><li><a href="https://sowon-dev.github.io/2020/07/28/200729dbi2/">SQL의 OBJECT종류 : 인덱스(Index), 시노님(Synonym)</a></li></ol><h2 id="🌱DB구현"><a href="#🌱DB구현" class="headerlink" title="🌱DB구현"></a>🌱DB구현</h2><ol><li><a href="https://sowon-dev.github.io/2020/08/25/200826dbi/">Oracle DB구조1 : Database</a></li><li><a href="https://sowon-dev.github.io/2020/08/27/200828dbi/">Oracle DB구조2 : Instance의 SGA메모리구조</a></li><li><a href="https://sowon-dev.github.io/2020/08/31/200831dbi/">Oracle DB구조3 : Instance의 Background process</a></li><li><a href="https://sowon-dev.github.io/2020/08/31/200901dbi2/">Oracle DB구조4 : 구조 완벽정리, 상활별 오라클 DB 순서</a></li></ol><h2 id="🌱DB관리"><a href="#🌱DB관리" class="headerlink" title="🌱DB관리"></a>🌱DB관리</h2><ol><li><a href="https://sowon-dev.github.io/2020/09/09/200911dbi/">Oracle DB생성방법 2가지, Oracle DB Tool, Parameterfile 유형</a></li><li><a href="https://sowon-dev.github.io/2020/09/14/200914dbi/">오라클의 Database 켜고 끄기</a></li><li><a href="https://sowon-dev.github.io/2020/09/18/200918dbi/">오라클의 Datafile 관리하기</a></li><li><a href="https://sowon-dev.github.io/2020/09/21/200921dbi/">DB유저관리 : user 생성, 권한부여</a></li><li><a href="https://sowon-dev.github.io/2020/09/21/200921dbi/">DB유저관리 : user 생성, 권한부여</a></li><li><a href="https://sowon-dev.github.io/2020/09/22/200922dbi/">데이터충돌, DeadLock</a></li><li><a href="https://sowon-dev.github.io/2020/09/22/200922dbi2/">DB fail 유형</a></li></ol>]]></content:encoded>
      
      
      <category domain="https://sowon-dev.github.io/categories/Database/">Database</category>
      
      <category domain="https://sowon-dev.github.io/categories/Database/Oracle/">Oracle</category>
      
      
      <category domain="https://sowon-dev.github.io/tags/ITWILL-JAVA/">ITWILL(JAVA)</category>
      
      <category domain="https://sowon-dev.github.io/tags/Oracle/">Oracle</category>
      
      <category domain="https://sowon-dev.github.io/tags/List/">List</category>
      
      
      <comments>https://sowon-dev.github.io/2020/11/16/DBList/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>Servlet관리자용주문목록3 : 고객주문목록에서 수정</title>
      <link>https://sowon-dev.github.io/2020/09/23/200923jspi-3/</link>
      <guid>https://sowon-dev.github.io/2020/09/23/200923jspi-3/</guid>
      <pubDate>Wed, 23 Sep 2020 08:34:21 GMT</pubDate>
      
      <description>&lt;h2 id=&quot;AdminOrderFrontController-java의-doProcess-의-주소비교-후-처리부분에-코드-추가&quot;&gt;&lt;a href=&quot;#AdminOrderFrontController-java의-doProcess-의-주소비교-후-처리부분에-코드-추가&quot; class=&quot;headerlink&quot; title=&quot;AdminOrderFrontController.java의 doProcess()의 주소비교 후 처리부분에 코드 추가&quot;&gt;&lt;/a&gt;&lt;code&gt;AdminOrderFrontController.java&lt;/code&gt;의 doProcess()의 주소비교 후 처리부분에 코드 추가&lt;/h2&gt;</description>
      
      
      
      <content:encoded><![CDATA[<h2 id="AdminOrderFrontController-java의-doProcess-의-주소비교-후-처리부분에-코드-추가"><a href="#AdminOrderFrontController-java의-doProcess-의-주소비교-후-처리부분에-코드-추가" class="headerlink" title="AdminOrderFrontController.java의 doProcess()의 주소비교 후 처리부분에 코드 추가"></a><code>AdminOrderFrontController.java</code>의 doProcess()의 주소비교 후 처리부분에 코드 추가</h2><a id="more"></a><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//관리자용 주문목록 수정</span></span><br><span class="line">&#125;<span class="keyword">else</span> <span class="keyword">if</span>(command.equals(<span class="string">"/AdminOrderModify.ao"</span>))&#123;</span><br><span class="line">System.out.println(<span class="string">"C : AdminOrderModify.ao 호출"</span>);</span><br><span class="line">action = <span class="keyword">new</span> AdminOrderModifyAction();</span><br><span class="line"><span class="keyword">try</span>&#123; forward = action.execute(request, response);</span><br><span class="line">&#125;<span class="keyword">catch</span>(Exception e) &#123;e.printStackTrace();&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><br><br><br></p><h2 id="AdminOrderModifyAction-java-생성"><a href="#AdminOrderModifyAction-java-생성" class="headerlink" title="AdminOrderModifyAction.java 생성"></a><code>AdminOrderModifyAction.java</code> 생성</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><p><br><br><br></p><h2 id="AdminOrderDAO-java에-메서드-코드-추가"><a href="#AdminOrderDAO-java에-메서드-코드-추가" class="headerlink" title="AdminOrderDAO.java에 ()메서드 코드 추가"></a><code>AdminOrderDAO.java</code>에 ()메서드 코드 추가</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><p><br><br><br></p><h2 id="AdminOrderDAOImpl-java에-메서드-코드-추가"><a href="#AdminOrderDAOImpl-java에-메서드-코드-추가" class="headerlink" title="AdminOrderDAOImpl.java에 ()메서드 코드 추가"></a><code>AdminOrderDAOImpl.java</code>에 ()메서드 코드 추가</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><p><br><br><br></p><h2 id="jsp-생성"><a href="#jsp-생성" class="headerlink" title=".jsp 생성"></a><code>.jsp</code> 생성</h2><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content:encoded>
      
      
      <category domain="https://sowon-dev.github.io/categories/JSP/">JSP</category>
      
      
      <category domain="https://sowon-dev.github.io/tags/TIL/">TIL</category>
      
      <category domain="https://sowon-dev.github.io/tags/ITWILL-JAVA/">ITWILL(JAVA)</category>
      
      
      <comments>https://sowon-dev.github.io/2020/09/23/200923jspi-3/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>자바 클래스(객체) vs 추상클래스 vs 인터페이스</title>
      <link>https://sowon-dev.github.io/2020/09/23/200923jspi-2/</link>
      <guid>https://sowon-dev.github.io/2020/09/23/200923jspi-2/</guid>
      <pubDate>Wed, 23 Sep 2020 05:55:25 GMT</pubDate>
      
      <description>&lt;h2 id=&quot;클래스&quot;&gt;&lt;a href=&quot;#클래스&quot; class=&quot;headerlink&quot; title=&quot;클래스&quot;&gt;&lt;/a&gt;클래스&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;객체를 생성하기위한 클래스(설계도)&lt;/li&gt;
&lt;li&gt;사용하기위해서는 반드시 객체 생성 = 인스턴스화 = 메모리에 로드한다.</description>
      
      
      
      <content:encoded><![CDATA[<h2 id="클래스"><a href="#클래스" class="headerlink" title="클래스"></a>클래스</h2><ul><li>객체를 생성하기위한 클래스(설계도)</li><li>사용하기위해서는 반드시 객체 생성 = 인스턴스화 = 메모리에 로드한다.<a id="more"></a></li><li>구성요소 3가지<ul><li>변수 : 속성</li><li>메서드 : 동작</li><li>생성자 : 초기화</li></ul></li><li>상속 가능 : 확장 extends 사용가능 </li><li>관계 : 다중상속 불가</li><li>업캐스팅 가능</li></ul><p><br><br><br></p><h2 id="추상클래스"><a href="#추상클래스" class="headerlink" title="추상클래스"></a>추상클래스</h2><ul><li>클래스</li><li>구성요소 3가지<ul><li>변수</li><li>상수</li><li>일반메서드</li><li>추상메서드 </li><li>생성자 </li></ul></li><li>상속 가능</li><li>관계 : 다중상속 불가</li><li>업캐스팅 가능</li><li>추상클래시끼리 상속 가능? 가능 extends를 사용</li><li>상속 후 추상메서드 오버라이딩(구현)해서 사용해야한다.</li></ul><p><br><br><br></p><h2 id="인터페이스"><a href="#인터페이스" class="headerlink" title="인터페이스"></a>인터페이스</h2><ul><li>인터페이스는 클래스가 아니라서 구성요소가 다르다</li><li>구성요소 2가지<ul><li>상수 </li><li>추상메서드</li></ul></li><li>상속 가능 =&gt; 구현 implements 사용가능 </li><li>인터페이스끼리 상속 가능한가? 가능 extends를 사용</li><li>관계 : 다중구현 가능</li><li>추상메서드 : [public abstract]</li><li>인터페이스안의 <strong>모든 메서드의 접근지정자</strong>는 default가 아닌 <code>public</code>이다.</li><li>상속 후 추상메서드 오버라이딩(구현)해서 사용해야한다.</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// [] 대괄호는 생략이 가능하다는 의미이다.</span></span><br><span class="line"><span class="comment">// 추상메서드 선언방법 중 실무에서는 4번째방법으로 선언을 많이 한다</span></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">interface</span> <span class="title">A</span></span>&#123;</span><br><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> 변수명;</span><br><span class="line">[<span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span>] 변수명;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">abstract</span> <span class="title">method1</span><span class="params">()</span></span>;</span><br><span class="line">[<span class="keyword">public</span>] <span class="function"><span class="keyword">abstract</span> <span class="title">method1</span><span class="params">()</span></span>;</span><br><span class="line">[<span class="keyword">public</span> <span class="keyword">abstract</span>] method1();</span><br><span class="line"><span class="keyword">public</span> [<span class="keyword">abstract</span>] method1();</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><br><br><br></p><h2 id="비교표"><a href="#비교표" class="headerlink" title="비교표"></a>비교표</h2><table><thead><tr><th align="center">비교</th><th align="center">클래스</th><th align="center">추상클래스</th><th align="center">인터페이스</th></tr></thead><tbody><tr><td align="center">클래스인가?</td><td align="center">Y</td><td align="center">Y</td><td align="center">N</td></tr><tr><td align="center">구성요소</td><td align="center">변수, 메서드, 생성자</td><td align="center">변수, 상수, 일반메서드, 추상메서드, 생성자</td><td align="center">상수, 추상메서드</td></tr><tr><td align="center">관계</td><td align="center">다중상속 불가능</td><td align="center">다중상속 불가능</td><td align="center">다중구현 가능</td></tr><tr><td align="center">상속가능여부</td><td align="center">가능 extends(확장)</td><td align="center">가능 extends(확장)</td><td align="center">가능 implements(구현)</td></tr><tr><td align="center">업캐스팅가능여부</td><td align="center">Y</td><td align="center">Y</td><td align="center">Y</td></tr></tbody></table><ul><li>참고링크 <a href="https://sowon-dev.github.io/2020/07/15/200715javai/">기본클래스 이외에 자바 구성요소1 : 추상클래스, 인터페이스</a></li></ul>]]></content:encoded>
      
      
      <category domain="https://sowon-dev.github.io/categories/JSP/">JSP</category>
      
      
      <category domain="https://sowon-dev.github.io/tags/TIL/">TIL</category>
      
      <category domain="https://sowon-dev.github.io/tags/ITWILL-JAVA/">ITWILL(JAVA)</category>
      
      
      <comments>https://sowon-dev.github.io/2020/09/23/200923jspi-2/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>Servlet관리자용주문목록2 : 고객주문목록</title>
      <link>https://sowon-dev.github.io/2020/09/23/200923jspi-1/</link>
      <guid>https://sowon-dev.github.io/2020/09/23/200923jspi-1/</guid>
      <pubDate>Wed, 23 Sep 2020 05:14:46 GMT</pubDate>
      
      <description>&lt;h2 id=&quot;AdminOrderFrontController-java의-doProcess-의-주소비교-후-처리부분에-코드-추가&quot;&gt;&lt;a href=&quot;#AdminOrderFrontController-java의-doProcess-의-주소비교-후-처리부분에-코드-추가&quot; class=&quot;headerlink&quot; title=&quot;AdminOrderFrontController.java의 doProcess()의 주소비교 후 처리부분에 코드 추가&quot;&gt;&lt;/a&gt;&lt;code&gt;AdminOrderFrontController.java&lt;/code&gt;의 doProcess()의 주소비교 후 처리부분에 코드 추가&lt;/h2&gt;</description>
      
      
      
      <content:encoded><![CDATA[<h2 id="AdminOrderFrontController-java의-doProcess-의-주소비교-후-처리부분에-코드-추가"><a href="#AdminOrderFrontController-java의-doProcess-의-주소비교-후-처리부분에-코드-추가" class="headerlink" title="AdminOrderFrontController.java의 doProcess()의 주소비교 후 처리부분에 코드 추가"></a><code>AdminOrderFrontController.java</code>의 doProcess()의 주소비교 후 처리부분에 코드 추가</h2><a id="more"></a><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 주소에 따른 처리 구분 (주소 매핑후 이동)</span></span><br><span class="line"><span class="keyword">if</span>(command.equals(<span class="string">"/AdminOrderList.ao"</span>))&#123;</span><br><span class="line">action = <span class="keyword">new</span> AdminOrderListAction();</span><br><span class="line"><span class="keyword">try</span>&#123; forward = action.execute(request, response);</span><br><span class="line">&#125;<span class="keyword">catch</span>(Exception e) &#123;e.printStackTrace();&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><br><br><br></p><h2 id="AdminOrderListAction-java-생성"><a href="#AdminOrderListAction-java-생성" class="headerlink" title="AdminOrderListAction.java 생성"></a><code>AdminOrderListAction.java</code> 생성</h2><ul><li>if(id == null || id.equals(“admin”)) 에서 null을 먼저 비교해야한다. <code>id.equals(&quot;admin&quot;)</code> 비교하는 경우 id가 null일때 <code>id.equals(null)</code>이 실행되면서 에러가 발생한다. 따라서 <code>id == null</code>을 먼저 비교해야한다.</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">AdminOrderListAction</span> <span class="keyword">implements</span> <span class="title">Action</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> ActionForward <span class="title">execute</span><span class="params">(HttpServletRequest request, HttpServletResponse response)</span> </span></span><br><span class="line"><span class="function"><span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line"><span class="comment">// 한글처리</span></span><br><span class="line">request.setCharacterEncoding(<span class="string">"UTF-8"</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 관리자 ID해당하는 세션값 제어</span></span><br><span class="line">HttpSession session = request.getSession();</span><br><span class="line">String id = (String) session.getAttribute(<span class="string">"id"</span>);</span><br><span class="line">ActionForward forward = <span class="keyword">new</span> ActionForward();</span><br><span class="line"><span class="keyword">if</span>(id == <span class="keyword">null</span> || !id.equals(<span class="string">"admin"</span>))&#123;</span><br><span class="line">forward.setPath(<span class="string">"./MemberLogin.me"</span>);</span><br><span class="line">forward.setRedirect(<span class="keyword">true</span>);</span><br><span class="line"><span class="keyword">return</span> forward;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// AdminOrderDAO 객체 생성 -&gt; 저장 한 줄 코딩</span></span><br><span class="line">AdminOrderDAO aodao = <span class="keyword">new</span> AdminOrderDAOImpl(); <span class="comment">//업캐스팅</span></span><br><span class="line">request.setAttribute(<span class="string">"AdminOrderList"</span>, aodao.getAdminOrderList());</span><br><span class="line"></span><br><span class="line"><span class="comment">// 페이지 이동</span></span><br><span class="line">forward.setPath(<span class="string">"./admingoods/admin_order_list.jsp"</span>);</span><br><span class="line">forward.setRedirect(<span class="keyword">false</span>);</span><br><span class="line"><span class="keyword">return</span> forward;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><br><br><br></p><h2 id="AdminOrderDAOImpl-java에-getAdminOrderList-메서드-코드-추가"><a href="#AdminOrderDAOImpl-java에-getAdminOrderList-메서드-코드-추가" class="headerlink" title="AdminOrderDAOImpl.java에 getAdminOrderList()메서드 코드 추가"></a><code>AdminOrderDAOImpl.java</code>에 getAdminOrderList()메서드 코드 추가</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 주문목록 가져오기</span></span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> List <span class="title">getAdminOrderList</span><span class="params">()</span> </span>&#123;</span><br><span class="line">List AdminOrderList = <span class="keyword">new</span> ArrayList();</span><br><span class="line"><span class="keyword">try</span> &#123; </span><br><span class="line">getCon();</span><br><span class="line">sql=<span class="string">"select o_trade_num,o_g_name,o_g_amount,o_g_size,o_g_color,"</span></span><br><span class="line">+ <span class="string">"sum(o_sum_money) as o_sum_money,"</span></span><br><span class="line">+ <span class="string">"o_trade_type,o_trans_num,o_date,o_status,o_m_id "</span></span><br><span class="line">+ <span class="string">"from itwill_order "</span></span><br><span class="line">+ <span class="string">"group by o_trade_num "</span></span><br><span class="line">+ <span class="string">"order by o_trade_num"</span>;</span><br><span class="line">pstmt = con.prepareStatement(sql);</span><br><span class="line">rs = pstmt.executeQuery();</span><br><span class="line"><span class="keyword">while</span>(rs.next())&#123;</span><br><span class="line">OrderDTO odto = <span class="keyword">new</span> OrderDTO();</span><br><span class="line">odto.setO_date(rs.getDate(<span class="string">"o_date"</span>));</span><br><span class="line">odto.setO_g_amount(rs.getInt(<span class="string">"o_g_amount"</span>));</span><br><span class="line">odto.setO_g_color(rs.getString(<span class="string">"o_g_color"</span>));</span><br><span class="line">odto.setO_g_name(rs.getString(<span class="string">"o_g_name"</span>));</span><br><span class="line">odto.setO_g_size(rs.getString(<span class="string">"o_g_size"</span>));</span><br><span class="line">odto.setO_trade_num(rs.getString(<span class="string">"o_trade_num"</span>));</span><br><span class="line">odto.setO_trans_num(rs.getString(<span class="string">"o_trans_num"</span>));</span><br><span class="line">odto.setO_sum_money(rs.getInt(<span class="string">"o_sum_money"</span>));</span><br><span class="line">odto.setO_status(rs.getInt(<span class="string">"o_status"</span>));</span><br><span class="line">odto.setO_trade_type(rs.getString(<span class="string">"o_trade_type"</span>));</span><br><span class="line">odto.setO_m_id(rs.getString(<span class="string">"o_m_id"</span>));</span><br><span class="line"></span><br><span class="line">AdminOrderList.add(odto);</span><br><span class="line">&#125;</span><br><span class="line">&#125;<span class="keyword">catch</span>(Exception e)&#123;</span><br><span class="line">e.printStackTrace();</span><br><span class="line">&#125; <span class="keyword">finally</span> &#123;</span><br><span class="line">closeDB();</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> AdminOrderList;</span><br><span class="line">&#125;<span class="comment">//end of getAdminOrderList()</span></span><br></pre></td></tr></table></figure><p><br><br><br></p><h2 id="admin-order-list-jsp-생성"><a href="#admin-order-list-jsp-생성" class="headerlink" title="admin_order_list.jsp 생성"></a><code>admin_order_list.jsp</code> 생성</h2><ul><li>if-else보다 swith가 더 효율적이다. if-else는 모든 연산을 다 해야하니까</li><li>if-else를 쓸꺼면 꼭 else를 챙겨야한다. 모든 예외상황을 다 관리해야하니까</li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">%</span></span></span><br><span class="line"><span class="tag"><span class="attr">System.out.println</span>("<span class="attr">V</span> <span class="attr">:</span> 관리자 주문목록 처리 페이지");</span></span><br><span class="line">List&lt;OrderDTO&gt; adminOrderList = (List&lt;OrderDTO&gt;) request.getAttribute("adminOrderList");</span><br><span class="line">%&gt;</span><br><span class="line"><span class="tag">&lt;<span class="name">table</span> <span class="attr">border</span>=<span class="string">"1"</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">td</span>&gt;</span>주문번호<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">td</span>&gt;</span>주문자<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">td</span>&gt;</span>결재방법<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">td</span>&gt;</span>주문금액<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">td</span>&gt;</span>주문상태<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">td</span>&gt;</span>주문일시<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">td</span>&gt;</span>수정  / 삭제<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">%</span></span></span><br><span class="line"><span class="tag">  <span class="attr">for</span>(<span class="attr">OrderDTO</span> <span class="attr">odto:adminOrderList</span>)&#123;</span></span><br><span class="line"><span class="tag">  %&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">td</span>&gt;</span><span class="tag">&lt;<span class="name">%=odto.getO_trade_num()</span> %&gt;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">td</span>&gt;</span><span class="tag">&lt;<span class="name">%=odto.getO_m_id()</span> %&gt;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">td</span>&gt;</span><span class="tag">&lt;<span class="name">%=odto.getO_trade_type()</span> %&gt;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">td</span>&gt;</span><span class="tag">&lt;<span class="name">%=odto.getO_sum_money()</span> %&gt;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">%</span></span></span><br><span class="line"><span class="tag">// <span class="attr">if-else</span>보다 <span class="attr">swith</span>가 더 효율적이다<span class="attr">.</span> <span class="attr">if-else</span>는 모든 연산을 다 해야하니까</span></span><br><span class="line"><span class="tag">// <span class="attr">if-else</span>를 쓸꺼면 꼭 <span class="attr">else</span>를 챙겨야한다<span class="attr">.</span> 모든 예외상황을 다 관리해야하니까</span></span><br><span class="line"><span class="tag"><span class="attr">String</span> <span class="attr">status</span> = <span class="string">""</span>;</span></span><br><span class="line"><span class="tag"><span class="attr">if</span>(<span class="attr">odto.getO_status</span>() == <span class="string">0)&#123;</span> <span class="attr">status</span>=<span class="string">"대기중"</span>; &#125;</span></span><br><span class="line"><span class="tag"><span class="attr">else</span> <span class="attr">if</span>(<span class="attr">odto.getO_status</span>() == <span class="string">1)&#123;</span> <span class="attr">status</span>=<span class="string">"발송준비"</span>; &#125;</span></span><br><span class="line"><span class="tag"><span class="attr">else</span> <span class="attr">if</span>(<span class="attr">odto.getO_status</span>() == <span class="string">2)&#123;</span> <span class="attr">status</span>=<span class="string">"발송완료"</span>; &#125;</span></span><br><span class="line"><span class="tag"><span class="attr">else</span> <span class="attr">if</span>(<span class="attr">odto.getO_status</span>() == <span class="string">3)&#123;</span> <span class="attr">status</span>=<span class="string">"배송중"</span>; &#125;</span></span><br><span class="line"><span class="tag"><span class="attr">else</span> <span class="attr">if</span>(<span class="attr">odto.getO_status</span>() == <span class="string">4)&#123;</span> <span class="attr">status</span>=<span class="string">"배송완료"</span>; &#125;</span></span><br><span class="line"><span class="tag"><span class="attr">else</span> <span class="attr">if</span>(<span class="attr">odto.getO_status</span>() == <span class="string">5)&#123;</span> <span class="attr">status</span>=<span class="string">"주문취소"</span>; &#125;</span></span><br><span class="line"><span class="tag"><span class="attr">else</span>&#123; <span class="attr">status</span>=<span class="string">"문제발생"</span>; &#125; </span></span><br><span class="line"><span class="tag">%&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">td</span>&gt;</span> <span class="tag">&lt;<span class="name">%=status</span> %&gt;</span> <span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">td</span>&gt;</span> <span class="tag">&lt;<span class="name">%=odto.getO_date()</span> %&gt;</span> <span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">td</span>&gt;</span> <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"button"</span> <span class="attr">class</span>=<span class="string">"btn"</span> <span class="attr">value</span>=<span class="string">"수정"</span> </span></span><br><span class="line"><span class="tag">    <span class="attr">onclick</span>=<span class="string">"location.href='./AdminOrderModify.ao?trade_num=&lt;%=odto.getO_trade_num()%&gt;'"</span> &gt;</span></span><br><span class="line">     / </span><br><span class="line">    <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"button"</span> <span class="attr">class</span>=<span class="string">"btn"</span> <span class="attr">value</span>=<span class="string">"삭제"</span> </span></span><br><span class="line"><span class="tag">    <span class="attr">onclick</span>=<span class="string">"location.href="</span> &gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">%</span></span></span><br><span class="line"><span class="tag">  &#125;</span></span><br><span class="line"><span class="tag">  %&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">table</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"button"</span> <span class="attr">class</span>=<span class="string">"btn"</span> <span class="attr">value</span>=<span class="string">"메인페이지로"</span> <span class="attr">onclick</span>=<span class="string">"location.href='./Main.me'"</span>&gt;</span></span><br></pre></td></tr></table></figure>]]></content:encoded>
      
      
      <category domain="https://sowon-dev.github.io/categories/JSP/">JSP</category>
      
      
      <category domain="https://sowon-dev.github.io/tags/TIL/">TIL</category>
      
      <category domain="https://sowon-dev.github.io/tags/ITWILL-JAVA/">ITWILL(JAVA)</category>
      
      
      <comments>https://sowon-dev.github.io/2020/09/23/200923jspi-1/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>Servlet관리자용주문목록1 : 기초</title>
      <link>https://sowon-dev.github.io/2020/09/23/200923jspi/</link>
      <guid>https://sowon-dev.github.io/2020/09/23/200923jspi/</guid>
      <pubDate>Wed, 23 Sep 2020 05:01:01 GMT</pubDate>
      
      <description>&lt;h2 id=&quot;web-xml’에-코드-추가&quot;&gt;&lt;a href=&quot;#web-xml’에-코드-추가&quot; class=&quot;headerlink&quot; title=&quot;`web.xml’에 코드 추가&quot;&gt;&lt;/a&gt;`web.xml’에 코드 추가&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;&lt;code&gt;web.xml&lt;/code&gt; 코드 수정 후 꼭 서버 실행 후 주소창에 &lt;code&gt;test.bo&lt;/code&gt;해서 흰 화면이 뜨는지 확인하고 코딩할 것&lt;/li&gt;
&lt;li&gt;흰화면이 안뜨면 &lt;code&gt;web.xml&lt;/code&gt; 설정이 잘못되었다는 의미임.</description>
      
      
      
      <content:encoded><![CDATA[<h2 id="web-xml’에-코드-추가"><a href="#web-xml’에-코드-추가" class="headerlink" title="`web.xml’에 코드 추가"></a>`web.xml’에 코드 추가</h2><ul><li><code>web.xml</code> 코드 수정 후 꼭 서버 실행 후 주소창에 <code>test.bo</code>해서 흰 화면이 뜨는지 확인하고 코딩할 것</li><li>흰화면이 안뜨면 <code>web.xml</code> 설정이 잘못되었다는 의미임.<a id="more"></a></li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- Model2 주문리스트(관리자용) --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">servlet</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">servlet-name</span>&gt;</span>AdminOrderFrontController<span class="tag">&lt;/<span class="name">servlet-name</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">servlet-class</span>&gt;</span>com.itwillbs.admin.order.action.AdminOrderFrontController<span class="tag">&lt;/<span class="name">servlet-class</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">servlet</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">servlet-mapping</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">servlet-name</span>&gt;</span>AdminOrderFrontController<span class="tag">&lt;/<span class="name">servlet-name</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">url-pattern</span>&gt;</span>*.ao<span class="tag">&lt;/<span class="name">url-pattern</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">servlet-mapping</span>&gt;</span></span><br></pre></td></tr></table></figure><p><br><br><br></p><h2 id="AdminOrderFrontController-java의-doProcess-의-주소비교-후-처리부분에-코드-추가"><a href="#AdminOrderFrontController-java의-doProcess-의-주소비교-후-처리부분에-코드-추가" class="headerlink" title="AdminOrderFrontController.java의 doProcess()의 주소비교 후 처리부분에 코드 추가"></a><code>AdminOrderFrontController.java</code>의 doProcess()의 주소비교 후 처리부분에 코드 추가</h2><!-- more --><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">OrderFrontController</span> <span class="keyword">extends</span> <span class="title">HttpServlet</span> </span>&#123;</span><br><span class="line"><span class="comment">// 일반 클래스를 서블릿을 상속해서 컨트롤러 역활 할수있도록 설정</span></span><br><span class="line"><span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">doProcess</span><span class="params">(HttpServletRequest request, HttpServletResponse response)</span></span></span><br><span class="line"><span class="function"><span class="keyword">throws</span> ServletException, IOException </span>&#123;</span><br><span class="line">System.out.println(<span class="string">"doProcess() 호출 (페이지 GET/POST방식 모두 사용호출)"</span>);</span><br><span class="line"><span class="comment">// 주소 비교 (주소 매핑)</span></span><br><span class="line">System.out.println(<span class="string">"--------------@ 주소 계산 @-------------"</span>);</span><br><span class="line"><span class="comment">// 프로젝트명 + 주소</span></span><br><span class="line">String requestURI = request.getRequestURI();</span><br><span class="line">System.out.println(<span class="string">" requestURI : "</span> + requestURI);</span><br><span class="line"><span class="comment">// 프로젝트명</span></span><br><span class="line">String contextPath = request.getContextPath();</span><br><span class="line">System.out.println(<span class="string">" contextPath : "</span> + contextPath);</span><br><span class="line"><span class="comment">// 가상주소</span></span><br><span class="line">String command = requestURI.substring(contextPath.length());</span><br><span class="line">System.out.println(<span class="string">" command(가상주소) : "</span> + command);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">System.out.println(<span class="string">"--------------@ 주소 비교후 처리 @-------------"</span>);</span><br><span class="line">Action action = <span class="keyword">null</span>;</span><br><span class="line">ActionForward forward = <span class="keyword">null</span>;</span><br><span class="line"><span class="comment">// 주소에 따른 처리 구분 (주소 매핑후 이동)</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">System.out.println(<span class="string">"-----------------@ 페이지 이동 @--------------"</span>);</span><br><span class="line"><span class="keyword">if</span>(forward != <span class="keyword">null</span>)&#123; <span class="comment">// 이동할 정보가 있다</span></span><br><span class="line"><span class="keyword">if</span>(forward.isRedirect())&#123; <span class="comment">// true - sendRedirect()</span></span><br><span class="line"><span class="comment">// 가상주소(.bo -&gt; .bo), 화면전환(주소변경,화면 변경)</span></span><br><span class="line">System.out.println(<span class="string">"C : "</span>+forward.getPath()+<span class="string">"주소로 이동(Redirect)"</span>);</span><br><span class="line">response.sendRedirect(forward.getPath());</span><br><span class="line">&#125;<span class="keyword">else</span>&#123; <span class="comment">// false - forward()</span></span><br><span class="line">System.out.println(<span class="string">"C : "</span>+forward.getPath()+<span class="string">"주소로 이동(forward)"</span>);</span><br><span class="line"><span class="comment">// 가상주소 -&gt; 실제페이지 (.bo -&gt; .jsp) + reqeust 객체 정보를 가지고 이동</span></span><br><span class="line">RequestDispatcher dis =</span><br><span class="line">request.getRequestDispatcher(forward.getPath());</span><br><span class="line">dis.forward(request, response);</span><br><span class="line">&#125;</span><br><span class="line">&#125;<span class="comment">//end of 페이지이동</span></span><br><span class="line"></span><br><span class="line">&#125;<span class="comment">//end of doProcess</span></span><br><span class="line"></span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">doGet</span><span class="params">(HttpServletRequest req, HttpServletResponse resp)</span> </span></span><br><span class="line"><span class="function"><span class="keyword">throws</span> ServletException, IOException </span>&#123;</span><br><span class="line">System.out.println(<span class="string">"doGet() 호출 (페이지 GET방식 호출)"</span>);</span><br><span class="line">doProcess(req, resp);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">doPost</span><span class="params">(HttpServletRequest req, HttpServletResponse resp)</span> </span></span><br><span class="line"><span class="function"><span class="keyword">throws</span> ServletException, IOException </span>&#123;</span><br><span class="line">System.out.println(<span class="string">"doPost() 호출 (페이지 POST방식 호출)"</span>);</span><br><span class="line">doProcess(req, resp);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><br><br><br></p><h2 id="Action-java-생성"><a href="#Action-java-생성" class="headerlink" title="Action.java 생성"></a><code>Action.java</code> 생성</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">Action</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 상수,추상메서드</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 추상메서드 -&gt; 서브클래스들 한태 강제성 부여</span></span><br><span class="line"><span class="comment">// =&gt; 개발 형식의 통일(틀이 정해짐)</span></span><br><span class="line"><span class="comment">// =&gt; 객체간의 관계가 약화됨 =&gt; 각각의 객체가 해당 동작만 처리/제어</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// Action 페이지의 동작을 미리 선언해서 사용</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> ActionForward <span class="title">execute</span><span class="params">(HttpServletRequest request,</span></span></span><br><span class="line"><span class="function"><span class="params">HttpServletResponse response)</span> <span class="keyword">throws</span> Exception</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><br><br><br></p><h2 id="ActionForward-java-생성"><a href="#ActionForward-java-생성" class="headerlink" title="ActionForward.java 생성"></a><code>ActionForward.java</code> 생성</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">ActionForward</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="comment">//1.외부접근 못하도록 이동할 페이지와 이동할 방식 멤버변수 생성</span></span><br><span class="line"><span class="keyword">private</span> String path;</span><br><span class="line"><span class="keyword">private</span> <span class="keyword">boolean</span> isRedirect;</span><br><span class="line"><span class="comment">// true면 sendRedirect방식으로 이동</span></span><br><span class="line"><span class="comment">//사용처: 주소와 화면의 전환이 동시에 일어날때 (가상주소 -&gt; 가상주소로 )</span></span><br><span class="line"><span class="comment">// false면  forward방식으로 이동</span></span><br><span class="line"><span class="comment">//사용처: 주소는 그대로인데 화면이 바뀔때 (가상주소에서 jsp보여줌)</span></span><br><span class="line"><span class="comment">//2. getter setter생성</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> String <span class="title">getPath</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="keyword">return</span> path;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setPath</span><span class="params">(String path)</span> </span>&#123;</span><br><span class="line"><span class="keyword">this</span>.path = path;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">isRedirect</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="keyword">return</span> isRedirect;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setRedirect</span><span class="params">(<span class="keyword">boolean</span> isRedirect)</span> </span>&#123;</span><br><span class="line"><span class="keyword">this</span>.isRedirect = isRedirect;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//3.toString</span></span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> String <span class="title">toString</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="keyword">return</span> <span class="string">"ActionForward [path="</span> + path + <span class="string">", isRedirect="</span> + isRedirect + <span class="string">"]"</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><br><br><br></p><h2 id="AdminOrderDAO-java-인터페이스-생성"><a href="#AdminOrderDAO-java-인터페이스-생성" class="headerlink" title="AdminOrderDAO.java 인터페이스 생성"></a><code>AdminOrderDAO.java</code> 인터페이스 생성</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">AdminOrderDAO</span> </span>&#123;</span><br><span class="line"><span class="comment">// 인터페이스안의 추상메서드이기때문에  </span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 관리자가 주문목록을 확인하는 기능 getAdminOrderList()</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> List <span class="title">getAdminOrderList</span><span class="params">()</span></span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><br><br><br></p><h2 id="AdminOrderDAOImpl-java-클래스-생성"><a href="#AdminOrderDAOImpl-java-클래스-생성" class="headerlink" title="AdminOrderDAOImpl.java 클래스 생성"></a><code>AdminOrderDAOImpl.java</code> 클래스 생성</h2><ul><li>위에서 만든 인터페이스를 상속받아서 DAO클래스를 만든다.</li><li>DB연결메서드 생성</li><li>자원해제 메서드 생성</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">AdminOrderDAOImpl</span> <span class="keyword">implements</span> <span class="title">AdminOrderDAO</span> </span>&#123;</span><br><span class="line">Connection con = <span class="keyword">null</span>;</span><br><span class="line">PreparedStatement pstmt = <span class="keyword">null</span>;</span><br><span class="line">ResultSet rs = <span class="keyword">null</span>;</span><br><span class="line">String sql = <span class="string">""</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 디비 연결</span></span><br><span class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">getCon</span><span class="params">()</span> <span class="keyword">throws</span> Exception</span>&#123;</span><br><span class="line"><span class="comment">// 커넥션 풀</span></span><br><span class="line">Context init = <span class="keyword">new</span> InitialContext();</span><br><span class="line">DataSource ds = (DataSource) init.lookup(<span class="string">"java:comp/env/jdbc/model2DB"</span>);</span><br><span class="line">con = ds.getConnection();</span><br><span class="line">System.out.println(<span class="string">"DAO : 디비연결 완료 "</span>+con);</span><br><span class="line">&#125;<span class="comment">//end of getCon()</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 디비 자원해제</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">closeDB</span><span class="params">()</span></span>&#123;</span><br><span class="line"><span class="keyword">try</span> &#123;</span><br><span class="line"><span class="keyword">if</span>(rs != <span class="keyword">null</span>) &#123;rs.close();&#125;</span><br><span class="line"><span class="keyword">if</span>(pstmt != <span class="keyword">null</span>) &#123;pstmt.close(); &#125;</span><br><span class="line"><span class="keyword">if</span>(con != <span class="keyword">null</span>) &#123;con.close(); &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">catch</span> (SQLException e) &#123;</span><br><span class="line">e.printStackTrace();</span><br><span class="line">&#125; </span><br><span class="line">&#125;<span class="comment">//end of closeDB()</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content:encoded>
      
      
      <category domain="https://sowon-dev.github.io/categories/JSP/">JSP</category>
      
      
      <category domain="https://sowon-dev.github.io/tags/TIL/">TIL</category>
      
      <category domain="https://sowon-dev.github.io/tags/ITWILL-JAVA/">ITWILL(JAVA)</category>
      
      
      <comments>https://sowon-dev.github.io/2020/09/23/200923jspi/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>옵션메뉴, 컨텍스트메뉴, 토스트</title>
      <link>https://sowon-dev.github.io/2020/09/23/200923and-2/</link>
      <guid>https://sowon-dev.github.io/2020/09/23/200923and-2/</guid>
      <pubDate>Wed, 23 Sep 2020 03:03:19 GMT</pubDate>
      
      <description>&lt;h2 id=&quot;메뉴&quot;&gt;&lt;a href=&quot;#메뉴&quot; class=&quot;headerlink&quot; title=&quot;메뉴&quot;&gt;&lt;/a&gt;메뉴&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;사용자가 여러 개 중 하나를 선택하도록 하여 사용자의 명령을 받아들이는 간편한 방식.&lt;/li&gt;
&lt;li&gt;안드로이드메뉴 종류 : 옵션메뉴, 컨텍스트 메뉴&lt;/li&gt;
&lt;li&gt;종류별로 xml과 함께이용하거나 xml없이 자바코드만으로도 만들 수 있다</description>
      
      
      
      <content:encoded><![CDATA[<h2 id="메뉴"><a href="#메뉴" class="headerlink" title="메뉴"></a>메뉴</h2><ul><li>사용자가 여러 개 중 하나를 선택하도록 하여 사용자의 명령을 받아들이는 간편한 방식.</li><li>안드로이드메뉴 종류 : 옵션메뉴, 컨텍스트 메뉴</li><li>종류별로 xml과 함께이용하거나 xml없이 자바코드만으로도 만들 수 있다<a id="more"></a></li></ul><h3 id="옵션메뉴-xml이용"><a href="#옵션메뉴-xml이용" class="headerlink" title="옵션메뉴 : xml이용"></a>옵션메뉴 : xml이용</h3><ul><li>키패드의 메뉴 버튼을 누를때 나타난다</li><li>작성 순서<ol><li><code>res</code>에 menu폴더와 menu1.xml파일 생성 후 메뉴 코딩</li><li>자바코딩 : onCreateOptionMenu()메소드 오버라이딩</li><li>자바코딩 : onOptionItemSelected() 메소드 오버라이딩</li></ol></li></ul><p><img src="https://blog.kakaocdn.net/dn/utf31/btqvEHplMmn/D7nze9mMvmmjwmHX3bPdt0/img.png" alt="https://lktprogrammer.tistory.com/161"></p><ul><li><a href="https://lktprogrammer.tistory.com/161">위의 예제코드 보기: 안드로이드 - 옵션 메뉴 (Option Menu) 구현 방법 - Lkt_Programmer</a></li></ul><p><br><br><br></p><h3 id="컨텍스트-메뉴-xml이용"><a href="#컨텍스트-메뉴-xml이용" class="headerlink" title="컨텍스트 메뉴 : xml이용"></a>컨텍스트 메뉴 : xml이용</h3><ul><li>위젯을 롱클릭했을때 화면 중앙에 나타난다.</li><li>windows 팝업창과 비슷</li><li>작성순서<ol><li><code>res</code>에 menu폴더와 menu1.xml파일 생성 후 메뉴 코딩</li><li>자바코딩 : onCreate()안에 registerForContextMenu()로 위젯등록</li><li>자바코딩 : onCreateContextMenu()메소드 오버라이딩<ul><li>위젯별로 별도의 파일을 만들어야한다.</li><li>if문을 통해 위젯별 컨텍스트 메뉴를 등록해야한다.</li></ul></li><li>자바코딩 : onContextItemSelected() 메소드 오버라이딩</li></ol></li></ul><p><img src="/img/200923contextmenu1.PNG" alt=""></p><p><img src="/img/200923contextmenu2.PNG" alt=""></p><h4 id="activity-main-xml-코드-작성"><a href="#activity-main-xml-코드-작성" class="headerlink" title="activity_main.xml 코드 작성"></a><code>activity_main.xml</code> 코드 작성</h4><ul><li>소스코드 생략</li></ul><h4 id="menu1-xml-생성-및-코드작성"><a href="#menu1-xml-생성-및-코드작성" class="headerlink" title="menu1.xml 생성 및 코드작성"></a><code>menu1.xml</code> 생성 및 코드작성</h4><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">menu</span> <span class="attr">xmlns:android</span>=<span class="string">"http://schemas.android.com/apk/res/android"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">item</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:id</span>=<span class="string">"@+id/itemRed"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:title</span>=<span class="string">"빨간 배경"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">item</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">item</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:id</span>=<span class="string">"@+id/itemBlue"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:title</span>=<span class="string">"파란 배경"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">item</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">item</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:id</span>=<span class="string">"@+id/itemRGreen"</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:title</span>=<span class="string">"초록 배경"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">item</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">item</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:id</span>=<span class="string">"@+id/itemOrig"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:title</span>=<span class="string">"배경 초기화"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">item</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">menu</span>&gt;</span></span><br></pre></td></tr></table></figure><h4 id="menu2-xml-생성-및-코드작성"><a href="#menu2-xml-생성-및-코드작성" class="headerlink" title="menu2.xml 생성 및 코드작성"></a><code>menu2.xml</code> 생성 및 코드작성</h4><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">menu</span> <span class="attr">xmlns:android</span>=<span class="string">"http://schemas.android.com/apk/res/android"</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">item</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:id</span>=<span class="string">"@+id/subRotate"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:title</span>=<span class="string">"버튼 90도 회전"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">item</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">item</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:id</span>=<span class="string">"@+id/subSize"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:title</span>=<span class="string">"버튼 3배로 확대"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">item</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">item</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:id</span>=<span class="string">"@+id/subSize2"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:title</span>=<span class="string">"버튼 원래대로"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">item</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">menu</span>&gt;</span></span><br></pre></td></tr></table></figure><h4 id="MainActivity-java-자바코딩"><a href="#MainActivity-java-자바코딩" class="headerlink" title="MainActivity.java 자바코딩"></a><code>MainActivity.java</code> 자바코딩</h4><ul><li>전역변수 생략</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">onCreate</span><span class="params">(Bundle savedInstanceState)</span> </span>&#123;</span><br><span class="line"><span class="keyword">super</span>.onCreate(savedInstanceState);</span><br><span class="line">setContentView(R.layout.activity_main);</span><br><span class="line">setTitle(<span class="string">"배경색바꾸기(컨텍스트 메뉴활용)"</span>);</span><br><span class="line">baseLayout = (LinearLayout) findViewById(R.id.baseLayout);</span><br><span class="line">button1 = (Button) findViewById(R.id.button1);</span><br><span class="line">button2 = (Button) findViewById(R.id.button2);</span><br><span class="line"><span class="comment">//버튼 2개를 컨택스트메뉴에 등록하기</span></span><br><span class="line">registerForContextMenu(button1);</span><br><span class="line">registerForContextMenu(button2);</span><br><span class="line">&#125;<span class="comment">//end of onCreate()</span></span><br><span class="line"></span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onCreateContextMenu</span><span class="params">(ContextMenu menu, View v,</span></span></span><br><span class="line"><span class="function"><span class="params">ContextMenu.ContextMenuInfo menuInfo)</span> </span>&#123;</span><br><span class="line"><span class="comment">//view는 롱클릭한 위젯</span></span><br><span class="line"><span class="keyword">super</span>.onCreateContextMenu(menu, v, menuInfo);</span><br><span class="line">MenuInflater mi = getMenuInflater();</span><br><span class="line"><span class="keyword">if</span>(v == button1)&#123;</span><br><span class="line">menu.setHeaderTitle(<span class="string">"배경색 변경"</span>);</span><br><span class="line">mi.inflate(R.menu.menu1, menu);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> (v == button2)&#123;</span><br><span class="line">mi.inflate(R.menu.menu2, menu);</span><br><span class="line">&#125;</span><br><span class="line">&#125;<span class="comment">//end of ContextMenu()</span></span><br><span class="line"></span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">onContextItemSelected</span><span class="params">(@NonNull MenuItem item)</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="keyword">switch</span> (item.getItemId())&#123;</span><br><span class="line"><span class="keyword">case</span> R.id.itemRed: baseLayout.setBackgroundColor(Color.RED);</span><br><span class="line"><span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line"><span class="keyword">case</span> R.id.itemBlue: baseLayout.setBackgroundColor(Color.BLUE);</span><br><span class="line"><span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line"><span class="keyword">case</span> R.id.itemRGreen: baseLayout.setBackgroundColor(Color.GREEN);</span><br><span class="line"><span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line"><span class="keyword">case</span> R.id.itemOrig: baseLayout.setBackgroundColor(Color.TRANSPARENT);</span><br><span class="line"><span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line"><span class="keyword">case</span> R.id.subRotate: button2.setRotation(<span class="number">90</span>);</span><br><span class="line"><span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line"><span class="keyword">case</span> R.id.subSize: button2.setScaleX(<span class="number">3</span>);</span><br><span class="line"><span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line"><span class="keyword">case</span> R.id.subSize2:</span><br><span class="line">button2.setScaleX(<span class="number">1</span>);</span><br><span class="line">button2.setRotation(<span class="number">0</span>);</span><br><span class="line"><span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><br><br><br></p><h2 id="인플레이터-Inflater"><a href="#인플레이터-Inflater" class="headerlink" title="인플레이터(Inflater)"></a>인플레이터(Inflater)</h2><blockquote><p>인플레이터는 자전거 등의 공기 펌프라는 뜻으로 풍선에 바람을 넣어서 실제 객체를 만들어 사용한다는 의미이다.<br>정적으로 존재하는 xml을 java코드에서 가져와서 실제 객체로 만들어 사용하는 것이다.<br>메뉴 인플레이터 : 메뉴xml파일을 java코드에 가져와 사용하는 것<br>레이아웃 인플레이터 : 레이아웃xml을 java코드에 가져와 사용하는 것<br>출처 : Android Studio를 활용한 안드로이드 프로그래밍 5판 p287</p></blockquote><p><br><br><br></p><h2 id="토스트"><a href="#토스트" class="headerlink" title="토스트"></a>토스트</h2><ul><li>화면에 잠깐 나타났다가 사라지는 메시지</li><li>기본적인 사용형태<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Toast.makeText(Context context, String message, <span class="keyword">int</span> duratioin).show();</span><br></pre></td></tr></table></figure></li><li>duratioin 속성 : LENGTH_SHORT와 LENGTH_LONG 둘 중 하나를 사용</li><li>setGravity(int gravity, int xOffset, int yOffset) 메서드<ul><li>gravity 선택값 : TOP, LEFT, RIGTH, BOTTOM, CENTER</li><li>Offset은 떨어진 거리를 나타냄</li></ul></li></ul><p><img src="/img/200923toastex.gif" alt=""></p><h3 id="activity-main-xml-코드-작성-1"><a href="#activity-main-xml-코드-작성-1" class="headerlink" title="activity_main.xml 코드 작성"></a><code>activity_main.xml</code> 코드 작성</h3><ul><li>소스코드 생략</li></ul><h3 id="toast2-xml-생성-및-코드-작성"><a href="#toast2-xml-생성-및-코드-작성" class="headerlink" title="toast2.xml 생성 및 코드 작성"></a><code>toast2.xml</code> 생성 및 코드 작성</h3><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">LinearLayout</span> <span class="attr">xmlns:android</span>=<span class="string">"http://schemas.android.com/apk/res/android"</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:orientation</span>=<span class="string">"vertical"</span> <span class="attr">android:layout_width</span>=<span class="string">"match_parent"</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:layout_height</span>=<span class="string">"match_parent"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">ImageView</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:src</span>=<span class="string">"@drawable/oreo"</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:layout_width</span>=<span class="string">"wrap_content"</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:layout_height</span>=<span class="string">"100dp"</span>/&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">LinearLayout</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="MainActivity-java-자바코딩-1"><a href="#MainActivity-java-자바코딩-1" class="headerlink" title="MainActivity.java 자바코딩"></a><code>MainActivity.java</code> 자바코딩</h3><ul><li>전역변수 생략</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">onCreate</span><span class="params">(Bundle savedInstanceState)</span> </span>&#123;</span><br><span class="line"><span class="keyword">super</span>.onCreate(savedInstanceState);</span><br><span class="line">setContentView(R.layout.activity_main);</span><br><span class="line">setTitle(<span class="string">"사용자 정보 입력"</span>);</span><br><span class="line">tvName = (TextView) findViewById(R.id.tvName);</span><br><span class="line">tvEmail = (TextView) findViewById(R.id.tvEmail);</span><br><span class="line">btn1 = (Button) findViewById(R.id.btn1);</span><br><span class="line"></span><br><span class="line">btn1.setOnClickListener(<span class="keyword">new</span> View.OnClickListener() &#123;</span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onClick</span><span class="params">(View v)</span> </span>&#123;</span><br><span class="line">dlgV = (View) View.inflate(MainActivity.<span class="keyword">this</span>, R.layout.dialog, <span class="keyword">null</span>);</span><br><span class="line">AlertDialog.Builder dlg = <span class="keyword">new</span> AlertDialog.Builder(MainActivity.<span class="keyword">this</span>);</span><br><span class="line">dlg.setTitle(<span class="string">"사용자 정보 입력"</span>);</span><br><span class="line">dlg.setIcon(R.drawable.ic_menu_allfriends);</span><br><span class="line">dlg.setView(dlgV);</span><br><span class="line">dlg.setPositiveButton(<span class="string">"확인"</span>, <span class="keyword">new</span> DialogInterface.OnClickListener() &#123;</span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onClick</span><span class="params">(DialogInterface dialog, <span class="keyword">int</span> which)</span> </span>&#123;</span><br><span class="line">dlgEdtName = (EditText) dlgV.findViewById(R.id.dlgEdt1);</span><br><span class="line">dlgEdtEmail = (EditText) dlgV.findViewById(R.id.dlgEdt2);</span><br><span class="line">tvName.setText(dlgEdtName.getText().toString());</span><br><span class="line">tvEmail.setText(dlgEdtEmail.getText().toString());</span><br><span class="line">&#125;</span><br><span class="line">&#125;);</span><br><span class="line">dlg.setNegativeButton(<span class="string">"취소"</span>, <span class="keyword">new</span> DialogInterface.OnClickListener() &#123;</span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onClick</span><span class="params">(DialogInterface dialog, <span class="keyword">int</span> which)</span> </span>&#123;</span><br><span class="line">Toast toast = <span class="keyword">new</span> Toast(MainActivity.<span class="keyword">this</span>);</span><br><span class="line">toastV = (View) View.inflate(MainActivity.<span class="keyword">this</span>,</span><br><span class="line">R.layout.toast1, <span class="keyword">null</span>);</span><br><span class="line">toastText = (TextView) toastV.findViewById(R.id.toastText1);</span><br><span class="line">toastText.setText(<span class="string">"취소했습니다"</span>);</span><br><span class="line">toast.setView(toastV);</span><br><span class="line">toast.show();</span><br><span class="line">&#125;</span><br><span class="line">&#125;);</span><br><span class="line">dlg.show();</span><br><span class="line">&#125;</span><br><span class="line">&#125;);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content:encoded>
      
      
      <category domain="https://sowon-dev.github.io/categories/Android/">Android</category>
      
      
      <category domain="https://sowon-dev.github.io/tags/TIL/">TIL</category>
      
      <category domain="https://sowon-dev.github.io/tags/ITWILL-JAVA/">ITWILL(JAVA)</category>
      
      
      <comments>https://sowon-dev.github.io/2020/09/23/200923and-2/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>고급위젯</title>
      <link>https://sowon-dev.github.io/2020/09/23/200923and-1/</link>
      <guid>https://sowon-dev.github.io/2020/09/23/200923and-1/</guid>
      <pubDate>Wed, 23 Sep 2020 02:15:09 GMT</pubDate>
      
      <description>&lt;h2 id=&quot;아날로그시계와-디지털시계&quot;&gt;&lt;a href=&quot;#아날로그시계와-디지털시계&quot; class=&quot;headerlink&quot; title=&quot;아날로그시계와 디지털시계&quot;&gt;&lt;/a&gt;아날로그시계와 디지털시계&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;화면에 시간을 표시하는 위젯&lt;/li&gt;
&lt;li&gt;둘 다 view클래스 상속 =&amp;gt; background속성 설정가능&lt;ul&gt;
&lt;li&gt;DigitalClock은 추가로 textColor속성 설정가능</description>
      
      
      
      <content:encoded><![CDATA[<h2 id="아날로그시계와-디지털시계"><a href="#아날로그시계와-디지털시계" class="headerlink" title="아날로그시계와 디지털시계"></a>아날로그시계와 디지털시계</h2><ul><li>화면에 시간을 표시하는 위젯</li><li>둘 다 view클래스 상속 =&gt; background속성 설정가능<ul><li>DigitalClock은 추가로 textColor속성 설정가능<a id="more"></a></li></ul></li><li>참고로 텍스트시계는 Digital Clock과 동일하지만 API level 17에서 deprecated. </li></ul><p><img src="https://abhiandroid-8fb4.kxcdn.com/ui/wp-content/uploads/2016/03/Analog-Clock-Digital-Clock-And-Text-Clock-Android.jpg" alt="https://abhiandroid.com/ui/analogclock-digitalclock-textclock"></p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">//아날로그시계</span><br><span class="line"><span class="tag">&lt;<span class="name">AnalogClock</span></span></span><br><span class="line"><span class="tag"><span class="attr">android:id</span>=<span class="string">"@+id/simpleAnalogClock"</span></span></span><br><span class="line"><span class="tag"><span class="attr">android:layout_width</span>=<span class="string">"wrap_content"</span></span></span><br><span class="line"><span class="tag"><span class="attr">android:layout_height</span>=<span class="string">"wrap_content"</span> /&gt;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">//디지털시계</span><br><span class="line"><span class="tag">&lt;<span class="name">DigitalClock</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:id</span>=<span class="string">"@+id/simpleDigitalClock"</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:layout_width</span>=<span class="string">"wrap_content"</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:layout_height</span>=<span class="string">"wrap_content"</span> /&gt;</span></span><br></pre></td></tr></table></figure><p><br><br><br></p><h2 id="크로노미터"><a href="#크로노미터" class="headerlink" title="크로노미터"></a>크로노미터</h2><ul><li>Chronometer는 타이머형식의 위젯</li><li>시간을 측정할때 많이 사용</li><li>메서드 : start(), stop(), reset()있고 각각 크로노미터를 시작, 정지, 초기화한다.</li><li>foramt속성 : <code>%s</code>는 <code>분:초</code> 또는 <code>시:분:초</code>형식으로 출력</li></ul><p><img src="https://abhiandroid.com/ui/wp-content/uploads/2016/03/Chronometer-Example-Android.gif" alt="https://abhiandroid.com/ui/chronometer"></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">onCreate</span><span class="params">(Bundle savedInstanceState)</span> </span>&#123;</span><br><span class="line"><span class="keyword">super</span>.onCreate(savedInstanceState);</span><br><span class="line">setContentView(R.layout.activity_main);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 변수생성</span></span><br><span class="line">simpleChronometer = (Chronometer) findViewById(R.id.simpleChronometer);</span><br><span class="line">start = (Button) findViewById(R.id.startButton);</span><br><span class="line">stop = (Button) findViewById(R.id.stopButton);</span><br><span class="line">restart = (Button) findViewById(R.id.restartButton);</span><br><span class="line">setFormat = (Button) findViewById(R.id.setFormat);</span><br><span class="line">clearFormat = (Button) findViewById(R.id.clearFormat);</span><br><span class="line"></span><br><span class="line"><span class="comment">//크로노미터 시작 메서드</span></span><br><span class="line">start.setOnClickListener(<span class="keyword">new</span> View.OnClickListener() &#123;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onClick</span><span class="params">(View v)</span> </span>&#123;</span><br><span class="line">simpleChronometer.start();</span><br><span class="line">&#125;</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line"><span class="comment">//크로노미터 정지 메서드</span></span><br><span class="line">stop.setOnClickListener(<span class="keyword">new</span> View.OnClickListener() &#123;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onClick</span><span class="params">(View v)</span> </span>&#123;</span><br><span class="line">simpleChronometer.stop();</span><br><span class="line">&#125;</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line"><span class="comment">//크로노미터 재시작 메서드</span></span><br><span class="line">restart.setOnClickListener(<span class="keyword">new</span> View.OnClickListener() &#123;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onClick</span><span class="params">(View v)</span> </span>&#123;</span><br><span class="line">simpleChronometer.setBase(SystemClock.elapsedRealtime());</span><br><span class="line">&#125;</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line"><span class="comment">//크로노미터 포맷형식 설정 메서드</span></span><br><span class="line">setFormat.setOnClickListener(<span class="keyword">new</span> View.OnClickListener() &#123;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onClick</span><span class="params">(View v)</span> </span>&#123;</span><br><span class="line">simpleChronometer.setFormat(<span class="string">"시간측정 : %s"</span>);</span><br><span class="line">&#125;</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line"><span class="comment">//크로노미터 포맷형식 초기화 메서드</span></span><br><span class="line">clearFormat.setOnClickListener(<span class="keyword">new</span> View.OnClickListener() &#123;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onClick</span><span class="params">(View v)</span> </span>&#123;</span><br><span class="line">simpleChronometer.setFormat(<span class="keyword">null</span>);</span><br><span class="line">&#125;</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><p><br><br><br></p><h2 id="타임피커-데이트피커-캘린더뷰-p242"><a href="#타임피커-데이트피커-캘린더뷰-p242" class="headerlink" title="타임피커, 데이트피커, 캘린더뷰 p242"></a>타임피커, 데이트피커, 캘린더뷰 p242</h2>]]></content:encoded>
      
      
      <category domain="https://sowon-dev.github.io/categories/Android/">Android</category>
      
      
      <category domain="https://sowon-dev.github.io/tags/TIL/">TIL</category>
      
      <category domain="https://sowon-dev.github.io/tags/ITWILL-JAVA/">ITWILL(JAVA)</category>
      
      
      <comments>https://sowon-dev.github.io/2020/09/23/200923and-1/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>레이아웃종류 및 레이아웃 안에서 자주 사용되는 속성</title>
      <link>https://sowon-dev.github.io/2020/09/23/200923and/</link>
      <guid>https://sowon-dev.github.io/2020/09/23/200923and/</guid>
      <pubDate>Wed, 23 Sep 2020 00:39:17 GMT</pubDate>
      
      <description>&lt;h2 id=&quot;레이아웃의-종류&quot;&gt;&lt;a href=&quot;#레이아웃의-종류&quot; class=&quot;headerlink&quot; title=&quot;레이아웃의 종류&quot;&gt;&lt;/a&gt;레이아웃의 종류&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;레이아웃은 ViewGroup 클래스로부터 상속된다.</description>
      
      
      
      <content:encoded><![CDATA[<h2 id="레이아웃의-종류"><a href="#레이아웃의-종류" class="headerlink" title="레이아웃의 종류"></a>레이아웃의 종류</h2><ul><li>레이아웃은 ViewGroup 클래스로부터 상속된다.<a id="more"></a></li></ul><p><img src="https://t1.daumcdn.net/cfile/tistory/261CF539579846111B" alt="https://recipes4dev.tistory.com/66"><br><img src="https://blog.kakaocdn.net/dn/2xTLo/btqxpzXOzVq/VxJceLjv9wCtl2NyIgCDH0/img.png" alt="https://coding-restaurant.tistory.com/86"></p><h3 id="리니어-LinearLayout-선형-레이아웃"><a href="#리니어-LinearLayout-선형-레이아웃" class="headerlink" title="리니어 (LinearLayout) : 선형 레이아웃"></a>리니어 (LinearLayout) : 선형 레이아웃</h3><ul><li>가장 많이 사용.</li><li>왼쪽 위부터 아래쪽 또는 오른쪽으로 차례로 배치</li></ul><h3 id="렐러티브-관계적-레이아웃"><a href="#렐러티브-관계적-레이아웃" class="headerlink" title="렐러티브 : 관계적 레이아웃."></a>렐러티브 : 관계적 레이아웃.</h3><ul><li>위젯 자신이 속한 레이아웃의 상하좌우 위치를 지정하거나 다른 위젯으로부터 상대적인 위치를 지정</li><li>상대적인 위치로 배치<ul><li>상대적 기준 : 부모(레이아웃) 또는 뷰</li></ul></li></ul><p><img src="https://t1.daumcdn.net/cfile/tistory/277FD442591293FD1A" alt="https://recipes4dev.tistory.com/126"><br><img src="https://t1.daumcdn.net/cfile/tistory/227C763E591293FD18" alt="https://recipes4dev.tistory.com/126"></p><h3 id="테이블"><a href="#테이블" class="headerlink" title="테이블"></a>테이블</h3><ul><li>span 기능이 없다. </li><li>위젯을 행과 열의 개수를 지정한 테이블 형태로 배열.</li></ul><h3 id="그리드"><a href="#그리드" class="headerlink" title="그리드"></a>그리드</h3><ul><li>웹(html)의 테이블 개념과 가깝다. </li><li>테이블레이아웃과 비슷하지만 행 또는 열을 확장하여 다양하게 배치가능</li></ul><h3 id="프레임"><a href="#프레임" class="headerlink" title="프레임"></a>프레임</h3><ul><li>왼쪽 위에 일률적으로 겹쳐 배치하여 중복되어 보이는 효과가능. </li><li>여러개의 위젯을 배치한 후 상황에 따라서 필요한 위젯을 보이는 방식에 주로 활용</li></ul><p><br><br><br></p><h2 id="레이아웃-안에서-자주-사용되는-속성"><a href="#레이아웃-안에서-자주-사용되는-속성" class="headerlink" title="레이아웃 안에서 자주 사용되는 속성"></a>레이아웃 안에서 자주 사용되는 속성</h2><h3 id="orientation-배치할-위젯의-방향-설정"><a href="#orientation-배치할-위젯의-방향-설정" class="headerlink" title="orientation : 배치할 위젯의 방향 설정."></a>orientation : 배치할 위젯의 방향 설정.</h3><ul><li>수직(Vertical) / 수평(Horiwontal) 중 하나 선택.</li><li>수직(Vertical) : 레이아웃에 포함된 위젯이 수직방향인 위에서 아래로 차곡차곡 쌓인다.</li><li>수평(Horiwontal) : 위젯이 많은 경우 화면이 넘어가면서 자동으로 보이지않음</li></ul><p><br><br><br></p><h3 id="gravity-위치-정렬"><a href="#gravity-위치-정렬" class="headerlink" title="gravity : 위치 정렬"></a>gravity : 위치 정렬</h3><ul><li>자신에게 포함된 자식(주로 위젯)을 어디에 위치 시킬지 결정. </li><li>left / right / center / top / bottom등 가능</li><li>right||bottom 는 오른쪽 아래에 정렬한다는 의미.</li></ul><p><br><br><br></p><h3 id="layout-gravity-위치-정렬"><a href="#layout-gravity-위치-정렬" class="headerlink" title="layout_gravity : 위치 정렬"></a>layout_gravity : 위치 정렬</h3><ul><li>자신의 위치를 부모(주로 레이아웃)의 어디쯤에 위치시킬지를 결정. </li><li>그래서 보통 gravity는 레이아웃에 layout_gravity는 위젯에 지정한다.</li></ul><p><br><br><br></p><h3 id="padding-위젯의-여백"><a href="#padding-위젯의-여백" class="headerlink" title="padding : 위젯의 여백"></a>padding : 위젯의 여백</h3><p><br><br><br></p><h3 id="layout-weight-공간의-가중값"><a href="#layout-weight-공간의-가중값" class="headerlink" title="layout_weight : 공간의 가중값"></a>layout_weight : 공간의 가중값</h3><ul><li>여러 레이아웃이 중복될 때 각 레이아웃이 전체 화면에서 차지하는 공간의 가중 값.</li><li>중복레이아웃을 사용할 경우 각 레이아웃의 크기를 지정해야한다. 레이아웃을 화면 전체에 채워야하기 때문에 dp, px등의 단위보단 전체화면에 대한 비율(%)인 layout_weight을 사용해야한다.</li></ul><p><img src="/img/200923layoutweight.PNG" alt="https://youtu.be/fSIFpquL4Vc?t=7"></p><p><br><br><br></p><h3 id="baselineAligned-크기가-다른-위젯들을-보기-좋게-정렬"><a href="#baselineAligned-크기가-다른-위젯들을-보기-좋게-정렬" class="headerlink" title="baselineAligned : 크기가 다른 위젯들을 보기 좋게 정렬."></a>baselineAligned : 크기가 다른 위젯들을 보기 좋게 정렬.</h3><ul><li>true(디폴트) / false</li></ul><p><img src="https://blog.kakaocdn.net/dn/AArEK/btqxqJFVD6C/Vrm0f2YiMwFwglJEn4GtAk/img.png" alt="https://coding-restaurant.tistory.com/86"></p><h2 id="참고"><a href="#참고" class="headerlink" title="참고"></a>참고</h2><p><a href="https://coding-restaurant.tistory.com/86">코딩맛집</a><br><a href="https://recipes4dev.tistory.com/">개발자를 위한 레시피</a></p>]]></content:encoded>
      
      
      <category domain="https://sowon-dev.github.io/categories/Android/">Android</category>
      
      
      <category domain="https://sowon-dev.github.io/tags/TIL/">TIL</category>
      
      <category domain="https://sowon-dev.github.io/tags/ITWILL-JAVA/">ITWILL(JAVA)</category>
      
      
      <comments>https://sowon-dev.github.io/2020/09/23/200923and/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>DB fail 유형</title>
      <link>https://sowon-dev.github.io/2020/09/22/200922dbi2/</link>
      <guid>https://sowon-dev.github.io/2020/09/22/200922dbi2/</guid>
      <pubDate>Tue, 22 Sep 2020 07:56:09 GMT</pubDate>
      
      <description>&lt;h2 id=&quot;DB-fail-유형&quot;&gt;&lt;a href=&quot;#DB-fail-유형&quot; class=&quot;headerlink&quot; title=&quot;DB fail 유형&quot;&gt;&lt;/a&gt;DB fail 유형&lt;/h2&gt;&lt;ol&gt;
&lt;li&gt;Statement fail&lt;/li&gt;
&lt;li&gt;User proc fail&lt;/li&gt;
&lt;li&gt;Network fail</description>
      
      
      
      <content:encoded><![CDATA[<h2 id="DB-fail-유형"><a href="#DB-fail-유형" class="headerlink" title="DB fail 유형"></a>DB fail 유형</h2><ol><li>Statement fail</li><li>User proc fail</li><li>Network fail<a id="more"></a></li><li>User error</li><li>Instance fail</li><li>Media fail</li></ol><p><br><br><br></p><h2 id="Statement-fail"><a href="#Statement-fail" class="headerlink" title="Statement fail"></a>Statement fail</h2><ul><li>DB에 발생된 명령문(SQL구문)이 정상적으로 실행되지 않고 오류가 발생된 경우</li><li>원인 : 오타, 문법오류, 권한 부족, 공간 부족 등</li><li>해결 : 명령문 재작성, 권한 부여, 공간 부여 등</li></ul><p><br><br><br></p><h2 id="User-proc-fail"><a href="#User-proc-fail" class="headerlink" title="User proc fail"></a>User proc fail</h2><ul><li>DB에 접속된 user가 비정삭적으로 접속을 종료한 경우</li><li>원인<ul><li>user가 비정상적으로 접속을 종료한 경우</li><li>DBA에 의해 session이 kill된 경우</li><li>Client PC가 다운된 경우</li><li>Network 불안정해서 접속이 끊어진 경우</li></ul></li><li>해결 : 재접속하면 됨 &lt;- <a href="https://sowon-dev.github.io/2020/08/31/200831dbi/#PMON">PMON</a>이 알아서 트랜잭션 롤백 및 LOCK해제함</li></ul><p><br><br><br></p><h2 id="Network-fail"><a href="#Network-fail" class="headerlink" title="Network fail"></a>Network fail</h2><ul><li>DB가 정상적으로 켜져 있는데 DB에 접속이 안되는 경우</li><li>원인<ul><li>리스너가 꺼져있는 경우</li><li>Network가 불안정해서 DB접속이 아예 안되는 경우</li></ul></li><li>해결<ul><li>리스너 켜고 DB재시작 (순서중요)</li><li>Newwork 안정화 작업 요청(DBA가 네트워크관리자에게 요청)</li></ul></li></ul><p><br><br><br></p><h2 id="User-error-사용자-실수"><a href="#User-error-사용자-실수" class="headerlink" title="User error(사용자 실수)"></a>User error(사용자 실수)</h2><ul><li>DB에 발생된 명령어(SQL)구문이 정상적으로 실행되었으나 잘못된 작업을 진행한 경우</li><li>원인 : <a href="https://sowon-dev.github.io/2020/06/05/200605dbi/">잘못된 DML과 DDL</a> 등</li><li>해결<ul><li>트랜잭션 진행 중인 경우 rollback</li><li>commit을 이미 한 경우 반대의 작업을 다시 수행해야함(insert했다면 delete하고…)</li><li>테이블을 실수로 삭제했다면 <a href="https://sowon-dev.github.io/2020/07/23/200724dbi/#%ED%85%8C%EC%9D%B4%EB%B8%94-%EC%82%AD%EC%A0%9C">flashback</a></li></ul></li></ul><p><br><br><br></p><h2 id="Instance-fail"><a href="#Instance-fail" class="headerlink" title="Instance fail"></a>Instance fail</h2><ul><li>DB가 비정상적으로 종료된 경우</li><li>원인<ul><li>DBA가 DB를 비정상종료(abort)한 경우</li><li>server pc가 다운되거나 정전이 발생한 경우</li><li>instance내 필수 구성요소 중 하나에 오류가 발생한 경우</li></ul></li><li>해결 : DB재시작하면 됨 &lt;- DB가 재시작하는 동안에 <a href="https://sowon-dev.github.io/2020/08/31/200831dbi/#SMON">SMON</a>이 DB동기화 맞춰준다.</li></ul><p><br><br><br></p><h2 id="Media-fail"><a href="#Media-fail" class="headerlink" title="Media fail"></a>Media fail</h2><ul><li>가장 심각한 오류</li><li>DB를 구성하는 필수 물리적인 파일 중 하나가 손실/손상된 경우<ul><li>필수 물리적 파일 = datafile, controlfile, redologfile</li></ul></li><li>원인 : 운영체제에서 datafile, controlfile, redologfile을 실수로 삭제한 경우</li><li>해결<ul><li>datafile : 백업파일로부터 복구작업 진행해야한다.</li><li>controlfile : 다중화된 파일로부터 복구 작업 진행해야한다.</li><li>redologfile : 다중화된 파일로부터 복구 작업 진행해야한다.</li></ul></li></ul>]]></content:encoded>
      
      
      <category domain="https://sowon-dev.github.io/categories/Database/">Database</category>
      
      <category domain="https://sowon-dev.github.io/categories/Database/Oracle/">Oracle</category>
      
      
      <category domain="https://sowon-dev.github.io/tags/TIL/">TIL</category>
      
      <category domain="https://sowon-dev.github.io/tags/ITWILL-JAVA/">ITWILL(JAVA)</category>
      
      <category domain="https://sowon-dev.github.io/tags/Oracle/">Oracle</category>
      
      
      <comments>https://sowon-dev.github.io/2020/09/22/200922dbi2/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>데이터충돌, DeadLock</title>
      <link>https://sowon-dev.github.io/2020/09/22/200922dbi/</link>
      <guid>https://sowon-dev.github.io/2020/09/22/200922dbi/</guid>
      <pubDate>Tue, 22 Sep 2020 04:57:41 GMT</pubDate>
      
      <description>&lt;p&gt;데이터충돌 = 세션충돌 = Lock충돌&lt;/p&gt;
&lt;h2 id=&quot;Lock&quot;&gt;&lt;a href=&quot;#Lock&quot; class=&quot;headerlink&quot; title=&quot;Lock&quot;&gt;&lt;/a&gt;Lock&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;동일한 시간에 동일한 데이터에 대해 서로 다른 세션이 동시에 적업하는 것을 막기위해 oracle은 &lt;a href=&quot;https://sowon-dev.github.io/2020/06/05/200605dbi/&quot;&gt;DML&lt;/a&gt;발생시 관련행 단위로 LOCK을 구현.&lt;/li&gt;
&lt;li&gt;LOCK은 트랜잭션 종료(commit, rollback)시 해제된다.</description>
      
      
      
      <content:encoded><![CDATA[<p>데이터충돌 = 세션충돌 = Lock충돌</p><h2 id="Lock"><a href="#Lock" class="headerlink" title="Lock"></a>Lock</h2><ul><li>동일한 시간에 동일한 데이터에 대해 서로 다른 세션이 동시에 적업하는 것을 막기위해 oracle은 <a href="https://sowon-dev.github.io/2020/06/05/200605dbi/">DML</a>발생시 관련행 단위로 LOCK을 구현.</li><li>LOCK은 트랜잭션 종료(commit, rollback)시 해제된다.<a id="more"></a></li><li>LOCK의 최소 단위는 행이다.</li><li>LOCK이 구현된 행에 작업 요청 시 Queue(큐)에서 기다린다.</li><li>ORACLE이 자동으로 락을 걸고 해지시켜준다.</li></ul><p><br><br><br></p><h2 id="Lock-충돌발생하는-경우"><a href="#Lock-충돌발생하는-경우" class="headerlink" title="Lock 충돌발생하는 경우"></a>Lock 충돌발생하는 경우</h2><ul><li>커밋되지 앟은 트랜잭션</li><li>긴 트랜잭션</li></ul><p><br><br><br></p><h2 id="일반적인-Lock충돌-블로킹-해결방법"><a href="#일반적인-Lock충돌-블로킹-해결방법" class="headerlink" title="일반적인 Lock충돌(블로킹) 해결방법"></a>일반적인 Lock충돌(블로킹) 해결방법</h2><ul><li>블로킹 : 트랜잭션이 처리될 때 락이 걸림. 락이 해지 될때 까지 다른 트랜잭션이 해당 자원에 접근할 수 없음.</li><li>DBA에서 문의(LOCK충돌인지 DB가 뻗어버린건지 모르니 확인해달라고 요청해야함)<ul><li>블럭킹 하는 세션 <code>132</code>, 블럭킹 당하고 있는 세션 <code>355</code></li></ul></li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">1  select username, sid, serial<span class="comment">#, blocking_session</span></span><br><span class="line">2  from v<span class="variable">$session</span></span><br><span class="line">3  <span class="built_in">where</span> username is not null;</span><br><span class="line"></span><br><span class="line">//출력값</span><br><span class="line">USERNAME      SID    SERIAL<span class="comment"># BLOCKING_SESSION</span></span><br><span class="line">------------------------------ ---------- ---------- ----------------</span><br><span class="line">SYS3      22449</span><br><span class="line">HR      1322558</span><br><span class="line">SYS      243      41831</span><br><span class="line">HR      249      63962</span><br><span class="line">HR      355      16534  132</span><br></pre></td></tr></table></figure><ul><li>DBA는 kill할 세션 확인 후 아래 쿼리 실행<ul><li>보통 블럭킹하고 있는 세션에게 commit해달라고 요청 후 kill해야한다.</li></ul></li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">SQL&gt; alter system <span class="built_in">kill</span> session <span class="string">'132, 2558'</span> immediate;</span><br><span class="line">System altered.</span><br></pre></td></tr></table></figure><p><br><br><br></p><h2 id="교착상태-DeadLock-Lock충돌-해결방법"><a href="#교착상태-DeadLock-Lock충돌-해결방법" class="headerlink" title="교착상태(DeadLock) Lock충돌 해결방법"></a>교착상태(DeadLock) Lock충돌 해결방법</h2><ul><li>두 개 이상의 트랜잭션이 서로에게 락을 걸어 블로킹이 끊나지 않아 교착상태에 빠짐. (상대방이 원하는 자원을 내가 가지고 있고, 내가 원하는 자원을 상대방이 가진 경우. 서로 맞물린 상태.)</li><li>DB에서 자동 감지하고 자동으로 해결해준다. DBA가 해결 할 필요 없다.<ul><li>DB의 해결방법 : 두 세션 중 비용적인 측면을 고려하여 하나의 세션을 선택한 다음 교착상태(DeadLock)이 발생되었다는 메세지와 함께 작업창을 열어준다. -&gt; 열린 작업창은 작업을 양보해라는 의미이다. COMMIT할지 ROLLBACK할지 선택해야한다.</li><li>COMMIT : deadlock걸린 작업을 제외한 모든 작업들을 저장해준다.</li><li>ROLLBACK : 모든 작업을 롤백한다.</li></ul></li></ul><p><img src="http://postfiles13.naver.net/MjAxNzA1MTlfMjI0/MDAxNDk1MTgyNjg3ODcx.8AGg1pAW3VNOm175p76PxTBmLa5D72-H9trwMhv4t08g.WI8mHy13zNsXP_16mAZHIqO4Q2O6Jtlb9DYBGUN-YgYg.PNG.sam_sist/image.png?type=w773" alt=""></p><ul><li>출처 : <a href="http://blog.naver.com/PostView.nhn?blogId=sam_sist&amp;logNo=221009631931&amp;parentCategoryNo=&amp;categoryNo=&amp;viewDate=&amp;isShowPopularPosts=false&amp;from=postView">http://blog.naver.com/PostView.nhn?blogId=sam_sist&amp;logNo=221009631931&amp;parentCategoryNo=&amp;categoryNo=&amp;viewDate=&amp;isShowPopularPosts=false&amp;from=postView</a></li></ul>]]></content:encoded>
      
      
      <category domain="https://sowon-dev.github.io/categories/Database/">Database</category>
      
      <category domain="https://sowon-dev.github.io/categories/Database/Oracle/">Oracle</category>
      
      
      <category domain="https://sowon-dev.github.io/tags/TIL/">TIL</category>
      
      <category domain="https://sowon-dev.github.io/tags/ITWILL-JAVA/">ITWILL(JAVA)</category>
      
      <category domain="https://sowon-dev.github.io/tags/Oracle/">Oracle</category>
      
      
      <comments>https://sowon-dev.github.io/2020/09/22/200922dbi/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>200922코테준비방법등에 관한 상담</title>
      <link>https://sowon-dev.github.io/2020/09/22/200922journal/</link>
      <guid>https://sowon-dev.github.io/2020/09/22/200922journal/</guid>
      <pubDate>Tue, 22 Sep 2020 03:34:23 GMT</pubDate>
      
      <description>&lt;h2 id=&quot;코딩테스트&quot;&gt;&lt;a href=&quot;#코딩테스트&quot; class=&quot;headerlink&quot; title=&quot;코딩테스트&quot;&gt;&lt;/a&gt;코딩테스트&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;백준알고리즘, &lt;a href=&quot;https://programmers.co.kr/learn/challenges&quot;&gt;프로그래머스&lt;/a&gt; 사이트를 통해 문제를 많이 풀 것.&lt;/li&gt;
&lt;li&gt;코테 공부는 아래 내용을 중점삼아 공부해야한다.&lt;ul&gt;
&lt;li&gt;객체</description>
      
      
      
      <content:encoded><![CDATA[<h2 id="코딩테스트"><a href="#코딩테스트" class="headerlink" title="코딩테스트"></a>코딩테스트</h2><ul><li>백준알고리즘, <a href="https://programmers.co.kr/learn/challenges">프로그래머스</a> 사이트를 통해 문제를 많이 풀 것.</li><li>코테 공부는 아래 내용을 중점삼아 공부해야한다.<ul><li>객체<a id="more"></a></li><li>컬렉션(자료구조)</li><li>예외처리</li><li>람다식</li><li>java8버전부터 가능한 <a href="http://tcpschool.com/java/java_io_stream">스트림</a></li></ul></li><li>코테시 주의사항<ul><li>절대 자책하지 말 것.</li><li>풀리지않으면 답을 보고 이해하는 데 중점을 맞출 것</li></ul></li></ul><p><br><br><br></p><h2 id="java-API배포"><a href="#java-API배포" class="headerlink" title="java API배포"></a>java API배포</h2><ul><li>jsp는 유료 배포해야한다. <a href="https://www.cafe24.com/?controller=product_page&type=special&page=tomcat">카페24 유료호스팅 설치비용 + 매달 호스팅비</a> </li></ul><p><br><br><br></p><h2 id="이력서사이트"><a href="#이력서사이트" class="headerlink" title="이력서사이트"></a>이력서사이트</h2><ul><li>로켓펀치, 링크드인, 원티드에 이력서를 오픈해놓으면 해드헌터가 연락올 수 있다.</li><li>이력서를 오픈해놓을 것.</li></ul><p><br><br><br></p><h2 id="이력서팁"><a href="#이력서팁" class="headerlink" title="이력서팁"></a>이력서팁</h2><ul><li>전혀 다른 업계라도 3년이라는 공백기가 생기지 않도록 경력기술을 해야한다.</li><li>이전 업계의 자격증과 교육, 경험들은 큰 것만 기술하고 나머지는 버린다. 주객전도가 될 수 있기때문.</li><li>영어경험 어필하는 건 매우 좋다.</li></ul><p><br><br><br></p><h2 id="포트폴리오"><a href="#포트폴리오" class="headerlink" title="포트폴리오"></a>포트폴리오</h2><ul><li>깃허브 추가계정을 생성하여 포트폴리오전용으로 활용할 수 있다.</li><li>기존 기능을 내 손으로 다시 만드는 것도 기술이고 능력이다. 개인프로젝트의 새로운 것을 찾기가 어렵다면 기존의 것을 자신만의 스타일로, 아니면 자신이 직접 다시 만들어도 좋다</li><li>자바API로 배포를 한다는 의미는 라이브러리를 만드는 것과 같다.<ul><li>우리가 라이브러리 다운로드해서 쓰듯이 다운로드해서 사용할 수 있게 만들어야한다</li><li>이때 주의점은 저작권과 권한설정이다.</li></ul></li></ul>]]></content:encoded>
      
      
      <category domain="https://sowon-dev.github.io/categories/Journal/">Journal</category>
      
      
      <category domain="https://sowon-dev.github.io/tags/Journal/">Journal</category>
      
      <category domain="https://sowon-dev.github.io/tags/ITWILL-JAVA/">ITWILL(JAVA)</category>
      
      
      <comments>https://sowon-dev.github.io/2020/09/22/200922journal/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>Servlet구매하기4 : 주문 상세정보페이지</title>
      <link>https://sowon-dev.github.io/2020/09/22/200922jspi2/</link>
      <guid>https://sowon-dev.github.io/2020/09/22/200922jspi2/</guid>
      <pubDate>Tue, 22 Sep 2020 01:43:42 GMT</pubDate>
      
      <description>&lt;h2 id=&quot;OrderFrontController-java의-doProcess-의-주소비교-후-처리부분에-코드-추가&quot;&gt;&lt;a href=&quot;#OrderFrontController-java의-doProcess-의-주소비교-후-처리부분에-코드-추가&quot; class=&quot;headerlink&quot; title=&quot;OrderFrontController.java의 doProcess()의 주소비교 후 처리부분에 코드 추가&quot;&gt;&lt;/a&gt;&lt;code&gt;OrderFrontController.java&lt;/code&gt;의 doProcess()의 주소비교 후 처리부분에 코드 추가&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;구매했던 내역의 정보를 상세히 확인하는 페이지를 만들어보자</description>
      
      
      
      <content:encoded><![CDATA[<h2 id="OrderFrontController-java의-doProcess-의-주소비교-후-처리부분에-코드-추가"><a href="#OrderFrontController-java의-doProcess-의-주소비교-후-처리부분에-코드-추가" class="headerlink" title="OrderFrontController.java의 doProcess()의 주소비교 후 처리부분에 코드 추가"></a><code>OrderFrontController.java</code>의 doProcess()의 주소비교 후 처리부분에 코드 추가</h2><ul><li>구매했던 내역의 정보를 상세히 확인하는 페이지를 만들어보자<a id="more"></a></li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//주문목록 상세</span></span><br><span class="line">&#125;<span class="keyword">else</span> <span class="keyword">if</span>(command.equals(<span class="string">"/OrderDetail.or"</span>))&#123;</span><br><span class="line">System.out.println(<span class="string">"C: /OrderDetail.or 호출"</span>);</span><br><span class="line">action = <span class="keyword">new</span> OrderDetailAction();</span><br><span class="line"><span class="keyword">try</span> &#123; forward = action.execute(request, response);</span><br><span class="line">&#125; <span class="keyword">catch</span> (Exception e) &#123; e.printStackTrace(); &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><br><br><br></p><h2 id="OrderDetailAction-java-생성"><a href="#OrderDetailAction-java-생성" class="headerlink" title="OrderDetailAction.java 생성"></a><code>OrderDetailAction.java</code> 생성</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">OrderDetailAction</span> <span class="keyword">implements</span> <span class="title">Action</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> ActionForward <span class="title">execute</span><span class="params">(HttpServletRequest request, HttpServletResponse response)</span> </span></span><br><span class="line"><span class="function"><span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line">System.out.println(<span class="string">"M : OrderDetailAction의 execute() 호출"</span>);</span><br><span class="line"><span class="comment">// 한글처리</span></span><br><span class="line">request.setCharacterEncoding(<span class="string">"UTF-8"</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 로그인 정보 (로그인 처리필요)</span></span><br><span class="line">HttpSession session = request.getSession();</span><br><span class="line">String id = (String) session.getAttribute(<span class="string">"id"</span>);</span><br><span class="line">ActionForward forward = <span class="keyword">new</span> ActionForward();</span><br><span class="line"><span class="keyword">if</span>(id == <span class="keyword">null</span>)&#123;</span><br><span class="line">forward.setPath(<span class="string">"./MemberLogin.me"</span>);</span><br><span class="line">forward.setRedirect(<span class="keyword">true</span>);</span><br><span class="line"><span class="keyword">return</span> forward;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 주문번호 (trade_num) 저장(파라미터)</span></span><br><span class="line">String trade_num = request.getParameter(<span class="string">"trade_num"</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">// DAO - 주문번호에 해당하는 정보 전부 가져오기</span></span><br><span class="line">OrderDAO odao = <span class="keyword">new</span> OrderDAO();</span><br><span class="line">request.setAttribute(<span class="string">"orderDetailList"</span>, odao.getOrderDetail(trade_num));</span><br><span class="line"></span><br><span class="line"><span class="comment">// 페이지 이동("./goods_order/order_detail.jsp")</span></span><br><span class="line">forward.setPath(<span class="string">"./goods_order/order_detail.jsp"</span>);</span><br><span class="line">forward.setRedirect(<span class="keyword">false</span>);</span><br><span class="line"><span class="keyword">return</span> forward;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><br><br><br></p><h2 id="OrderDAO-java-생성-후-getOrderDetail-메서드-코드-추가"><a href="#OrderDAO-java-생성-후-getOrderDetail-메서드-코드-추가" class="headerlink" title="OrderDAO.java 생성 후 getOrderDetail()메서드 코드 추가"></a><code>OrderDAO.java</code> 생성 후 getOrderDetail()메서드 코드 추가</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//주문목록 상세페이지</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> List&lt;OrderDTO&gt; <span class="title">getOrderDetail</span><span class="params">(String trade_num)</span> </span>&#123;</span><br><span class="line">List&lt;OrderDTO&gt; orderDetailList = <span class="keyword">new</span> ArrayList&lt;OrderDTO&gt;();</span><br><span class="line"><span class="keyword">try</span> &#123;</span><br><span class="line">getCon();</span><br><span class="line">sql=<span class="string">"select * from itwill_order wehre o_trade_num=?"</span>;</span><br><span class="line">pstmt = con.prepareStatement(sql);</span><br><span class="line">pstmt.setString(<span class="number">1</span>, trade_num);</span><br><span class="line">rs = pstmt.executeQuery();</span><br><span class="line"><span class="keyword">while</span>(rs.next())&#123;</span><br><span class="line">OrderDTO odto = <span class="keyword">new</span> OrderDTO();</span><br><span class="line">odto.setO_trade_num(rs.getString(<span class="string">"o_trade_num"</span>));</span><br><span class="line">odto.setO_g_name(rs.getString(<span class="string">"o_g_name"</span>));</span><br><span class="line">odto.setO_g_amount(rs.getInt(<span class="string">"o_g_amount"</span>));</span><br><span class="line">odto.setO_g_size(rs.getString(<span class="string">"o_g_size"</span>));</span><br><span class="line">odto.setO_g_color(rs.getString(<span class="string">"o_g_color"</span>));</span><br><span class="line">odto.setO_sum_money(rs.getInt(<span class="string">"o_sum_money"</span>));</span><br><span class="line">odto.setO_trade_type(rs.getString(<span class="string">"o_trade_type"</span>));</span><br><span class="line">odto.setO_trans_num(rs.getString(<span class="string">"o_trans_num"</span>));</span><br><span class="line">odto.setO_date(rs.getDate(<span class="string">"o_date"</span>));</span><br><span class="line">odto.setO_status(rs.getInt(<span class="string">"o_status"</span>));</span><br><span class="line"></span><br><span class="line">orderDetailList.add(odto);</span><br><span class="line">&#125;</span><br><span class="line">&#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">System.out.println(<span class="string">"getOrderDetail() 여기서 오류발생"</span>);</span><br><span class="line">e.printStackTrace();</span><br><span class="line">&#125; <span class="keyword">finally</span> &#123;</span><br><span class="line">closeDB();</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> orderDetailList;</span><br><span class="line">&#125;<span class="comment">//end of getOrderDetail()</span></span><br></pre></td></tr></table></figure><p><br><br><br></p><h2 id="order-detail-jsp-생성-java문법사용"><a href="#order-detail-jsp-생성-java문법사용" class="headerlink" title="order_detail.jsp 생성 (java문법사용)"></a><code>order_detail.jsp</code> 생성 (java문법사용)</h2><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">%</span></span></span><br><span class="line"><span class="tag">//저장</span></span><br><span class="line"><span class="tag">//<span class="attr">request.setAttribute</span>("<span class="attr">orderDetailList</span>", <span class="attr">ordao.getOrderDetail</span>(<span class="attr">trade_num</span>));</span></span><br><span class="line">List&lt;OrderDTO&gt; orderDetailList </span><br><span class="line">   = (List<span class="tag">&lt;<span class="name">OrderDTO</span>&gt;</span>)request.getAttribute("orderDetailList");</span><br><span class="line">%&gt;</span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">table</span> <span class="attr">border</span>=<span class="string">"1"</span>&gt;</span></span><br><span class="line"> <span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">td</span>&gt;</span>상품명<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">td</span>&gt;</span>상품크기<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">td</span>&gt;</span>상품색상<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">td</span>&gt;</span>주문개수<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">td</span>&gt;</span>주문금액<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line"> <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line"> <span class="tag">&lt;<span class="name">%</span></span></span><br><span class="line"><span class="tag"> <span class="attr">int</span> <span class="attr">total</span> =<span class="string">0;</span></span></span><br><span class="line"><span class="tag"> <span class="attr">for</span>(<span class="attr">OrderDTO</span> <span class="attr">ordto</span> <span class="attr">:orderDetailList</span>)&#123;</span></span><br><span class="line"><span class="tag"> <span class="attr">total</span> += <span class="string">ordto.getO_sum_money();</span></span></span><br><span class="line"><span class="tag"> // <span class="attr">total</span> = <span class="string">total</span> + <span class="attr">ordto.getO_sum_money</span>();</span></span><br><span class="line"><span class="tag"> %&gt;</span></span><br><span class="line"> <span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">td</span>&gt;</span><span class="tag">&lt;<span class="name">%=ordto.getO_g_name()</span> %&gt;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">td</span>&gt;</span><span class="tag">&lt;<span class="name">%=ordto.getO_g_size()</span> %&gt;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">td</span>&gt;</span><span class="tag">&lt;<span class="name">%=ordto.getO_g_color()</span> %&gt;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">td</span>&gt;</span><span class="tag">&lt;<span class="name">%=ordto.getO_g_amount()</span> %&gt;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">td</span>&gt;</span><span class="tag">&lt;<span class="name">%=ordto.getO_sum_money()</span> %&gt;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line"> <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line"> <span class="tag">&lt;<span class="name">%&#125;</span> %&gt;</span></span><br><span class="line"> <span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">td</span> <span class="attr">colspan</span>=<span class="string">"5"</span>&gt;</span> 총 주문 금액 : <span class="tag">&lt;<span class="name">%=total</span> %&gt;</span> 원<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line"> <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">table</span>&gt;</span>    </span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"./Main.me"</span>&gt;</span>메인페이지<span class="tag">&lt;/<span class="name">a</span>&gt;</span> </span><br><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"./GoodsList.go"</span>&gt;</span>계속 구매하기<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br></pre></td></tr></table></figure><p><br><br><br></p><h2 id="order-detail-jsp-생성-EL표현식사용"><a href="#order-detail-jsp-생성-EL표현식사용" class="headerlink" title="order_detail.jsp 생성 (EL표현식사용)"></a><code>order_detail.jsp</code> 생성 (EL표현식사용)</h2><ul><li><code>&lt;c:forEach var=&quot;i&quot; items=&quot;${orderDetailList}&quot;&gt;</code> 사용시 주의사항<ul><li>var이름은 해당 페이지에서 사용 할 변수명이다.</li><li>items는 request.setAttribute객체로 담아온 이름을 써야한다.</li></ul></li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">%</span></span></span><br><span class="line"><span class="tag"><span class="attr">System.out.println</span>("<span class="attr">V</span> <span class="attr">:</span> 주문목록상세 출력페이지");</span></span><br><span class="line"><span class="tag">%&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">table</span> <span class="attr">border</span>=<span class="string">"1"</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">th</span>&gt;</span>상품명<span class="tag">&lt;/<span class="name">th</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">th</span>&gt;</span>상품사이즈<span class="tag">&lt;/<span class="name">th</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">th</span>&gt;</span>상품색상<span class="tag">&lt;/<span class="name">th</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">th</span>&gt;</span>주문개수<span class="tag">&lt;/<span class="name">th</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">th</span>&gt;</span>주문금액<span class="tag">&lt;/<span class="name">th</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">  </span><br><span class="line">  <span class="tag">&lt;<span class="name">c:forEach</span> <span class="attr">var</span>=<span class="string">"i"</span> <span class="attr">items</span>=<span class="string">"$&#123;orderDetailList &#125;"</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">td</span>&gt;</span>$&#123;i.o_g_name&#125;<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">td</span>&gt;</span>$&#123;i.o_g_size &#125;<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">td</span>&gt;</span>$&#123;i.o_g_color &#125;<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">td</span>&gt;</span>$&#123;i.o_g_amount &#125;<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">td</span>&gt;</span>$&#123;i.o_sum_money &#125;<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">c:forEach</span>&gt;</span></span><br><span class="line">  </span><br><span class="line">  <span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">td</span> <span class="attr">colspan</span>=<span class="string">"5"</span>&gt;</span> </span><br><span class="line">  총 주문 금액 :</span><br><span class="line">  <span class="tag">&lt;<span class="name">c:set</span> <span class="attr">var</span>=<span class="string">"total"</span> <span class="attr">value</span>=<span class="string">"0"</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">c:forEach</span> <span class="attr">var</span>=<span class="string">"list"</span> <span class="attr">items</span>=<span class="string">"$&#123;orderDetailList &#125;"</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">c:set</span> <span class="attr">var</span>=<span class="string">"total"</span> <span class="attr">value</span>=<span class="string">"$&#123;total + list.o_sum_money &#125;"</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">c:forEach</span>&gt;</span></span><br><span class="line">    $&#123;total &#125;원</span><br><span class="line">    <span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">table</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"button"</span> <span class="attr">class</span>=<span class="string">"btn"</span> <span class="attr">value</span>=<span class="string">"메인페이지로"</span> <span class="attr">onclick</span>=<span class="string">"location.href='./Main.me'"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"button"</span> <span class="attr">class</span>=<span class="string">"btn"</span> <span class="attr">value</span>=<span class="string">"계속 구매하기"</span> <span class="attr">onclick</span>=<span class="string">"location.href='./GoodsList.go'"</span>&gt;</span></span><br></pre></td></tr></table></figure>]]></content:encoded>
      
      
      <category domain="https://sowon-dev.github.io/categories/JSP/">JSP</category>
      
      
      <category domain="https://sowon-dev.github.io/tags/TIL/">TIL</category>
      
      <category domain="https://sowon-dev.github.io/tags/ITWILL-JAVA/">ITWILL(JAVA)</category>
      
      
      <comments>https://sowon-dev.github.io/2020/09/22/200922jspi2/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>Servlet구매하기3 : 주문목록 및 주문 상세정보 자세히</title>
      <link>https://sowon-dev.github.io/2020/09/22/200922jspi/</link>
      <guid>https://sowon-dev.github.io/2020/09/22/200922jspi/</guid>
      <pubDate>Tue, 22 Sep 2020 00:08:20 GMT</pubDate>
      
      <description>&lt;h2 id=&quot;OrderFrontController-java의-doProcess-의-주소비교-후-처리부분에-코드-추가&quot;&gt;&lt;a href=&quot;#OrderFrontController-java의-doProcess-의-주소비교-후-처리부분에-코드-추가&quot; class=&quot;headerlink&quot; title=&quot;OrderFrontController.java의 doProcess()의 주소비교 후 처리부분에 코드 추가&quot;&gt;&lt;/a&gt;&lt;code&gt;OrderFrontController.java&lt;/code&gt;의 doProcess()의 주소비교 후 처리부분에 코드 추가&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;구매했던 내역의 정보를 확인하는 페이지를 만들어보자</description>
      
      
      
      <content:encoded><![CDATA[<h2 id="OrderFrontController-java의-doProcess-의-주소비교-후-처리부분에-코드-추가"><a href="#OrderFrontController-java의-doProcess-의-주소비교-후-처리부분에-코드-추가" class="headerlink" title="OrderFrontController.java의 doProcess()의 주소비교 후 처리부분에 코드 추가"></a><code>OrderFrontController.java</code>의 doProcess()의 주소비교 후 처리부분에 코드 추가</h2><ul><li>구매했던 내역의 정보를 확인하는 페이지를 만들어보자<a id="more"></a></li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//주문목록</span></span><br><span class="line">&#125;<span class="keyword">else</span> <span class="keyword">if</span>(command.equals(<span class="string">"/OrderList.or"</span>))&#123;</span><br><span class="line">System.out.println(<span class="string">"C: /OrderList.or 호출"</span>);</span><br><span class="line">action = <span class="keyword">new</span> OrderListAction();</span><br><span class="line"><span class="keyword">try</span> &#123; forward = action.execute(request, response);</span><br><span class="line">&#125; <span class="keyword">catch</span> (Exception e) &#123; e.printStackTrace(); &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><br><br><br></p><h2 id="OrderListAction-java-생성"><a href="#OrderListAction-java-생성" class="headerlink" title="OrderListAction.java 생성"></a><code>OrderListAction.java</code> 생성</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">OrderListAction</span> <span class="keyword">implements</span> <span class="title">Action</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> ActionForward <span class="title">execute</span><span class="params">(HttpServletRequest request, HttpServletResponse response)</span> </span></span><br><span class="line"><span class="function"><span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line">System.out.println(<span class="string">"M : OrderListAction의 execute() 호출"</span>);</span><br><span class="line"><span class="comment">// 한글처리</span></span><br><span class="line">request.setCharacterEncoding(<span class="string">"UTF-8"</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 로그인 정보 (로그인 처리필요)</span></span><br><span class="line">HttpSession session = request.getSession();</span><br><span class="line">String id = (String) session.getAttribute(<span class="string">"id"</span>);</span><br><span class="line">ActionForward forward = <span class="keyword">new</span> ActionForward();</span><br><span class="line"><span class="keyword">if</span>(id == <span class="keyword">null</span>)&#123;</span><br><span class="line">forward.setPath(<span class="string">"./MemberLogin.me"</span>);</span><br><span class="line">forward.setRedirect(<span class="keyword">true</span>);</span><br><span class="line"><span class="keyword">return</span> forward;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//orderdao + 전달된 정보를 저장</span></span><br><span class="line">OrderDAO odao = <span class="keyword">new</span> OrderDAO();</span><br><span class="line">request.setAttribute(<span class="string">"orderList"</span>, odao.getOrderList(id)); </span><br><span class="line"></span><br><span class="line"><span class="comment">//페이지이동</span></span><br><span class="line">forward.setPath(<span class="string">"./goods_order/order_list.jsp"</span>);</span><br><span class="line">forward.setRedirect(<span class="keyword">false</span>);</span><br><span class="line"><span class="keyword">return</span> forward;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><br><br><br></p><h2 id="OrderDAO-java-생성-후-getOrderList-메서드-코드-추가"><a href="#OrderDAO-java-생성-후-getOrderList-메서드-코드-추가" class="headerlink" title="OrderDAO.java 생성 후 getOrderList()메서드 코드 추가"></a><code>OrderDAO.java</code> 생성 후 getOrderList()메서드 코드 추가</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//주문정보 가져오기</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> List&lt;OrderDTO&gt; <span class="title">getOrderList</span><span class="params">(String id)</span> </span>&#123;</span><br><span class="line">List&lt;OrderDTO&gt; orderList = <span class="keyword">new</span> ArrayList&lt;OrderDTO&gt;();</span><br><span class="line"><span class="keyword">try</span> &#123;</span><br><span class="line">getCon();</span><br><span class="line">sql=<span class="string">"select o_trade_num,o_g_name,o_g_amount,o_g_size,o_g_color,"</span></span><br><span class="line">+ <span class="string">"sum(o_sum_money) as o_sum_money,"</span></span><br><span class="line">+ <span class="string">"o_trade_type,o_trans_num,o_date,o_status "</span></span><br><span class="line">+ <span class="string">"from itwill_order where o_m_id=? "</span></span><br><span class="line">+ <span class="string">"group by o_trade_num "</span></span><br><span class="line">+ <span class="string">"order by o_trade_num"</span>;</span><br><span class="line">pstmt = con.prepareStatement(sql);</span><br><span class="line">pstmt.setString(<span class="number">1</span>, id);</span><br><span class="line">rs = pstmt.executeQuery();</span><br><span class="line"><span class="keyword">while</span>(rs.next())&#123;</span><br><span class="line">OrderDTO odto = <span class="keyword">new</span> OrderDTO();</span><br><span class="line">odto.setO_trade_num(rs.getString(<span class="string">"o_trade_num"</span>));</span><br><span class="line">odto.setO_g_name(rs.getString(<span class="string">"o_g_name"</span>));</span><br><span class="line">odto.setO_g_amount(rs.getInt(<span class="string">"o_g_amount"</span>));</span><br><span class="line">odto.setO_g_size(rs.getString(<span class="string">"o_g_size"</span>));</span><br><span class="line">odto.setO_g_color(rs.getString(<span class="string">"o_g_color"</span>));</span><br><span class="line">odto.setO_sum_money(rs.getInt(<span class="string">"o_sum_money"</span>));</span><br><span class="line">odto.setO_trade_type(rs.getString(<span class="string">"o_trade_type"</span>));</span><br><span class="line">odto.setO_trans_num(rs.getString(<span class="string">"o_trans_num"</span>));</span><br><span class="line">odto.setO_date(rs.getDate(<span class="string">"o_date"</span>));</span><br><span class="line">odto.setO_status(rs.getInt(<span class="string">"o_status"</span>));</span><br><span class="line"></span><br><span class="line">orderList.add(odto);</span><br><span class="line">&#125;</span><br><span class="line">&#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">e.printStackTrace();</span><br><span class="line">&#125;<span class="keyword">finally</span> &#123;</span><br><span class="line">closeDB();</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> orderList;</span><br><span class="line">&#125;<span class="comment">//end of getOrderList()</span></span><br></pre></td></tr></table></figure><p><br><br><br></p><h2 id="order-list-jsp-생성-jsp사용"><a href="#order-list-jsp-생성-jsp사용" class="headerlink" title="order_list.jsp 생성 (jsp사용)"></a><code>order_list.jsp</code> 생성 (jsp사용)</h2><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">%</span></span></span><br><span class="line"><span class="tag"><span class="attr">System.out.println</span>("<span class="attr">V</span> <span class="attr">:</span> 주문목록 출력페이지");</span></span><br><span class="line"><span class="tag">// <span class="attr">OrderListAction</span>에서 전달된</span></span><br><span class="line"><span class="tag">// <span class="attr">orderList</span> 정보를 저장사용</span></span><br><span class="line"><span class="tag"><span class="attr">List</span> <span class="attr">orderList</span> = <span class="string">(List)request.getAttribute(</span>"<span class="attr">orderList</span>");</span></span><br><span class="line"><span class="tag">%&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">table</span> <span class="attr">border</span>=<span class="string">"1"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">td</span>&gt;</span>주문번호<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">td</span>&gt;</span>상품명<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">td</span>&gt;</span>결재 방법<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">td</span>&gt;</span>주문금액<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">td</span>&gt;</span>주문상태<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">td</span>&gt;</span>주문일시<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">td</span>&gt;</span>운송장번호<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">%</span></span></span><br><span class="line"> for(int i=0;i&lt;orderList.size();i++)&#123;</span><br><span class="line"> OrderDTO ordto = (OrderDTO)orderList.get(i);</span><br><span class="line">%&gt;</span><br><span class="line"><span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">td</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"./OrderDetail.or?trade_num=&lt;%=ordto.getO_trade_num() %&gt;"</span>&gt;</span></span><br><span class="line"> <span class="tag">&lt;<span class="name">%=ordto.getO_trade_num()</span> %&gt;</span></span><br><span class="line">   <span class="tag">&lt;/<span class="name">a</span>&gt;</span> </span><br><span class="line">   <span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">td</span>&gt;</span><span class="tag">&lt;<span class="name">%=ordto.getO_g_name()</span> %&gt;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">td</span>&gt;</span><span class="tag">&lt;<span class="name">%=ordto.getO_trade_type()</span> %&gt;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">td</span>&gt;</span><span class="tag">&lt;<span class="name">%=ordto.getO_sum_money()</span> %&gt;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">%</span></span></span><br><span class="line"><span class="tag">   // 주문상태</span></span><br><span class="line"><span class="tag">   // <span class="attr">0</span> <span class="attr">-</span> "대기중"</span></span><br><span class="line"><span class="tag">   // <span class="attr">1</span> <span class="attr">-</span> "발송준비"</span></span><br><span class="line"><span class="tag">   // <span class="attr">2</span> <span class="attr">-</span> "발송완료"</span></span><br><span class="line"><span class="tag">   // <span class="attr">3</span> <span class="attr">-</span> "배송중"</span></span><br><span class="line"><span class="tag">   // <span class="attr">4</span> <span class="attr">-</span> "배송완료"</span></span><br><span class="line"><span class="tag">   // <span class="attr">5</span> <span class="attr">-</span> "주문취소"   </span></span><br><span class="line"><span class="tag">   <span class="attr">String</span> <span class="attr">status</span>=<span class="string">""</span>;</span></span><br><span class="line"><span class="tag">   <span class="attr">switch</span>(<span class="attr">ordto.getO_status</span>())&#123;</span></span><br><span class="line"><span class="tag">   <span class="attr">case</span> <span class="attr">0:</span></span></span><br><span class="line"><span class="tag">   <span class="attr">status</span>=<span class="string">"대기중"</span>; <span class="attr">break</span>;</span></span><br><span class="line"><span class="tag">   <span class="attr">case</span> <span class="attr">1:</span></span></span><br><span class="line"><span class="tag">   <span class="attr">status</span>=<span class="string">"발송준비"</span>; <span class="attr">break</span>;</span></span><br><span class="line"><span class="tag">   <span class="attr">case</span> <span class="attr">2:</span></span></span><br><span class="line"><span class="tag">   <span class="attr">status</span>=<span class="string">"발송완료"</span>; <span class="attr">break</span>;</span></span><br><span class="line"><span class="tag">   <span class="attr">case</span> <span class="attr">3:</span></span></span><br><span class="line"><span class="tag">   <span class="attr">status</span>=<span class="string">"배송중"</span>; <span class="attr">break</span>;</span></span><br><span class="line"><span class="tag">   <span class="attr">case</span> <span class="attr">4:</span></span></span><br><span class="line"><span class="tag">   <span class="attr">status</span>=<span class="string">"배송완료"</span>; <span class="attr">break</span>;</span></span><br><span class="line"><span class="tag">   <span class="attr">case</span> <span class="attr">5:</span></span></span><br><span class="line"><span class="tag">   <span class="attr">status</span>=<span class="string">"주문취소"</span>; <span class="attr">break</span>;</span></span><br><span class="line"><span class="tag">   <span class="attr">default:</span></span></span><br><span class="line"><span class="tag">   <span class="attr">status</span>=<span class="string">"관리자 문의"</span>;</span></span><br><span class="line"><span class="tag">   &#125;       </span></span><br><span class="line"><span class="tag">   %&gt;</span>       </span><br><span class="line">   <span class="tag">&lt;<span class="name">td</span>&gt;</span><span class="tag">&lt;<span class="name">%=status</span> %&gt;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">td</span>&gt;</span><span class="tag">&lt;<span class="name">%=ordto.getO_date()</span> %&gt;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">td</span>&gt;</span><span class="tag">&lt;<span class="name">%=ordto.getO_trans_num()</span> %&gt;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">%&#125;</span> %&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">table</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">h2</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"./Main.me"</span>&gt;</span> 메인페이지 <span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br></pre></td></tr></table></figure><p><br><br><br></p><h2 id="order-list-jsp-생성-EL표현식사용"><a href="#order-list-jsp-생성-EL표현식사용" class="headerlink" title="order_list.jsp 생성 (EL표현식사용)"></a><code>order_list.jsp</code> 생성 (EL표현식사용)</h2><ul><li><code>&lt;c:forEach var=&quot;orderList&quot; items=&quot;${orderList}&quot;&gt;</code> 사용시 주의사항<ul><li>var이름은 해당 페이지에서 사용 할 변수명이다.</li><li>items는 request.setAttribute객체로 담아온 이름을 써야한다.</li></ul></li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">%</span></span></span><br><span class="line"><span class="tag"><span class="attr">System.out.println</span>("<span class="attr">V</span> <span class="attr">:</span> 주문목록 출력페이지");</span></span><br><span class="line"><span class="tag">// <span class="attr">OrderListAction</span>에서 전달된</span></span><br><span class="line"><span class="tag">// <span class="attr">orderList</span> 정보를 저장사용 <span class="attr">-</span> <span class="attr">EL</span>표현식사용하려면 아래 코드없이 바로 사용가능</span></span><br><span class="line"><span class="tag">%&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">table</span> <span class="attr">border</span>=<span class="string">"1"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">td</span>&gt;</span>주문번호<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">td</span>&gt;</span>상품명<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">td</span>&gt;</span>결제 방법<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">td</span>&gt;</span>주문금액<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">td</span>&gt;</span>주문상태<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">td</span>&gt;</span>주문일시<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">td</span>&gt;</span>운송장번호<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">c:forEach</span> <span class="attr">var</span>=<span class="string">"orderList"</span> <span class="attr">items</span>=<span class="string">"$&#123;orderList&#125;"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">td</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"./OrderDetail.or?trade_num=$&#123;orderList.o_trade_num &#125;%&gt;"</span>&gt;</span>$&#123;orderList.o_trade_num &#125;<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">td</span>&gt;</span>$&#123;orderList.o_g_name &#125;<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">td</span>&gt;</span>$&#123;orderList.o_trade_type &#125;<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">td</span>&gt;</span>$&#123;orderList.o_sum_money &#125;<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">td</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">c:choose</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">c:when</span> <span class="attr">test</span>=<span class="string">"$&#123;orderList.o_status == 0&#125;"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">b</span>&gt;</span><span class="tag">&lt;<span class="name">font</span> <span class="attr">color</span>=<span class="string">"blue"</span>&gt;</span>대기중<span class="tag">&lt;/<span class="name">font</span>&gt;</span><span class="tag">&lt;/<span class="name">b</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">c:when</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">c:when</span> <span class="attr">test</span>=<span class="string">"$&#123;orderList.o_status == 1&#125;"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">b</span>&gt;</span>발송준비<span class="tag">&lt;/<span class="name">b</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">c:when</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">c:when</span> <span class="attr">test</span>=<span class="string">"$&#123;orderList.o_status == 2&#125;"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">b</span>&gt;</span>발송완료<span class="tag">&lt;/<span class="name">b</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">c:when</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">c:when</span> <span class="attr">test</span>=<span class="string">"$&#123;orderList.o_status == 3&#125;"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">b</span>&gt;</span><span class="tag">&lt;<span class="name">font</span> <span class="attr">color</span>=<span class="string">"red"</span>&gt;</span>배송중<span class="tag">&lt;/<span class="name">font</span>&gt;</span><span class="tag">&lt;/<span class="name">b</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">c:when</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">c:when</span> <span class="attr">test</span>=<span class="string">"$&#123;orderList.o_status == 4&#125;"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">b</span>&gt;</span><span class="tag">&lt;<span class="name">font</span> <span class="attr">color</span>=<span class="string">"green"</span>&gt;</span>배송완료<span class="tag">&lt;/<span class="name">font</span>&gt;</span><span class="tag">&lt;/<span class="name">b</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">c:when</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">c:when</span> <span class="attr">test</span>=<span class="string">"$&#123;orderList.o_status == 5&#125;"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">b</span>&gt;</span>주문취소<span class="tag">&lt;/<span class="name">b</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">c:when</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">c:otherwise</span>&gt;</span></span><br><span class="line">       <span class="tag">&lt;<span class="name">b</span>&gt;</span>관리자에게 문의하세요<span class="tag">&lt;/<span class="name">b</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">c:otherwise</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">c:choose</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">td</span>&gt;</span>$&#123;orderList.o_date &#125;<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">td</span>&gt;</span>$&#123;orderList.o_trans_num &#125;<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">c:forEach</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">table</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"button"</span> <span class="attr">class</span>=<span class="string">"btn"</span> <span class="attr">value</span>=<span class="string">"메인페이지로"</span> <span class="attr">onclick</span>=<span class="string">"location.href='./Main.me'"</span>&gt;</span></span><br></pre></td></tr></table></figure>]]></content:encoded>
      
      
      <category domain="https://sowon-dev.github.io/categories/JSP/">JSP</category>
      
      
      <category domain="https://sowon-dev.github.io/tags/TIL/">TIL</category>
      
      <category domain="https://sowon-dev.github.io/tags/ITWILL-JAVA/">ITWILL(JAVA)</category>
      
      
      <comments>https://sowon-dev.github.io/2020/09/22/200922jspi/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>프론트엔드 직무멘토링</title>
      <link>https://sowon-dev.github.io/2020/09/21/200921opemsource/</link>
      <guid>https://sowon-dev.github.io/2020/09/21/200921opemsource/</guid>
      <pubDate>Mon, 21 Sep 2020 12:43:44 GMT</pubDate>
      
      <description>&lt;h2 id=&quot;직무멘토링-후기&quot;&gt;&lt;a href=&quot;#직무멘토링-후기&quot; class=&quot;headerlink&quot; title=&quot;직무멘토링 후기&quot;&gt;&lt;/a&gt;직무멘토링 후기&lt;/h2&gt;&lt;p&gt;오늘은 보라님께서 프론트엔드로 근무하시는 현직자분과의 직무멘토링 자리를 마련해주셨다.&lt;br&gt;정말 보라님은 천사인듯.&lt;/p&gt;</description>
      
      
      
      <content:encoded><![CDATA[<h2 id="직무멘토링-후기"><a href="#직무멘토링-후기" class="headerlink" title="직무멘토링 후기"></a>직무멘토링 후기</h2><p>오늘은 보라님께서 프론트엔드로 근무하시는 현직자분과의 직무멘토링 자리를 마련해주셨다.<br>정말 보라님은 천사인듯.</p><a id="more"></a><p>멘토링의 주제는 취준생일때 하면 좋은 것들과 신입일때 하면 좋은 것들에 대해서였고 생각보다 시간이 빨리 흘렀다.<br>막막하기만 했던 취준에 한줄기 빛이랄까…?<br>어두컴컴했던 길을 밝혀주는 빛…!<br>한시간 반이라는 시간동안 엄청나게 꿀팁과 살아있는 지식들을 많이 배웠다.</p><p>어차피 떨어질 코딩테스트라고 생각하고 항상 막막해하고 지원조차를 포기한 적도 많은데 멘토링을 듣고 생각이 바뀌었다. 나처럼 코테 피해가려는 취준생이 많다는 것. 나는 이제 피해지않을 것이다. 어떻게든 부딪혀보자.</p><p>취준하시는 동안 살짝 자만하셨다고 하는데 그 말이 왜 이렇게 부럽던지.<br>나도 자만할 수 있는 사람이었으면 좋겠다. 그만큼 자신의 실력에 자신이 있다는 거니까.</p><p><br><br><br></p><h2 id="취준이야기"><a href="#취준이야기" class="headerlink" title="취준이야기"></a>취준이야기</h2><ol><li>프로젝트는 다다익</li><li>완성을 목표로 하되, 가능하면 출시를 할 것.</li><li>자신이 짠 코드는 100%, 최소한 90%는 이해할 것 =&gt; 면접때 백퍼나옴</li><li>최소한 두명이상의 같은 직군 개발자와 개발해 볼 것.<ul><li>PR 리뷰를 통한 성장</li><li>리베이스/머지 과정에서 충돌 해결 경험</li></ul></li><li>다른 직군 개발자와 개발해볼 것<ul><li>프론트라면 백엔드와 협업 :  API명세, 우선순위 등</li></ul></li><li>디자이너가 있는 곳에거 같이 개발해 볼 것. 기획자도 있으면 더 좋음<ul><li>디자인대로 개발하는 것이 중요하면서도 참 어렵다.</li></ul></li><li>라이브러리를 너무 많이 의존하지말것<ul><li>postcss-loader같은 경우 에러가 발생할 수 있음 -&gt; 서버가 터질 수도 있다.</li><li>라이브러리 최소화하려고 노력할 것</li></ul></li></ol><p><br><br><br></p><h3 id="취업방향-어떻게-잡아야할까"><a href="#취업방향-어떻게-잡아야할까" class="headerlink" title="취업방향 어떻게 잡아야할까?"></a>취업방향 어떻게 잡아야할까?</h3><ol><li>모바일, 웹프론트, 백엔드, 데브옵스, 게임 데이터엔지니어링, 딥러닝 등등 가능한 많은 것을 접해보고 취업방향을 결정하는 것이 좋다. -&gt; 분야를 결정했다면 한가지를 깊게 공부할 것.</li><li>도메인으로 결정해도 좋다<ul><li>예를 들어 스트리밍 음악 서비스같은 것을 구현하고싶다면, <ul><li>벡앤드: 스트리밍 기능, 스트리밍API </li><li>프론트: 음악플레이어</li><li>플랫폼: 웹 앱등</li></ul></li></ul></li></ol><p><br><br><br></p><h3 id="취업전-다른-개발자들과-개발경험은-어디서-쌓을까"><a href="#취업전-다른-개발자들과-개발경험은-어디서-쌓을까" class="headerlink" title="취업전 다른 개발자들과 개발경험은 어디서 쌓을까?"></a>취업전 다른 개발자들과 개발경험은 어디서 쌓을까?</h3><ul><li>동아리 : nexters. yapp, ddd등</li><li>한 커뮤니티를 뚫으면 인맥도 늘어나고 기술도 늘어난다.</li><li>아래 교육은 회사에서도 알아주는 좋은 프로그램이다.<ul><li>SSAFY</li><li>Software maestro</li><li>42 seoul</li><li>BOB 정보보안</li></ul></li></ul><p><br><br><br></p><h3 id="면접준비"><a href="#면접준비" class="headerlink" title="면접준비"></a>면접준비</h3><ol><li><a href="https://github.com/KimHunJin/Study-Book/tree/master/interview">면접질문 리스트</a><ul><li>CS : 운영체제, 자바 어떻게 돌아가는지 등등</li><li>호이스팅이 뭔지? 왜 호이스팅을 쓰는지?</li><li>게임회사 : 게임에 사용되는 프로토콜을 뭘 쓸꺼냐 TCP? UDP??</li></ul></li><li>CS(Computer Science) 위주로 공부<ul><li>무조건 많이 알수록 유리하다</li></ul></li><li>진행한 프로젝트에 대해서 기술위주로 100%이해할 것</li><li>한 가지 언어라도 깊게 공부할 것 =&gt; T자형 인재</li></ol><p><br><br><br></p><h3 id="회사선택의-기준"><a href="#회사선택의-기준" class="headerlink" title="회사선택의 기준"></a>회사선택의 기준</h3><ol><li>최소기준 선정 : 매출액 100억이상, 50명이상, 사수가 있는 회사, 자체 서비스를 보유하고 있는 회사<ul><li>자신만의 기준을 만드는 것이 중요</li><li>포인트는 내가 성장할 수 있는 기준</li></ul></li><li>도메인 선정 : 핀테크, e-commerce</li><li>지원 : 공채는 무조건 넣어볼 것 (떨어져도 영향이 없음) -&gt; 블라인드 코딩테스트 전부 지원<ul><li>혼자서 알고리즘 공부하기 힘들어서 블라인드 코딩테스트를 다 신청해서 준비하면서 공부하게 됨</li></ul></li><li>수시지원도 좋은 경험</li><li>학생의 장점 : 네이버 핵데이, 라인 체험형 인턴등 취업에 비해 경쟁률이 높지 않을 뿐더러 대기업에 입사할 수 있는 가장 좋은 기회</li></ol><p><br><br><br></p><h3 id="Q-출시가-중요하다고-하셨는데-JAVA는-어떻게-출시하면-될까요"><a href="#Q-출시가-중요하다고-하셨는데-JAVA는-어떻게-출시하면-될까요" class="headerlink" title="Q. 출시가 중요하다고 하셨는데 JAVA는 어떻게 출시하면 될까요?"></a>Q. 출시가 중요하다고 하셨는데 JAVA는 어떻게 출시하면 될까요?</h3><blockquote><p>백엔드는 API를 만들 수 있다. 예를 들어 음악을 좋아한다면 스트리밍 API등, 또한 JSP로 웹페이지 만들 수도 있다. 계속 한 가지 기능을 파고드는 것도 좋다.</p></blockquote><h3 id="Q-세미나-스태프나-직접-세미나-운영이랑-홍보해본것도-취업할때-조금은-도움이-될까요"><a href="#Q-세미나-스태프나-직접-세미나-운영이랑-홍보해본것도-취업할때-조금은-도움이-될까요" class="headerlink" title="Q. 세미나 스태프나 직접 세미나 운영이랑 홍보해본것도 취업할때 조금은 도움이 될까요?"></a>Q. 세미나 스태프나 직접 세미나 운영이랑 홍보해본것도 취업할때 조금은 도움이 될까요?</h3><blockquote><p>실력이 최우선이다. 취업에 그렇게 큰 도움이 되지않는다. 하지만 다른 활동을 하면 나란 사람을 파악하는 데에 좋다</p></blockquote><h3 id="Q-현재-회사의-취업과정이-궁금합니다"><a href="#Q-현재-회사의-취업과정이-궁금합니다" class="headerlink" title="Q. 현재 회사의 취업과정이 궁금합니다."></a>Q. 현재 회사의 취업과정이 궁금합니다.</h3><blockquote><p>코딩테스트 합격자 위주로 해커톤을 했고 사이렌오더를 만들어서 성공(클라이언트: 안드로이드) 후 특채로 취업</p></blockquote><p><br><br><br></p><h2 id="신입이야기"><a href="#신입이야기" class="headerlink" title="신입이야기"></a>신입이야기</h2><h3 id="신입자세"><a href="#신입자세" class="headerlink" title="신입자세"></a>신입자세</h3><ul><li>가능하면 기록할 것</li><li>회사는 배우는 곳이 아님 스스로 찾아내고 학습하고 성장함</li><li>모든 작업내용은(자신이 무엇을 했는지) 팀원들에게 공유할 것 -&gt; 얘는 뭘 하고있구나를 사수들이 알 수 있음.</li><li>오히려 이 시기에 질문을 많이 하는 것이 좋음</li><li>신입때는 보통 간단한 토이 프로젝트를 진행하게 됨. 시간이 남으면 회사 프로젝트의 구조 파악할 것<ul><li>webpack 설정, directory구조,  architecture패턴등 공부할 것이 많음 =&gt; 레포파서 똑같이 만들어 볼 것</li></ul></li></ul><p><br><br><br></p><h2 id="사수가-바라는-신입"><a href="#사수가-바라는-신입" class="headerlink" title="사수가 바라는 신입"></a>사수가 바라는 신입</h2><ul><li>탄탄하게 성장해주고 커피를 사달라고해도 좋아한다. 한번씩 사주고 (기브앤테이크) </li><li>해볼것을 다 다해보고 해본 내용을 정리한 뒤 이런거 해보고 저런거해봤는데 이런결과만 나왔습니다 조언이 필요합니다 라는 식으로 질문을 할 것.</li></ul><p><br><br><br></p><h3 id="신입-사수에게-질문하기-좋은-타이밍"><a href="#신입-사수에게-질문하기-좋은-타이밍" class="headerlink" title="신입 사수에게 질문하기 좋은 타이밍"></a>신입 사수에게 질문하기 좋은 타이밍</h3><ul><li>DM으로 질문해도 괜찮은지 물어보는 것이 예의</li><li>질문을 올려놓고 편할때 답을 달라고 해도 됨</li><li>채팅을 통한 질문은 비동기임(시간이 되면 답을 주는 것)</li><li>대면질문이 가장 좋다. </li></ul><p><br><br><br></p><h3 id="Q-40-50대-개발자분들도-많이-있나요"><a href="#Q-40-50대-개발자분들도-많이-있나요" class="headerlink" title="Q. 40~50대 개발자분들도 많이 있나요?"></a>Q. 40~50대 개발자분들도 많이 있나요?</h3><blockquote><p>개발자 수명은 자신의 노력에 따라 다르다. 40~50대도 현업에 계시는 분이 있다. 개발자의 수명은 자신의 손에 달려있다.</p></blockquote><h3 id="Q-회사에서-가장-많이-하시는-일이-뭔지-자세히-알려주실-수-있으신가요"><a href="#Q-회사에서-가장-많이-하시는-일이-뭔지-자세히-알려주실-수-있으신가요" class="headerlink" title="Q. 회사에서 가장 많이 하시는 일이 뭔지 자세히 알려주실 수 있으신가요?"></a>Q. 회사에서 가장 많이 하시는 일이 뭔지 자세히 알려주실 수 있으신가요?</h3><blockquote><p>마크업작업(컴포넌트를 많이 사용, 디자인시스템인 <em>스토리북</em>을 사용하여 정형화된 디자인을 사용) -&gt; API붙이는거(명세서는 백엔드에서 작성한 걸 보고 함 -&gt; 올드한 방식 <em>지라</em>문서 -&gt; <em>스웨거</em>를 최근 자주 사용)</p></blockquote><p><br><br><br></p><h4 id="스토리북"><a href="#스토리북" class="headerlink" title="스토리북"></a><a href="https://storybook.js.org/docs/react/get-started/introduction">스토리북</a></h4><blockquote><p>페이지 단위의 개발이 이루어지던 과거와 달리 요즘의 프론트엔드 개발은 주로 컴포넌트 단위로 이루어진다. 이 컴포넌트라는 개념은 사용하는 라이브러리나 프레임워크에 따라 구현 방식이 다르지만, 철학은 거의 동일하다. 원래 컴포넌트는 외부 상태의 영향을 받지않는 독립된 개체로서, 고립된 환경에서도 자신만의 스타일과 상태를 가질 수 있어야 한다.<br>컴포넌트 단위의 개발 환경을 지원하는 도구다. 개발자가 뷰를 개발할 때 고립된 환경을 제공해서 관심사를 의존성과 환경으로부터 분리시켜 준다.<br>출처 : <a href="https://hyunseob.github.io/2018/01/08/storybook-beginners-guide/">https://hyunseob.github.io/2018/01/08/storybook-beginners-guide/</a></p></blockquote><ul><li><a href="https://mygumi.tistory.com/364">Storybook 도입 - 마이구미</a></li><li>깃허브 저장소 : <a href="https://github.com/storybookjs/storybook/tree/master/addons/docs">https://github.com/storybookjs/storybook/tree/master/addons/docs</a></li><li>스토리북 예시</li></ul><iframe width="100%" height="300px" src="https://storybook.js.org/7e71705d211e17a2967606c49059e891/storybook-hero-video-optimized.mp4" frameborder="0" allow="autoplay;encrypted-media;" allowfullscreen></iframe><p><br><br><br></p><h4 id="지라"><a href="#지라" class="headerlink" title="지라"></a><a href="https://www.atlassian.com/ko/software/jira/guides/use-cases/what-is-jira-used-for">지라</a></h4><ul><li>모든 유형의 팀이 작업을 관리할 수 있도록 설계됨. </li><li>원래 Jira는 버그 및 이슈 트랙커로 고안되었지만, 오늘날에는 요구 사항 및 테스트 사례 관리에서 애자일 소프트웨어 개발에 이르기까지 모든 유형의 사례에 적용할 수 있는 작업 관리 도구</li><li><a href="http://melonicedlatte.com/softwareengineering/2017/10/15/212131.html">소프트웨어 프로세스 관리 도구 JIRA 와 사용법 정리 - melonicedlatte</a></li></ul><p><br><br><br></p><h4 id="스웨거"><a href="#스웨거" class="headerlink" title="스웨거"></a><a href="https://swagger.io/">스웨거</a></h4><ul><li>API 관리 도구</li><li>전체 API에 대한 개요를 작성할 수 있으며, 추가적으로 태그(Tag)를 넣어서 각 API를 분류가능</li><li><a href="https://ndb796.tistory.com/249">Swagger Hub를 이용한 REST API 관리 - 안경잡이 개발자</a></li></ul>]]></content:encoded>
      
      
      <category domain="https://sowon-dev.github.io/categories/%EC%98%A4%ED%94%88%EC%86%8C%EC%8A%A4%EC%BB%A8%ED%8A%B8%EB%A6%AC%EB%B7%B0%ED%86%A42020/">오픈소스컨트리뷰톤2020</category>
      
      
      <category domain="https://sowon-dev.github.io/tags/Review/">Review</category>
      
      <category domain="https://sowon-dev.github.io/tags/Journal/">Journal</category>
      
      
      <comments>https://sowon-dev.github.io/2020/09/21/200921opemsource/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>DB유저관리 : user 생성, 권한부여, 패스워드관리</title>
      <link>https://sowon-dev.github.io/2020/09/21/200921dbi/</link>
      <guid>https://sowon-dev.github.io/2020/09/21/200921dbi/</guid>
      <pubDate>Mon, 21 Sep 2020 00:05:20 GMT</pubDate>
      
      <description>&lt;h2 id=&quot;user-생성&quot;&gt;&lt;a href=&quot;#user-생성&quot; class=&quot;headerlink&quot; title=&quot;user 생성&quot;&gt;&lt;/a&gt;user 생성&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;create user 권한 소유자가 DB에 USER 생성 가능&lt;ul&gt;
&lt;li&gt;user명, 초기패스워드를 설정하여 유저를 생성한 뒤 어떤 권한을 줄지 확인</description>
      
      
      
      <content:encoded><![CDATA[<h2 id="user-생성"><a href="#user-생성" class="headerlink" title="user 생성"></a>user 생성</h2><ul><li>create user 권한 소유자가 DB에 USER 생성 가능<ul><li>user명, 초기패스워드를 설정하여 유저를 생성한 뒤 어떤 권한을 줄지 확인<a id="more"></a></li></ul></li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">$&gt; conn sys/oracle as sysdba</span><br><span class="line">$&gt; create user demo identified by 초기패스워드;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">$&gt; conn demo/초기패스워드</span><br><span class="line">//출력값</span><br><span class="line">ERROR: DB에 접속할 수 있는 권한 부족</span><br><span class="line">//에러 발생하여 현재 접속된 유저가 없는 상태이다</span><br><span class="line"></span><br><span class="line">SQL&gt; conn sys/oracle as sysdba</span><br><span class="line">Connected.</span><br><span class="line">SQL&gt; grant create session, create table    </span><br><span class="line">  2  to demo;</span><br><span class="line">Grant succeeded.</span><br><span class="line"></span><br><span class="line">//권한이 생겨서 접속 성공</span><br><span class="line">SQL&gt; conn demo/demo</span><br><span class="line">Connected.</span><br><span class="line">SQL&gt; show user</span><br><span class="line">USER is <span class="string">"DEMO"</span></span><br></pre></td></tr></table></figure><p><br><br><br></p><h3 id="명령어로-user-생성"><a href="#명령어로-user-생성" class="headerlink" title="명령어로 user 생성"></a>명령어로 user 생성</h3><ul><li>default로 설정한 테이블스페이스의 공간할당을 user생성시 바로 처리한다.</li><li>default T/S외 <a href="https://sowon-dev.github.io/2020/09/18/200918dbi/#datafile-%EB%82%B4%EC%9A%A9-%EB%B3%B4%EA%B8%B0">다른 T/S(ex user, system, sysaux, 새로_생성한_T/S)</a><ul><li>undo, temp는 디폴트 T/S로 사용할 수 없다.</li></ul></li><li>system, sysaux는 default T/S로 설정하는 것은 좋지 않다.</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">//기본값</span><br><span class="line">create user 새로운_유저명</span><br><span class="line">identified by 새로운_비밀번호</span><br><span class="line">default tablespace 테이블스페이스명</span><br><span class="line">temporary tablespace temp</span><br><span class="line">quota 사이즈 on 위와_동일한_테이블스페이스명</span><br><span class="line">quota 사이즈 on users;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">//예시</span><br><span class="line">create user <span class="built_in">test</span></span><br><span class="line">identified by <span class="built_in">test</span></span><br><span class="line">default tablespace example</span><br><span class="line">temporary tablespace temp</span><br><span class="line">quota 30M on example</span><br><span class="line">quota 20M on users;</span><br></pre></td></tr></table></figure><p><br><br><br></p><h3 id="EM으로-user-생성"><a href="#EM으로-user-생성" class="headerlink" title="EM으로 user 생성"></a>EM으로 user 생성</h3><p><img src="/img/200921dbi.PNG" alt=""></p><p><br><br><br></p><h3 id="user계정잠금"><a href="#user계정잠금" class="headerlink" title="user계정잠금"></a>user계정잠금</h3><ul><li>유저한 명이 퇴사한 경우 lock하지않으면 그 계정으로 해킹시도가 일어날 수 있다.</li><li>후임자가 들어오면 unlock하면 됨</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">//계정잠금</span><br><span class="line">$&gt; alter user 유저명 account lock;</span><br><span class="line"></span><br><span class="line">//계정잠금해제</span><br><span class="line">$&gt; alter user 유저명 account unlock;</span><br></pre></td></tr></table></figure><p><br><br><br></p><h2 id="권한유형-2가지"><a href="#권한유형-2가지" class="headerlink" title="권한유형 2가지"></a>권한유형 2가지</h2><table><thead><tr><th align="center">권한유형</th><th align="center">개념</th><th align="center">소유자</th></tr></thead><tbody><tr><td align="center">System권한</td><td align="center">DB를 조작할 수 있는 권한. 대략 100개 정도 된다.</td><td align="center">DBA</td></tr><tr><td align="center">Object권한</td><td align="center">Object를 조작할 수 있는 권한.</td><td align="center">Object소유자</td></tr></tbody></table><p><br><br><br></p><h2 id="System권한"><a href="#System권한" class="headerlink" title="System권한"></a>System권한</h2><h3 id="System권한-부여"><a href="#System권한-부여" class="headerlink" title="System권한 부여"></a>System권한 부여</h3><ul><li><code>with admin option</code> 옵션 : sys사용자가 나눠준 옵션을 다른 유저에게 나눠줄 수 있는 권한을 주는 옵션 </li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">SQL&gt; conn sys/oracle as sysdba</span><br><span class="line">Connected.</span><br><span class="line">SQL&gt; grant create session, create table, create sequence, create view</span><br><span class="line">  2  to demo</span><br><span class="line">  3  with admin option;</span><br><span class="line"></span><br><span class="line">Grant succeeded.</span><br><span class="line"></span><br><span class="line">SQL&gt; conn demo/demo</span><br><span class="line">Connected.</span><br><span class="line">SQL&gt; show user</span><br><span class="line">USER is <span class="string">"DEMO"</span></span><br></pre></td></tr></table></figure><p><br><br><br></p><h3 id="System권한-회수"><a href="#System권한-회수" class="headerlink" title="System권한 회수"></a>System권한 회수</h3><ul><li><code>with admin option</code> 옵션으로 퍼져나간 시스템권한도 연쇄적으로 같이 회수될까?<ul><li>퍼져나간 시스템권한은 연쇄적으로 회수되지않는다.</li><li>직접 명령어를 실행(revoke)해서 시스템권한을 각각 회수해야한다.</li></ul></li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">SQL&gt; conn sys/oracle as sysdba</span><br><span class="line">Connected.</span><br><span class="line">SQL&gt; revoke create table</span><br><span class="line">  2  from demo;</span><br><span class="line"></span><br><span class="line">Revoke succeeded.</span><br></pre></td></tr></table></figure><p><br><br><br></p><h2 id="Object권한"><a href="#Object권한" class="headerlink" title="Object권한"></a>Object권한</h2><h3 id="Object권한-부여"><a href="#Object권한-부여" class="headerlink" title="Object권한 부여"></a>Object권한 부여</h3><ul><li>hr사용자의 employees테이블의 내용을 select해보자</li><li><code>with grant option</code> 옵션 : 오브젝트소유자가 나눠준 권한을 받은 유저가 다른 유저에게 자신이 받은 오브젝트 권한을 나눠줄 수 있다.</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">SQL&gt; conn demo/demo</span><br><span class="line">Connected.</span><br><span class="line">SQL&gt; col last_name format a20</span><br><span class="line">SQL&gt; select employee_id, last_name  </span><br><span class="line">  2  from employees</span><br><span class="line">  </span><br><span class="line">ERROR at line 2:</span><br><span class="line">ORA-00942: table or view does not exist</span><br></pre></td></tr></table></figure><ul><li>ERROR가 발생한다 =&gt; demo 사용자가 가지고 있는 employees테이블이 없기때문에<ul><li>우린 다른 유저인 hr소유의 테이블을 검색하고싶다 어떻게 해야할까?</li></ul></li><li>Object의 소유자인 hr을 테이블명앞에 명시해보자.</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">SQL&gt; select employee_id, last_name</span><br><span class="line">  2 from hr.employees;</span><br><span class="line"></span><br><span class="line">ERROR at line 2:</span><br><span class="line">ORA-00942: table or view does not exist</span><br></pre></td></tr></table></figure><ul><li>여전히 에러가 발생한다. 왜일까? =&gt; 권한이 없기때문에</li><li>권한은 누가 줄수있을까? 원칙적으로 object의 소유자인 hr이 demo에게 권한을 줘야한다.<ul><li>DBA인 sys도 권한을 줄 수 있다. </li><li>sys가 demo사용자에게 hr소유의 권한을 줄때의 명령어는 아래와 같다.<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">grant select, insert</span><br><span class="line">on hr.employees</span><br><span class="line">to demo;</span><br></pre></td></tr></table></figure></li></ul></li><li>권한으로 뭘 줄수있을까?<ul><li><a href="https://www.cubrid.org/manual/ko/9.1.0/sql/authorization.html#granting-authorization">select, insert, update, delete 등등</a></li></ul></li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">SQL&gt; conn hr/hr</span><br><span class="line">Connected.</span><br><span class="line">SQL&gt; grant select, insert</span><br><span class="line">  2  on employees </span><br><span class="line">  3  to demo</span><br><span class="line">  4  with grant option;</span><br><span class="line"></span><br><span class="line">Grant succeeded.</span><br><span class="line"></span><br><span class="line">SQL&gt; select employee_id, last_name</span><br><span class="line">  2  from hr.employees;</span><br><span class="line"></span><br><span class="line">EMPLOYEE_ID LAST_NAME</span><br><span class="line">----------- --------------------</span><br><span class="line">174 Abel</span><br><span class="line">(중량)</span><br><span class="line">107 rows selected.</span><br></pre></td></tr></table></figure><ul><li>성공적으로 실행됨을 확인할 수 있다.</li></ul><p><br><br><br></p><h3 id="Object권한-회수"><a href="#Object권한-회수" class="headerlink" title="Object권한 회수"></a>Object권한 회수</h3><ul><li><code>with grant option</code> 옵션으로 퍼져나간 오브젝트권한도 연쇄적으로 회수가능할까?<ul><li>퍼져나간 오브젝트권한도 연쇄적으로 회수 가능하다.(cascade효과)</li></ul></li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">SQL&gt; conn hr/hr</span><br><span class="line">Connected.</span><br><span class="line">SQL&gt; revoke select, insert</span><br><span class="line">  2  on employees</span><br><span class="line">  3  from demo;</span><br><span class="line"></span><br><span class="line">Revoke succeeded.</span><br><span class="line"></span><br><span class="line">SQL&gt; conn demo/demo</span><br><span class="line">Connected.</span><br><span class="line">SQL&gt; </span><br><span class="line">  1  select employee_id, last_name</span><br><span class="line">  2* from hr.employees;</span><br><span class="line">ERROR at line 2:</span><br><span class="line">ORA-00942: table or view does not exist</span><br></pre></td></tr></table></figure><ul><li>퍼져나간 오브젝트권한도 연쇄적으로 회수 가능하다.</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">//에러발생</span><br><span class="line">ERROR at line 1:</span><br><span class="line">ORA-01727: numeric precision specifier is out of range (1 to 38)</span><br></pre></td></tr></table></figure><p><br><br><br></p><h2 id="패스워드관리"><a href="#패스워드관리" class="headerlink" title="패스워드관리"></a>패스워드관리</h2><ul><li>초기패스워드는 DBA가 생성한다.</li><li>패스워드 변경하는 명령어</li><li>user생성 시 profile에 대한 정의를 생략하면 default profile을 할당받는다.</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">&#x2F;&#x2F;기본형</span><br><span class="line">alter user 유저명</span><br><span class="line">indentified by 새로운_비밀번호;</span><br><span class="line"></span><br><span class="line">&#x2F;&#x2F;예시</span><br><span class="line">SQL&gt; alter user demo</span><br><span class="line">  2  identified by a1234;</span><br><span class="line"></span><br><span class="line">User altered.</span><br></pre></td></tr></table></figure><p><br><br><br></p><h3 id="profile-프로파일"><a href="#profile-프로파일" class="headerlink" title="profile(프로파일)"></a>profile(프로파일)</h3><ul><li>uesr의 패스워드 관리 방법이 정의된 파일</li><li>모든 user는 반드시 하나의 profile을 할당받는다.</li><li>profile 내 암호 보안 기능 설정 종류</li></ul><table><thead><tr><th align="center">명령어</th><th align="center">설명</th></tr></thead><tbody><tr><td align="center">FAILED_LOGIN_ATTEMPTS</td><td align="center">로그인 시도 실패 횟수 지정</td></tr><tr><td align="center">PASSWORD_LOCK_TIME</td><td align="center">지정된 로그인 연속 실패 횟수 이후 LOCK 상태로 유지되는 기간일 지정</td></tr><tr><td align="center">PASSWORD_LIFE_TIME</td><td align="center">암호가 만료되기 전 사용할 수 있는 기간 지정. 이 기간 내에 암호를 바꾸지 않으면 암호가 만료되어 이후 연결 거부</td></tr><tr><td align="center">PASSWORD_GRACE_TIME</td><td align="center">암호 만료 후 비밀번호 변경을 위한 유예기간(경고는 표시하지만 로그인을 허용) 지정. 유예 기간 동안 암호를 바꾸지 않으면 암호가 만료됨</td></tr><tr><td align="center">PASSWORD_REUSE_TIME</td><td align="center">암호를 재사용할 수 있는 기간 지정. PASSWORD_REUSE_TIME을 정수 값으로 설정한 경우에는 PASSWORD_REUSE_MAX를 UNLIMITED로 설정해야 함</td></tr><tr><td align="center">PASSWORD_REUSE_MAX</td><td align="center">현재 암호를 재사용할 수 있기 전에 필요한 암호 변경 횟수 지정. PASSWORD_REUSE_MAX를 정수 값으로 설정한 경우에는  PASSWORD_REUSE_TIME을 UNLIMITED로 설정해야 함</td></tr><tr><td align="center">PASSWORD_VERIFY_FUNCTION</td><td align="center">암호 복잡성 검사를 수행할 PL/SQL 함수를 CREATE PROFILE문에 인수로 전달함. ex) 비번은 영문대소문자와 특수묹 혼합 8글자이상이면서 아이디와 비번 똑같이 설정 금지하는 함수. 오라클이 기본적으로 제공하는 함수 <code>$&gt; @?/rdbms/admin/utlpwdmg.sql</code></td></tr><tr><td align="center">PROFILE</td><td align="center">생성할 프로파일 이름</td></tr></tbody></table><p><img src="https://t1.daumcdn.net/cfile/tistory/20256B314C81C79D09?original" alt="https://sksstar.tistory.com/115"></p>]]></content:encoded>
      
      
      <category domain="https://sowon-dev.github.io/categories/Database/">Database</category>
      
      <category domain="https://sowon-dev.github.io/categories/Database/Oracle/">Oracle</category>
      
      
      <category domain="https://sowon-dev.github.io/tags/TIL/">TIL</category>
      
      <category domain="https://sowon-dev.github.io/tags/ITWILL-JAVA/">ITWILL(JAVA)</category>
      
      <category domain="https://sowon-dev.github.io/tags/Oracle/">Oracle</category>
      
      
      <comments>https://sowon-dev.github.io/2020/09/21/200921dbi/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>datafile 관리하기</title>
      <link>https://sowon-dev.github.io/2020/09/18/200918dbi/</link>
      <guid>https://sowon-dev.github.io/2020/09/18/200918dbi/</guid>
      <pubDate>Fri, 18 Sep 2020 00:09:39 GMT</pubDate>
      
      <description>&lt;h2 id=&quot;datafile-저장영역-구조&quot;&gt;&lt;a href=&quot;#datafile-저장영역-구조&quot; class=&quot;headerlink&quot; title=&quot;datafile 저장영역 구조&quot;&gt;&lt;/a&gt;datafile 저장영역 구조&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;모든 Datafile은 Tablespace로 감싸져있어야한다&lt;/li&gt;
&lt;li&gt;Tablespace : 논리적 저장 영역 구조&lt;ul&gt;
&lt;li&gt;논리적이기때문에 SIZE가 없다.</description>
      
      
      
      <content:encoded><![CDATA[<h2 id="datafile-저장영역-구조"><a href="#datafile-저장영역-구조" class="headerlink" title="datafile 저장영역 구조"></a>datafile 저장영역 구조</h2><ul><li>모든 Datafile은 Tablespace로 감싸져있어야한다</li><li>Tablespace : 논리적 저장 영역 구조<ul><li>논리적이기때문에 SIZE가 없다.<a id="more"></a></li></ul></li><li>Tablespace 개수 ≤ Datafile 개수<ul><li>Tablespace개수가 Datafile개수보다 더 많을 수 없다.</li></ul></li><li>DB생성시 system데이터파일/system테이블스페이스와 undo데이터파일/undo테이블스페이스는 필수이다.</li><li>두 용어의 차이. 헷갈리지말 것<ul><li>extent : segment(객체)의 확장단위·할당단위</li><li>extend : datafile의 확장단위</li></ul></li></ul><p><img src="http://4.bp.blogspot.com/_4aO57QMQCR0/STZEdYFq-AI/AAAAAAAAAD8/B-AdKdMU3JU/s1600/logical_phisical_structure.JPG" alt="http://ora-performance-tuning.blogspot.com/2014/02/logical-and-physical-database-structures.html"></p><p><br><br><br></p><h2 id="datafile-내용-보기"><a href="#datafile-내용-보기" class="headerlink" title="datafile 내용 보기"></a>datafile 내용 보기</h2><ul><li>데이터파일안의 구성은 v$datafile와 v$tempfile를 통해서 알 수 있다.</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">SQL&gt; select name from v<span class="variable">$datafile</span>;</span><br><span class="line"></span><br><span class="line">NAME</span><br><span class="line">--------------------------------------------------------------------------------</span><br><span class="line">/u01/app/oracle/oradata/ORCL/datafile/o1_mf_system_fwvn49fw_.dbf</span><br><span class="line">/u01/app/oracle/oradata/ORCL/datafile/o1_mf_sysaux_fwvn5f1l_.dbf</span><br><span class="line">/u01/app/oracle/oradata/ORCL/datafile/o1_mf_undotbs1_fwvn66mp_.dbf</span><br><span class="line">/u01/app/oracle/oradata/ORCL/datafile/o1_mf_users_fwvn681o_.dbf</span><br><span class="line"></span><br><span class="line">SQL&gt; select name from v<span class="variable">$tempfile</span>;</span><br><span class="line"></span><br><span class="line">NAME</span><br><span class="line">--------------------------------------------------------------------------------</span><br><span class="line">/u01/app/oracle/oradata/ORCL/datafile/o1_mf_temp_fwvnbgvk_.tmp</span><br></pre></td></tr></table></figure><ul><li><code>system.dbf</code> : Data dictionary</li><li><code>sysaux.dbf</code> : 통계 데이터을 모아놓은 파일,</li><li><code>undo.dbf</code> : undo데이터, DML작업은 COMMIT도 되지만 ROLLBACK도 되기때문에 오라클은 변경작업하기전에 이전 데이터의 복사본을 UNDO데이터 파일에 올려놓는다.</li><li><code>users.dbf</code> :  일반 user 소유의 object를 보관하기 위한 파일</li><li><code>temp.tmp</code> : 임시데이터. sub쿼리의 결과값을 저장하는 파일(메인쿼리실행할때 참조함), order by절이나 group by절을 실행하면 정렬을 해야하므로 임시데이터를 생성함. dist 중복된 값 제거를 위해서 정렬을 해야하기때문에 임시데이터를 생성함.</li><li>일반적인 회사는 <code>system.dbf</code>, <code>sysaux.dbf</code>, <code>undo.dbf</code>,<code>temp.tmp</code>는 기본으로 있고 회사의 규모에 따라 <code>users.dbf</code>파일의 개수가 차이난다.</li></ul><p><br><br><br></p><h2 id="Tablespace이름과-datafile이름을-함께-보는-쿼리"><a href="#Tablespace이름과-datafile이름을-함께-보는-쿼리" class="headerlink" title="Tablespace이름과 datafile이름을 함께 보는 쿼리"></a>Tablespace이름과 datafile이름을 함께 보는 쿼리</h2><ul><li>tablespace의 개수와 tablespace이름, 데이터파일이름을 알아보는 쿼리이다.</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">  1  select d.ts<span class="comment">#, t.name as "T/S name", d.name "Datafile name"</span></span><br><span class="line">  2  from v<span class="variable">$datafile</span> d</span><br><span class="line">  3  join v<span class="variable">$tablespace</span> t</span><br><span class="line">  4* on d.ts<span class="comment"># = t.ts#</span></span><br><span class="line">SQL&gt; /</span><br><span class="line"></span><br><span class="line">       TS<span class="comment"># T/S nameDatafile name</span></span><br><span class="line">---------- -------------------- ----------------------------------------</span><br><span class="line"> 0 SYSTEM/u01/app/oracle/oradata/ORCL/datafile/o1</span><br><span class="line">_mf_system_fwvn49fw_.dbf</span><br><span class="line"></span><br><span class="line"> 1 SYSAUX/u01/app/oracle/oradata/ORCL/datafile/o1</span><br><span class="line">_mf_sysaux_fwvn5f1l_.dbf</span><br><span class="line"></span><br><span class="line"> 2 UNDOTBS1/u01/app/oracle/oradata/ORCL/datafile/o1</span><br><span class="line">_mf_undotbs1_fwvn66mp_.dbf</span><br><span class="line"></span><br><span class="line"> 4 USERS/u01/app/oracle/oradata/ORCL/datafile/o1</span><br><span class="line">_mf_users_fwvn681o_.dbf</span><br></pre></td></tr></table></figure><p><br><br><br></p><h2 id="DB공간관리-DB공간-늘리는-3가지-방법"><a href="#DB공간관리-DB공간-늘리는-3가지-방법" class="headerlink" title="DB공간관리, DB공간 늘리는 3가지 방법"></a>DB공간관리, DB공간 늘리는 3가지 방법</h2><ol><li>새로운 Tablespace를 추가해서 DB공간을 늘릴 수 있다.<ul><li>why? Tablespace를 추가하려면 반드시 하나이상의 데이터파일이 속해있어야한다.</li><li>따라서 데이터파일의 물리적 크기만큼 DB공간을 늘릴 수 있다.</li></ul></li><li>기존 Tablespace에 데이터파일을 추가하여 DB공간을 늘릴 수 있다.</li><li>기존 데이터파일의 크기를 늘려서 DB공간을 늘릴 수 있다.</li></ol><p><br><br><br></p><h3 id="EM을-이용하여-새로운-Tablespace를-추가해서-DB공간을-늘리기"><a href="#EM을-이용하여-새로운-Tablespace를-추가해서-DB공간을-늘리기" class="headerlink" title="EM을 이용하여 새로운 Tablespace를 추가해서 DB공간을 늘리기"></a>EM을 이용하여 새로운 Tablespace를 추가해서 DB공간을 늘리기</h3><ul><li>EM접속 -&gt; storage탭 -&gt; Tablespace 클릭 -&gt; create버튼 클릭 -&gt; 속성 설정하고 OK</li></ul><p><img src="/img/200918db1.PNG" alt=""><br><img src="/img/200918db2.PNG" alt=""></p><p><br><br><br></p><h3 id="EM을-이용하여-기존-Tablespace에-데이터파일을-추가하여-DB공간-늘리기"><a href="#EM을-이용하여-기존-Tablespace에-데이터파일을-추가하여-DB공간-늘리기" class="headerlink" title="EM을 이용하여 기존 Tablespace에 데이터파일을 추가하여 DB공간 늘리기"></a>EM을 이용하여 기존 Tablespace에 데이터파일을 추가하여 DB공간 늘리기</h3><ul><li>EM접속 -&gt; storage탭 -&gt; Tablespace 클릭 -&gt; 기존테이블스페이스 클릭 -&gt; add datafile 버튼 클릭 -&gt; 속성 설정하고 OK</li></ul><p><img src="/img/200918db3.PNG" alt=""></p><p><br><br><br></p><h3 id="EM을-이용하여-기존-데이터파일의-크기를-늘려서-DB공간을-늘리기"><a href="#EM을-이용하여-기존-데이터파일의-크기를-늘려서-DB공간을-늘리기" class="headerlink" title="EM을 이용하여 기존 데이터파일의 크기를 늘려서 DB공간을 늘리기"></a>EM을 이용하여 기존 데이터파일의 크기를 늘려서 DB공간을 늘리기</h3><ul><li>EM접속 -&gt; storage탭 -&gt; Tablespace 클릭 -&gt; 기존 데이터파일의 클릭 -&gt; action 버튼 클릭 -&gt; resize 클릭 -&gt; 속성 설정하고 OK</li></ul><p><img src="/img/200918db4.PNG" alt=""></p><p><br><br><br></p><h3 id="명령어로-새로운-Tablespace를-추가해서-DB공간을-늘리기"><a href="#명령어로-새로운-Tablespace를-추가해서-DB공간을-늘리기" class="headerlink" title="명령어로 새로운 Tablespace를 추가해서 DB공간을 늘리기"></a>명령어로 새로운 Tablespace를 추가해서 DB공간을 늘리기</h3><ul><li><code>autoextend on</code> : 자동확장기능 옵션, 기존사이즈 100M가 다 차면 10M씩 최대 500M까지 늘어난다<ul><li>maxsize지정안하면 사이즈가 무한대다.</li></ul></li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line">SQL&gt; create tablespace appuser                                                            </span><br><span class="line">  2  datafile <span class="string">'/u01/app/oracle/oradata/ORCL/datafile/appuser01.dbf'</span> size 100M</span><br><span class="line">  3  autoextend on next 10M maxsize 500M;</span><br><span class="line"></span><br><span class="line">Tablespace created.</span><br><span class="line"></span><br><span class="line">//생성한 테이블스페이스 확인하기</span><br><span class="line">SQL&gt; select d.ts<span class="comment">#, t.name as "T/S name", d.name "Datafile name"</span></span><br><span class="line">  2  from v<span class="variable">$datafile</span> d</span><br><span class="line">  3  join v<span class="variable">$tablespace</span> t</span><br><span class="line">  4  on d.ts<span class="comment"># = t.ts#;</span></span><br><span class="line"></span><br><span class="line">       TS<span class="comment"># T/S nameDatafile name</span></span><br><span class="line">---------- -------------------- ----------------------------------------</span><br><span class="line"> 0 SYSTEM/u01/app/oracle/oradata/ORCL/datafile/o1</span><br><span class="line">_mf_system_fwvn49fw_.dbf</span><br><span class="line"></span><br><span class="line"> 4 USERS/u01/app/oracle/oradata/ORCL/datafile/o1</span><br><span class="line">_mf_users_hp871s7n_.dbf</span><br><span class="line"></span><br><span class="line"> 1 SYSAUX/u01/app/oracle/oradata/ORCL/datafile/o1</span><br><span class="line">_mf_sysaux_fwvn5f1l_.dbf</span><br><span class="line"></span><br><span class="line"> 2 UNDOTBS1/u01/app/oracle/oradata/ORCL/datafile/o1</span><br><span class="line">_mf_undotbs1_fwvn66mp_.dbf</span><br><span class="line"></span><br><span class="line">       TS<span class="comment"># T/S nameDatafile name</span></span><br><span class="line">---------- -------------------- ----------------------------------------</span><br><span class="line"></span><br><span class="line"> 6 EXAMPLE/u01/app/oracle/oradata/ORCL/datafile/o1</span><br><span class="line">_mf_example_hp86s7s0_.dbf</span><br><span class="line"></span><br><span class="line"> 4 USERS/u01/app/oracle/oradata/ORCL/datafile/o1</span><br><span class="line">_mf_users_fwvn681o_.dbf</span><br><span class="line"></span><br><span class="line"> 7 APPUSER/u01/app/oracle/oradata/ORCL/datafile/ap</span><br><span class="line">puser01.dbf</span><br><span class="line">7 rows selected.</span><br></pre></td></tr></table></figure><p><br><br><br></p><h3 id="명령어로-기존-Tablespace에-데이터파일을-추가하여-DB공간-늘리기"><a href="#명령어로-기존-Tablespace에-데이터파일을-추가하여-DB공간-늘리기" class="headerlink" title="명령어로 기존 Tablespace에 데이터파일을 추가하여 DB공간 늘리기"></a>명령어로 기존 Tablespace에 데이터파일을 추가하여 DB공간 늘리기</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line">SQL&gt; alter tablespace appuser</span><br><span class="line">  2  add datafile <span class="string">'/u01/app/oracle/oradata/ORCL/datafile/appuser02.dbf'</span> size 50M;</span><br><span class="line"></span><br><span class="line">Tablespace altered.</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">//기존 테이블스페이스에 새로 셍성한 데이터파일 확인하기</span><br><span class="line">SQL&gt; @/home/oracle/checkTablespaceNname.sql</span><br><span class="line"></span><br><span class="line">       TS<span class="comment"># T/S nameDatafile name</span></span><br><span class="line">---------- -------------------- ----------------------------------------</span><br><span class="line"> 0 SYSTEM/u01/app/oracle/oradata/ORCL/datafile/o1</span><br><span class="line">_mf_system_fwvn49fw_.dbf</span><br><span class="line"></span><br><span class="line"> 4 USERS/u01/app/oracle/oradata/ORCL/datafile/o1</span><br><span class="line">_mf_users_hp871s7n_.dbf</span><br><span class="line"></span><br><span class="line"> 1 SYSAUX/u01/app/oracle/oradata/ORCL/datafile/o1</span><br><span class="line">_mf_sysaux_fwvn5f1l_.dbf</span><br><span class="line"></span><br><span class="line"> 2 UNDOTBS1/u01/app/oracle/oradata/ORCL/datafile/o1</span><br><span class="line">_mf_undotbs1_fwvn66mp_.dbf</span><br><span class="line"></span><br><span class="line"> 6 EXAMPLE/u01/app/oracle/oradata/ORCL/datafile/o1</span><br><span class="line">_mf_example_hp86s7s0_.dbf</span><br><span class="line"></span><br><span class="line"> 4 USERS/u01/app/oracle/oradata/ORCL/datafile/o1</span><br><span class="line">_mf_users_fwvn681o_.dbf</span><br><span class="line"></span><br><span class="line"> 7 APPUSER/u01/app/oracle/oradata/ORCL/datafile/ap</span><br><span class="line">puser01.dbf</span><br><span class="line"></span><br><span class="line"> 7 APPUSER/u01/app/oracle/oradata/ORCL/datafile/ap</span><br><span class="line">puser02.dbf</span><br><span class="line">8 rows selected.</span><br></pre></td></tr></table></figure><p><br><br><br></p><h3 id="명령어로-기존-데이터파일의-크기를-늘려서-DB공간을-늘리기"><a href="#명령어로-기존-데이터파일의-크기를-늘려서-DB공간을-늘리기" class="headerlink" title="명령어로 기존 데이터파일의 크기를 늘려서 DB공간을 늘리기"></a>명령어로 기존 데이터파일의 크기를 늘려서 DB공간을 늘리기</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line">SQL&gt; alter database datafile <span class="string">'/u01/app/oracle/oradata/ORCL/datafile/appuser01.dbf'</span></span><br><span class="line">SQL&gt; resize 200M;</span><br><span class="line">Database altered.</span><br><span class="line"></span><br><span class="line">//변경사항 확인하기</span><br><span class="line">SQL&gt; </span><br><span class="line">  1  select d.ts<span class="comment">#, t.name as "T/S name", d.name "Datafile name", d.bytes "Size"</span></span><br><span class="line">  2  from v<span class="variable">$datafile</span> d</span><br><span class="line">  3  join v<span class="variable">$tablespace</span> t</span><br><span class="line">  4* on d.ts<span class="comment"># = t.ts#</span></span><br><span class="line">SQL&gt; /</span><br><span class="line"></span><br><span class="line">       TS<span class="comment"># T/S name   Datafile name  Size</span></span><br><span class="line">---------- --------------- ---------------------------------------- ----------</span><br><span class="line"> 0 SYSTEM   /u01/app/oracle/oradata/ORCL/datafile/o1  838860800</span><br><span class="line">   _mf_system_fwvn49fw_.dbf</span><br><span class="line"></span><br><span class="line"> 4 USERS   /u01/app/oracle/oradata/ORCL/datafile/o1   31457280</span><br><span class="line">   _mf_users_hp871s7n_.dbf</span><br><span class="line"></span><br><span class="line"> 1 SYSAUX   /u01/app/oracle/oradata/ORCL/datafile/o1  555745280</span><br><span class="line">   _mf_sysaux_fwvn5f1l_.dbf</span><br><span class="line"></span><br><span class="line"> 2 UNDOTBS1   /u01/app/oracle/oradata/ORCL/datafile/o1   73400320</span><br><span class="line">   _mf_undotbs1_fwvn66mp_.dbf</span><br><span class="line"></span><br><span class="line">       TS<span class="comment"># T/S name   Datafile name  Size</span></span><br><span class="line">---------- --------------- ---------------------------------------- ----------</span><br><span class="line"></span><br><span class="line"> 6 EXAMPLE   /u01/app/oracle/oradata/ORCL/datafile/o1   52428800</span><br><span class="line">   _mf_example_hp86s7s0_.dbf</span><br><span class="line"></span><br><span class="line"> 4 USERS   /u01/app/oracle/oradata/ORCL/datafile/o1    5242880</span><br><span class="line">   _mf_users_fwvn681o_.dbf</span><br><span class="line"></span><br><span class="line"> 7 APPUSER   /u01/app/oracle/oradata/ORCL/datafile/ap  209715200</span><br><span class="line">   puser01.dbf</span><br><span class="line"></span><br><span class="line"> 7 APPUSER   /u01/app/oracle/oradata/ORCL/datafile/ap   52428800</span><br><span class="line">   puser02.dbf</span><br></pre></td></tr></table></figure><p><br><br><br></p><h2 id="Tablespace-삭제"><a href="#Tablespace-삭제" class="headerlink" title="Tablespace 삭제"></a>Tablespace 삭제</h2><ul><li>EM사용할 경우 <code>drop</code>버튼 클릭하면 끝!</li><li>명령어인 경우<ul><li><code>and datafiles</code> 옵션: 데이터파일은 <code>rm</code>명령어로 따로 지워여하는데 옵션을 사용하면 함께 삭제가능</li><li><code>cascade constraints</code> 옵션: PK컬럼에 FK가 걸려있으면 삭제시 에러가 발생한다. <a href="https://sowon-dev.github.io/2020/07/23/200724dbi/#%EA%B8%B0%EC%A1%B4%ED%85%8C%EC%9D%B4%EB%B8%94%EC%9D%98-%EC%A0%9C%EC%95%BD%EC%A1%B0%EA%B1%B4-%EC%82%AD%EC%A0%9C">PK컬럼에 FK가 걸려있는데도 삭제하고싶을 때 해당 옵션을 사용하여 FK제약조건을 삭제하여 PK컬럼도 삭제가능</a></li><li>FK걸려있는 제약조건만 삭제되지 FK걸려있던 해당 컬럼은 그대로 유지된다.</li></ul></li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">drop tablespace appuser including contents</span><br><span class="line">[and datafiles]</span><br><span class="line">[cascade constraints];</span><br></pre></td></tr></table></figure>]]></content:encoded>
      
      
      <category domain="https://sowon-dev.github.io/categories/Database/">Database</category>
      
      <category domain="https://sowon-dev.github.io/categories/Database/Oracle/">Oracle</category>
      
      
      <category domain="https://sowon-dev.github.io/tags/TIL/">TIL</category>
      
      <category domain="https://sowon-dev.github.io/tags/ITWILL-JAVA/">ITWILL(JAVA)</category>
      
      <category domain="https://sowon-dev.github.io/tags/Oracle/">Oracle</category>
      
      
      <comments>https://sowon-dev.github.io/2020/09/18/200918dbi/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>Servlet구매하기2 : 구매하기</title>
      <link>https://sowon-dev.github.io/2020/09/17/200917jspi/</link>
      <guid>https://sowon-dev.github.io/2020/09/17/200917jspi/</guid>
      <pubDate>Thu, 17 Sep 2020 00:10:45 GMT</pubDate>
      
      <description>&lt;h2 id=&quot;OrderFrontController-java의-doProcess-의-주소비교-후-처리부분에-코드-추가&quot;&gt;&lt;a href=&quot;#OrderFrontController-java의-doProcess-의-주소비교-후-처리부분에-코드-추가&quot; class=&quot;headerlink&quot; title=&quot;OrderFrontController.java의 doProcess()의 주소비교 후 처리부분에 코드 추가&quot;&gt;&lt;/a&gt;&lt;code&gt;OrderFrontController.java&lt;/code&gt;의 doProcess()의 주소비교 후 처리부분에 코드 추가&lt;/h2&gt;</description>
      
      
      
      <content:encoded><![CDATA[<h2 id="OrderFrontController-java의-doProcess-의-주소비교-후-처리부분에-코드-추가"><a href="#OrderFrontController-java의-doProcess-의-주소비교-후-처리부분에-코드-추가" class="headerlink" title="OrderFrontController.java의 doProcess()의 주소비교 후 처리부분에 코드 추가"></a><code>OrderFrontController.java</code>의 doProcess()의 주소비교 후 처리부분에 코드 추가</h2><a id="more"></a><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 주소에 따른 처리 구분 (주소 매핑후 이동)</span></span><br><span class="line"><span class="keyword">if</span>(command.equals(<span class="string">"/OrderStar.or"</span>))&#123;</span><br><span class="line">System.out.println(<span class="string">"C: /OrderStar.or 호출"</span>);</span><br><span class="line">action = <span class="keyword">new</span> OrderStarAction();</span><br><span class="line"><span class="keyword">try</span> &#123; forward = action.execute(request, response);</span><br><span class="line">&#125; <span class="keyword">catch</span> (Exception e) &#123; e.printStackTrace(); &#125;</span><br><span class="line"><span class="comment">//주문하기</span></span><br><span class="line">&#125;<span class="keyword">else</span> <span class="keyword">if</span>(command.equals(<span class="string">"/OrderAdd.or"</span>))&#123;</span><br><span class="line">System.out.println(<span class="string">"C: /OrderAdd.or 호출"</span>);</span><br><span class="line">action = <span class="keyword">new</span> OrderAddAction();</span><br><span class="line"><span class="keyword">try</span> &#123; forward = action.execute(request, response);</span><br><span class="line">&#125; <span class="keyword">catch</span> (Exception e) &#123; e.printStackTrace(); &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><br><br><br></p><h2 id="OrderStarAction-java-생성"><a href="#OrderStarAction-java-생성" class="headerlink" title="OrderStarAction.java 생성"></a><code>OrderStarAction.java</code> 생성</h2><ul><li>구매페이지에 장바구니 정보 가져와서 뷰페이지에서 보여주기 </li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">OrderStarAction</span> <span class="keyword">implements</span> <span class="title">Action</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> ActionForward <span class="title">execute</span><span class="params">(HttpServletRequest request, HttpServletResponse response)</span> </span></span><br><span class="line"><span class="function"><span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line">System.out.println(<span class="string">"M : OrderStarAction의 execute() 호출"</span>);</span><br><span class="line"><span class="comment">// 로그인 정보 (로그인 처리필요)</span></span><br><span class="line">HttpSession session = request.getSession();</span><br><span class="line">String id = (String) session.getAttribute(<span class="string">"id"</span>);</span><br><span class="line">ActionForward forward = <span class="keyword">new</span> ActionForward();</span><br><span class="line"><span class="keyword">if</span>(id == <span class="keyword">null</span>)&#123;</span><br><span class="line">forward.setPath(<span class="string">"./MemberLogin.me"</span>);</span><br><span class="line">forward.setRedirect(<span class="keyword">true</span>);</span><br><span class="line"><span class="keyword">return</span> forward;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//장바구니정보 저장</span></span><br><span class="line">BasketDAO bkdao = <span class="keyword">new</span> BasketDAO();</span><br><span class="line">Vector total = bkdao.getBasketList(id);</span><br><span class="line">request.setAttribute(<span class="string">"basketList"</span>, total.get(<span class="number">0</span>));</span><br><span class="line"><span class="comment">//장바구니에 저장된 상품정보 정보</span></span><br><span class="line">request.setAttribute(<span class="string">"goodsList"</span>, total.get(<span class="number">1</span>));</span><br><span class="line"></span><br><span class="line"><span class="comment">//구매회원정보 저장 </span></span><br><span class="line">MemberDAO mdao = <span class="keyword">new</span> MemberDAO();</span><br><span class="line"><span class="comment">//MemberBean mb = mdao.getMember(id); 한 줄에 처리</span></span><br><span class="line">request.setAttribute(<span class="string">"memberbean"</span>, mdao.getMember(id));</span><br><span class="line"></span><br><span class="line"><span class="comment">//페이지이동</span></span><br><span class="line">forward.setPath(<span class="string">"./goods_order/goods_buy.jsp"</span>);</span><br><span class="line">forward.setRedirect(<span class="keyword">false</span>);</span><br><span class="line"><span class="keyword">return</span> forward;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><br><br><br></p><h2 id="OrderAddAction-java-생성"><a href="#OrderAddAction-java-생성" class="headerlink" title="OrderAddAction.java 생성"></a><code>OrderAddAction.java</code> 생성</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">OrderAddAction</span> <span class="keyword">implements</span> <span class="title">Action</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> ActionForward <span class="title">execute</span><span class="params">(HttpServletRequest request, HttpServletResponse response)</span> </span></span><br><span class="line"><span class="function"><span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line">System.out.println(<span class="string">"M : OrderAddAction의 execute() 호출"</span>);</span><br><span class="line"><span class="comment">// 로그인 정보 (로그인 처리필요)</span></span><br><span class="line">HttpSession session = request.getSession();</span><br><span class="line">String id = (String) session.getAttribute(<span class="string">"id"</span>);</span><br><span class="line">ActionForward forward = <span class="keyword">new</span> ActionForward();</span><br><span class="line"><span class="keyword">if</span>(id == <span class="keyword">null</span>)&#123;</span><br><span class="line">forward.setPath(<span class="string">"./MemberLogin.me"</span>);</span><br><span class="line">forward.setRedirect(<span class="keyword">true</span>);</span><br><span class="line"><span class="keyword">return</span> forward;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 전달된 정보를 저장</span></span><br><span class="line"><span class="comment">// 한글처리</span></span><br><span class="line"><span class="comment">// OrderDTO 객체 생성 -&gt; 정보 저장</span></span><br><span class="line">OrderDTO odto =  <span class="keyword">new</span> OrderDTO();</span><br><span class="line">odto.setO_m_id(id);</span><br><span class="line">odto.setO_receive_name(request.getParameter(<span class="string">"o_receive_name"</span>));</span><br><span class="line">odto.setO_receive_phone(request.getParameter(<span class="string">"o_receive_phone"</span>));</span><br><span class="line">odto.setO_receive_addr1(request.getParameter(<span class="string">"o_receive_addr1"</span>));</span><br><span class="line">odto.setO_receive_addr2(request.getParameter(<span class="string">"o_receive_addr2"</span>));</span><br><span class="line">odto.setO_receive_memo(request.getParameter(<span class="string">"o_receive_memo"</span>));</span><br><span class="line">odto.setO_trade_payer(request.getParameter(<span class="string">"o_trade_payer"</span>));</span><br><span class="line">odto.setO_trade_type(<span class="string">"온라인 입금"</span>); <span class="comment">//라디오버튼값 고정, 필요시 value를 받아서 set하기</span></span><br><span class="line"></span><br><span class="line">BasketDAO bkdao = <span class="keyword">new</span> BasketDAO();</span><br><span class="line">Vector data = bkdao.getBasketList(id);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 장바구니 정보</span></span><br><span class="line">List&lt;BasketDTO&gt; basketList = (List&lt;BasketDTO&gt;) data.get(<span class="number">0</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 상품정보 </span></span><br><span class="line">List&lt;GoodsDTO&gt; goodsList = (List&lt;GoodsDTO&gt;) data.get(<span class="number">1</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 결재 모듈(카카오,아임포트,U+) 추가영역</span></span><br><span class="line">System.out.println(<span class="string">"M : 결제모듈 성공"</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">// OrderDAO 객체 생성 - addOrder(주문정보,장바구니정보,상품정보)</span></span><br><span class="line">OrderDAO odao = <span class="keyword">new</span> OrderDAO();</span><br><span class="line">odao.addOrder(odto, basketList, goodsList);</span><br><span class="line">System.out.println(<span class="string">"M : itwill_order 테이블에 저장완료"</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">//구매확정 메일이나 문자 , 카톡메세지 등을 유저에게 보내는 추가영역</span></span><br><span class="line">System.out.println(<span class="string">"M : 구매확정 내역 전송 완료"</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">//상품정보 수정 - 구매 수량만큼 구매갯수 차감</span></span><br><span class="line">GoodsDAO gdao = <span class="keyword">new</span> GoodsDAO(); </span><br><span class="line">gdao.updateAmount(basketList);</span><br><span class="line"></span><br><span class="line"><span class="comment">//장바구니 비우기(삭제)</span></span><br><span class="line">bkdao.deleteBasket(id);</span><br><span class="line"></span><br><span class="line"><span class="comment">//페이지이동</span></span><br><span class="line">forward.setPath(<span class="string">"./OrderList.or"</span>);</span><br><span class="line">forward.setRedirect(<span class="keyword">true</span>);</span><br><span class="line"><span class="keyword">return</span> forward;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><br><br><br></p><h2 id="OrderDAO-java-생성-후-addOrder-메서드-코드-추가"><a href="#OrderDAO-java-생성-후-addOrder-메서드-코드-추가" class="headerlink" title="OrderDAO.java 생성 후 addOrder()메서드 코드 추가"></a><code>OrderDAO.java</code> 생성 후 addOrder()메서드 코드 추가</h2><ul><li><p>Calendar new로 객체생성은 할 수 없고 getInstance()로 만들어져있는 객체를 가져와다가 활용해야한다 </p><ul><li>이를 싱글톤패턴이라고 부른다</li></ul></li><li><p>날짜정보 포맷 : <code>SimpleDateFormat sdf = new SimpleDateFormat(&quot;yyyyMMdd&quot;);</code></p><ul><li>예시20200917</li></ul></li><li><p>구매할 상품 번호는 basketList과 goodsList둘 다 있다. 어디서 가져와야할까?</p><ul><li>basketList안의 상품번호가 정확하다.</li></ul></li><li><p>List에서 정보를 꺼내오려면 get(인덱스)을 사용해서 거기서 또 GTO의 정보를 꺼내야한다</p><ul><li>불편하기때문에 미리 DTO객체를 생성<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>; i&lt;basketList.size(); i++)&#123;</span><br><span class="line"><span class="comment">//미리생성</span></span><br><span class="line">BasketDTO bkdto = (BasketDTO) basketList.get(i);</span><br><span class="line">GoodsDTO gdto = (GoodsDTO) goodsList.get(i);</span><br></pre></td></tr></table></figure></li></ul></li><li><p>전체코드</p></li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//주문등록하기</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">addOrder</span><span class="params">(OrderDTO odto, List&lt;BasketDTO&gt; basketList, List&lt;GoodsDTO&gt; goodsList)</span> </span>&#123;</span><br><span class="line"><span class="keyword">int</span> o_num = <span class="number">0</span>; <span class="comment">//일련번호</span></span><br><span class="line"><span class="keyword">int</span> trade_num = <span class="number">0</span>; <span class="comment">//주문번호</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//주문번호 계산시 사용</span></span><br><span class="line"><span class="comment">//Calendar new로 객체생성은 할 수 없고 getInstance()로 만들어져있는 객체를 가져와다가 활용해야한다 </span></span><br><span class="line"><span class="comment">//이를 싱글톤패턴이라고 부른다</span></span><br><span class="line">Calendar cal = Calendar.getInstance(); <span class="comment">//시스템날짜</span></span><br><span class="line"><span class="comment">//날짜 정보를 포맷</span></span><br><span class="line">SimpleDateFormat sdf = <span class="keyword">new</span> SimpleDateFormat(<span class="string">"yyyyMMdd"</span>); <span class="comment">//예시20200917</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">try</span>&#123;</span><br><span class="line">getCon();</span><br><span class="line"><span class="comment">//주문테이블(itwillbs_order) 번호 계산하기</span></span><br><span class="line">sql = <span class="string">"selct max(o_num) from itwill_order"</span>;</span><br><span class="line">pstmt = con.prepareStatement(sql);</span><br><span class="line">rs = pstmt.executeQuery();</span><br><span class="line"><span class="keyword">if</span>(rs.next())&#123;</span><br><span class="line">o_num = rs.getInt(<span class="number">1</span>)+<span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line">trade_num = o_num;</span><br><span class="line">System.out.println(<span class="string">"trade_num= "</span>+trade_num);</span><br><span class="line">System.out.println(<span class="string">"o_num= "</span>+o_num);</span><br><span class="line"></span><br><span class="line"><span class="comment">//전달정보 사용해서 데이터베이스에 추가</span></span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>; i&lt;basketList.size(); i++)&#123;</span><br><span class="line">BasketDTO bkdto = (BasketDTO) basketList.get(i);</span><br><span class="line">GoodsDTO gdto = (GoodsDTO) goodsList.get(i);</span><br><span class="line"></span><br><span class="line">sql = <span class="string">"insert into itwill_order values(?,?,?,?,?,"</span></span><br><span class="line">+ <span class="string">"?,?,?,?,?,"</span></span><br><span class="line">+ <span class="string">"?,?,?,?,?,"</span></span><br><span class="line">+ <span class="string">"?,now(),?,now(),?)"</span>;</span><br><span class="line">pstmt = con.prepareStatement(sql);</span><br><span class="line">pstmt.setInt(<span class="number">1</span>, o_num);</span><br><span class="line">pstmt.setString(<span class="number">2</span>, sdf.format(cal.getTime())+<span class="string">"-"</span>+trade_num); <span class="comment">//20200917-숫자들</span></span><br><span class="line">pstmt.setInt(<span class="number">3</span>, bkdto.getB_g_num()); <span class="comment">//구매할 상품 번호basketList과 goodsList둘다있다</span></span><br><span class="line">pstmt.setString(<span class="number">4</span>, gdto.getName());</span><br><span class="line">pstmt.setInt(<span class="number">5</span>, bkdto.getB_g_amount());</span><br><span class="line"></span><br><span class="line">pstmt.setString(<span class="number">6</span>, bkdto.getB_g_size());</span><br><span class="line">pstmt.setString(<span class="number">7</span>, bkdto.getB_g_color());</span><br><span class="line">pstmt.setString(<span class="number">8</span>, bkdto.getB_m_id());</span><br><span class="line">pstmt.setString(<span class="number">9</span>, odto.getO_receive_name());</span><br><span class="line">pstmt.setString(<span class="number">10</span>, odto.getO_receive_addr1());</span><br><span class="line">pstmt.setString(<span class="number">11</span>, odto.getO_receive_addr2());</span><br><span class="line">pstmt.setString(<span class="number">12</span>, odto.getO_receive_phone());</span><br><span class="line">pstmt.setString(<span class="number">13</span>, odto.getO_receive_memo());</span><br><span class="line"></span><br><span class="line"><span class="comment">// 상품의 금액 * 상품 구매갯수</span></span><br><span class="line">pstmt.setInt(<span class="number">14</span>, bkdto.getB_g_amount() * gdto.getPrice());</span><br><span class="line"></span><br><span class="line">pstmt.setString(<span class="number">15</span>, odto.getO_trade_type());</span><br><span class="line">pstmt.setString(<span class="number">16</span>, odto.getO_trade_payer());</span><br><span class="line">pstmt.setString(<span class="number">17</span>, <span class="string">""</span>); <span class="comment">//운송번호 : 추후 운송장번호가 나오면 관리자가 기입</span></span><br><span class="line">pstmt.setInt(<span class="number">18</span>, <span class="number">0</span>);<span class="comment">//주문상태 : 추후 상태에 맞춰서 관리자가 변경함</span></span><br><span class="line"></span><br><span class="line">pstmt.executeUpdate();</span><br><span class="line"></span><br><span class="line">o_num++; <span class="comment">//일련번호를 증가시킴</span></span><br><span class="line"><span class="comment">//한 사람의 장바구니에 있는 모든 주문을 입력하기 전까지 계속해서 1씩 증가시킴</span></span><br><span class="line"><span class="comment">//유저가 바뀌는 경우  sql구문(max(o_num))이 시작번호를 계산한다</span></span><br><span class="line">&#125;</span><br><span class="line">System.out.println(<span class="string">"DAO: 주문성공"</span>);</span><br><span class="line">&#125;<span class="keyword">catch</span>(Exception e)&#123;</span><br><span class="line">e.printStackTrace();</span><br><span class="line">&#125;<span class="keyword">finally</span> &#123;</span><br><span class="line">closeDB();</span><br><span class="line">&#125;</span><br><span class="line">&#125;<span class="comment">//end of addOrder()</span></span><br></pre></td></tr></table></figure><p><br><br><br></p><h2 id="GoodsDAO-java에서-updateAmount-추가-작성"><a href="#GoodsDAO-java에서-updateAmount-추가-작성" class="headerlink" title="GoodsDAO.java에서 updateAmount() 추가 작성"></a><code>GoodsDAO.java</code>에서 updateAmount() 추가 작성</h2><ul><li>장바구니에 있던 상품이 구매가 완료되면 재고수량에서 구매수량만큼을 업데이트해줘야한다.</li><li>이퀄기호(=) 없는 for문을 쓰는 것이 좋다<ul><li>i는 0부터 시작 권장</li><li>이퀄기호 없는 조건식 사용 권장</li></ul></li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//구매시 재고수량수정</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">updateAmount</span><span class="params">(List&lt;BasketDTO&gt; basketList)</span> </span>&#123;</span><br><span class="line"><span class="keyword">try</span>&#123;</span><br><span class="line">getCon();</span><br><span class="line"><span class="comment">//이퀄기호 없는 for문을 쓰는 것이 좋다</span></span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>; i&lt;basketList.size(); i++)&#123;</span><br><span class="line">BasketDTO bkdto = basketList.get(i); <span class="comment">//받아올때 제네릭으로 캐스팅해서 받아왔으므로 캐스팅안해도됨</span></span><br><span class="line">sql = <span class="string">"update itwill_goods set amount=amount-? where gno=?"</span>;</span><br><span class="line">pstmt = con.prepareStatement(sql);</span><br><span class="line">pstmt.setInt(<span class="number">1</span>, bkdto.getB_g_amount());</span><br><span class="line">pstmt.setInt(<span class="number">2</span>, bkdto.getB_g_num());</span><br><span class="line">pstmt.executeUpdate();</span><br><span class="line">&#125;</span><br><span class="line">System.out.println(<span class="string">"DAO: 구매 후 재고수량수정완료"</span>);</span><br><span class="line">&#125;<span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">e.printStackTrace();</span><br><span class="line">&#125; <span class="keyword">finally</span> &#123;</span><br><span class="line">closeDB();</span><br><span class="line">&#125;</span><br><span class="line">&#125;<span class="comment">//end of updateAmount</span></span><br></pre></td></tr></table></figure><p><br><br><br></p><h2 id="BasketDAO-java-생성-후-deleteBasket-메서드-오버로딩하여-추가"><a href="#BasketDAO-java-생성-후-deleteBasket-메서드-오버로딩하여-추가" class="headerlink" title="BasketDAO.java 생성 후 deleteBasket()메서드 오버로딩하여 추가"></a><code>BasketDAO.java</code> 생성 후 deleteBasket()메서드 오버로딩하여 추가</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//장바구니 상품 전체 삭제 (오버로딩)</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">deleteBasket</span><span class="params">(String id)</span> </span>&#123;</span><br><span class="line"><span class="keyword">try</span>&#123;</span><br><span class="line">getCon();</span><br><span class="line">sql =<span class="string">"delete from itwill_basket where b_m_id=?"</span>;</span><br><span class="line">pstmt = con.prepareStatement(sql);</span><br><span class="line">pstmt.setString(<span class="number">1</span>, id);</span><br><span class="line">pstmt.executeUpdate();</span><br><span class="line">System.out.println(<span class="string">"DAO: 구매 후 본인 장바구니  전체 삭제 완료"</span>);</span><br><span class="line">&#125;<span class="keyword">catch</span>(Exception e)&#123;</span><br><span class="line">e.printStackTrace();</span><br><span class="line">&#125;<span class="keyword">finally</span> &#123;</span><br><span class="line">closeDB();</span><br><span class="line">&#125;</span><br><span class="line">&#125;<span class="comment">//end of 장바구니전체삭제</span></span><br></pre></td></tr></table></figure><p><br><br><br></p><h2 id="goods-buy-jsp-생성"><a href="#goods-buy-jsp-생성" class="headerlink" title="goods_buy.jsp 생성"></a><code>goods_buy.jsp</code> 생성</h2><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">%</span></span></span><br><span class="line"><span class="tag">//<span class="attr">OrderStarAction</span>에 저장한 정보를 가져오기</span></span><br><span class="line"><span class="tag">//장바구니정보 저장된 거 가져오기</span></span><br><span class="line"><span class="tag"><span class="attr">List</span> <span class="attr">basketList</span> = <span class="string">(List)</span> <span class="attr">request.getAttribute</span>("<span class="attr">basketList</span>");</span></span><br><span class="line"><span class="tag">//장바구니에 저장된 상품정보 정보저장된 거 가져오기</span></span><br><span class="line"><span class="tag"><span class="attr">List</span> <span class="attr">goodsList</span> = <span class="string">(List)</span> <span class="attr">request.getAttribute</span>("<span class="attr">goodsList</span>");</span></span><br><span class="line"><span class="tag">//구매회원정보 저장된 거 가져오기</span></span><br><span class="line"><span class="tag"><span class="attr">MemberBean</span> <span class="attr">mb</span> = <span class="string">(MemberBean)</span> <span class="attr">request.getAttribute</span>("<span class="attr">memberbean</span>");</span></span><br><span class="line"><span class="tag"></span></span><br><span class="line"><span class="tag"></span></span><br><span class="line"><span class="tag">%&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">table</span> <span class="attr">border</span>=<span class="string">"1"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">caption</span>&gt;</span>주문상세내역<span class="tag">&lt;/<span class="name">caption</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">th</span>&gt;</span>사진<span class="tag">&lt;/<span class="name">th</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">th</span>&gt;</span>상품명<span class="tag">&lt;/<span class="name">th</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">th</span>&gt;</span>수량(단위: 개)<span class="tag">&lt;/<span class="name">th</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">th</span>&gt;</span>색상<span class="tag">&lt;/<span class="name">th</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">th</span>&gt;</span>사이즈<span class="tag">&lt;/<span class="name">th</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">th</span>&gt;</span>가격(단위: 원)<span class="tag">&lt;/<span class="name">th</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">%</span></span></span><br><span class="line">for(int i=0; i&lt;basketList.size(); i++)&#123;</span><br><span class="line">BasketDTO bkdto = (BasketDTO) basketList.get(i);</span><br><span class="line">GoodsDTO gdto = (GoodsDTO) goodsList.get(i);</span><br><span class="line">%&gt;</span><br><span class="line"><span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">td</span>&gt;</span><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">"./upload/&lt;%=gdto.getImage().split("</span>,")[<span class="attr">0</span>]%&gt;</span>" height="100px"&gt;<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">td</span>&gt;</span><span class="tag">&lt;<span class="name">%=gdto.getName()</span> %&gt;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">td</span>&gt;</span><span class="tag">&lt;<span class="name">%=bkdto.getB_g_amount()</span> %&gt;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">td</span>&gt;</span><span class="tag">&lt;<span class="name">%=bkdto.getB_g_color()</span> %&gt;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">td</span>&gt;</span><span class="tag">&lt;<span class="name">%=bkdto.getB_g_size()</span> %&gt;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">td</span>&gt;</span><span class="tag">&lt;<span class="name">%=gdto.getPrice()</span> %&gt;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">%&#125;</span> %&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">table</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">hr</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">fieldset</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">legend</span>&gt;</span>주문자정보<span class="tag">&lt;/<span class="name">legend</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">%</span></span></span><br><span class="line"><span class="tag"></span></span><br><span class="line"><span class="tag">%&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">form</span> <span class="attr">action</span>=<span class="string">"./OrderAdd.or"</span> <span class="attr">method</span>=<span class="string">"post"</span>&gt;</span><span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br><span class="line">구매자 이름 : <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"text"</span> <span class="attr">name</span>=<span class="string">"name"</span> <span class="attr">value</span>=<span class="string">"&lt;%=mb.getName() %&gt;"</span> <span class="attr">readonly</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">구매자 연락처 : <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"text"</span> <span class="attr">name</span>=<span class="string">"tel"</span> <span class="attr">value</span>=<span class="string">""</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">구매자 이메일  : <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"text"</span> <span class="attr">name</span>=<span class="string">"email"</span> <span class="attr">value</span>=<span class="string">"&lt;%=mb.getEmail()%&gt;"</span> <span class="attr">readonly</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">h2</span>&gt;</span>배송지정보<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line">받는 사람 이름 : <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"text"</span> <span class="attr">name</span>=<span class="string">"o_receive_name"</span> <span class="attr">value</span>=<span class="string">""</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">받는 사람 연락처 : <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"text"</span> <span class="attr">name</span>=<span class="string">"o_receive_phone"</span> <span class="attr">value</span>=<span class="string">""</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">배송지 주소 : <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"text"</span> <span class="attr">name</span>=<span class="string">"o_receive_addr1"</span> <span class="attr">value</span>=<span class="string">""</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">나머지 주소 : <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"text"</span> <span class="attr">name</span>=<span class="string">"o_receive_addr2"</span> <span class="attr">value</span>=<span class="string">""</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">기타 요청사항 : <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"text"</span> <span class="attr">name</span>=<span class="string">"o_memo"</span> <span class="attr">value</span>=<span class="string">""</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">h2</span>&gt;</span>결제정보<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"radio"</span> <span class="attr">name</span>=<span class="string">"o"</span>&gt;</span> 신용카드</span><br><span class="line">       <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"radio"</span> <span class="attr">name</span>=<span class="string">"o"</span>&gt;</span> 온라인입금</span><br><span class="line">       <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"radio"</span> <span class="attr">name</span>=<span class="string">"o"</span>&gt;</span> 휴대폰 결재</span><br><span class="line">       <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"radio"</span> <span class="attr">name</span>=<span class="string">"o"</span>&gt;</span> 문화상품권<span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">       입급자명 (온라인 입금전용): <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"text"</span> <span class="attr">name</span>=<span class="string">"o_trade_payer"</span> <span class="attr">value</span>=<span class="string">"&lt;%=mb.getName()%&gt;"</span>&gt;</span> <span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">hr</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"submit"</span> <span class="attr">class</span>=<span class="string">"btn"</span> <span class="attr">value</span>=<span class="string">"결제하기"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"reset"</span> <span class="attr">class</span>=<span class="string">"btn"</span> <span class="attr">value</span>=<span class="string">"초기화"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">fieldset</span>&gt;</span></span><br></pre></td></tr></table></figure><p><br><br><br></p><h2 id="BasketListAction-java에서-장바구니에-정보가-하나도-없을-경우-예외처리"><a href="#BasketListAction-java에서-장바구니에-정보가-하나도-없을-경우-예외처리" class="headerlink" title="BasketListAction.java에서 장바구니에 정보가 하나도 없을 경우 예외처리"></a><code>BasketListAction.java</code>에서 장바구니에 정보가 하나도 없을 경우 예외처리</h2><ul><li>BasketList가 null인 경우 예외처리 - 아래 코드 추가</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//장바구니에 정보가 하나도 없을 경우</span></span><br><span class="line"><span class="keyword">if</span>(basketList.size() &lt;= <span class="number">0</span>)&#123;</span><br><span class="line">request.setAttribute(<span class="string">"basketListNull"</span>, <span class="keyword">true</span>);</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">request.setAttribute(<span class="string">"basketListNull"</span>, <span class="keyword">false</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>전체코드</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">BasketListAction</span> <span class="keyword">implements</span> <span class="title">Action</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> ActionForward <span class="title">execute</span><span class="params">(HttpServletRequest request, HttpServletResponse response)</span> </span></span><br><span class="line"><span class="function"><span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line">System.out.println(<span class="string">"M : BasketListAction의 execute() 호출"</span>);</span><br><span class="line"><span class="comment">// 로그인 정보 (로그인 처리필요)</span></span><br><span class="line">HttpSession session = request.getSession();</span><br><span class="line">String id = (String) session.getAttribute(<span class="string">"id"</span>);</span><br><span class="line">ActionForward forward = <span class="keyword">new</span> ActionForward();</span><br><span class="line"><span class="keyword">if</span>(id == <span class="keyword">null</span>)&#123;</span><br><span class="line">forward.setPath(<span class="string">"./MemberLogin.me"</span>);</span><br><span class="line">forward.setRedirect(<span class="keyword">true</span>);</span><br><span class="line"><span class="keyword">return</span> forward;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//한글처리</span></span><br><span class="line">request.setCharacterEncoding(<span class="string">"UTF-8"</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">//BasketDAO 이용하여 장바구니 정보(옵션, 구매수량)+해당 상품정보(이름,이미지,가격) 가져오는 메서드 호출</span></span><br><span class="line">BasketDAO bkdao = <span class="keyword">new</span> BasketDAO();</span><br><span class="line">Vector totalData = bkdao.getBasketList(id);</span><br><span class="line"></span><br><span class="line">List&lt;BasketDTO&gt; basketList = (List&lt;BasketDTO&gt;) totalData.get(<span class="number">0</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">//장바구니에 정보가 하나도 없을 경우</span></span><br><span class="line"><span class="keyword">if</span>(basketList.size() &lt;= <span class="number">0</span>)&#123;</span><br><span class="line">request.setAttribute(<span class="string">"basketListNull"</span>, <span class="keyword">true</span>);</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">request.setAttribute(<span class="string">"basketListNull"</span>, <span class="keyword">false</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//request에 저장</span></span><br><span class="line"><span class="comment">// request.setAttribute("totalData", totalData);</span></span><br><span class="line"><span class="comment">// List&lt;BasketDTO&gt; basketList</span></span><br><span class="line"><span class="comment">// =(List&lt;BasketDTO&gt;) totalData.get(0);</span></span><br><span class="line"><span class="comment">// request.setAttribute("basketList", basketList);</span></span><br><span class="line">        <span class="comment">// =&gt; 원래 정보는 벡터에 저장되어 있지만, Action페이지에서</span></span><br><span class="line"><span class="comment">// 벡터의 정보를 꺼내서 각각 request에 저장해서 전달 </span></span><br><span class="line"><span class="comment">// =&gt; View에서는 복잡한 연산을 피해야함. 바로 사용가능한 List형태로 전달하는것이 좋다.</span></span><br><span class="line"></span><br><span class="line">request.setAttribute(<span class="string">"basketList"</span>, totalData.get(<span class="number">0</span>));</span><br><span class="line">request.setAttribute(<span class="string">"goodsList"</span>, totalData.get(<span class="number">1</span>));</span><br><span class="line"></span><br><span class="line"><span class="comment">//페이지이동</span></span><br><span class="line">forward.setPath(<span class="string">"./goods_order/goods_basket.jsp"</span>);</span><br><span class="line">forward.setRedirect(<span class="keyword">false</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> forward;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><br><br><br></p><h2 id="goods-basket-jsp에서-장바구니에-정보가-하나도-없을-경우-예외처리"><a href="#goods-basket-jsp에서-장바구니에-정보가-하나도-없을-경우-예외처리" class="headerlink" title="goods_basket.jsp에서 장바구니에 정보가 하나도 없을 경우 예외처리"></a><code>goods_basket.jsp</code>에서 장바구니에 정보가 하나도 없을 경우 예외처리</h2><ul><li>BasketList가 null인 경우 예외처리</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">boolean</span> listIsNull = (<span class="keyword">boolean</span>) request.getAttribute(<span class="string">"basketListNull"</span>);</span><br><span class="line"><span class="keyword">if</span>(listIsNull)&#123; <span class="comment">//전달된 리스트정보가 null인 경우</span></span><br><span class="line"></span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>전체코드</li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">%</span></span></span><br><span class="line"><span class="tag">//한글처리</span></span><br><span class="line"><span class="tag"><span class="attr">request.setCharacterEncoding</span>("<span class="attr">UTF-8</span>");</span></span><br><span class="line"><span class="tag"></span></span><br><span class="line"><span class="tag">//<span class="attr">List</span>가 <span class="attr">null</span>인경우 처리</span></span><br><span class="line"><span class="tag"><span class="attr">boolean</span> <span class="attr">listIsNull</span> = <span class="string">(boolean)</span> <span class="attr">request.getAttribute</span>("<span class="attr">basketListNull</span>");</span></span><br><span class="line"><span class="tag"><span class="attr">if</span>(<span class="attr">listIsNull</span>)&#123; //전달된 리스트정보가 <span class="attr">null</span>인 경우</span></span><br><span class="line"><span class="tag">%&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">table</span> <span class="attr">border</span>=<span class="string">"1"</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">caption</span>&gt;</span><span class="tag">&lt;<span class="name">%=session.getAttribute("id")</span> %&gt;</span>님의 장바구니<span class="tag">&lt;/<span class="name">caption</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">th</span>&gt;</span>번호<span class="tag">&lt;/<span class="name">th</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">th</span>&gt;</span>사진<span class="tag">&lt;/<span class="name">th</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">th</span>&gt;</span>상품명<span class="tag">&lt;/<span class="name">th</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">th</span>&gt;</span>크기<span class="tag">&lt;/<span class="name">th</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">th</span>&gt;</span>색상<span class="tag">&lt;/<span class="name">th</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">th</span>&gt;</span>수량<span class="tag">&lt;/<span class="name">th</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">th</span>&gt;</span>가격<span class="tag">&lt;/<span class="name">th</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">th</span>&gt;</span>삭제<span class="tag">&lt;/<span class="name">th</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">%</span></span></span><br><span class="line"><span class="tag">&#125;<span class="attr">else</span>&#123; ////전달된 리스트정보가 <span class="attr">null</span>이 아닌 경우</span></span><br><span class="line"><span class="tag">//<span class="attr">basketList</span>에서 구현한 정보를 전달받아서 처리</span></span><br><span class="line"><span class="tag"><span class="attr">List</span> <span class="attr">basketList</span> = <span class="string">(List)</span> <span class="attr">request.getAttribute</span>("<span class="attr">basketList</span>");</span></span><br><span class="line"><span class="tag"><span class="attr">List</span> <span class="attr">goodsList</span> = <span class="string">(List)</span> <span class="attr">request.getAttribute</span>("<span class="attr">goodsList</span>");</span></span><br><span class="line"><span class="tag"><span class="attr">BasketDTO</span> <span class="attr">bk</span> = <span class="string">(BasketDTO)</span> <span class="attr">basketList.get</span>(<span class="attr">0</span>);</span></span><br><span class="line"><span class="tag">%&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- 장바구니 번호, 사진(대표이미지), 상품명, 사이즈,색상,수량,가격, 삭제 --&gt;</span></span><br><span class="line"> <span class="tag">&lt;<span class="name">table</span> <span class="attr">border</span>=<span class="string">"1"</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">caption</span>&gt;</span><span class="tag">&lt;<span class="name">%=bk.getB_m_id()</span> %&gt;</span>님의 장바구니<span class="tag">&lt;/<span class="name">caption</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">th</span>&gt;</span>번호<span class="tag">&lt;/<span class="name">th</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">th</span>&gt;</span>사진<span class="tag">&lt;/<span class="name">th</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">th</span>&gt;</span>상품명<span class="tag">&lt;/<span class="name">th</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">th</span>&gt;</span>크기<span class="tag">&lt;/<span class="name">th</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">th</span>&gt;</span>색상<span class="tag">&lt;/<span class="name">th</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">th</span>&gt;</span>수량<span class="tag">&lt;/<span class="name">th</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">th</span>&gt;</span>가격<span class="tag">&lt;/<span class="name">th</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">th</span>&gt;</span>삭제<span class="tag">&lt;/<span class="name">th</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">%</span></span></span><br><span class="line">   //EL태그는 FOR문과 상관없이 &lt;c:forEach&gt; 사용해서 출력해야한다.</span><br><span class="line">   for(int i=0; i<span class="tag">&lt;<span class="name">basketList.size();</span> <span class="attr">i</span>++)&#123;</span></span><br><span class="line"><span class="tag">   <span class="attr">BasketDTO</span> <span class="attr">bkdto</span> = <span class="string">(BasketDTO)</span> <span class="attr">basketList.get</span>(<span class="attr">i</span>);</span></span><br><span class="line"><span class="tag">   <span class="attr">GoodsDTO</span> <span class="attr">gdto</span> = <span class="string">(GoodsDTO)</span> <span class="attr">goodsList.get</span>(<span class="attr">i</span>);</span></span><br><span class="line"><span class="tag">   %&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">   <span class="comment">&lt;!-- 순차 넘버링  --&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">td</span>&gt;</span><span class="tag">&lt;<span class="name">%=i+1%</span>&gt;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">td</span>&gt;</span><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">"./upload/&lt;%=gdto.getImage().split("</span>,")[<span class="attr">0</span>] %&gt;</span>" height="100px"&gt;<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">td</span>&gt;</span><span class="tag">&lt;<span class="name">%=gdto.getName()</span> %&gt;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">td</span>&gt;</span><span class="tag">&lt;<span class="name">%=bkdto.getB_g_size()</span> %&gt;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">td</span>&gt;</span><span class="tag">&lt;<span class="name">%=bkdto.getB_g_color()</span> %&gt;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">td</span>&gt;</span><span class="tag">&lt;<span class="name">%=bkdto.getB_g_amount()</span> %&gt;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">td</span>&gt;</span><span class="tag">&lt;<span class="name">%=gdto.getPrice()</span> %&gt;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">td</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"button"</span> <span class="attr">class</span>=<span class="string">"btn"</span> <span class="attr">value</span>=<span class="string">"[장바구니에서 삭제]"</span> </span></span><br><span class="line"><span class="tag">  <span class="attr">onclick</span>=<span class="string">"location.href='./BasketDelete.ba?b_num=&lt;%=bkdto.getB_num()%&gt;'"</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">%</span></span></span><br><span class="line"><span class="tag">   &#125;</span></span><br><span class="line"><span class="tag">   &#125; %&gt;</span></span><br><span class="line"> <span class="tag">&lt;/<span class="name">table</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"button"</span> <span class="attr">class</span>=<span class="string">"btn"</span> <span class="attr">value</span>=<span class="string">"[구매하기]"</span> <span class="attr">onclick</span>=<span class="string">"location.href='./OrderStar.or'"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"button"</span> <span class="attr">class</span>=<span class="string">"btn"</span> <span class="attr">value</span>=<span class="string">"[계속 쇼핑하기]"</span> <span class="attr">onclick</span>=<span class="string">"location.href='./GoodsList.go'"</span>&gt;</span></span><br></pre></td></tr></table></figure>]]></content:encoded>
      
      
      <category domain="https://sowon-dev.github.io/categories/JSP/">JSP</category>
      
      
      <category domain="https://sowon-dev.github.io/tags/TIL/">TIL</category>
      
      <category domain="https://sowon-dev.github.io/tags/ITWILL-JAVA/">ITWILL(JAVA)</category>
      
      
      <comments>https://sowon-dev.github.io/2020/09/17/200917jspi/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>Servlet구매하기1 : 기초</title>
      <link>https://sowon-dev.github.io/2020/09/16/200916jspi/</link>
      <guid>https://sowon-dev.github.io/2020/09/16/200916jspi/</guid>
      <pubDate>Wed, 16 Sep 2020 04:57:08 GMT</pubDate>
      
      <description>&lt;h2 id=&quot;web-xml’에-코드-추가&quot;&gt;&lt;a href=&quot;#web-xml’에-코드-추가&quot; class=&quot;headerlink&quot; title=&quot;`web.xml’에 코드 추가&quot;&gt;&lt;/a&gt;`web.xml’에 코드 추가&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;&lt;code&gt;web.xml&lt;/code&gt; 코드 수정 후 꼭 서버 실행 후 주소창에 &lt;code&gt;test.bo&lt;/code&gt;해서 흰 화면이 뜨는지 확인하고 코딩할 것&lt;/li&gt;
&lt;li&gt;흰화면이 안뜨면 &lt;code&gt;web.xml&lt;/code&gt; 설정이 잘못되었다는 의미임.</description>
      
      
      
      <content:encoded><![CDATA[<h2 id="web-xml’에-코드-추가"><a href="#web-xml’에-코드-추가" class="headerlink" title="`web.xml’에 코드 추가"></a>`web.xml’에 코드 추가</h2><ul><li><code>web.xml</code> 코드 수정 후 꼭 서버 실행 후 주소창에 <code>test.bo</code>해서 흰 화면이 뜨는지 확인하고 코딩할 것</li><li>흰화면이 안뜨면 <code>web.xml</code> 설정이 잘못되었다는 의미임.<a id="more"></a></li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- Model2 구매하기 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">servlet</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">servlet-name</span>&gt;</span>OrderFrontController<span class="tag">&lt;/<span class="name">servlet-name</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">servlet-class</span>&gt;</span>com.itwillbs.order.action.OrderFrontController<span class="tag">&lt;/<span class="name">servlet-class</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">servlet</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">servlet-mapping</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">servlet-name</span>&gt;</span>OrderFrontController<span class="tag">&lt;/<span class="name">servlet-name</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">url-pattern</span>&gt;</span>*.or<span class="tag">&lt;/<span class="name">url-pattern</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">servlet-mapping</span>&gt;</span></span><br></pre></td></tr></table></figure><p><br><br><br></p><h2 id="OrderFrontController-java의-doProcess-의-주소비교-후-처리부분에-코드-추가"><a href="#OrderFrontController-java의-doProcess-의-주소비교-후-처리부분에-코드-추가" class="headerlink" title="OrderFrontController.java의 doProcess()의 주소비교 후 처리부분에 코드 추가"></a><code>OrderFrontController.java</code>의 doProcess()의 주소비교 후 처리부분에 코드 추가</h2><!-- more --><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">OrderFrontController</span> <span class="keyword">extends</span> <span class="title">HttpServlet</span> </span>&#123;</span><br><span class="line"><span class="comment">// 일반 클래스를 서블릿을 상속해서 컨트롤러 역활 할수있도록 설정</span></span><br><span class="line"><span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">doProcess</span><span class="params">(HttpServletRequest request, HttpServletResponse response)</span></span></span><br><span class="line"><span class="function"><span class="keyword">throws</span> ServletException, IOException </span>&#123;</span><br><span class="line">System.out.println(<span class="string">"doProcess() 호출 (페이지 GET/POST방식 모두 사용호출)"</span>);</span><br><span class="line"><span class="comment">// 주소 비교 (주소 매핑)</span></span><br><span class="line">System.out.println(<span class="string">"--------------@ 주소 계산 @-------------"</span>);</span><br><span class="line"><span class="comment">// 프로젝트명 + 주소</span></span><br><span class="line">String requestURI = request.getRequestURI();</span><br><span class="line">System.out.println(<span class="string">" requestURI : "</span> + requestURI);</span><br><span class="line"><span class="comment">// 프로젝트명</span></span><br><span class="line">String contextPath = request.getContextPath();</span><br><span class="line">System.out.println(<span class="string">" contextPath : "</span> + contextPath);</span><br><span class="line"><span class="comment">// 가상주소</span></span><br><span class="line">String command = requestURI.substring(contextPath.length());</span><br><span class="line">System.out.println(<span class="string">" command(가상주소) : "</span> + command);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">System.out.println(<span class="string">"--------------@ 주소 비교후 처리 @-------------"</span>);</span><br><span class="line">Action action = <span class="keyword">null</span>;</span><br><span class="line">ActionForward forward = <span class="keyword">null</span>;</span><br><span class="line"><span class="comment">// 주소에 따른 처리 구분 (주소 매핑후 이동)</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">System.out.println(<span class="string">"-----------------@ 페이지 이동 @--------------"</span>);</span><br><span class="line"><span class="keyword">if</span>(forward != <span class="keyword">null</span>)&#123; <span class="comment">// 이동할 정보가 있다</span></span><br><span class="line"><span class="keyword">if</span>(forward.isRedirect())&#123; <span class="comment">// true - sendRedirect()</span></span><br><span class="line"><span class="comment">// 가상주소(.bo -&gt; .bo), 화면전환(주소변경,화면 변경)</span></span><br><span class="line">System.out.println(<span class="string">"C : "</span>+forward.getPath()+<span class="string">"주소로 이동(Redirect)"</span>);</span><br><span class="line">response.sendRedirect(forward.getPath());</span><br><span class="line">&#125;<span class="keyword">else</span>&#123; <span class="comment">// false - forward()</span></span><br><span class="line">System.out.println(<span class="string">"C : "</span>+forward.getPath()+<span class="string">"주소로 이동(forward)"</span>);</span><br><span class="line"><span class="comment">// 가상주소 -&gt; 실제페이지 (.bo -&gt; .jsp) + reqeust 객체 정보를 가지고 이동</span></span><br><span class="line">RequestDispatcher dis =</span><br><span class="line">request.getRequestDispatcher(forward.getPath());</span><br><span class="line">dis.forward(request, response);</span><br><span class="line">&#125;</span><br><span class="line">&#125;<span class="comment">//end of 페이지이동</span></span><br><span class="line"></span><br><span class="line">&#125;<span class="comment">//end of doProcess</span></span><br><span class="line"></span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">doGet</span><span class="params">(HttpServletRequest req, HttpServletResponse resp)</span> </span></span><br><span class="line"><span class="function"><span class="keyword">throws</span> ServletException, IOException </span>&#123;</span><br><span class="line">System.out.println(<span class="string">"doGet() 호출 (페이지 GET방식 호출)"</span>);</span><br><span class="line">doProcess(req, resp);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">doPost</span><span class="params">(HttpServletRequest req, HttpServletResponse resp)</span> </span></span><br><span class="line"><span class="function"><span class="keyword">throws</span> ServletException, IOException </span>&#123;</span><br><span class="line">System.out.println(<span class="string">"doPost() 호출 (페이지 POST방식 호출)"</span>);</span><br><span class="line">doProcess(req, resp);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><br><br><br></p><h2 id="Action-java-생성"><a href="#Action-java-생성" class="headerlink" title="Action.java 생성"></a><code>Action.java</code> 생성</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">Action</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 상수,추상메서드</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 추상메서드 -&gt; 서브클래스들 한태 강제성 부여</span></span><br><span class="line"><span class="comment">// =&gt; 개발 형식의 통일(틀이 정해짐)</span></span><br><span class="line"><span class="comment">// =&gt; 객체간의 관계가 약화됨 =&gt; 각각의 객체가 해당 동작만 처리/제어</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// Action 페이지의 동작을 미리 선언해서 사용</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> ActionForward <span class="title">execute</span><span class="params">(HttpServletRequest request,</span></span></span><br><span class="line"><span class="function"><span class="params">HttpServletResponse response)</span> <span class="keyword">throws</span> Exception</span>;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><br><br><br></p><h2 id="ActionForward-java-생성"><a href="#ActionForward-java-생성" class="headerlink" title="ActionForward.java 생성"></a><code>ActionForward.java</code> 생성</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">ActionForward</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="comment">//1.외부접근 못하도록 이동할 페이지와 이동할 방식 멤버변수 생성</span></span><br><span class="line"><span class="keyword">private</span> String path;</span><br><span class="line"><span class="keyword">private</span> <span class="keyword">boolean</span> isRedirect;</span><br><span class="line"><span class="comment">// true면 sendRedirect방식으로 이동</span></span><br><span class="line"><span class="comment">//사용처: 주소와 화면의 전환이 동시에 일어날때 (가상주소 -&gt; 가상주소로 )</span></span><br><span class="line"><span class="comment">// false면  forward방식으로 이동</span></span><br><span class="line"><span class="comment">//사용처: 주소는 그대로인데 화면이 바뀔때 (가상주소에서 jsp보여줌)</span></span><br><span class="line"><span class="comment">//2. getter setter생성</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> String <span class="title">getPath</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="keyword">return</span> path;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setPath</span><span class="params">(String path)</span> </span>&#123;</span><br><span class="line"><span class="keyword">this</span>.path = path;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">isRedirect</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="keyword">return</span> isRedirect;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setRedirect</span><span class="params">(<span class="keyword">boolean</span> isRedirect)</span> </span>&#123;</span><br><span class="line"><span class="keyword">this</span>.isRedirect = isRedirect;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//3.toString</span></span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> String <span class="title">toString</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="keyword">return</span> <span class="string">"ActionForward [path="</span> + path + <span class="string">", isRedirect="</span> + isRedirect + <span class="string">"]"</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><br><br><br></p><h2 id="OrderDTO-java생성"><a href="#OrderDTO-java생성" class="headerlink" title="OrderDTO.java생성"></a><code>OrderDTO.java</code>생성</h2><ul><li>DB테이블을 생성후 DTO를 아래 코드와 같이 생성한다</li></ul><h3 id="DB테이블-생성시-주의사항-테이블명-order-불가능"><a href="#DB테이블-생성시-주의사항-테이블명-order-불가능" class="headerlink" title="DB테이블 생성시 주의사항 : 테이블명 order 불가능"></a>DB테이블 생성시 주의사항 : 테이블명 <code>order</code> 불가능</h3><ul><li>why? order by랑 비슷해서 테이블명이 아닌 명령어로 처리하려하기 때문.</li><li>그럼 실무에선 주로 어떻게 쓸까?</li><li>tbl_order : 실무에서 자주 사용함</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">OrderDTO</span> </span>&#123;</span><br><span class="line"><span class="keyword">private</span> <span class="keyword">int</span> o_num;</span><br><span class="line"><span class="keyword">private</span> String o_trade_num;</span><br><span class="line"><span class="keyword">private</span> <span class="keyword">int</span> o_g_num;</span><br><span class="line"><span class="keyword">private</span> String o_g_name;</span><br><span class="line"><span class="keyword">private</span> <span class="keyword">int</span> o_g_amount;</span><br><span class="line"></span><br><span class="line"><span class="keyword">private</span> String o_g_size;</span><br><span class="line"><span class="keyword">private</span> String o_g_color;</span><br><span class="line"><span class="keyword">private</span> String o_m_id;</span><br><span class="line"><span class="keyword">private</span> String o_receive_name;</span><br><span class="line"><span class="keyword">private</span> String o_receive_addr1;</span><br><span class="line"></span><br><span class="line"><span class="keyword">private</span> String o_receive_addr2;</span><br><span class="line"><span class="keyword">private</span> String o_receive_phone;</span><br><span class="line"><span class="keyword">private</span> String o_receive_memo;</span><br><span class="line"><span class="keyword">private</span> <span class="keyword">int</span> o_sum_money;</span><br><span class="line"><span class="keyword">private</span> String o_trade_type;</span><br><span class="line"></span><br><span class="line"><span class="keyword">private</span> String o_trade_payer;</span><br><span class="line"><span class="keyword">private</span> Date o_trade_date;</span><br><span class="line"><span class="keyword">private</span> String o_trans_num;</span><br><span class="line"><span class="keyword">private</span> Date o_date;</span><br><span class="line"><span class="keyword">private</span> String o_status;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">getO_num</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="keyword">return</span> o_num;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setO_num</span><span class="params">(<span class="keyword">int</span> o_num)</span> </span>&#123;</span><br><span class="line"><span class="keyword">this</span>.o_num = o_num;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">public</span> String <span class="title">getO_trade_num</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="keyword">return</span> o_trade_num;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">(중략)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><br><br><br></p><h2 id="OrderDAO-java-생성"><a href="#OrderDAO-java-생성" class="headerlink" title="OrderDAO.java 생성"></a><code>OrderDAO.java</code> 생성</h2><ul><li>DB연결메서드 생성</li><li>자원해제 메서드 생성</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">OrderDAO</span> </span>&#123;</span><br><span class="line">Connection con = <span class="keyword">null</span>;</span><br><span class="line">PreparedStatement pstmt = <span class="keyword">null</span>;</span><br><span class="line">ResultSet rs = <span class="keyword">null</span>;</span><br><span class="line">String sql = <span class="string">""</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 디비 연결</span></span><br><span class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">getCon</span><span class="params">()</span> <span class="keyword">throws</span> Exception</span>&#123;</span><br><span class="line"><span class="comment">// 커넥션 풀</span></span><br><span class="line">Context init = <span class="keyword">new</span> InitialContext();</span><br><span class="line">DataSource ds = (DataSource) init.lookup(<span class="string">"java:comp/env/jdbc/model2DB"</span>);</span><br><span class="line">con = ds.getConnection();</span><br><span class="line">System.out.println(<span class="string">"DAO : 디비연결 완료 "</span>+con);</span><br><span class="line">&#125;<span class="comment">//end of getCon()</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 디비 자원해제</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">closeDB</span><span class="params">()</span></span>&#123;</span><br><span class="line"><span class="keyword">try</span> &#123;</span><br><span class="line"><span class="keyword">if</span>(rs != <span class="keyword">null</span>) &#123;rs.close();&#125;</span><br><span class="line"><span class="keyword">if</span>(pstmt != <span class="keyword">null</span>) &#123;pstmt.close();&#125;</span><br><span class="line"><span class="keyword">if</span>(con != <span class="keyword">null</span>) &#123;con.close(); &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">catch</span> (SQLException e) &#123;</span><br><span class="line">e.printStackTrace();</span><br><span class="line">&#125; </span><br><span class="line">&#125;<span class="comment">//end of closeDB()</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content:encoded>
      
      
      <category domain="https://sowon-dev.github.io/categories/JSP/">JSP</category>
      
      
      <category domain="https://sowon-dev.github.io/tags/TIL/">TIL</category>
      
      <category domain="https://sowon-dev.github.io/tags/ITWILL-JAVA/">ITWILL(JAVA)</category>
      
      
      <comments>https://sowon-dev.github.io/2020/09/16/200916jspi/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>Servlet장바구니3 : 장바구니리스트, 장바구니에서 상품삭제</title>
      <link>https://sowon-dev.github.io/2020/09/15/200915jspi4/</link>
      <guid>https://sowon-dev.github.io/2020/09/15/200915jspi4/</guid>
      <pubDate>Tue, 15 Sep 2020 07:04:11 GMT</pubDate>
      
      <description>&lt;h2 id=&quot;BasketFrontController-java의-doProcess-의-주소비교-후-처리부분에-코드-추가&quot;&gt;&lt;a href=&quot;#BasketFrontController-java의-doProcess-의-주소비교-후-처리부분에-코드-추가&quot; class=&quot;headerlink&quot; title=&quot;BasketFrontController.java의 doProcess()의 주소비교 후 처리부분에 코드 추가&quot;&gt;&lt;/a&gt;&lt;code&gt;BasketFrontController.java&lt;/code&gt;의 doProcess()의 주소비교 후 처리부분에 코드 추가&lt;/h2&gt;</description>
      
      
      
      <content:encoded><![CDATA[<h2 id="BasketFrontController-java의-doProcess-의-주소비교-후-처리부분에-코드-추가"><a href="#BasketFrontController-java의-doProcess-의-주소비교-후-처리부분에-코드-추가" class="headerlink" title="BasketFrontController.java의 doProcess()의 주소비교 후 처리부분에 코드 추가"></a><code>BasketFrontController.java</code>의 doProcess()의 주소비교 후 처리부분에 코드 추가</h2><a id="more"></a><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//장바구니 리스트</span></span><br><span class="line">&#125;<span class="keyword">else</span> <span class="keyword">if</span>(command.equals(<span class="string">"/BasketList.ba"</span>))&#123;</span><br><span class="line">System.out.println(<span class="string">"C: /BasketList.ba 호출"</span>);</span><br><span class="line"><span class="comment">//DB - &gt; JSP페이지출력</span></span><br><span class="line">action = <span class="keyword">new</span> BasketListAction();</span><br><span class="line"><span class="keyword">try</span> &#123; forward = action.execute(request, response);</span><br><span class="line">&#125; <span class="keyword">catch</span> (Exception e) &#123; e.printStackTrace(); &#125;</span><br><span class="line"><span class="comment">//장바구니에서 상품 삭제</span></span><br><span class="line">&#125;<span class="keyword">else</span> <span class="keyword">if</span>(command.equals(<span class="string">"/BasketDelete.ba"</span>))&#123;</span><br><span class="line">System.out.println(<span class="string">"C: /BasketDelete.ba 호출"</span>);</span><br><span class="line"><span class="comment">//.jsp -&gt; Action_DAO_DB -&gt;.ag로 이동</span></span><br><span class="line">action = <span class="keyword">new</span> BasketDeleteAction();</span><br><span class="line"><span class="keyword">try</span> &#123; forward = action.execute(request, response);</span><br><span class="line">&#125; <span class="keyword">catch</span> (Exception e) &#123; e.printStackTrace(); &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><br><br><br></p><h2 id="BasketListAction-java-생성"><a href="#BasketListAction-java-생성" class="headerlink" title="BasketListAction.java 생성"></a><code>BasketListAction.java</code> 생성</h2><ul><li>List 2개를 한꺼번에 가져가는 방법은?<ul><li>한 개의 리스트안에 두 개의 리스트를 넣으면 된다!</li><li>리스트가 여러개이면 헷갈리니까 여기서는 <a href="https://sowon-dev.github.io/2020/07/16/200716jspi2/#4-2-Vector">Vector</a>로 받을 것이다.</li><li>Vector와 ArrayList의 차이점은 동기화! 자세한 건 위의 링크를 참고</li></ul></li><li>request에 저장할때 : 두 줄 코드를 한줄코드로 작성할 수 있어야한다.</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//두줄코드</span></span><br><span class="line">List&lt;BasketDTO&gt; basketList =(List&lt;BasketDTO&gt;) totalData.get(<span class="number">0</span>);</span><br><span class="line">request.setAttribute(<span class="string">"basketList"</span>, basketList);</span><br><span class="line"></span><br><span class="line"><span class="comment">//한줄코드</span></span><br><span class="line">request.setAttribute(<span class="string">"basketList"</span>, totalData.get(<span class="number">0</span>));</span><br></pre></td></tr></table></figure><ul><li>request에 저장할때 원래 정보는 벡터에 저장되어 있지만, Action페이지에서 벡터의 정보를 꺼내서 각각 request에 저장해서 전달<ul><li>이유1: view에서는 복잡한 코드가 있으면 안된다. View에서는 복잡한 연산을 피해야함. 바로 사용가능한 List형태로 전달하는것이 좋다.</li></ul></li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//덩어리채로 request에 저장</span></span><br><span class="line">request.setAttribute(<span class="string">"totalData"</span>, totalData);</span><br><span class="line"></span><br><span class="line"><span class="comment">//각각 꺼내서 request에 저장</span></span><br><span class="line">request.setAttribute(<span class="string">"basketList"</span>, totalData.get(<span class="number">0</span>));</span><br><span class="line">request.setAttribute(<span class="string">"goodsList"</span>, totalData.get(<span class="number">1</span>));</span><br></pre></td></tr></table></figure><h3 id="전체코드"><a href="#전체코드" class="headerlink" title="전체코드"></a>전체코드</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">BasketListAction</span> <span class="keyword">implements</span> <span class="title">Action</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> ActionForward <span class="title">execute</span><span class="params">(HttpServletRequest request, HttpServletResponse response)</span> </span></span><br><span class="line"><span class="function"><span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line">System.out.println(<span class="string">"M : BasketListAction의 execute() 호출"</span>);</span><br><span class="line"><span class="comment">// 로그인 정보 (로그인 처리필요)</span></span><br><span class="line">HttpSession session = request.getSession();</span><br><span class="line">String id = (String) session.getAttribute(<span class="string">"id"</span>);</span><br><span class="line">ActionForward forward = <span class="keyword">new</span> ActionForward();</span><br><span class="line"><span class="keyword">if</span>(id == <span class="keyword">null</span>)&#123;</span><br><span class="line">forward.setPath(<span class="string">"./MemberLogin.me"</span>);</span><br><span class="line">forward.setRedirect(<span class="keyword">false</span>);</span><br><span class="line"><span class="keyword">return</span> forward;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//한글처리</span></span><br><span class="line">request.setCharacterEncoding(<span class="string">"UTF-8"</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">//BasketDAO 이용하여 장바구니 정보(옵션, 구매수량)+해당 상품정보(이름,이미지,가격) 가져오는 메서드 호출</span></span><br><span class="line">BasketDAO bkdao = <span class="keyword">new</span> BasketDAO();</span><br><span class="line">Vector totalData = bkdao.getBasketList(id);</span><br><span class="line"></span><br><span class="line"><span class="comment">//저장</span></span><br><span class="line">request.setAttribute(<span class="string">"basketList"</span>, totalData.get(<span class="number">0</span>));</span><br><span class="line">request.setAttribute(<span class="string">"goodsList"</span>, totalData.get(<span class="number">1</span>));</span><br><span class="line"></span><br><span class="line"><span class="comment">//페이지이동</span></span><br><span class="line">forward.setPath(<span class="string">"./goods_order/goods_basket.jsp"</span>);</span><br><span class="line">forward.setRedirect(<span class="keyword">false</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> forward;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><br><br><br></p><h2 id="BasketDAO-java-생성-후-getBasketList-메서드-코드-추가"><a href="#BasketDAO-java-생성-후-getBasketList-메서드-코드-추가" class="headerlink" title="BasketDAO.java 생성 후 getBasketList()메서드 코드 추가"></a><code>BasketDAO.java</code> 생성 후 getBasketList()메서드 코드 추가</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//장바구니리스트</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> Vector <span class="title">getBasketList</span><span class="params">(String id)</span> </span>&#123;</span><br><span class="line"><span class="comment">//1. 변수생성</span></span><br><span class="line">Vector totalData = <span class="keyword">new</span> Vector();</span><br><span class="line"><span class="comment">//상품정보</span></span><br><span class="line">List&lt;GoodsDTO&gt; goodsList = <span class="keyword">new</span> ArrayList&lt;GoodsDTO&gt;();</span><br><span class="line"><span class="comment">//장바구니정보 </span></span><br><span class="line">List&lt;BasketDTO&gt; basketList = <span class="keyword">new</span> ArrayList&lt;BasketDTO&gt;();</span><br><span class="line"></span><br><span class="line"><span class="keyword">try</span>&#123;</span><br><span class="line">getCon();</span><br><span class="line"><span class="comment">//2. 장바구니 정보 탐색 (id기준으로)</span></span><br><span class="line">sql =<span class="string">"select * from itwill_basket where b_m_id=?"</span>;</span><br><span class="line">pstmt = con.prepareStatement(sql);</span><br><span class="line">pstmt.setString(<span class="number">1</span>, id);</span><br><span class="line">rs = pstmt.executeQuery();</span><br><span class="line"><span class="keyword">while</span>(rs.next())&#123;</span><br><span class="line">System.out.println(<span class="string">"&gt;&gt;&gt; 바스켓 rs while시작"</span>);</span><br><span class="line">BasketDTO bkdto = <span class="keyword">new</span> BasketDTO();</span><br><span class="line">bkdto.setB_date(rs.getDate(<span class="string">"b_date"</span>));</span><br><span class="line">bkdto.setB_g_amount(rs.getInt(<span class="string">"b_g_amount"</span>));</span><br><span class="line">bkdto.setB_g_color(rs.getString(<span class="string">"b_g_color"</span>));</span><br><span class="line">bkdto.setB_g_num(rs.getInt(<span class="string">"b_g_num"</span>));</span><br><span class="line">bkdto.setB_g_size(rs.getString(<span class="string">"b_g_size"</span>));</span><br><span class="line">bkdto.setB_m_id(rs.getString(<span class="string">"b_m_id"</span>));</span><br><span class="line">bkdto.setB_num(rs.getInt(<span class="string">"b_num"</span>));</span><br><span class="line"></span><br><span class="line"><span class="comment">//리스트에 저장</span></span><br><span class="line">basketList.add(bkdto);</span><br><span class="line"></span><br><span class="line"><span class="comment">//장바구니에 저장된 상품정보를 불러오기</span></span><br><span class="line"><span class="comment">//덮어쓰는 꼴이 되기때문에 PreparedStatement와 ResultSet 객체를 다시 생성해야한다.</span></span><br><span class="line">sql =<span class="string">"select * from itwill_goods where gno=?"</span>;</span><br><span class="line">PreparedStatement pstmt2 = con.prepareStatement(sql);</span><br><span class="line">pstmt2.setInt(<span class="number">1</span>, bkdto.getB_g_num());</span><br><span class="line">ResultSet rs2 = pstmt2.executeQuery();</span><br><span class="line"><span class="keyword">if</span>(rs2.next())&#123;</span><br><span class="line">System.out.println(<span class="string">"&gt;&gt;&gt; 굿즈 rs if시작"</span>);</span><br><span class="line">GoodsDTO gdto = <span class="keyword">new</span> GoodsDTO();</span><br><span class="line">gdto.setImage(rs2.getString(<span class="string">"image"</span>));</span><br><span class="line">gdto.setName(rs2.getString(<span class="string">"name"</span>));</span><br><span class="line">gdto.setPrice(rs2.getInt(<span class="string">"price"</span>));</span><br><span class="line"><span class="comment">// 나머지 정보는 필요에 따라 추가 가능</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 상품 리스트에 저장</span></span><br><span class="line">goodsList.add(gdto);</span><br><span class="line">&#125;</span><br><span class="line">System.out.println(<span class="string">"&gt;&gt;&gt; 굿즈 rs if끝"</span>);</span><br><span class="line">&#125;<span class="comment">//end of while</span></span><br><span class="line">System.out.println(<span class="string">"&gt;&gt;&gt; 바스켓 rs while끝"</span>);</span><br><span class="line">System.out.println(<span class="string">"상품 정보 : "</span>+goodsList);</span><br><span class="line">System.out.println(<span class="string">"장바구니 정보 : "</span>+basketList);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 장바구니 정보, 상품정보를 모두 저장완료</span></span><br><span class="line">totalData.add(basketList);</span><br><span class="line">totalData.add(goodsList);</span><br><span class="line">System.out.println(<span class="string">"백터 정보 확인 : "</span>+totalData);</span><br><span class="line">&#125;<span class="keyword">catch</span>(Exception e)&#123;</span><br><span class="line">e.printStackTrace();</span><br><span class="line">&#125;<span class="keyword">finally</span> &#123;</span><br><span class="line">closeDB();</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> totalData;</span><br><span class="line">&#125;<span class="comment">//end of 장바구니리스트</span></span><br></pre></td></tr></table></figure><p><br><br><br></p><h2 id="goods-basket-jsp-생성"><a href="#goods-basket-jsp-생성" class="headerlink" title="goods_basket.jsp 생성"></a><code>goods_basket.jsp</code> 생성</h2><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">%</span></span></span><br><span class="line"><span class="tag">//한글처리</span></span><br><span class="line"><span class="tag"><span class="attr">request.setCharacterEncoding</span>("<span class="attr">UTF-8</span>");</span></span><br><span class="line"><span class="tag">//<span class="attr">basketList</span>에서 구현한 정보를 전달받아서 처리</span></span><br><span class="line"><span class="tag"><span class="attr">List</span> <span class="attr">basketList</span> = <span class="string">(List)</span> <span class="attr">request.getAttribute</span>("<span class="attr">basketList</span>");</span></span><br><span class="line"><span class="tag"><span class="attr">List</span> <span class="attr">goodsList</span> = <span class="string">(List)</span> <span class="attr">request.getAttribute</span>("<span class="attr">goodsList</span>");</span></span><br><span class="line"><span class="tag"><span class="attr">BasketDTO</span> <span class="attr">bk</span> = <span class="string">(BasketDTO)</span> <span class="attr">basketList.get</span>(<span class="attr">0</span>);</span></span><br><span class="line"><span class="tag">%&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- 장바구니 번호, 사진(대표이미지), 상품명, 사이즈,색상,수량,가격, 삭제 --&gt;</span></span><br><span class="line"> <span class="tag">&lt;<span class="name">table</span> <span class="attr">border</span>=<span class="string">"1"</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">caption</span>&gt;</span><span class="tag">&lt;<span class="name">%=bk.getB_m_id()</span> %&gt;</span>님의 장바구니<span class="tag">&lt;/<span class="name">caption</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">td</span>&gt;</span>번호<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">td</span>&gt;</span>사진<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">td</span>&gt;</span>상품명<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">td</span>&gt;</span>크기<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">td</span>&gt;</span>색상<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">td</span>&gt;</span>수량<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">td</span>&gt;</span>가격<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">td</span>&gt;</span>삭제<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">%</span></span></span><br><span class="line">   //EL태그는 FOR문과 상관없이 &lt;c:forEach&gt; 사용해서 출력해야한다.</span><br><span class="line">   for(int i=0; i<span class="tag">&lt;<span class="name">basketList.size();</span> <span class="attr">i</span>++)&#123;</span></span><br><span class="line"><span class="tag">   <span class="attr">BasketDTO</span> <span class="attr">bkdto</span> = <span class="string">(BasketDTO)</span> <span class="attr">basketList.get</span>(<span class="attr">i</span>);</span></span><br><span class="line"><span class="tag">   <span class="attr">GoodsDTO</span> <span class="attr">gdto</span> = <span class="string">(GoodsDTO)</span> <span class="attr">goodsList.get</span>(<span class="attr">i</span>);</span></span><br><span class="line"><span class="tag">   %&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">   <span class="comment">&lt;!-- 순차넘버링  --&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">td</span>&gt;</span><span class="tag">&lt;<span class="name">%=i+1%</span>&gt;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">td</span>&gt;</span><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">"./upload/&lt;%=gdto.getImage().split("</span>,")[<span class="attr">0</span>] %&gt;</span>" height="100px"&gt;<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">td</span>&gt;</span><span class="tag">&lt;<span class="name">%=gdto.getName()</span> %&gt;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">td</span>&gt;</span><span class="tag">&lt;<span class="name">%=bkdto.getB_g_size()</span> %&gt;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">td</span>&gt;</span><span class="tag">&lt;<span class="name">%=bkdto.getB_g_color()</span> %&gt;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">td</span>&gt;</span><span class="tag">&lt;<span class="name">%=bkdto.getB_g_amount()</span> %&gt;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">td</span>&gt;</span><span class="tag">&lt;<span class="name">%=gdto.getPrice()</span> %&gt;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">td</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"button"</span> <span class="attr">class</span>=<span class="string">"btn"</span> <span class="attr">value</span>=<span class="string">"[장바구니에서 삭제]"</span> </span></span><br><span class="line"><span class="tag">  <span class="attr">onclick</span>=<span class="string">"location.href='./BasketDelete.ba?b_num=&lt;%=bkdto.getB_num()%&gt;'"</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">%&#125;</span> %&gt;</span></span><br><span class="line"> <span class="tag">&lt;/<span class="name">table</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"button"</span> <span class="attr">class</span>=<span class="string">"btn"</span> <span class="attr">value</span>=<span class="string">"[구매하기]"</span> <span class="attr">onclick</span>=<span class="string">"location.href='./OrderStar.or'"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"button"</span> <span class="attr">class</span>=<span class="string">"btn"</span> <span class="attr">value</span>=<span class="string">"[계속 쇼핑하기]"</span> <span class="attr">onclick</span>=<span class="string">"location.href='./GoodsList.go'"</span>&gt;</span></span><br></pre></td></tr></table></figure><p><br><br><br></p><h2 id="BasketDeleteAction-java-생성"><a href="#BasketDeleteAction-java-생성" class="headerlink" title="BasketDeleteAction.java 생성"></a><code>BasketDeleteAction.java</code> 생성</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">BasketDeleteAction</span> <span class="keyword">implements</span> <span class="title">Action</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> ActionForward <span class="title">execute</span><span class="params">(HttpServletRequest request, HttpServletResponse response)</span> </span></span><br><span class="line"><span class="function"><span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line">System.out.println(<span class="string">"M : BasketDeleteAction의 execute() 호출"</span>);</span><br><span class="line"><span class="comment">//전달정보 저장</span></span><br><span class="line"><span class="keyword">int</span> b_num = Integer.parseInt(request.getParameter(<span class="string">"b_num"</span>));</span><br><span class="line"></span><br><span class="line"><span class="comment">//BoardDAO객체생성 deleteBoard</span></span><br><span class="line">BasketDAO bkdao = <span class="keyword">new</span> BasketDAO();</span><br><span class="line">bkdao.deleteBasket(b_num);</span><br><span class="line">System.out.println(<span class="string">"M: 장바구니에서 삭제 완료"</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">//장바구니list로 이동</span></span><br><span class="line">ActionForward forward = <span class="keyword">new</span> ActionForward();</span><br><span class="line">forward.setPath(<span class="string">"./BasketList.ba"</span>);</span><br><span class="line">forward.setRedirect(<span class="keyword">true</span>);</span><br><span class="line"><span class="keyword">return</span> forward;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content:encoded>
      
      
      <category domain="https://sowon-dev.github.io/categories/JSP/">JSP</category>
      
      
      <category domain="https://sowon-dev.github.io/tags/TIL/">TIL</category>
      
      <category domain="https://sowon-dev.github.io/tags/ITWILL-JAVA/">ITWILL(JAVA)</category>
      
      
      <comments>https://sowon-dev.github.io/2020/09/15/200915jspi4/#disqus_thread</comments>
      
    </item>
    
  </channel>
</rss>
