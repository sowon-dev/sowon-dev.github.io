{"pages":[],"posts":[{"title":"비전공자, 드디어 깃허브 블로그 개설","text":"비전공자가 IT개발자로, 커리어전환기1비전공자, 드디어 깃허브 블로그를 개설하다. 나는 경영학도다.IT개발자로 커리어를 전환하기 위한 엄청난 노력과 그 과정, 아니,그 험.난.한. 과정을 이 블로그에 적을 예정이다.왜 험난하냐고? 나는 프로그래밍 지식이 1도 없기 때문이다. 또르. 그럼에도 불구하고 내가 개발자가 되려는 이유는내가 현업에서 겪은 문제들을 해결할 수 있는 프로그램을 스스로 개발하고 싶어서이다이 야망찬 꿈! 한 선배가 나한테 한 말이 생각난다.“직장생활 힘들지?” “네” “야 그럴땐 눈 감아봐” “왜요?(당시 순진했던 나는 순순히 눈을 감았다.)” “깜깜해서 아무것도 안보이지? ““네”“그게 니 미래야” 띠용!ㅇㅅㄲㄱ 갓띵언이다끝이 보이지 않는 이~토록 깜깜한 나의 미래 고생고생개고생해서 드디어 깃허브 블로그를 개설했다! CSS 적용 방법을 찾아 해맨다고 정말 개고생했다! 친절하게 설명적혀져 있었지만 내가 까막눈이라… (왜 때문에 설명이 영어…?) 심지어 이거 적을때도 HTML 알아야함ㅁㅊ그게 무슨 말이냐면~ 포스팅쓰다가 어떤 부분응 강조를 하고 싶을땐 굵게라는 버튼이 없다!그동안 넘나 편하게 살았던 것.포스팅 작성시 마크다운사용법을 숙지해야한다줄바꿈을 하고 싶으면 ‘바’를 넣어야한다이거예요근데 이거 어떻게 적용안시키고 넣는지를 모르겠네?ㅋㅋㅋㅋㅋㅋㅋㅋㅋ색깔은 또 우째넣지….ㅋㅋㅋㅋㅋㅋㅋㅋㅋ대환장파티ㅋㅋㅋㅋㅋㅋㅋㅋ 그래도 나아가보려고한다.힘차게 힘차게 한 걸음 한 걸음씩내 기록이 다른 누군가에게 큰 힘이 되었으면 좋겠다 비전공자도 할 수 있다아아아아아! 비전공자가 IT개발자가 되는 방법을 검색하면 다양한 방법과 후기가 나온다.그 중 고심끝에 내가 택한 것은 코드스테이츠의 pre course코스다해당 코스는 10주짜리 코스이다.이제 막 블로그를 개설하고 프로그래밍기초 수업을 듣고 있다.그렇다 나는 이제 고작 한 걸음 내딛었을 뿐이다. 고작 한 걸음이지만, 그리고 앞으로 갈 길이 엄청 멀~지만그래도 나아가보자 혼자 가는 길, 막막할 땐 코드스테이츠를 추천한다원하는 목적지까지 손잡아 이끌어 줄 것이다.물론 다리를 움직여 걷는 것은 나의 몫. This Week I learn가장 중요한 건 크롬의 개발자 도구!F12를 누르면 해당페이지의 엘리먼트들을 볼 수 있고콘솔을 눌러서 간단한 체크를 해볼수있다에러에 대한 코멘트도 나오기때문에 내가 뭘 잘못적어서 틀렸는 지 알 수 있어 매우 유용하다 첫주차에 JavaScript 기본 문법을 공부했다진도가 겁나 빡셈근데 새로운 걸 배울땐 초기에 빡시게 공부하는 것이 맞다.초기가 가장 동기부여가 잘 되어있는 시기기 때문!변수와 타입, 조건문과 함수, 배열등을 배웠다.아직 내게 제일 어려운 건 문자열의 조건문이다. 코드짜다가 도저히 안 풀리는 점이 있어서 코드스테이츠의 help desk에 문의하니 바로 답변해주셨다이래서 코드스테이츠 하는구나. 혼자였으면 구글링 삼천번하고 빡쳐서 아이스크림 사먹으러 나갔을텐데(응?)이제 구글링 10번 하다 안되면 침착히 help desk에 문의하면 된다.개이득이래서 스스로 공부할 때는 선생님이 필요하다. 첫 페어프로그래밍을 하면서 느낀 점은 함수적고 return을 굳이 적을 필요가 없다는 점이다나는 리턴을 남발했는데 그냥 funcion끝나기 전에 한번 하면 됨.페어프로그래밍을 통하여 다른 사람은 코드를 어떻게 효율적으로 짜는 지 보니까 큰 도움이 되었다.물론 내가 페어를 잘 만난 것도 있겠지?내 첫페어분은 C언어를 공부해보셨던 분이라고 하셔서 두뇌회전 속도가 장난아님.천잰줄다음에도 내 페어가 되어주셨으면 좋겠다…나도 빡공해서 페어에게 도움이 되는 페어가 되어야지!","link":"/2019/07/26/190726/"},{"title":"장염과 배열에 두 번 무너지다","text":"비전공자가 IT개발자로, 커리어전환기2장염과 배열에 두번 무너지다.이번주는 급 장염이 목요일 Live session에 참가를 못했다.안그래도 내가 제일 못하는데진짜 죽다가 살았다 화장실과 한발짝도 떨어질. 수. 가. 없었음진심 ㅈ 될뻔.또르… 다행히 live session은 런코에 동영상이 올라와서 보면서 공부중이다.근데 배열 너무 어려운거아님??또르르… 아래는 spilce인데 내가 도저히 이해가 안되서 들고 와봤다.w3school splice를 공부해 보자면 아래와 같다 12var arr = [\"Banana\", \"Orange\", \"Apple\", \"Mango\", \"Kiwi\"];arr.splice(2, 2); 12var arr = [\"Banana\", \"Orange\", \"Apple\", \"Mango\", \"Kiwi\"];arr.splice(2); 아래 2가지가 이해가 되지 않는다. 두 식의 값은 같은데 왜 나는 변환하며 이해가 안가는건지… 1234567function new1(array, n) { let newArr = []; for (let i = n + 1; i &lt; array.length; i++) { newArr.push(array[i]); } return newArr;} 123function new2(array, n) { return array.splice(n+1);} TWIL array.push 쓸 때, return 쓰면 안됨. push의 return 값이 항상 array의 length값을 가져다 줌. 띠용.EX ) 12345function ans(array, value){ array.push(valus);}let test = [1,2] ; ans[test, 3] // ans = [1,2,3] 위의 식은 ok이지만 여기서 아래처럼 return을 쓰면 12345function ans(array, value){ return array.push(valus);}let test = [1,2] ; ans[test, 3] // ans = 3 (원래는 1,2,3을 기대했지만 return은 length인 3의 값을 가져왔음) 중요한 문법 순서 : for반복문 &gt; filter, map, reduce, foreach는 필수","link":"/2019/08/02/190802/"},{"title":"제주코딩베이스캠프 후기1: 캠프소개 + HTML","text":"첫번째이야기, 제주코딩베이스캠프 후기1:캠프소개+HTML 드디어 첫 교육!얼마나 기다려왔던가!여러 직업들에 대해서 들었는데 나는 front end나 정보보완쪽으로 가고싶다.내가 생할코딩을 들었더니 다행히 html과 css는 따라잡을 수 있었다.JS는 어쩌려나… 나 이거 개 못하는데. 오전 강의 정리 : 개요설명 하는 일 우선순위 언어,해야할 것들, 할 수 있는 직업 Front-end HTML, CSS, JS back-end Linux, JS, Jaca, Python 네트워크관리사 네트워크관리사 2급, CCN 정보보안 통합보안관제실, 정보보안 R&amp;D, 보안 운영, 정보보안기사(자격증취득시 바로 취업가능) 정보보안은 깊게 이해하고 있어야한다. 항상 인력이 부족한 영역. 오전 강의 정리 : HTML 꿀팁설명atom에서 느낌표와 탭을 누르면 html자동으로 적힌다 글자크기확대는 컨트롤과 마우스의 힐로 조정. 쉬프트 누르고 행을 클릭하면 해당 행 삭제됨. div는 디비전으로 특정 영역을 나눠 주는 것. 그 특정 영역만 css다르게 적용할 때 주로 사용(ex)특정부분 색깔 변경 등등 web brower란 서버에서 가져온 태크(내가 쓴 태크)를 해석해주는 것. 웹브라우저(크롬,익스플로어등등)마다 지원해주는 태크가 다르다. 123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104h1누르고 tab을 클릭하면 자동으로 h1 /h1 꺽쇠세트가 자동완성됨.&lt;h1&gt;&lt;/h1&gt;h1{hello world}*n 누르고 tab 치면 n번 적힘 예를들어 h1{hello world}*5 누르고 tab을 누르면 5번 적힌다 &lt;h1&gt;hello world&lt;/h1&gt; &lt;h1&gt;hello world&lt;/h1&gt; &lt;h1&gt;hello world&lt;/h1&gt; &lt;h1&gt;hello world&lt;/h1&gt; &lt;h1&gt;hello world&lt;/h1&gt;h$*6 누르고 tab을 치면 h1부터 h6까지 꺽쇠포함해서 작성됨 개이득.&lt;h1&gt;&lt;/h1&gt;&lt;h2&gt;&lt;/h2&gt;&lt;h3&gt;&lt;/h3&gt;&lt;h4&gt;&lt;/h4&gt;&lt;h5&gt;&lt;/h5&gt;&lt;h6&gt;&lt;/h6&gt;.one하고 tab치면 div class=\"one\" /div 이렇게 클래스가 됨&lt;div class=\"one\"&gt; &lt;/div&gt; .one#two하고 tab치면 div class=\"one\" id=\"two\"/div 이렇게 클래스는 원이고 아이디는 투가 됨&lt;div class=\"one\" id=\"two\"&gt; &lt;/div&gt; .one two three#four하고 tab치면 div class=\"one two three\" id=\"four\" /div 이렇게 클래스는 원투쓰리고 아이디는 포가 됨.&lt;div class=\"one two three\" id=\"four\"&gt; &lt;/div&gt;table&gt;(tr&gt;td*4)*5하고 tab치면 테이블이 완성 되며,tr이 행(5개)이고 td가 열(4개)임. &lt;table&gt; &lt;tr&gt; &lt;td&gt;&lt;/td&gt; &lt;td&gt;&lt;/td&gt; &lt;td&gt;&lt;/td&gt; &lt;td&gt;&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td&gt;&lt;/td&gt; &lt;td&gt;&lt;/td&gt; &lt;td&gt;&lt;/td&gt; &lt;td&gt;&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td&gt;&lt;/td&gt; &lt;td&gt;&lt;/td&gt; &lt;td&gt;&lt;/td&gt; &lt;td&gt;&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td&gt;&lt;/td&gt; &lt;td&gt;&lt;/td&gt; &lt;td&gt;&lt;/td&gt; &lt;td&gt;&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td&gt;&lt;/td&gt; &lt;td&gt;&lt;/td&gt; &lt;td&gt;&lt;/td&gt; &lt;td&gt;&lt;/td&gt; &lt;/tr&gt; &lt;/table&gt;.one_$*5하고 tab하면 클래스 1부터 5까지 만드는 거임&lt;div class=\"one1\"&gt;&lt;/div&gt;&lt;div class=\"one2\"&gt;&lt;/div&gt;&lt;div class=\"one3\"&gt;&lt;/div&gt;&lt;div class=\"one4\"&gt;&lt;/div&gt;&lt;div class=\"one5\"&gt;&lt;/div&gt; h1+h2 하고 tab치면 h1꺽쇠세트와 h2꺽쇠세트가 자동완성됨.&lt;h1&gt;&lt;/h1&gt;&lt;h2&gt;&lt;/h2&gt;의미없는 문자열 만드는 것은 lorem하고 tab치면 됨. 홈페이지만들때 글자골격을 위해 자주 사용함.Lorem ipsum dolor sit, amet consectetur adipisicing elit. Culpa perferendis libero nemo inventore enim aspernatur asperiores consectetur voluptatibus quasi accusamus quas nobis earum, animi, ab, itaque sequi ipsa voluptas cumque?b태크와 strong태크는 HTML5에서 같이 굵게를 만들어주지만 차이점이 있다면, 시각장애인을 위해 음성을 읽을때 b태그는 음성강조가 안되지만 strong태크는 음성강조가 됨 =&gt; strong 태크를 쓸 것!&lt;strong&gt;야망&lt;/strong&gt;i태크와 em태크도 기울게로 동일하지만 음성인식에 있어 em태그가 음성강조가 들어감.=&gt; em태크 쓸 것!&lt;em&gt;야망&lt;/em&gt;mark태크는 노란색으로 셀색칠해줌&lt;mark&gt;야망&lt;/mark&gt;ol과 ul차이점은 ol은 순서가 있는 리스트 만들어주고 ul은 순서가 없는 리스트임. 활용팁 : ul태크는 앞의 점을 없애고 가로로 나열되는 걸 세로로 나열해서 홈페이지의 메뉴로 많이 사용함&lt;ol&gt;&lt;/ol&gt;&lt;ul&gt;&lt;/ul&gt; 오후 강의 정리 : HTML123456HTML 주석달기 : 컨트롤 + / =&gt; 주석처리모양 &lt;!-- --&gt;CSS 주석달기 : 컨트롤 + / =&gt; 주석처리모양 /* */","link":"/2019/08/05/190805/"},{"title":"제주코딩베이스캠프 후기2: 카카오특강 + 부트스트랩","text":"두번째이야기, 제주코딩베이스캠프 후기2:카카오특강+부트스트랩 드디어 자바스크립트!오늘을 제일 기다렸다!이거랑 내일 파이썬이 제일 기대된다.그리고 오늘은 카카오 특강이 있는데 도대체 무슨 이야기를 하려나 싶어 참 궁금했다 오전 강의 정리 : CSS &amp; JS오늘내내 CSS에 대해 DEEP하게 배웠다어제 배웠던 내용을 실습해볼수 있어서 큰 도움이 되었다.그리고 내가 기대했던 자바스트립트는 1시간안에 축약적으로 설명을 들었다.자바스크립트의 기본중의 기본, 데이터타입, 변수, 함수까지만 설명해주었다.깊게 들어가지 않아서 실망스러웠다 쳇- 오후 강의 정리 : 카카오특강강의내용은 들여쓰기로 저장해내봤다. 카카오는 크게 제주와 판교.카카오는 서류전형에 학력입력란이 없음. 오로지 코딩테스트를 통해서 선발됨.현직자로서 느끼는 카카오 복지는 매력적칼퇴 후 가족과 제주바닷가에서 보내는 그 시간이 참 좋다전직원에게 법인카드 제공하는데 승인시스템은 없음. 다만 사용내역 전부 내역이 공개되기에 자신이 판단해서 사용한다3년근속하면 안식휴가(한달유급휴가+휴가비까지 지원) 냐하… 개좋다 진짜 On-demand 경제 : 생산자가 아닌 고객 결정 중심으로 서비스가 제공되는 체제의 총칭.2017년부터 중요할 거라고 대두되는 중요한 개념으로 온라인 장터등을 통해수요자가 원하는 형태로 즉각 제공되는 경제 시스템이다on-demand경제 = o2o + 공유경제 카카오택시 기획자분은 해당 서비스를 런칭하기 위해서 택시업체에 1년간 상주하면서 나오게 된 서비스이다. 서비스런칭은 생각보다 고된 직업이구나. 쉬울거라 생각해본적없지만 역시 쉬운 일은 없다 제주데이터허브 = 민간데이터(카카오) + 관공서데이터(제주도청) 으로 최초의 민관데이터허브데이터사이언티스티 라는 직업군이 생길 것. : 빅데이터를 분석하는 직업카카오 API : 유용하게 이용할 수 있음개발시 자주 사용하는 언어 : 스칼라, 자바, 파이선(머신러닝시 주로 이용)신입은 총 7단계를 거쳐 정직원으로 선발 됨 : 서류 &gt; 코딩테스트 &gt; 화상테스트 &gt; 1차면접 &gt; 임원면접 &gt; 신입의경우 3개월의 인턴과정 후 현업평가 &gt; 개발직군평가컴퓨팅사고(Unplugged coding) : 문제해결 능력을 키워주는 사고 ex) 땅콩잼 샌드위치 만들기 저녁 강의 정리 : 부트스트랩부트스트랩은 처음 배우는데 css와 되게 비슷하다.좀더 공부하면 다른 점을 확실히 느끼겠지.그래도 CSS공부하다가 부트스트랩 들으니까 뭔가 친숙한 느낌적인 느낌느낌!부트스트랩은 CSS보다 덜 자유도를 가지고 사용하는 디자인 프로그램 같은 거다.CSS를 잘 못 다루더라고 이렇게 예쁜 버튼을 만들수있다.어떻게?그냥 복붙해서 ㅋㅋㅋㅋ먼저 아래 Bootstrap CSS 태크를 head태그 사이에 입력한다 12&lt;!-- Bootstrap CSS --&gt;&lt;link rel=&quot;stylesheet&quot; href=&quot;https://stackpath.bootstrapcdn.com/bootstrap/4.3.1/css/bootstrap.min.css&quot; integrity=&quot;sha384-ggOyR0iXCbMQv3Xipma34MD+dH/1fQ784/j6cY/iJTQUOhcWr7x9JvoRxT2MZw1T&quot; crossorigin=&quot;anonymous&quot;&gt; 그리고 원하는 링크를 가져와서 body태그 사이에 복붙한다그럼 끝!추가로 바디태그 닫기 바로 직전에 아래 js태크를 입력해주면 된다 12345&lt;!-- Optional JavaScript --&gt;&lt;!-- jQuery first, then Popper.js, then Bootstrap JS --&gt;&lt;script src=&quot;https://code.jquery.com/jquery-3.3.1.slim.min.js&quot; integrity=&quot;sha384-q8i/X+965DzO0rT7abK41JStQIAqVgRVzpbzo5smXKp4YfRvH+8abtTE1Pi6jizo&quot; crossorigin=&quot;anonymous&quot;&gt;&lt;/script&gt;&lt;script src=&quot;https://cdnjs.cloudflare.com/ajax/libs/popper.js/1.14.7/umd/popper.min.js&quot; integrity=&quot;sha384-UO2eT0CpHqdSJQ6hJty5KVphtPhzWj9WO1clHTMGa3JDZwrnQq4sF86dIHNDz0W1&quot; crossorigin=&quot;anonymous&quot;&gt;&lt;/script&gt;&lt;script src=&quot;https://stackpath.bootstrapcdn.com/bootstrap/4.3.1/js/bootstrap.min.js&quot; integrity=&quot;sha384-JjSmVgyd0p3pXB1rRibZUAYoIIy6OrQ6VrjIEaFf/nJGzIxFDsf4x0xIM+B07jRM&quot; crossorigin=&quot;anonymous&quot;&gt;&lt;/script&gt; 개신기하다! 부트스트랩을 쓰다가 너무 못생겼는데 싶으면 Semantic UI추천부트스트랩의 생태계가 더 큼. 유료 템플릿을 이용하고자하면 부트스트랩을, 무료로 이용하고자하면 시맨틱유아이를 추천시맨틱유아이를 추천하는 이유는 기본적으로 예쁘고 제공하는 것들팁: 템플릿이 많다보니 구글링할때 best를 붙이면 편하다 ㅋㅋㅋ제이쿼리란? 자바스트립트에서 사용할 함수들을 미리 만들어놔서 거기서 바로 사용할 수 있는 라이브러리라이브러리란? 함수들을 미리 만들어 놓은 곳 시간이 촉박하여 실습위주로 빠르게 진행하였다부트스트랩은 활용도 높을 듯!","link":"/2019/08/06/190806/"},{"title":"제주코딩베이스캠프 후기3: Python + 홈페이지기획","text":"세번째이야기, 제주코딩베이스캠프 후기3: Python + 홈페이지기획 드디어 파이썬교육!얼마나 기다려왔던가!궁금터진다 어떤 언어길래 각광받고 있는 것일까 오전 강의 정리 : 파이썬 파이썬을 왜 배울까?쉬워서 근데 에러를 잡지 못하고 바로 실행해버리곤한다. 그렇다면 디버깅이 어려운데 왜 이 언어를 쓰는거지?콘솔창에서 디렉토리로 가는 법은 shell명령어1shell명령어2를 알아야한다특히 cd 중요. 디렉토리를 움직일때 자주 사용된다이걸 몰라서 콘솔 사용 못할뻔ㅋㅋㅋㅋㅋㅋ나란 사람, 개초보… 콘솔창에 있는 내용을 복사하고 싶으면 컨트롤c는 안 먹힌다. 왜냐면 다른 단축키라서. 예약어란링크예시와 같이 빌트인fuction이라고 해서 이미 사용하고 있는 단어들을 말한다기능이 정혀져있는 단어다예약어를 어떤 값으로 할당은 가능하나 실제로 사용하지 않는다. 헷갈리기때문 형변환형변환 중 숫자를 문자형으로 변환해야한다고 하자 1print(chr(66)) 숫자6을 문자열로 변환하면 뭘까? 1B B이다 왜때문에?바로 아스키문자표 때문! 오후 강의 정리 : 파이썬 + 해커톤 팀빌딩나는 이번에는 해커톤을 참여하지 않기로 했다.본래 참여목적인 여러 언어 맛보기 + 제주디폴트립이기때문에.잘한 선택인지 고민했으나 지금은 휴식이 필요한 시기라고 판단했다.그 노래가 생각난다. 윤하-someday나는 나를 더 아낄꺼야~ 나는 나를 사랑해~ 저녁 강의 정리 : 홈페이지 기획범재님이 강의해주셨다범재님의 부트스트랩강의도 들었는데 강의스타일이 나랑 잘맞다!이번에도 역시 강의를 잘 하신다.홈페이지 기획에 대해 유용한 사이트를 많이 알게되었다기획의도를 받고 주요 질문들을 해야한다 홈페이지기획 기획을 하기 앞서 먼저 해야할 질문들 웹사이트 만드는 이유? 핵심 요소는? 홈페이지 방문 타켓은? 어떤 기능? 화면설계 순서 추천 도구 와이어프레임 목업 스토리보드 oven 프로토타입 프로토파이, 스케치","link":"/2019/08/07/190807/"},{"title":"제주코딩베이스캠프 후기4: Python + Django","text":"마지막이야기, 제주코딩베이스캠프 후기4: Python + Django 날씨가 이렇게 좋기 있기없기? 오전 강의 정리 : 파이썬 + Django cd = change directory꿀팁 : so치고 탭치면 source라고 자동완성되고 ac치고 탭치면 activate로 나옴장고는 해커톤의 치트키라는 별명을 가지고 있음.한 10개정도 만들면 숙련이 될 것이고 그 후 원하는 앱을 만들 수 있을것임. 이거 줄임말인지 몰랐음ㅋㅋㅋㅋ이제 안 헷갈린다 하하 구름IDE컨테이너에서 항상 가상환경안에서 작업을 해야한다.컨테이너 다시 실행해도 명령어 3종 세트. 이건 그냥 세트다 세트!가상환경만들고 들어가는 방법은 아래와 같다 123cd mysitesource myvenv/bin/activatepython manage.py runserver 0:80 아래와 같이 콘솔 맨 앞에 (my venv)로 꼭 들어가 있는지 확인하고 코딩 작업할 것! 필수! 아래처럼 allow host의미는 화이트리스트기반 여기안에들어온 친구만 접속하게하고 나머지 차단하겠다는 의미.보안이 좋음. 오후 강의 정리 : 파이썬 + Django MVC모델 :MTV 모델(Django용) : ORM기법(Object Relationship Management) 파이선 문법을 가지고 DB를 조작할 수 있음SQL언어 : 데이터베이스 다룰때 가장 좋은 툴이지만 어려움 그래서 python + django로 대신 DB다룰 수 있음파이선+장고를가지고 DB를 다룰 수 있다. make migrations 하고 .py파일을 만지고 mighrate할것임.장고문법이 궁금하다면 여기클릭","link":"/2019/08/08/190808/"},{"title":"코드스테이츠 프리코스에 관한 질문들과 나의 솔직 답변","text":"비전공자가 IT개발자로, 커리어전환기3코드스테이츠 프리코스에 관한 질문들과 나의 솔직 답변과 첫 오프라인 모임저번주에 제주코딩베이스캠프를 마치고 돌아왔다.저번주 내내 코드스테이츠 수업에 참석하지 못해서 발등에 불 떨어졌다다행히 live session은 런코에 동영상이 올라와서 보면서 공부중이지만이미 진도는 안드로메다로…내가 코드스테이츠의 pre코스를 수강중이라고 하니 몇가지 질문을 받았는데코드스테이츠 pre 코스에 대해 궁금한 사람들을 위해 말해보자면 Q1 코드스테이츠 pre코스는 HTML과 CSS, JS를 다루나요?A1 아니요. 자바스크립트만 다룹니다. Q2 비전공자가 따라가기 어렵지 않나요?A2 네, 겁나 버겁습니다. 시간 많을 때 수강하세요. Q3 10주동안 뭘 배우나요?A3 10주동안 기본 개념들을 구글링하면서 아래의 과제들을 수행해야합니다. 주차 과제 1주차 코플릿 자바스크립트 베이직 2주차 코플릿 자바스크립트 베이직 3주차 코플릿 자바스크립트 알고리즘 + 자바스크립트 코언즈 4주차 자바스크립트 코언즈 + 자바스크립트 테스트빌더 5주차 자바스크립트 테스트빌더 + 자바스크립트 트위틀러 6주차 자바스크립트 트위틀러 7주차 자바스크립트 트위틀러 + 언더바 8주차 solo week (추석기간임) 9주차 언더바 +Recursion 10주차 Recursion 난 아직도 코플릿 베이직풀고있는데 다른 분들은 코플릿 알고리즘 다 풀고 코언즈 하고 있었다.또르…빨리 알고리즘을 풀고 코언즈로 넘어가고싶지만… 빨리 푸는게 마음대로 안되고한번 푼다고해서 완벽하게 아는게 아니다.다시 풀면 새로운 느낌적인 느낌느낌 오늘은 첫 오프라인 모임에 참석했다.내가 비전공자고 아직도 베이직풀고있어서 코드스테이츠 오프라인 모임에 참석할까말까 고민을 많이했는데그냥 일단 하자!한다! 라는 고리님의 명언이 생각나서 그냥 참석했다참석하고나니 굉장히 유익했다서로 알고있는 개념들을 공유하여 공고히 다지고생각해왔던 것들을 이야기를 나누다보니 동기부여가 많이 되었다만난김에 같이 live session도 들었다 개이득같이 들으니까 집중도 잘되고 더 재미있었다ㅋㅋㅋ오래전 고딩시절 야자했던 기억이 새록새록 ㅋㅋㅋ 젊어진 느낌 TWIL 기초가 바로 잡혀있지 않으면 시간이 갈수록 계속 헷갈린다. 기본중의 기본 sum += i 의 의미는 sum = sum + i이고 아래에서 i++의 의미는 i를 1씩 증가시킨다는 의미이다 123456789var sum = 0;for (i=0; i&lt;5; i++){sum += i}sum = sum + 1; // value = 1sum = sum + 2; // value = 3sum = sum + 3; // value = 6sum = sum + 4; // value = 10sum = sum + 5; // value = 15 그렇다면 sum -= i의 의미는? 1sum = sum - i 자잘한 기본들. for문과 for … in문은 다르다. 고르는 건 필터 filter 새로만드는건 맵 map 누적 리듀스 reduce reduce는 acc과 curr 값을 이용해서 하나의 연산 결과를 만들 때 쓰고, 단순히 배열을 순회하고 싶다면 for문이나 forEach를 쓰는게 더 알맞다 코드를 깔끔하게 하는 것은 나중의 일. 지금은 코드를 작성하는 것에 몰두하는 것이 좋다. 코언즈이용시 기본들. commit은 내가 변경한 내용 저장하는 것. push는 commit한 내용을 원격저장소에 전송하는 것.","link":"/2019/08/16/190816/"},{"title":"잘 풀리지 않는 자바스크립트알고리즘 sumDigits 디버깅을 통한 문제해결","text":"비전공자가 IT개발자로, 커리어전환기4잘 풀리지 않는 자바스크립트알고리즘 sumDigits 디버깅을 통한 문제해결하기.아니 왜이렇게 안 풀리는거야?한 문제가지고 몇시간동안 씨름하기도 지친다자쳐이렇게해서 언제 코언즈풀고 진도 따라가냐… 어휴 TWILa005_sumDigits문제 : 숫자가 주어졌을때, “sumDigits” 함수는 숫자의 각 자리수를 모두 더한 값을 반환합니다.12345function sumDigits(num) { //코드를 작성해보세요}let output = sumDigits(-316);console.log(output); // --&gt; 4가 나와야합니다. 반복문으로 돌리면서 조건문을 넣어야하는 건 알겠는데 말이지 1234567891011121314function sumDigits(num) { let sum = 0; let stringNumArr = num.toString().split(''); for (let i = 0; i &lt; stringNumArr.length; i++) { if (stringNumArr[0] === '-' &amp;&amp; i === 1) { sum = sum - Number(stringNumArr[1]); } else if (stringNumArr[i] !== '-') { sum = sum + Number(stringNumArr[i]); } } return sum;} 12let output = sumDigits(-316);console.log(output); // --&gt; 4 예시대로 디버깅해서 풀어 써보면 1234567891011121314151617181920212223242526272829303132function sumDigits(num) { let sum = 0; let stringNumArr = num.toString().split(''); //=&gt; stringNumArr = ['-', '3', '1', '6'] for (let i = 0; i &lt; 4; i++) { if (stringNumArr[0] === '-' &amp;&amp; 0 === 1) { //=&gt; false sum = 0 - Number(stringNumArr[1]); } else if (stringNumArr[0] !== '-') { //=&gt; false sum = 0 + Number(stringNumArr[0]); } if (stringNumArr[0] === '-' &amp;&amp; 1 === 1) { //=&gt; true sum = 0 - Number(stringNumArr[1]); //=&gt; sum = 0 - 3 =&gt; sum = -3 } else if (stringNumArr[0] !== '-') { //=&gt; false sum = 0 + Number(stringNumArr[1]); } if (stringNumArr[0] === '-' &amp;&amp; 2 === 1) { //=&gt; false sum = -3 - Number(stringNumArr[1]); } else if (stringNumArr[0] !== '-') { //=&gt; true sum = -3 + Number(stringNumArr[2]); //=&gt; sum = -3 + 1 =&gt; sum = -2 } if (stringNumArr[0] === '-' &amp;&amp; 3 === 1) { //=&gt; false sum = -2 - Number(stringNumArr[1]); } else if (stringNumArr[0] !== '-') { //=&gt; true sum = -2 + Number(stringNumArr[3]); //=&gt; sum = -2 + 6 =&gt; sum = 4 } } return sum; //=&gt; 4}","link":"/2019/08/19/190819/"},{"title":"콘솔로그 찍는 방법과 디버깅하는 방법","text":"비전공자가 IT개발자로, 커리어전환기5쌩초보를 위한 콘솔로그 찍는 방법과 디버깅하는 방법코플릿문제를 풀다보면 도대체 어디서 잘못되었는지 궁금할 때가 있다.그때 아주 유용하게 사용할 수 있는 것이 바로 console.log 찍기이다. TWIL 콘솔로그찍는 방법 아래와 같은 예제 console.log를 찍어봤다. 12345678910111213141516171819function sumDigits(num) { let n = num.toString(); let arr = n.split(''); return arr.reduce(function(acc, curr, idx, original){ console.log('-----------------')//=&gt;줄긋기 console.log('넘어온 값', acc) console.log('현재값', curr); if(curr === '-'){ return acc; } if(original[idx-1] === '-'){ return -(Number(curr)) + Number(acc); } else { return Number(curr) + Number(acc); } }, 0); console.log(value)} 1234567891011121314151617sumDigits(-123)/*-----------------넘어온 값 0현재값 ------------------넘어온 값 0현재값 1-----------------넘어온 값 -1현재값 2-----------------넘어온 값 1현재값 3최종 값은 4*/ 위 예시에서 디버깅해서 풀어 써보면 아래와 같다개발자도구에서 함수 아래부분에 그냥 debugger라고 적어주면 된다!완전 쉬움 123456789101112131415161718function sumDigits(num) { debugger; let n = num.toString(); let arr = n.split(''); return arr.reduce(function(acc, curr, idx, original){ if(curr === '-'){ return acc; } if(original[idx-1] === '-'){ return -(Number(curr)) + Number(acc); } else { return Number(curr) + Number(acc); } }, 0);}sumDigits(-123) **콘솔로그는 에러난 코드 또는 알아 보고싶은 코드 바로 윗줄에 찍는 게 좋음","link":"/2019/08/20/190820/"},{"title":"new Array(), Array.join()의 차이","text":"비전공자가 IT개발자로, 커리어전환기6new Array(), Array.join()의 차이자바스크립트 알고리즘을 눈물로 끝내고 나서…(다시보면 풀지못하는 문제가 너무 많다)드디어 코언즈시작한다.코언즈는 까리한 프로그램을 이용하여 제출해야하는 과제인데, git bash와 Visual Studio Code이다.둘 다 제코베에서 건들여본적이 있어서 어떻게 사용하는 지 대충…정말 대강 조금 알고 있다코언즈가 자바스크립트 알고리즘보다 더 쉽게 느껴진다.왜냐면 콘솔로그 찍으면 바로 답이 나오니까ㅋㅋㅋㅋㅋ 이거 빨리 끝내고 후딱 테스트빌더하고 현재 진행중인 트위틀러로 넘어가야지..갈..길..이..보이지…않아…아직도…하 멀다 멀어 누군가 그랬었지, 행복은 멀리 있는 것이 아니라고어어어어어어어어어엄청 멀리있다고 내게 남은 과제도…또르 TWIL Array 길이 확인하기.겁나 베이직한 개념인데 내가 이해를 못해서 적어봄.아래 문제에서 ‘답’에 들어갈 답은? 12let tenEmptyElementArray = new Array(10);expect(tenEmptyElementArray.length).toBe('답'); 정답은 아래와 같다. 12let tenEmptyElementArray = new Array(10);expect(tenEmptyElementArray.length).toBe(10); 콘솔로그를 찍어보면 나는 빈배열이니까 배열의 길이는 0이라고 생각했는데왜 10인걸까?일단 new는 class를 만드는 명령어이다. 123456Array(숫자) //=&gt; 이거는 숫자만큼 빈배열이 만들어지는 것.//만약let arr = new Array(3) //위와 같다면 arr는 아래와 같다arr = [ , , ]//=&gt;빈칸이 3개 생기는 것임. empty * 3 따라서 아까는 괄호안에 숫자 10이 있었으므로 빈칸이 10개가 생겨서 length도 10임.더불어서 123let arr2 = new Array(1,2,3) //=&gt;이렇게 하면 arr2는 어떻게 구성되어 있을까?//정답은?arr2 = [1,2,3] 더 나아가 Array.join을 알아보자. 123456let arr3 = new Array(3).join(); //=&gt; 어떻게 될까?arr3 = [ ]//=&gt;빈칸 3개가 합쳐진 것임. 헷갈리므로 숫자를 넣어서 보면 이해하기 편하다. 중요한 점은 join을 하는 순간 배열이 아님! string임!let ans = new Array(1,2,3).join();ans = '123' 만약 join안에 숫자가 있다면? 12let ans2 = new Array(1,2,3).join(0);ans2 = '10203' //=&gt;3뒤에는 0이 붙지 않는다! 숫자들 사이에만 join안의 string이 들어감!","link":"/2019/08/21/190821/"},{"title":"코드스테이츠 이머시브코스의 질문과 솔직한 답변","text":"비전공자가 IT개발자로, 커리어전환기7코드스테이츠 이머시브코스의 질문과 솔직한 답변하기오늘은 이머시브코스와 관련해서 질의응답시간이 있었다바로 참석해서 이때까지 궁금했던 것들을 물어보았다이머시브코스의 비용이 궁금하다면 클릭다양한 결제방식이 있어서 딱 얼마다라고 말하기가 어렵다.나는 대략적으로 2년에 900만원(월40만원정도)이라고 생각하고 있다. Q. 이머시브코스는 무엇인가?A. Full stack을 지향하는 주니어 개발자를 기르는 것이 목적인 16주짜리 코스이다.주로 자바스크립트, 컴퓨터공학개념, 프론프앤드와 백앤드를 배운다 Q. IAT는 무엇인가?A. Immersive Course를 수강하려면 입학 시험(IAT, Immersive Admission Test)를 통과해야한다.시험수준은 pre course의 과제들을 다양한 방식으로 풀어낼 수 있으면 통과할 수 있다고 한다 Q. 이머시브코스의 결과물은 몇 개인가?A. 2주짜리 결과물 1개와 4주짜리 결과물 1개로 총 2개. 완성도가 높은 건 당연히 4주짜리 결과물! Q. 외국에서 수강가능한가?A. 한국시간기준으로 출첵 가능하고 잠을 줄일 수 있다면 충분히 가능하다. 출석체크는 시프티라는 어플을 통해 한국시간기준으로 보통 오전9시에 함. 팀플이기때문에 다른 팀원들에게 피해를 끼치지 않는 선에서 충분히 수강이 가능하다 Q. 온라인 수강과 오프라인 수강이 어떻게 나누어져있는 것인지?A. 쉽게 말하면, 온라인수강, 오프라인수강, 핫데스크 이렇게 나누어진다고 생각하면 됨Immersive Course의 모든 과정은 기본적으로 온라인으로 진행됨 하지만 오프라인 과정 분들은 코드스테이츠가 제공하는 공간(위워크)에 모여서 함께 학습하게 됨온라인과 오프라인 수강생들 모두 주로 zoom을 통해 온라인으로 협업함원한다면, 온라인수강생들도 코드스테이츠의 제휴 공간들(위워크)에서 별도의 비용을 지불하고 함께 모여 수강할 수 있음온라인 : 집에서 수강오프라인 : 출석체크 오전9시 퇴실체크 오후8시. 개인학습공간이 주어짐. 개인짐을 놔두고 다닐 수 있음.핫데스크 : 도서관처럼 위워크에서 제공하는 자리 중 남은 자리를 이용함. (메뚜기) 개인짐을 들고 다녀야하지만 위워크사물함 월3만뭔에 이용가능하다고 한다 Q. CSE란?A. 기수당 2명정도 뽑는다CSE가 되면 이머시브코스에서 수강생에게 도움을 주고 혜택을 받는다어떤 혜택인지 문의해놨음 답변받으면 기재해야지","link":"/2019/08/23/190823/"},{"title":"HTML기초: div와 span의 차이, 새탭에서 링크열기","text":"비전공자가 IT개발자로, 커리어전환기8HTML기초: div와 span의 차이, 새탭에서 링크열기드디어 HTML을 배운다. 1. 먼저 div VS span 태그의 차이점12345div 태그는 한 줄을 차지한다&lt;div&gt;division&lt;/div&gt;span태그는 컨텐츠 크기만큼 공간을 차지한다&lt;span&gt;요~~~만큼span&lt;/span&gt; 2. 새탭에서 링크열기1&lt;a href=\"http://naver.com\" target=\"_blank\"&gt; 새탭에서 네이버링크열기&lt;/a&gt; 3. 아이디와 비밀번호 입력칸 만들기아이디칸을 만들때는 인풋타입을 text로 하고비밀번호칸을 만들때는 인풋타입을 password로 지정해주면 됨! 12&lt;input type=\"text\" placeholder=\"아이디\"&gt;&lt;input type=\"password\" placeholder=\"비밀번호\"&gt; 또는 아래와 같이도 그럴듯하게 만들 수 있다! 123456789&lt;div&gt; ID &lt;input type=\"text\" placeholder=\"아이디\"&gt;&lt;/div&gt;&lt;div&gt; PASSWORD &lt;input type=\"password\" placeholder=\"비밀번호\"&gt;&lt;/div&gt;&lt;div&gt; &lt;input type=\"checkbox\"&gt; 항상 ID기억하기&lt;/div&gt; 4. 라디오버튼과 체크박스버튼의 차이점은?라디오버튼은 그룹설정가능, 중복선택불가능체크박스버튼은 그룹설정불가능, 중복선택가능 123456&lt;div&gt; &lt;input type=\"radio\" name=\"choice1\" value=\"a\"&gt; 출근이 힘들까? &lt;input type=\"radio\" name=\"choice1\" value=\"b\"&gt; 퇴근이 힘들까?&lt;/div&gt;만약 name이 없다면 중복선택이 가능하다.근데 한 번클릭하면 해제가 안됨.name의 값은 똑같은 이름이 되어야 같은 그룹으로 지정이 되어 둘중하나 선택이 가능해진다 1234&lt;div&gt; &lt;input type=\"checkbox\" checked&gt; 월급은 내가 받을게 &lt;input type=\"checkbox\"&gt; 출근은 누가 할래&lt;/div&gt; 5. textarea는 줄바꿈이 가능하다!123&lt;div&gt;&lt;textarea&gt;&lt;/textarea&gt;&lt;/div&gt; 6. 버튼만들기123&lt;div&gt; &lt;button&gt; 제출하기 &lt;/button&gt;&lt;/div&gt; 지금까지의 내용들을 html로 보면 아래와 같다","link":"/2019/08/27/190827/"},{"title":"CSS기초: block과 inline, inline-block의 차이,  border-box, postion","text":"비전공자가 IT개발자로, 커리어전환기9CSS기초: block과 inline, inline-block의 차이, border-box, postion1. block과 inline, inline-block의 차이1234block은 &lt;div&gt;태그처럼 한 줄을 다 차지하는 요소inline과 inline-block은 &lt;span&gt;태그처럼 딱 콘텐츠 공간만을 차지하는 요소그 중 inline은 높이height를 가질 수 없다.inline-block은 높이height를 가질 수 있다. 그림이 이해가 쉬우니까 구글링해보았다 2. CSS box-sizing : border-box로 꼭!CSS 시작 전에 box-sizing : border-box로 지정해두면 편하다지정하는 방법은 2가지 1234567891011121314151. 지정하고픈 id나 class에 각각 지정#id, .class { box-sizing : border-box;}2. style sheet 시작시에 바로 기재*{ box-sizing : border-box;}#id { //write your code} 3. 어렵고도 어려운 postion항상 어려운 게 포지셔닝이다.대학시절 마케팅때고 포지셔닝이 어려웠는데 여기서 또 만날 줄이야?!(물론 다른 학문으로) 12345static: 기본값relative: 기본값+상대적인위치fixed: 브라우저 화면의 좌상단을 기준으로 절대적인 위치absolute: 모부 중 기준점이 있는 경우, 그 기준으로 절대적인 위치sticky: 기본적으로 relative처럼 작동하나, &lt;strong&gt;스크롤 영역을 벗어나면 fixed처럼 작동&lt;/strong&gt; ex)스크롤내리면 따라다니는 팝업광고창","link":"/2019/08/29/190829/"},{"title":"한국코드페어 python 특강 후기: 데이터의 관점으로 생각하기","text":"데이터의 관점으로 생각하기 by 이숙번강사 2019년 한국코드페어 - SW 빌더스 챌린지 오프라인 특강「데이터의 관점으로 생각하기」강사: 이숙번 blackdew7@gmail.com 강의 내용 여러 관점으로 데이터 이해하기 데이터와 모델 마법의 공식 Y = WX + b 마법의 공식에서 w는 가중치이다 딥러닝은 W과 b값을 스스로 찾는 것 이숙번 강사 소개파인코드에서 주 4회근무 &amp; 한달에 1번 강연반 로섬이 파이썬을 만든 이유 : 로컬에서 FILE들을 편리하게 처리하고 싶어서 만든 언어파이썬은 script, web, data science, machine learning등 다양한 분야에서 강력한 개발 환경을 갖추게 됨 구글드라이브 colaboratory.python을 다운 받지 않아도 바로 사용할 수 있는 걸 구글이 구글드라이브에 만들어놨음 프로그램이란?진행 계획이나 순서. 또는 그 목록.코드(=명령어)를 순서대로 실행시키는 것. 컴퓨터의 구성요소land gate를 쌓아서 computer가 만들어짐 land gate = universial gate land gate를 중첩해서 쌓으면 computer같은 효과가 나타남 머신러닝이란?사람이 패턴을 학습하는 방법을 알아냈고 그걸 컴퓨터에게 알려준 것패턴에서 가장 중요한 것은 바로 데이터 데이터를 잘 준비하려면,1.데이터에 대해 잘 알기2.데이터 잘 다루기3.데이터 찾고 수집하고 만들기4.데이터 제대로 해석하기5.데이터 관점에서 생각하기 Python을 추천하는 이유는 2~4번까지가 잘 되게 때문임 1.데이터에 대해 잘 알기1. 변수 (특징, feature)다리라는 특징으로 동물이라는 데이터를 표현하도록 만든 것변수의 타입은 2가지임 : 범주형, 숫자형ex) 숫자라고 해서 숫자형데이터가 아니다. 예를 들어 month라는 변수가 있을때 1월 2월~12월이라고 해서12월이 1월의 12배인게 아니니까 -&gt; 이건 범주형데이터고 이걸 정확히 비교해야 데이터를 올바로 이해하는 것임또 다른 예로 hour가 있다1시가 6시에 비해 6배가 더 많은 게 아니다 또 다른 예로 rank가 있다1등급과 3등급이 3배차이가 나는 것이 아니다 2. 차원과 데이터 포인트2교시 : colab을 통해 딥러닝모델 만들기내가 준 a와 내가 정해준 b를 loss 줄이게끔 스스로 딥러닝하는 모델을 만드는 거임그니까 f(x)를 컴퓨터 스스로가 찾는 거임처음에는 loss가 10,000이었는데 천번째 돌리면 loss가 7300이고 삼천번째 돌리면 loss가 300으로 낮아짐 숫자형 데이터(y = Wx+b) : linear regression리니어 리그레이션 (직선) , 위아래(b)와 기울기(W)를 통해 오차값을 줄인다범주형 데이터(sigmoid(y = Wx+b)) : logistic regression로지스틱 리그레이션 (곡선) , sigmoid함수안에 오차값이 들어있음(y = Wx+b) , 위아래(b)와 기울기(W)를 통해 오차값을 줄인다 3교시 : 인공신경망인공신경망은 리니어 리그레이션과 로지스틱 리그레이션을 깊게 쌓아서 개와 고양이를 구분해낼 수 있다머신러닝 = 리니어 리그레이션 : y=M(X) 이 수식은 행렬수식이다 칼럼이 한개 : y = W1X1 + W0칼럼이 두개 : y = W2X2 + W1X1 + W0행렬연산은 데이터를 펼쳐놓은 것칼럼이 늘수록 W렬의 갯수가 늘어난다 인공신경망을 위해 공부해야할 것 : linear regression리니어 리그레이션 + logistic regression로지스틱 리그레이션 + 행렬 + 미분 우리 뇌에는 cpu가 없다 오직 Neuron으로만 이루어져있음뉴런의 촉수들이 연결되어있다 input이 중요하다하면(가중치가 높다면) 스스로 다음 촉수로 보내고 가중치가 낮으면 input을 무시한다 relu함수를 통해서 학습이 진행됨.기존 sigmoid를 통해 앞에서 보낸 신호가 학습이 안되었는데 relu를 이용하여 앞에서 보낸 신호를 학습가능하게 됨","link":"/2019/08/31/190831/"},{"title":"끝말잇기: 괄호의종류,객체벤다이어그램,배열기본,콜백함수,이벤트리스너","text":"웹 게임을 만들며 배우는 JS : 끝말잇기괄호의종류,객체벤다이어그램,배열기본,콜백함수,이벤트리스너 1. 대괄호 [] 중괄호 {} 소괄호 ()2. 객체 벤다이어그램함수는 객체지만, 객체는 함수가 아님. 배열은 객체지만, 객체는 배열이 아님. 3. 객체 = { 속성(프로퍼티) : 값(value), 속성(메서드) : 함수, } 3-1. 객체에서 값을 가져올 때, 2가지 방법123456789101112131415161718let 가랑카페 = {커피 : '아메리카노',가격 : 1500}//첫번째 방법 : 닷 노테이션가랑카페.커피//두번째 방법 : 브라켓 노테이션가랑카페['커피'] 방법이 두가지인 이유는? 닷노테이션은 변수를 가져오지 못한다 1234567var 값 : '커피'가랑카페.값 //=&gt; undefined가랑카페['값'] //=&gt; '아메리카노' 3-2 객체에서만 쓸 수 있는 것 닷 노테이션 ex) ‘안녕하세요’.length 또는 ‘*’.repeat(5) 브라켓 노테이션 ex) ‘안녕하세요’[1] 여기서 잠깐!‘안녕하세요’는 문자인데 어떻게 both 노테이션을 쓸 수 있을까? 브라우저가 자동으로 문자객체로 바꾸기 때문에 가능. 직장생활 꿀팁1. 객체 속성 값을 지우고 싶을 때는 undefined 가 아닌 null로 값을 덮어씌움으로써 내가 직접 지웠는지 아닌지 구분할 수 있다 직장생활 꿀팁2. 객체에서 값을 작성한 후 마지막 속성에도 꼭 반점(,) 을 찍어준다. 그게 실전에서 편함. 4. 배열 = [ ‘사과’, ‘오렌지’, ‘포도’, ] 12345let 과일 = [ '사과', '복숭아', '배']console.log(과일[1]) // =&gt; 복숭아 여기서 잠깐!과일은 배열인데 어떻게 브라켓 노테이션을 쓸 수 있을까? 배열은 객체이기때문! 하지만 객체는 배열이 아님! 직장생활 꿀팁3. 그룹화하고싶지만 속성이름을 따로 주고 싶지 않을 때 배열을 사용한다. 직장생활 꿀팁4. 배열에서 값을 작성한 후 마지막 속성에도 꼭 반점(,) 을 찍어준다. 그게 실전에서 편함. 5. 무한 반복문을 끄고 싶으면 shift + esc -&gt; 크롬관리자창에서 현재탭 종료6. JS에서 HTML 태크 만들기1234567891011var 바디 = document.body;var 단어 = document.createElement('div');단어.textContent = '단어';document.body.append(단어);var 폼 = document.createElement('form');document.body.append(폼);var 입력창 = document.createElement('input');폼.append(입력창);var 등록버튼 = document.createElement('button');등록버튼.textContent = '등록';폼.append(등록버튼); 위와 JS와 아래의 HTML은 동일하다 12345&lt;div&gt;단어&lt;/div&gt;&lt;form&gt; &lt;input type=\"text\" &gt; &lt;button&gt;등록&lt;/button&gt;&lt;/form&gt; 7. 콜백함수매개변수 이름은 마음대로! but 다른 사람이 봐도 알 수 있게 명확히 이름짓는 것이 포인트! 12345678function 콜백함수 (이벤트) {}예를 들어 function 더하기 (숫자1, 숫자2) { console.log(숫자1 + 숫자2);}더하기(3, 5) //=&gt;8 8. 이벤트리스너 = 반복문 역할 (아닐 때도 있음)1234567891011121314151617181920212223242526폼.addEventListener('submit', function (이벤트) { //sunmit은 enter를 치면 기본적으로 새로고침이 되고 기존 기억이 리셋된다.//그걸 방지하고 계속 진행하기 위해 아래와 같이 preventDefault를 넣어줌 이벤트.preventDefault(); if (단어.textContent[단어.textContent.length -1] === 입력창.value[0]){ 결과창.textContent = '딩동댕'; 단어.textContent = 입력창.value; 입력창.value = ''; //입력창을 비워주는 것 입력창.focus(); //커서가 자동으로 입력창에 있음 }else{ 결과창.textContent = '땡!'; }});===반복문// while(true){// var answer = prompt(word);// if (word[word.length -1] === answer[0]){// alert('딩동댕');// word = answer;// } else {// alert('땡');// }// }","link":"/2019/09/04/190904/"},{"title":"DOM : JS에서 자식태그만들기, .append와 .appendChild의 차이점, innerHTML","text":"비전공자가 IT개발자로, 커리어전환기10DOM : JS에서 자식태그만들기, .append와 .appendChild의 차이점, innerHTML우연한 기회에 친한 언니에게 내가 만든 블로그를 소개해주려고 모바일로 접속했다(자랑할라고ㅋㅋㅋ) 이거 봐라~하면서 의기양양하게 클릭했는데 아니?! 코드의 왼쪽 부분이 다 짤려서 보이지 않았다(쭈굴) 그래서 집에 오자마자 배운 CSS로 바로 margine 넣어서 간단하게나마 반응형 웹을 만들었다(여기서라도 자랑중) 1. 자식태그만들기123&lt;div&gt;태그만들기 &lt;button&gt;버튼&lt;/button&gt;&lt;/div&gt; 을 js에서 만들려면 방법2가지가 있다. 123456789방법 1 : append 쓰기var div태그 = document.createElement('div'); div태그.textContent = '태그만들기'; document.body.append(div태그);var 버튼태그 = document.createElement('button'); 버튼태그.textContent = '등록'; div태그.append(버튼태그); //div태그(모부태그)안에 자식태그로 넣는 것. 123456789방법 2 : appendChild 쓰기var div태그 = document.createElement('div'); div태그.textContent = '태그만들기'; document.body.append(div태그);var 버튼태그 = document.createElement('button'); 버튼태그.textContent = '등록'; div태그.appendChild(버튼태그); //div태그(모부태그)안에 자식태그로 넣는 것. 둘 다 잘 작동한다 그렇다면 둘의 차이점은 무엇일까? 2. .append와 .appendChild의 차이점123&lt;div&gt;태그만들기 &lt;button id='비교해보자'&gt;등록&lt;/button&gt;&lt;/div&gt; 기존 js 12345678var div태그 = document.createElement('div'); div태그.textContent = '태그만들기'; document.body.append(div태그);var 버튼태그 = document.createElement('button'); 버튼태그.textContent = '등록'; 버튼태그.id = '비교해보자'div태그.append(버튼태그); //div태그(모부태그)안에 자식태그로 넣는 것. 위와 같이 이미 만들어져있는 HTML에서 ‘버튼’뒤에 string을 추가하고 싶다. 이때 2가지 비교해보자. 1234방법 1 : append 쓰기기존 js의 아래부분에 추가한다document.getElementById('비교해보자').append(\" 이건 어팬드\"); 버튼안에 ‘버튼 이건 어팬드’라고 출력되며 잘 작동한다 두번째 appendChild쓰면 어떨까? 12345방법 2 : appendChild 쓰기기존 js의 아래부분에 추가한다document.getElementById('비교해보자').appendChild(\" 이건 어팬드차일드\");//TypeError: Failed to execute 'appendChild' on 'Node': parameter 1 is not of type 'Node'. 타입에러가 난다. 왜일까? appendChild는 element가 필요하기 때문. 따라서 아래와 같이 적어야한다. 12345678방법 2-1 : appendChild 쓰기기존 js의 아래부분에 추가한다var 어팬드차일드 = document.createElement('text');또는var 어팬드차일드 = document.createElement('span');어팬드차일드.textContent = ' 이건 어팬드차일드'document.getElementById('비교해보자').appendChild(어팬드차일드); 버튼안에 ‘버튼 이건 어팬드차일드’라고 출력되며 잘 작동한다 만약 버튼 안의 text를 아예 바꾸고 싶다면 appendChild와 innerHTML를 세트로 사용하면 된다! 1234567방법 2-2 : appendChild + innerHTML 세트로 쓰기//이 방법은 기존js에서 수정이 필요하다//div태그.append(버튼태그);에서 appendChild로 수정이 필요하다 div태그.appendChild(버튼태그); document.getElementById('비교해보자').innerHTML =' 이건 어팬드차일드'; 딱 2줄 바꿨다. 근데 이건 버튼태그안의 내용에 추가하는 게 아니라 내용 자체를 변경하는 것이다 따라서 버튼태그안의 text인 ‘등록’은 없어지고 ‘ 이건 어팬드차일드’만 남는다. 결론1.appendChild사용할 수 있는 모든 경우는 append 사용이 가능하지만, 그 반대는 아니다.2.appendChild는 DOM method고 append는 jQuery method 이다.appendChild + innerHTML 세트로 사용하면 내용 변경에 유용하다참고링크 : https://rpubs.com/raulUbiqum/append 참고링크 : https://developer.mozilla.org/en-US/docs/Web/API/ParentNode/append","link":"/2019/09/05/190905/"},{"title":"동기와 비동기, split, join, indexOf, i++과 i+&#x3D;1","text":"웹 게임을 만들며 배우는 JS : 숫자야구동기와 비동기, split, join, indexOf, i++과 i+=11. 동기와 비동기동기 : 위에서 아래로 순차적으로 코드가 실행 됨. 비동기 : 순차적X, 언제 코드가 실행될 지 모름. ex) .addEventListener 2. split와 join1234문자.split(구분자) -&gt; 배열배열.join(구분자) -&gt; 문자구분자 ex : ' ' 또는 ' : ' 또는 ',' 등등 다양하게 가능. 3. 배열. indexoOf1234배열.indexOf(값)값의 위치를 알 수 있다.배열속의 0번째인지 2번째인지 등등배열속에 없으면 -1 출력. 활용방안 123456789101112let 숫자배열 = [1,3,4,5];숫자배열.indexOf(1) //=&gt; 0숫자배열.indexOf(4) //=&gt; 2숫자배열.indexOf(8) //=&gt; -1어떤 배열에 내가 궁금한 숫자가 있는 지 확인하고 싶을때 for (let i =0; i&lt;숫자배열.length; i+=1){ if (숫자배열.indexof(내가궁금한숫자) &gt; -1){ 있다 ++ }} 4. i++ 과 i+=1123456i = i + 1을 두가지 방식으로 짧게 표현할 수 있다첫번째 : i+=1원래 순서대로라면 i=+1이 되어야할텐데 왜 +=순서냐면, 연산자에 순서가 있는데 그중에 = 이 제일마지막에 와야하기 때문! 두번째 : i++ 첫번째가 더욱 직관적이기때문에 첫번째 방식으로 공부하기를 추천함.","link":"/2019/09/06/190906/"},{"title":"Image sprite, Dictionary자료구조, setInterval(fuction(){},100), find VS findindex VS indexOf, Object.entries(객체), or연산자를 [].includes()로","text":"웹 게임을 만들며 배우는 JS : 가위바위보Image sprite, Dictionary자료구조, setInterval(fuction(){},100), find VS findindex VS indexOf, Object.entries(객체), or연산자를 [].includes()로1. 이미지스프라이트(Image sprite)가위바위보게임을 만들기 위해 가위,바위,보 손가락 모양의 이미지가 필요하다. 흔히 이미지를 가위 하나, 바위 하나, 보 하나 총 3장이 있어야 된다고 생각하기 쉬운데~ 땡!!! 가위바위보가 다 그려져있는 한 장의 이미지를 가지고 표현할 수 있다. 이것을 이미지스프라이트라고 한다 12345678910111213141516&lt;head&gt; &lt;style&gt; #computer { width : 273px; height: 350px; background :url(\"가위바위보.jpeg\") no-repeat; background-position: -273px 0; //각각 왼쪽부터 x축과 y축의 좌표. x축의 좌표를 변경하여 한장으로 가위,바위,보를 각각 나타낼 수 있다 } &lt;/style&gt;&lt;/head&gt;&lt;body&gt; &lt;div id=\"computer\"&gt; &lt;img src=\"\" alt=\"\"&gt; &lt;/div&gt;&lt;/body&gt; 추천링크1 : https://developer.mozilla.org/ko/docs/Web/CSS/CSS_Images/Implementing_image_sprites_in_CSS 추천링크2 : http://tcpschool.com/css/css_basic_imageSprites 2. Dictionary 딕셔너리자료구조123456789//딕션너리자료구조var dictionary = { //딕셔너리자료구조 바위 : ['0', '바위', 'rock'] //1대 多 구조 가능 보 : { 한국어 : '바위', 영어 : 'paper', 값 : '0' } //배열,객체 구조도 가능. 다국어 지원시 용이}; 3. setInterval(fuction(){},100)1234567891011setInterval(function(){ if(컴퓨터의선택 === dictionary.바위){ 컴퓨터의선택 = dictionary.가위; }else if(컴퓨터의선택 === dictionary.가위){ 컴퓨터의선택 = dictionary.보; }else { 컴퓨터의선택 = dictionary.바위; } document.querySelector('#computer').style.background = \"url('가위바위보.jpeg') \"+ 컴퓨터의선택 + ' 0';}, 100) //0.1초마다 반복 실행 setInterval과 setTimeout 차이점 setInterval n초마다 반복실행(인터벌은 간격을 뜻하니까) setTimeout n초에 한번실행 후 종료 4. find VS findindex VS indexOf차이점은 indexOf는 1차원배열에 쓰고, find또는findindex는 2차원배열에 쓴다 find반복문이지만 지정된 값을 찾으면 반복문 자동 종료 findindex는 2차원배열의 인덱스값(몇번째인지)을 알려준다 5. Object.entries(객체)Object.entries(객체)는 객체를 배열로 바꾸어준다. 1234567891011121314var dictionary = { //딕셔너리자료구조 가위 : '-255px', 바위 : '0', 보 : '-535px'};console.log(dictionary);// {가위: \"-255px\", 바위: \"0\", 보: \"-535px\"}console.log(Object.entries(dictionary));// (3) [Array(2), Array(2), Array(2)]// 0: (2) [\"가위\", \"-255px\"]// 1: (2) [\"바위\", \"0\"]// 2: (2) [\"보\", \"-535px\"] 2차원 배열인 [key, 값(value)] 로 만들어진다 6. or연산자를 [].includes()로 나타내기123if (결과 === -1 || 결과 === 2 ){ console.log('이겼습니다!!')} 위의 or연산자를 [].includes() 간단하게 나타낼 수 있다. 123if([-1,2].includes(결과)){ console.log('이겼습니다!!')}","link":"/2019/09/22/190922/"},{"title":"콜백함수실행, Blocking VS non-blocking, 배열.indexOf(value), Number.toFixed(숫자), 탬플릿태그","text":"비전공자가 IT개발자로, 커리어전환기11콜백함수실행, Blocking VS non-blocking, 배열.indexOf(value), Number.toFixed(숫자), 탬플릿태그1. 콜백함수실행 handleClick()은 실행이고 실행의 결과는 return값이 없으므로 undifiend이다 2. 동기와 비동기 개념설명 : Blocking VS non-blocking 비동기는 요청에 대한 결과가 동시에 일어나지 않는다. 요청을 다 받긴 한다. 그럼 결과가 언제 일어나느냐? callback이 일어날때 결과가 발생함! 3. 배열.indexOf(value)값의 위치를 알 수 있다. [0]번째인지 [2]번째인지 등등 값이 없으면 -1이 출력. 123456789//예제let 과일 = ['딸기', '포도', '바나나', '사과']console.log(과일.indexOf('바나나'))// expected output: 2console.log(과일.indexOf('리치'))// expected output: -1 4. Number.toFixed(숫자)Number.toFixed(2) = 소수점 둘째자리까지 반올림하여 표시 1234//예제1console.log(((1.2345).toFixed(1))// expected output: \"1.2\" 1234//예제2console.log((1.256).toFixed(2))// expected output: \"1.26\" 1234567//예제3function financial(x) { return Number.parseFloat(x).toFixed(2);}console.log(financial(123.456));// expected output: \"123.46\" 5. 템플릿태그 HTML에 템플릿 태그부분은 JS의 세번째 줄이 없으면 아예 브라우저가 읽지 않는다 따라서 이벤트리스너를 달때는 템플릿아이디를 가지고 와서 다는 게 아니라 템플릿안의 다른 클래스나 아이디를 가지고와야한다","link":"/2019/09/24/190924/"},{"title":"JS에서 테이블만들기, 자식태그, 2차원배열, 2차원배열클릭이벤트, forEach","text":"웹 게임을 만들며 배우는 JS : 틱택토JS에서 테이블만들기, 자식태그, 2차원배열, 2차원배열클릭이벤트, forEach1. JS에서 테이블과 HTML태크 만들기123456789101112131415161718192021222324252627틱택토용으로 3x3 테이블은 한번에 만드는 코드는 table&gt;(tr&gt;td*3)*3 이다그러면 아래와 같이 자동으로 아래 코드가 생성된다 &lt;table&gt; &lt;tr&gt; &lt;td&gt; &lt;/td&gt; &lt;td&gt; &lt;/td&gt; &lt;td&gt; &lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td&gt; &lt;/td&gt; &lt;td&gt; &lt;/td&gt; &lt;td&gt; &lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td&gt; &lt;/td&gt; &lt;td&gt; &lt;/td&gt; &lt;td&gt; &lt;/td&gt; &lt;/tr&gt; &lt;/table&gt;위 코드만 치면 테이블이 모습을 나타내지 않기에 style을 넣어줘야한다. &lt;style&gt; td{ border: 1px solid black; width: 80px; height: 80px; } &lt;/style&gt; 이것을 그대로 JS로 구현할 수 있다. 1234567891011var 바디 = document.body;var 테이블 = document.createElement('table'); for (let i=1; i&lt;4; i+=1){ var 행 = document.createElement('tr'); for(let j=1; j&lt;4; j+=1){ var 열 = document.createElement('td'); 행.appendChild(열); } 테이블.appendChild(행); } 바디.appendChild(테이블); 직장생활팁 : 실무에서는 무조건 html로 작성해야한다. 그게 더 효율적임. js로 나타낼 수 있다는 걸 알기만 하면 됨. 2. JS에서 HTML 태크 만들기1&lt;div&gt;태그만들기&lt;/div&gt; 을 js에서 만들려면 아래와 같이 만들면 된다. 123var div태그 = document.createElement('div'); //div태그를 만드는 것div태그.textContent = '태그만들기'; // 만든 태그에 내용을 적는 것document.body.append(div태그); // 만든 태그를 body에 표현하는 것. 이걸 꼭 해야함. 3가지가 세트라고 생각하면 됨. 3종세트! 3. 자식태그만들기123&lt;div&gt;태그만들기 &lt;button&gt;버튼&lt;/button&gt;&lt;/div&gt; 을 js에서 만들려면 방법2가지가 있다. 123456789방법 1 : append 쓰기var div태그 = document.createElement('div'); div태그.textContent = '태그만들기'; document.body.append(div태그);var 버튼태그 = document.createElement('button'); 버튼태그.textContent = '등록'; div태그.append(버튼태그); //div태그(모부태그)안에 자식태그로 넣는 것. 123456789방법 2 : appendChild 쓰기var div태그 = document.createElement('div'); div태그.textContent = '태그만들기'; document.body.append(div태그);var 버튼태그 = document.createElement('button'); 버튼태그.textContent = '등록'; div태그.appendChild(버튼태그); //div태그(모부태그)안에 자식태그로 넣는 것. 둘 다 잘 작동한다 그렇다면 둘의 차이점은 무엇일까? 4. .append와 .appendChild의 차이점123&lt;div&gt;태그만들기 &lt;button id='비교해보자'&gt;등록&lt;/button&gt;&lt;/div&gt; 기존 js 12345678var div태그 = document.createElement('div'); div태그.textContent = '태그만들기'; document.body.append(div태그);var 버튼태그 = document.createElement('button'); 버튼태그.textContent = '등록'; 버튼태그.id = '비교해보자'div태그.append(버튼태그); //div태그(모부태그)안에 자식태그로 넣는 것. 위와 같이 이미 만들어져있는 HTML에서 ‘버튼’뒤에 string을 추가하고 싶다. 이때 2가지 비교해보자. 1234방법 1 : append 쓰기기존 js의 아래부분에 추가한다document.getElementById('비교해보자').append(\" 이건 어팬드\"); 버튼안에 ‘버튼 이건 어팬드’라고 출력되며 잘 작동한다 두번째 appendChild쓰면 어떨까? 12345방법 2 : appendChild 쓰기기존 js의 아래부분에 추가한다document.getElementById('비교해보자').appendChild(\" 이건 어팬드차일드\");//TypeError: Failed to execute 'appendChild' on 'Node': parameter 1 is not of type 'Node'. 타입에러가 난다. 왜일까? appendChild는 element가 필요하기 때문. 따라서 아래와 같이 적어야한다. 12345678방법 2-1 : appendChild 쓰기기존 js의 아래부분에 추가한다var 어팬드차일드 = document.createElement('text');또는var 어팬드차일드 = document.createElement('span');어팬드차일드.textContent = ' 이건 어팬드차일드'document.getElementById('비교해보자').appendChild(어팬드차일드); 버튼안에 ‘버튼 이건 어팬드차일드’라고 출력되며 잘 작동한다 만약 버튼 안의 text를 아예 바꾸고 싶다면 appendChild와 innerHTML를 세트로 사용하면 된다! 1234567방법 2-2 : appendChild + innerHTML 세트로 쓰기//이 방법은 기존js에서 수정이 필요하다//div태그.append(버튼태그);에서 appendChild로 수정이 필요하다 div태그.appendChild(버튼태그); document.getElementById('비교해보자').innerHTML =' 이건 어팬드차일드'; 딱 2줄 바꿨다. 근데 이건 버튼태그안의 내용에 추가하는 게 아니라 내용 자체를 변경하는 것이다 따라서 버튼태그안의 text인 ‘등록’은 없어지고 ‘ 이건 어팬드차일드’만 남는다. 결론적으로 appendChild사용할 수 있는 모든 경우는 append 사용이 가능하지만, 그 반대는 아니다.appendChild + innerHTML 세트로 사용하면 내용 변경에 유용하다참고링크 : https://rpubs.com/raulUbiqum/append 5. 2차원배열3x3칸을 만들었다면 그 안에 O,X 배열을 넣어야 게임을 만들 수 있다. 그것을 2차원 배열이라고 하는데 아래처럼 보이게 만들고 싶다. 12345열들 = [ [첫칸, 두칸, 세칸] [첫칸, 두칸, 세칸] [첫칸, 두칸, 세칸]] 어떻게 하면 될까? 2차원 배열을 만드는 방법 첫번째 스탭은 123456789101112131415161718//틱택토게임STEP1. JS로 3X3테이블만들기var 바디 = document.body;var 테이블 = document.createElement('table');var 행들 = [];var 열들 = []; for (let i=1; i&lt;4; i+=1){ var 행 = document.createElement('tr'); 행들.push(행); 열들.push([]); //빈 배열 3개를 만듬 즉, 행 3개를 만듬 console.log(행들, 열들); for(let j=1; j&lt;4; j+=1){ var 열 = document.createElement('td'); 행.appendChild(열); } 테이블.appendChild(행); } 바디.appendChild(테이블); 콘솔로그를 확인하면 빈 배열 3개가 생겼으므로 그 배열에 2차원 배열을 넣어야한다. 두번째 스탭은 1234567891011121314151617//틱택토게임STEP1. JS로 3X3테이블만들기var 바디 = document.body;var 테이블 = document.createElement('table');var 열들 =[]; for (let i=1; i&lt;4; i+=1){ var 행 = document.createElement('tr'); 열들.push([]); //빈 배열 3개를 만듬 즉, 행 3개를 만듬 for(let j=1; j&lt;4; j+=1){ var 열 = document.createElement('td'); 열들[i-1].push(열); //왼쪽상단제일첫번째칸에 열을 넣는 것. 행.appendChild(열); } 테이블.appendChild(행); } 바디.appendChild(테이블);console.log('행들' , 행들, '열들', 열들); 콘솔로그를 확인하면 짜잔- 2차원 배열 완성! 6. 2차원배열 클릭이벤트이벤트리스너로 만든 2차원배열을 클릭할때마다 O,X를 나타나게끔 구현 3번의 들여쓰기가 있기에 코딩격언에 따라 ㅋㅋㅋ 변수에 function을 넣는다. 12345678910111213141516171819202122232425262728293031//틱택토게임STEP2. 2차원배열에 클릭하면 O,X 구현 var 턴 = 'X';var 비동기콜백 = function (이벤트){ console.log(이벤트.target); //열을 지목 console.log(이벤트.target.parentNode); //모부코드를 지목(=여기선 행) console.log(이벤트.target.parentNode.parentNode); //조모부코드를 지목(=여기선 테이블) var 몇번행 = 행들.indexOf(이벤트.target.parentNode); //인덱스오브로 몇줄인지 찾을 수 있음 console.log('몇줄', 몇번행); var 몇번열 = 열들[몇번행].indexOf(이벤트.target); console.log('몇칸', 몇번열); // if(열들[몇번행][몇번열].value !== '') 여기서는 밸류가 아니라 텍스트콘텐트다 //input의 값이 value이고 //태그 안 글자는 textContent if (열들[몇번행][몇번열].textContent !== ''){ //칸이 이미 채워져있는 경우 console.log('빈칸아닙니다') }else{ console.log('빈칸입니다') 열들[몇번행][몇번열].textContent = 턴; if (턴 === 'X'){ 턴 = 'O'; }else { 턴 = 'X'; } }};바디.append(결과); 이벤트.target = 열을 지목하는 것 이벤트.target.parentNode = 모부코드를 지목하는 것. 여기선 행으로 지정해놓았다 배열.indexOf(‘이거’) = 배열안에 ‘이거’가 몇번째에 있는지 순서를 알려준다. 참고 : https://www.w3schools.com/jsref/jsref_indexof_array.asp 2차원 배열을 클릭하면 X나O로 배열안의 내용을 바꿔주고 싶을 때는 .value가 아니라 .textContent이다. 12열들[0][1].value = 'X' 여기서는 error 뜸 열들[0][1].textContent = 'X' 여기서는 배열의 0번째행 1번째열이 'X'로 변경됨. input의 값은 .value를 사용하고 태그 안 글자는 .textContent를 사용한다 7. 테이블의 3칸이 다 X거나 O로 채워졌는 지 구현12345678910111213141516171819202122232425262728293031323334353637383940414243444546474849var 결과 = document.createElement('div');//틱택토게임STEP3. 3칸이 다 X거나 O로 채워졌는 지 구현 var 다참 = false; //가로줄검사 if(열들[몇번행][0].textContent === 턴 &amp;&amp; 열들[몇번행][1].textContent === 턴 &amp;&amp; 열들[몇번행][2].textContent === 턴){ 다참 = true; } //세로줄검사 if(열들[0][몇번열].textContent === 턴 &amp;&amp; 열들[1][몇번열].textContent === 턴 &amp;&amp; 열들[2][몇번열].textContent === 턴){ 다참 = true; } //대각선검사 if(몇번행 - 몇번열 === 0){ if(열들[0][0].textContent === 턴 &amp;&amp; 열들[1][1].textContent === 턴 &amp;&amp; 열들[2][2].textContent === 턴){ 다참 = true; }} if(Math.abs(몇번행-몇번열)===2){ if(열들[0][2].textContent === 턴 &amp;&amp; 열들[1][1].textContent === 턴 &amp;&amp; 열들[2][0].textContent === 턴){ 다참 = true; }} //다 찼으면 if (다참){ 결과.textContent = 턴 +'님의 승리!'; console.log(턴 + '님의 승리!') //승리한 뒤에는 초기화가 되어야한다. 아래는 초기화하는 코드. 턴 = 'X'; 열들.forEach(function (행){ //1차원으로 행을 먼저 선택한 후 행.forEach(function(열){ //2차원으로 선택된 행에서의 열을 함께 선택함. 열.textContent = ''; }); }); }else{ if (턴 === 'X'){ 턴 = 'O'; }else { 턴 = 'X'; } } }}; 2차원 배열이니까 반복문 2번씩 사용된다. 3차원배열이면 3번씩 사용됨. 중첩문을 줄이는게 코딩을 잘 하는 것. 8. 배열.forEach(function(){ })123456789[1,2,3,4,5].forEach(function(엘리먼트){ //배열안의 것들을 요소(element)라고 부름 console.log(엘리먼트);});//output =&gt;12345 참고 : https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/forEach","link":"/2019/09/07/190907/"},{"title":"Math.random(), Math.floor&#x2F;ceil&#x2F;round, forEach와map, for반복문과while반복문사용차이, .sort(오름차순정렬) setTimeout(function (){} , 밀리초)","text":"웹 게임을 만들며 배우는 JS : 로또추첨기Math.random(), Math.floor/ceil/round, forEach와map, for반복문과while반복문사용차이, .sort(오름차순정렬) setTimeout(function (){} , 밀리초)1. Math.random()랜덤한 수를 뽑는 매서드이다. 123456Math.random() 에서 * n을 하면, n전까지의 숫자가 random으로 나온다.보기쉽게 소수점첫째자리 버림 하는 함수인 Math.floor()와 함께 주로 사용한다.예를들어Math.floor(Math.random()*5)//=&gt; 0,1,2,3,4 숫자들이 랜덤으로 출력됨. 2. Math.floor()와 Math.ceil()와 Math.round()세가지의 차이점은 123Math.floor() : 소수점 버림. 정수로 반환. Math.ceil() : 소수점 올림. 정수로 반환.Math.round() : 소수점 반올림. 정수로 반환. 3. .forEach(function(){})와 .map(function(){})STEP1. 로또 숫자 만들기(1~45까지) 123456789101112var 후보군 = Array(45); //empty가 45개 생기고 empty의 특징은 foreach반복문 적용 불가.var 필 = 후보군.fill(); //필을 해줘야 45개의 emtpy에서 undefined가 된다.empty가 아니기에 forEach반복문 실행가능해짐.//forEach를 사용해서 억지로 숫자를 넣을 수 있다.필.forEach(function(요소,인덱스) { 필[인덱스] = 인덱스 + 1; });console.log(필);//=&gt; (45) [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45] 더 좋은 방법이 있다. 바로 maping이다..map(function(){})은 array 요소와 1대1로 mapping이 된다. 12345678var 후보군 = Array(45); var 필 = 후보군.fill(); var 맵 = 필.map(function(요소, 인덱스){ return 인덱스 + 1});console.log(맵);//=&gt; (45) [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45] 굳이 변수를 3개씩 많이 지정할 필요가 없다. 위의 전체를 변수 1개로 그리고 단 세 줄로 나타낼 수 있다. 12345var 후보군 = Array(45).fill().map(function(요소, 인덱스){ return 인덱스 + 1});console.log(후보군);//=&gt; (45) [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45] 세상 깔~끔! 4. for반복문과 while반복문 사용차이STEP2. 숫자를 랜덤하게 섞고 총7개 숫자를 뽑기 숫자를 랜덤하게 섞은 뒤 7가지의 숫자를 뽑고자 한다면 흔히 for문을 먼저 생각할 것이다. 1234567891011121314var 셔플 = [];for (var i=0; i&lt;후보군.length; i+=1){ var 이동값 = 후보군.splice(Math.floor(Math.random()*후보군.length), 1)[0]; 셔플.push(이동값);} console.log('---')console.log('후보군길이: '+후보군.length); //=&gt;22개console.log('셔플길이: '+셔플.length); //=&gt;23개// 후보군길이 + 셔플길이 = 45 개 된다. // 즉, 기존 후보군길이 45개에서 셔플로 23개 빠지고 나머지 22개만 남게된다.console.log('후보군: '+후보군.sort(function(p, c){ return p-c;})); console.log('셔플숫자: '+셔플.sort(function(p, c){ return p-c;})); 하지만 for반복문을 못 쓰지 못한다. 후보군길이 + 셔플길이 = 45 개 된다. 즉, 기존 후보군길이 45개에서 셔플로 23개 빠지고 나머지 22개만 남게된다. 후보군.length가 45개에서 22개로 줄어들면 우리가 원하는데로 45개에서 랜덤숫자 7개를 뽑을 수 없다. 지금 23개에서 랜덤숫자 7개 뽑는 꼴이 되버림. 따라서 이럴 때는 while을 쓴다. 12345678910111213while (후보군.length&gt;0){ var 이동값 = 후보군.splice(Math.floor(Math.random()*후보군.length), 1)[0]; 셔플.push(이동값);}console.log('---')console.log('후보군길이: '+후보군.length); //=&gt; 0개console.log('셔플길이: '+셔플.length); //=&gt; 45개// 후보군길이 + 셔플길이 = 45 개 된다. // 즉, 기존 후보군길이 45개에서 셔플로 45개 빠지고 나머지 0개만 남게된다.console.log('후보군: '+후보군.sort(function(p, c){ return p-c;})); console.log('셔플숫자: '+셔플.sort(function(p, c){ return p-c;})); for반복문은 내가 몇번 반복해야할 지 정확히 알 때 사용하면 좋고, while반복문은 내가 몇번 반복해야할 지 모를 때, 그리고 기준값이 계속 변경될때 사용하면 좋다. 여기서 기준값은 후보군.length다. 이렇게 뽑은 랜덤한 7개의 숫자는 아직 console.log를 통해 볼 수 밖에 없다. 따라서 화면에 구현하는 방법은 html로 결과창태그를 만든 뒤 js상으로 결과창태그를 불러와서 뽑은 랜덤당첨숫자들이 결과창태그의 자식태그로 들어가면 된다. 123&lt;div id='결과창'&gt; &lt;div&gt;여기에 각 당첨숫자태크가 갯수만큼 자동으로 생겨야함&lt;div&gt; //그렇다면 for문이겠지?&lt;/div&gt; 123456789//1.html상의 결과창태그를 js로 가져오는 방법은 두가지이며 아래 5번에서 자세히 설명함!var 결과창 = document.getElementById('결과창');//2.뽑힌 숫자들을 결과창태그의 자식태그로 넣기for(let i=0; i&lt;당첨숫자들.length; i+=1){ var 공 = document.createElement('div'); //i번만큼의 div태크 만들고 공.textContent = 당첨숫자들[i]; //div태크안에는 뽑힌 당첨숫자들을 하나씩 넣고 결과창.appendChild(공); //결과창태크의 자식태그로 넣는다} 5. JS에서 html태그를 불러오는 2가지 방법첫번째, getElementById 와 getElementsByClassName 를 이용하기 두번째, querySelector 와 querySelectorAll를 이용하기(권장) 1234567&lt;body&gt; &lt;div&gt;당첨 숫자는? ㄷㄱㄷㄱㄷㄱ&lt;/div&gt; &lt;div id='결과창'&gt;&lt;/div&gt; &lt;div&gt;보너스숫자&lt;/div&gt; &lt;div class='보너스'&gt;&lt;/div&gt; &lt;script src = \"로또추첨기.js\"&gt;&lt;/script&gt; &lt;/body&gt; 이 태그들 중 결과창과 보너스를 js로 가져오는 방법은 1234567//첫번째 방법사용var 결과창 = document.getElementById('결과창'); var 칸 = document.getElementsByClassName('보너스')[0]; //class의 경우 여러개 사용이 가능해서 꼭 뒤에 [n] 몇번째 클래스인지 적어줘야함//두번째 방법사용var 결과창 = document.querySelector('#결과창'); //id일 경우 #var 칸 = document.querySelector('.보너스'); //class일 경우 . 끝!이렇게 가지고 와서 원하는 방향으로 사용하면 된다! 6. .sort와 .sort(function(p, c){ return p-c;})123.sort() : 숫자 정렬예를들어 [2,15,4,7,27].sort();//=&gt; [15,2,27,4,7] . 뭔가 이상한데? 첫째자리 수를 기준으로 숫자 오름차순이라서 그렇다. 15에 1이 먼저 있기때문에 15가 제일 첫번째로 정렬되었다. 우리가 원하는 오름차순은 아래와 같다. 내림차순은 덤으로 공부! 1234567.sort(function(p, c){ return p-c;}) : 숫자오름차순 정렬예를들어 [2,15,4,7,27].sort(function(p, c){ return p-c;})//=&gt; [2,4,7,15,27].sort(function(p, c){ return c-p;}) : 숫자내름차순 정렬예를들어 [2,15,4,7,27].sort(function(p, c){ return c-p;})//=&gt; [27,15,7,4,2] 어떠한 원리로 정렬이 되는 걸까? 123456789101112131415161718[25,1,12].sort(function(p, c){ return p-c;})//=&gt; p-c가 0보다 크면 둘의 정렬순서를 바꿔주는 원리.p - c25 - 1 = 24 //=&gt;이건 0보다 크므로 [1,25,12]로 정렬순서가 바뀐다. // 그리고 바뀐 정렬순서에서 다시 실행.p - c 25 - 12 = 13 //=&gt;이건 0보다 크므로 [1,12,25]로 정렬순서가 바뀐다.//그리고 처음부터 다시 실행.p - c1 - 12 = -11 //=&gt;이건 0보다 작으므로 순서를 바꾸지 않는다//그 다음 계속 실행p - c12 - 25 = -13 //=&gt;이건 0보다 작으므로 순서를 바꾸지 않는다//다 돌았으므로 정렬 끝 = [1,12,25] 숫자뿐만 아니라 문자도 비슷한 원리로 정렬이 된다고 한다. 7. setTimeout(function (){} , 밀리초)STEP3. 화면에 로또숫자를 긴장감있게 나타내기 랜덤 숫자들이 화면에 한꺼번에 보여지는 게 아니라 시간차를 두고 나타나게 하고 싶다면 setTimeout(function (){} , 밀리초) 을 사용하면 된다. 12345setTimeout(function(){ var 공 = document.createElement('div'); 공.textContent = 당첨숫자들[0]; //for문사용시 클로저문제가 발생하므로 당첨숫자들[0] ~ 당첨숫자들[5]까지 각각 적어준다. 결과창.appendChild(공);}, 1000); //밀리초라고해서 1000 = 1초임 for문사용시 클로저문제가 발생하므로 당첨숫자들[0] ~ 당첨숫자들[5]까지 각각 적어준다. 나는 쪼랩이라 아직 클로저문제 해결법을 안 알려준다고 한다ㅋㅋㅋㅋ 나중에 중급강의에 알려준다고 하니 그때 해야지. 그럼 어떻게 하느냐? for문을 안 쓰면 된다 당첨숫자들[0] ~ 당첨숫자들[5]까지 각각 적어준다. 만약 클로저를 이용해서 푼다면 아래와 같다 12345678for(var i=0; i&lt;당첨숫자들.length; i+=1){ function 클로저(j){ setTimeout(function(){ 공색칠하기(당첨숫자들[j], 결과창); },(j+1) * 1000); } 클로저(i);} 이걸 더 짧게 줄일 수가 있는데 바로 즉시실행코드를 이용하면 된다 function을 괄호로 감싸면 즉시실행코드가 된다 1234567for(var i=0; i&lt;당첨숫자들.length; i+=1){ (function 클로저(j){ setTimeout(function(){ 공색칠하기(당첨숫자들[j], 결과창); },(j+1) * 1000); })(i);}","link":"/2019/09/12/190912/"},{"title":"WCC1기 OFF-SESSION 후기","text":"WCC1기 OFF-SESSION 후기유이경연사님의 프레시코드 창업기, 이은지연사님의 데이터 분석 교육 프로그램 기획자의 커리어 이야기오늘은 코드스테이츠의 OFF SESSION이 있는 날이다. WCC장학프로그램을 수료완료한 장학생을 대상으로 연사님들의 특강을 듣는 날이다. 이 날을 얼마나 기다리고 기다렸던지…! 네 분의 연사님 중에서 두 분의 강연을 골라 들을 수 있었다 몸을 쪼개어 강의를 전부 다 듣고 싶었다 ㅋㅋㅋㅋㅋ&lt;진심. 궁서체. 1. 유이경 연사님의 프레시코드 창업기유이경 연사님은 프레시코드의 창업자이다. 프레시코드란 건강편의식 거점 배송 물류 유통망 온라인 플랫폼이다. 일반 배송원가는 3~4000원인데 반해 늘어나고 있는 1인가구엔 너무 비효율적이라고 늘 생각했던 터에 실리콘밸리에서 인턴을 하며 샐러드를 밥으로 먹는 사람들을 보며 큰 시장이 될 것을 확신했다고 한다. 연사님이 좋아하는 것 사회적 가치, SIFE(현, ENACTUS) 활동 아이디어 내기 새로운 활동 [걸스인텍(https://www.facebook.com/GITSeoul/)] 활동 자신이 좋아하는 것을 어떻게 풀어낼까 하다가 창업을 선택하게 되었다고 한다. 연사님의 강연 중 가장 와닿았던 부분은 초기 창업자에게 필요한 것에 대한 조언이었다. 초기장업자에게 필요한 것은1. 창업자는 마케터이다2. Connecting the dots 내 주변에 알리기도 필요하다.내 주변도 설득 못 하면서 하물며 알지도 못하는 고객을 어떻게 설득시키겠는가 3. 실행력초반의 프레시코드를 구상할 당시에는 몰랐지만 지나고보니 Lean startup cycle를 비슷하게 사이클했다고 한다. 갓 창업을 구상할 때 추천하는 사이클이라고 했다. 아이디어 -&gt; 베타제품제작 -&gt; 마켓테스팅-&gt; 2-1. 페이스북홍보+구글폼 -&gt; 2-2. 애플리케이션에서 웹사이트로 제작변경(becaz 초기 단계에선 접근성에 유리)-&gt; 2-3. 개발자들이 웹사이트 제작하는 동안 창업자들은 임시 웹사이트를 열어 한 달간 샐러드어택이벤트를 진행함-&gt; 2-4. 72개사에 110개판매로 성공적으로 베타서비스 완료 분석 -&gt; 3-1. 거점 배송지 증설 3-2. 산학협력으로 신메뉴개발 아이디어검증 기억에 남는 두 문장 처음부터 완벽한 전략은 없다. 그 대신 찾아오는 기회를 빠르게 잡을 수 있어야 한다. 한 명의 안티를 붙잡는 것보다 10명의 충성고객을 유지하는 것이 중요하다 딱딱하지 않고 친근한 연사님이었다. 대단하다는 생각과 동시에 나도 할수있다는 동기부여를 얻었다. 2. 이은지 연사님의 데이터 분석 교육 프로그램 기획자의 커리어 이야기시작부터 화끈한 이은지 연사님은 그야말로 카리스마 대장이었다 강연시작하자마자 SI업체에 가지말라고ㅋㅋㅋㅋㅋ 국비지원학원을 다나면 취업연계로 경력 뻥튀기해서 SI업체로 종종 연결해준다고 한다 SI란 시스템 통합을 뜻하며 추가로 더 구글링해봤는데 읽어도 무슨 말인지 잘 모르겠었다. 그 중에 발견한 티스토리블로그가 있다. 실제 SI업체에서 업무중인 신입개발자의 솔직담백한 이야기를 들을 수 있었다. 티스토리 : 부산 신입 개발자 SI업체 취업기 1년 한국의 대표적인 3대 SI업체로는 삼성SDS, LG CNS, SK C&amp;C가 있고 절대 가지말라고 하셨다 ㅋㅋㅋㅋㅋㅋㅋㅋㅋ 개발자의 무덤이라고 ㅋㅋㅋㅋㅋ 그리고 시작된 재미있는 데이터사이언스강연에 나는 퐁당 빠져버리고 말았다. 1. 데이터사이언스란데이터에 기반한 방법으로 현실 세계의 문제를 해결 하는 것. 문제 해결을 위한 적정 기술. 2. 비교: 인공지능 VS 머신러닝 VS 딥러닝 VS 데이터과학 머신러닝 : 데이터와 결과를 주고 예측 모델 만드는 것 딥러닝 : 데이터를 주면 데이터간의 연결관계를 찾고 컴퓨터 스스로 결과와 예측모델을 만드는 것 3. 데이터과학자가 되고 싶으면?SQL과 python + R 이 기본이다 단계별로 배워가면 된다 파란 계단으로 올라섰으면 데이터사이언스 주황 계단으로 올라가면 머신러닝 노랑 계단으로 올라가면 빅데이터에 특화되었다고 볼 수 있다. 신입이 맡게되는 직무는 크게 2가지이다 데이터분석가 퍼포먼스마케터 기억에 남는 두 문장 절대 혼자 공부하지 마세요. 무료인강과 커뮤니티를 적극 활용하세요 고과의 교육 과정으로 시작해야만 좋은 데이터 분석가가 되는 것은 아닙니다 기술적으로 완성되지 않아도 취업할 수 있습니다 모든 것을 다 배워야 한다는 압박감 때문에 너무 긴 시간을 공부에만 투자하지 마세요 공부한다고 모든 것을 알 수 없어요. 입사하면 어차피 새로운 것을 배우게 되어있습니다.","link":"/2019/09/28/190928/"},{"title":"isNaN(), parseInt(), 연속된 숫자생성3종세트Array().fill().map(), 뽑은 숫자들을 랜덤도splice(Math.floor(Math.random()*arr.length, n)","text":"웹 게임을 만들며 배우는 JS : 지뢰찾기isNaN(), parseInt(), 연속된 숫자생성3종세트Array().fill().map(), 뽑은 숫자들을 랜덤도splice(Math.floor(Math.random()*arr.length, n)1.isNaN()isNaN()는 value가 Not-A-Number인 경우 true를 return한다. return type은 boolean이다. 즉 숫자가 아닌 것을 찾는 함수다. 12345678console.log(isNaN(2));// expected output: false 숫자아님? 놉! 숫자임console.log(isNaN('me'));// expected output: true 숫자아님? 얍! 숫자아님console.log(isNaN('2'));// expected output: false 숫자아님? 놉! 숫자임 참고로Number.isNaN(https://www.w3schools.com/jsref/jsref_isnan_number.asp) 와 isNaN()(https://www.w3schools.com/jsref/jsref_isnan.asp)은 완전히 다르다. 2. parseInt()parseInt()는 문자열을 구분하고 정수로 변환한다. 1234567891011function roughScale(x, base) { var parsed = parseInt(x, base); if (isNaN(parsed)) { return 0 } return parsed * 100;}console.log(roughScale(' 0xF', 16));// expected output: 1500console.log(roughScale('321', 2));// expected output: 0 코딩공부하면서 수학공부를 다시 하게 된다ㅋㅋㅋㅋㅋ하… 대환장파티 정수가 뭐였더라? 3. 연속된 숫자생성 3종세트지뢰 위치를 뽑기 위해 0부터 99까지의 숫자를 생성해야한다. 이때 암기해두면 좋은 함수 3가지가 있다. Array().fill().map()꼭 암기할것 연속된 숫자생성에 필요한 3종세트라고 생각하면된다 Array(n)로 =&gt; n개의 빈 배열을 만들고 fill()로 =&gt; 빈 배열을 undefined로 채워고 map()으로 =&gt; n개의 빈 배열과 n개의 undefined를 1대1매칭 시켜준다 예를들어 for문 안쓰고 3~50까지 숫자만들고 싶을때 유용하다. 12345//step3. 지뢰 위치 뽑기 var 후보군 = Array(hor*ver).fill().map(function(요소, 인덱스){ return 인덱스 //0부터 99까지 인덱스를 리턴. 1~100까지하고싶으면 인덱스+1 하면 됨 }); // 100개의 숫자를 만들고 칸에 fill채워주고 map으로 숫자와 칸을 1대1매칭시켜준다 4. 뽑은 숫자들을 랜덤하게 나타내기후보군으로 뽑은 숫자들을 랜덤하게 나타나게 하고 싶을 때 아래와 같이 코딩한다 12345var 셔플 = [];while (후보군.length &gt; 80){ //지뢰는 20개만 필요하므로 100개중애 80개는 안쓴다 var 이동값 = 후보군.splice(Math.floor(Math.random()*후보군.length), 1)[0]; 셔플.push(이동값); //랜덤하게 순서를 섞어서 셔플배열에 넣어준다}","link":"/2019/10/01/191001/"},{"title":"Git bash 명령어(깃허브로 클론하고 커밋남기고 푸쉬하기)","text":"비전공자가 IT개발자로, 커리어전환기12Git bash 명령어(깃허브로 클론하고 커밋남기고 푸쉬하기)자꾸 까먹어서 남기는 순서 원하는 폴더안으로 들어가기 : cd Documents 꿀팁) cd do까지 입력한 뒤 tab치면 fullname폴더 찾아줌! 개이득! 폴더안에 어떤 폴더가 있는 지 확인 : ls 폴더만들기 : mkdir 폴더이름 만든 폴더 안으로 이동 : cd 폴더이름 주소에 맨 끝에 (master)로 지정되어있는지 꼭 확인! 복붙원하는 깃허브 fork -&gt; 내 repo생성 -&gt; code 탭에서 clone or download클릭 -&gt; 주소복사 복붙하기 : git clone 마우스우클릭paste 복붙한 내용 열기 : ls 방금복붙한주소의파일 –주소 맨 끝 (master)확인–&gt; code . 열코열코! 수정한 코드 확인하기 : git status 추가하기 : git add 스테이터스에나온이름 커밋하기 : git commit -m '커밋메세지' 깃 스테이터스에 더이상 수정한 내용이 없을 때까지 반복 9~10번 반복 푸쉬하기 : git push origin master 나의 깃허브 repo로 가서 상단 메뉴의 pull requests 클릭 -&gt; new pull request 클릭 -&gt; Create pull request 클릭 후 제목과 내용작성 -&gt; Create pull request -&gt; 끝! 덤잘못 들어왔을 때 상위폴더로 나가는 명령어 : cd .. Git bash로 editor여는 명령어 : code 아니 근데 왜 인라인코드블럭이 표현이 안되는거지? 짱나네","link":"/2019/10/06/191006/"},{"title":"func(...arguments) 의미, 화살표함수 &#x3D;&gt; 의미","text":"비전공자가 IT개발자로, 커리어전환기13func(…arguments) 의미, 화살표함수 =&gt; 의미func(…arguments)함수선언은 아래와 같이 한다면, 123function A(func, ...args){ func(...args)} 함수사용을 아래와 같이 하면, 1A(Add,1,2,3,4) Add는 편의상 숫자를 더하는 함수라고 치면 A함수는 그 내부에서 Add(1,2,3,4)를 실행시켜주는역할을 하는 함수가 된다 여기서 (…arguments)의 의미는 매개변수가 몇 개가 들어올 지 모르니 유동적으로 받겠다는 의미이다 화살표함수 =&gt; 의미화살표함수는 익명함수를 만드는 명령어로 적기귀찮아서 줄여서 쓰는 것이다 (별다줄) 이름 필요없이 한 번 쓰고 버릴 함수 만들 때 유용하게","link":"/2019/10/08/191008/"},{"title":"우클릭이벤트실행, target VS currentTarget, arr.filter(function(v){}), arr1.concat(arr2), 스코프(scope)와 스코프체 렉시컬 스코프, 재귀함수, arr.filter((v)&#x3D;&gt;!!v)","text":"웹 게임을 만들며 배우는 JS : 지뢰찾기1. 우클릭이벤트 실행 addEventListener(‘contextmenu’, function(){})우클릭시 이벤트실행은 contextmenu사용 123456789101112131415161718//step5. 우클릭하면 깃발모양만들기td.addEventListener('contextmenu', function(e){ e.preventDefault(); console.log('우클릭');//우클릭한 곳이 몇번째줄 몇번째칸인지 알아야하니까 currentTarget 사용 var 모부tr = e.currentTarget.parentNode; var 모부tbody = e.currentTarget.parentNode.parentNode;//var 칸 = 모부tbody.children.indexOf(tr) 모부tr이 배열이 아니라서 indexOf적용안됨. 모부tbody는 유사배열임//indexOf를 쓰고 싶은데 배열이 아닌 애들한테 강제로 쓰는 법은 아래와 같이 Array.prototype.indexOf.call()를 사용 var 칸 = Array.prototype.indexOf.call(모부tr.children, e.currentTarget); var 줄 = Array.prototype.indexOf.call(모부tbody.children, 모부tr); console.log( 칸, ':', 줄); e.currentTarget.textContent = '!'; dataset[줄][칸] = '!'; //데이터와 화면일치를 위해 꼭 필요. 이게 불편해서 react를 많이 씀 }); 2. event.target VS event.currentTarget언뜻보면 이벤트가 일어난 곳을 둘 다 알 수 있는 것 같지만, 차이가 있다. target은 이벤트리스너가 발생하는 대상(내가 클릭한 td) currentTarget은 이벤트리스너를 단 대상(내가 클릭한 td가 속해있는 테이블 전체) 1234tbody.addEventListener('contextmenu', function(e){ console.log('타켓', e.target); console.log('커렌트타켓', e.currentTarget);}); 3. arr.filter(function(v){})배열에서 v인것을 필터링해주는 함수이다 123456789//step6. 클릭했을때 주변 지뢰 개수 세기e.currentTarget.textContent = [ dataset[줄-1][칸-1], dataset[줄-1][칸], dataset[줄-1][칸+1], dataset[줄][칸-1], dataset[줄][칸+1], dataset[줄+1][칸-1], dataset[줄+1][칸], dataset[줄+1][칸+1] ].filter(function(v){ return v === 'X' //=&gt; v가 'X'인 배열을 필터링함 }).length; 가장자리는 배열이 마이너스가 나기때문에 오류가 난다. 해결하는 방법은 아래 4번의 concat을 이용해서 배열을 다시 만들어주면 된다. 1234567891011121314151617181920td.addEventListener('click', function(e){ var 모부tr = e.currentTarget.parentNode; var 모부tbody = e.currentTarget.parentNode.parentNode; var 칸 = Array.prototype.indexOf.call(모부tr.children, e.currentTarget); var 줄 = Array.prototype.indexOf.call(모부tbody.children, 모부tr); if(dataset[줄][칸] === 'X'){ e.currentTarget.textContent = '펑!'; }else{ var 주변 = [dataset[줄][칸-1], dataset[줄][칸+1] ]; if(dataset[줄-1]){ 주변 = 주변.concat(dataset[줄-1][칸-1], dataset[줄-1][칸], dataset[줄-1][칸+1]); } if(dataset[줄+1]){ 주변 = 주변.concat(dataset[줄+1][칸-1], dataset[줄+1][칸], dataset[줄+1][칸+1]); } e.currentTarget.textContent = 주변.filter(function(v){ //배열에서 필터링하는 함수 return v === 'X' }).length; }}) 4. arr1.concat(arr2)배열과 배열을 합칠때 push말고 concat이 유용하다 MDN : concat 123456var 주변 = [ dataset[줄][칸-1], dataset[줄][칸+1] ];if(dataset[줄-1]){ 주변.push(dataset[줄-1][칸-1]); 주변.push(dataset[줄-1][칸]); 주변.push(dataset[줄-1][칸+1]);} 동일하게 concat으로 나타내면 1234var 주변 = [ dataset[줄][칸-1], dataset[줄][칸+1] ];if(dataset[줄-1]){ 주변 = 주변.concat(dataset[줄-1][칸-1], dataset[줄-1][칸], dataset[줄-1][칸+1]);} 5. Scope와 Scope Chain과 Lexical Scope변수는 자신을 감싸고 있는 함수의 바깥으로 빠져나갈 수 없다. var은 선언한 함수 내부에서만 유효하다 (= function scope) 참조 : 제로초 블로그 - 함수의 범위(scope) 6. 재귀함수재귀함수란 자신을 불러오는 함수로 반복문 역할로 사용 가능하다 1234function 재귀함수(숫자){ console.log(숫자); 재귀함수(숫자+1);}; 재귀함수(1)을 실행하면 12345function 재귀함수(숫자){ //=&gt; 1 &gt; 2 &gt; 3 &gt; 4 ...무한반복 console.log(숫자); //=&gt; 1 &gt; 2 &gt; 3 재귀함수(숫자+1); //=&gt; 2 &gt; 3 &gt; 4};재귀함수(1) 무한반복문이 된다. 그걸 방지하기 위해서 if로 숫자 제한을 둔다 123456function 재귀함수(숫자){ console.log(숫자); if(숫자&lt;3){ 재귀함수(숫자+1) }}; 재귀함수(1)을 실행하면 12345678function 재귀함수(숫자){ //=&gt; 1 &gt; 2 &gt; 3 console.log(숫자); //=&gt; 1 &gt; 2 &gt; 3 if(숫자&lt;3){ //=&gt; 1 &gt; 2 &gt; false 재귀함수(숫자+1) //=&gt; 2 &gt; 3 } //=&gt; end};재귀함수(1); 7. arr.filter((v)=&gt;!!v)배열에서 undefined, 0, null, 빈문자열 제거하는 코드로 암기필수이다. 123arr.filter(function(v){ return !!v;}); 최신문법으로 나타내면 1arr.filter((v)=&gt;!!v); 지난번 포스팅에서도 언급했듯이 화살표함수(=&gt;)는 익명함수를 만드는 명령어로 적기귀찮아서 줄여서 쓰는 것이다 (별다줄ㅋㅋㅋ)","link":"/2019/10/15/191015/"},{"title":"HTML5와 CSS : background 기본속성 7종세트","text":"CSS background 기본속성 7종세트, 1.CSS background 기본속성 7종세트 12345678910body{ width: 500px; height: 200px; background-image: url(\"../img/이미지이름\"); background-repeat: no-repeat; background-size: cover; background-position: center; background-attachment: fixed;} 2. div에 이미지 삽입했을 때 기본속성12345background-color: white;width: 100px;padding: 410px;margin: 30px auto;border: 10px solid coral; 위의 코드에 추가로 1234567891011121314151617 /* div든 뭐든 센터로 위치 시킬때(상-좌우-하 순서) */ margin: 30px auto;/* div든 뭐든 센터로 위치 시킬때(상-좌우-하 순서) */ margin: 30px auto 50px; /* div든 뭐든 센터로 위치 시킬때(상-우-하-좌 순서: ) */ margin: 10px 20px 30px 10px; /* div든 뭐든 테두리주고 싶을때 */ border-width: 10px; border-style: solid; border-color: coral; /* 위의 border 속성을 한 줄로 줄여쓸 수 있다(단축속성) */ border: 10px solid coral; div는 기본적으로 block속성이다 다시 가장 중요한 박스모델을 정리하자면 12345678Box modelwidth : 너비, 미설정시 모부크기만큼 꽉참height : 미설정시 자식높이만큼 자동 조절margin : 바깥여백padding : 안쪽여백, 설정시 자신의 width와 height에 padding만큼 증가함border : 테두리, 설정시 자신의 width만큼 증가함","link":"/2019/10/21/191021/"},{"title":"웹 게임을 만들며 배우는 JS 완강 후기","text":"웹 게임을 만들며 배우는 JS 완강 후기 온라인 인강을 혼자 수강한 경험이 있는 사람들은 많이 공감할 것이다.강의를 100% 수강하기가 굉장히 어렵다는 사실을.그 어려운 걸, 제가 해냅니다!!!ㅋㅋㅋㅋㅋㅋㅋㅋ 이 강의는 코드스테이츠 pre 코스를 수강하면서 부족한 나의 JS 실력을 쌓고자 들었던 무료강의이다. 이 강의의 장점은 무수히 많지만 그 중 몇가지를 꼽자면, 무료 실습위주라서 재미보장 10분단위의 강의로 집중도를 높임 제로초 유튜브계정에서도 무료로 강의를 볼 수 있지만 나는 구름에듀에서 인강을 보았다. 그 이유는 수강률을 보면서 동기부여를 스스로 받고 싶어서였고… 그 결과!!...2019년 9월에 시작해서 2020년 3월에 완강에 성공했다.6개월내내 공부한 건 아니고….사실 중간에 손을 놓은 적도 몇 번있었다.&lt;원래 사람이 그렇잖아요? 허허 먼산…… 그래도 다시 마음잡고 끝까지 완강해서 뿌듯하고 참으로 많이 배웠다. 구름에듀에서는 100%완료한 강의에 대해서 수료증도 발급해준다.별거아니지만 받고 보면 참 뿌듯하다 ㅋㅋㅋㅋㅋ 나처럼 비전공자이면서도 JS 비기너에게 꼭 추천하고 싶은 강의이다!게임이 직접 실행되기때문에 재미있어 쉽게 따라갈 수 있고코드를 보고 떠오른 내 머리속 궁금증을 어떻게 알았는지 속시원하게 알려준다. why를 알려주니 이해가 쏙쏙!이렇게 적다보니 홍보같지만… 홍보아니고 개인적인 경험에 의한 강력추천무료강의니까 바로 시작해보시길!","link":"/2020/03/31/200331/"},{"title":"초기화버튼, Number와 String의 사칙연산","text":"ES2020 초급 웹게임 강좌 : 계산기 1. 값을 초기화를 하려면 보통 null이나 undefined 사용.초보자는 null추천 123456clearbtn.addEventListener('click', ()=&gt;{ //clearbtn클릭시 초기화 numberInput.value = null; temp = null ; operator = null; resultInput.value = null;}) 2. Number 와 String의 사칙연산숫자와 문자열을 더하면(+) 숫자가 문자열로 바뀌어서 계산됨ex) 10 + ‘5’ = ‘105’ (결과값이 문자열) 숫자와 문자열을 곱하기,빼기,나누기는 문자열이 숫자로 바뀌어서 계산됨ex) 10 / ‘5’ = 2 , ‘10’ * 5 = 50 , ‘10’ - ‘5’ = 5 (결과값이 숫자) 3. Falsy 값을 가지는 6가지 (암기필수)There are only six falsey values in JavaScript:undefined , null , NaN , 0 , “” (empty string), and false.","link":"/2020/04/30/200430/"},{"title":"Hi, How are you?","text":"200505은 역사적인 날!어린이 날이면서도 깃헙블로그를 새로 단장한 날이다!기존에 Jekyll이었는데 hexo로 싹 바꿨다.고생많았지만 차근차근 많은 것을 배웠다.앞으로도 더 배워나가야지.스스로 테마도 만들어 볼 수 있는 수준까지 가자!!","link":"/2020/05/05/200505start/"},{"title":"이클립스 설치시 오류 해결 : Unable to connect the database server at this time(eclipse)","text":"자바 설치 및 이클립시 설치시 오류 해결 Java를 공부하기 위해선 다양한 방식이 있지만전통적인 JAVA와 Eclipse를 설치하는 것이 좋다 1단계, Java development kit 다운로드하기java development kit를 검색하여 최신버전을 다운로드 하면 된다JDK 다운로드를 클릭하면 된다. 2단계, Eclipse 다운로드하기Eclipse download를 검색하여 최신버전을 다운로드하면 된다 척척 잘 진행되는 것 같았으나… 문제가 생겼다. Eclipse의 다운로드 버튼을 누릴때마다 아래 사진처럼 Error창이 뜨는 것이다 Unable to connect the database server at this time(eclipse)짜Unable to connect the database server at this time(eclipse)증Unable to connect the database server at this time(eclipse)나죽겠네! 해결하고자 네이버링도하고 영어로 구글링도 했지만 뚜렷한 방법은 보이지 않는 듯 했다. 자바를 공부하고 있는 친구에게 상황을 설명하니 혹시 컴퓨터 user name이 한글이냐고 물어봤다 오브콜스! 그러자 친구가 말하길 user name이 한글이라서 안될수도 있다면서 자기도 그런 케이스라서 결국 노트북을 포맷했다고 한다. 포맷은 절대 하기 싫어서 온갖 방법을 써봤다 제어판 &gt; 계정 &gt; 사용자정보에서 내 Microsoft 계정관리에서 영어로 이름 변경한 뒤 노트북 재부팅 후 크롬브라우저에서 다운로드 시도 =&gt; 동일 현상으로 실패 집안의 다른 컴터에서 exe파일은 usb메모리에 받은 뒤 옮기기 =&gt; 동일현상으로 실패 크롬브라우저가 아니라 익스브라우저로 다운로드 시도 =&gt; 성공 정말 Java 공부 시작도 전에 짜증이 화르륵ㅋㅋㅋㅋㅋㅋㅋㅋ성공했을 때의 그 기쁨의 맛이란?! 참 뿌듯했다. [잘 다운로드 되고 있는 어여쁜 이클립스의 모습. 초록바가 차오를수록 나의 흥도 차오른다 아싸리~] 3번을 통해 나는 문제를 해결했고 이 점이 나와 같은 빡침을 겪은 사람에게 조금이라도 도움이 되었으면 좋겠다. 1번해결방법에서 컴퓨터 계정이름을 영어로 변경한 뒤 바로 컴퓨터에 반영되지 않았다. 그래서 좌절하고 있었는데 노트북 재부팅하고 5시간정도 지난 후에 변경한 계정이름이 반영되었다. 그 후로 크롬브라우저로 들어가 이클립스 다운로드를 누르니 다운이 잘 된다! 즉 이클립스 다운로드 오류는 내 노트북 계정 이름이 한글이었기때문에 발생했다고 할 수 있다. 결론혹시나 인터넷 익스플로러에서도 이클립스 다운로드 오류가 난다면, 노트북 계정이름을 영어로 변경 후 5시간 정도 기다린 뒤, 노트북의 계정이름이 영어로 반영된 것을 확인 후에 이클립스 다운로드하자!","link":"/2020/05/15/200515javae/"},{"title":"Character VS String, 줄바꿈, 문자열안의 큰따옴표넣기","text":"생활코딩JAVA1 : 자바기초, Character VS String, 줄바꿈, 문자열안의 큰따옴표넣기1. 자바 기초아래를 항상 기초로 적어야한다 12345public class name { //name은 항상 파일명과 일치해야한다 public static void main(String[] args) { System.out.println(); }} 매번 코딩해야하기에 여간 귀찮은 게 아니다그래서 한가지 tip이 있다 sout 을 누르고 ctrl + space 를 누르면 짜잔! System.out.println()가 자동완성된다 2. Character VS String몇몇 언어와 다르게 JAVA에서는 큰따옴표&quot; &quot;와 작은따옴표' ' 명백한 차이가 있다. 12System.out.println(\"Hello World\");//String는 문자열으로 캐릭터들이 모여있는 것을 뜻한다 123System.out.println('H'); //Character는 문자 한 글자만 나타낼 수 있다//따라서, System.out.println(\"H\")와 위의 작은따음표('H')는 결과는 같아보일 수 있지만 사실 문자 한글자와 문자열로 나눠지기때문에 근본적으로 다르다. 3. 줄바꿈new line의 약자로 \\n을 해주면 된다 1System.out.println(\"Hello \\nWorld\"); 4. 문자열안의 큰따옴표 (escape)문자열 안에 큰따옴표를 사용하고 싶을 때는 \\&quot;\\&quot; 를 사용해주면 된다 1System.out.println(\"Hello \\\"World\\\"\");// Hello \"World\"","link":"/2020/05/16/200516javae/"},{"title":"변수 기초(정확한 데이터타입)","text":"생활코딩JAVA1 : 변수 기초(정확한 데이터타입)자바는 변수를 설정할때 꼭 정확한 데이터타입을 적어줘야한다.숫자 1의 경우에는 Number지만 정확히 말하면 정수(Integer 인티저)에 속한다따라서 아래 변수a와 같이 int 를 적은 뒤 변수를 적는다. 숫자 1.1의 경우에는 실수(real number)이다.이를 아래 변수b처럼double로 나타내면 된다 문자열은 그래도 String을 쓰면 된다! 1234567891011121314public class Main { public static void main(String[] args) { // Number -&gt; integer ... -2, -1 , 0, 1, 2 ... int a = 1; System.out.println(a); // real number -&gt; double ... -2.0, -1.0, 0, 1.0, 2.0 ... double b = 1.1; System.out.println(b); String c = \"Hello World\"; System.out.println(c); }}","link":"/2020/05/17/200517javae/"},{"title":"JAVA 동작 원리","text":"생활코딩JAVA1 : JAVA 동작 원리모든 공부는 그 원리가 중요하다원리 즉 기초를 튼튼히 쌓아 올려야 무너지지 않는 건물이 되고 건물주가 될 수 있다&lt;응? 그렇다면 자바는 어떻게 작동할까? 우리는 자바라는 언어를 이용하여 컴퓨터에 우리가 원하는 것을 시킬 수 있다. 이때 컴퓨터는 우리의 언어를 이해하지 못한다. 이러한 우리의 언어를 컴퓨터가 이해할 수 있도록 컴파일(compile)을 한다. 컴파일링 후 .class가 생성되고 쉽게 말해 컴퓨터가 이해할 수 있는 언어로 번역된 것이다. 그리고 실행(Run)을 시키면 우리가 java를 설치하면서 다운로드했던 Java Virtual Machine을 거쳐서 computer는 결과를 도출한다.","link":"/2020/05/19/200519javae/"},{"title":"코드스테이츠 Pre 35기 수료 후기","text":"코드스테이츠 Pre 35기 수료 후기코드스테이츠는 부트캠프 형식의 코딩 교육으로 알고리즘은 물론 JS, HTML, CSS를 페어프로그래밍을 통해서 공부할 수가 있다. 나는 코드스테이츠를 2019년 10월에 수료를 했다.Latte is horse, 코스가 총 2가지로 pre코스(기초과정)와 immersive코스(심화과정)으로 나뉘었었는데이번에 다시 홈페이지를 방문하니 기존 코스를 하나로 통합하여 몰입과정만 운영하고 있었다.멈춰있지않고 항상 나아가려고 노력하는 기업인 것 같다. 나는 코드스테이츠 pre과정에 엄청 만족했다.정말 다양한 이유가 있다. 1. 할 수 있는 언어가 +1 증가했습니다한국어, 영어만 할 수 있는 나에게 JS까지 3개국어를 할 수 있게 되었다ㅋㅋㅋㅋㅋㅋfront-end의 기본중의 기본인 바닐라 JS, HTML, CSS를 배웠다.비전공자인 나에게 그것조차 꽤 버거웠지만 수료하기위해서 많은 시간을 들여 공부했다.JS기반 알고리즘문제해결부터 single page application개발(간단한 트위터 구현)까지 진행하였고 과제를 수행할때마다 꽤 재미있었다. 2. 협업스킬이(가) +1 향상되었습니다코드스테이츠 덕분에 나는 전혀 몰랐던 Zoom과 Slack 그리고 Github를 주구장창 사용할 수 있게 되었다.모두 페어프로그래밍으로 진행하여 협업능력이 향상되었다.또 좋았던 부분은 질문과 답변시간인데, 내가 공부하다 막히는 부분이 있으면 언제든지 Github를 통해 질문했고, 질문들을 텍스트로 설명해줄뿐만아니라 매주2회 온라인강의에서 실시간으로 알려주었다.강사가 해결하는 방법을 보면서 ‘아 개발자는 저렇게 해결하는구나’라는 것을 느끼고 배울수있었다. 3. 평생친구를(을) 만났습니다.같은 목표를 보고 함께 만난 사람들중에 놀랍게도 나와 찰떡인 평생친구를 만났다.공통점이 많은 우리는 절친이 되서 같이 놀러도 다니고 지금까지 끈끈한 우정을 이어오고 있다. 별 건 아니지만 수료증도 주니 참 뿌듯뿌듯하다.덕분에 나의 경험치는 향상되었고 나는 정말 만족한다.내가 조금더 기초가 있었더라면 더 많은 경험치를 올릴 수 있었을텐데 하는 아쉬움과 함께 코드스테이츠를 수료했다.","link":"/2020/05/19/200519pre/"},{"title":"ID와 PASSWORD 일치여부 앱의 코드 리팩토링","text":"ID와 PASSWORD일치여부 앱의 코드 리팩토링 생활코딩 JAVA를 수강중에 나오는 실습들만 따라하는 게 아니라 더 나아가 응용을 스스로 하고 있다.그만큼 JAVA의 매력에 푹 빠졌달까… 실습에선 ID와 PASSWORD가 일치하면 로그인되는 결과만 도출하는 APP이었다면 나는 더 나아가 ID만 일치하고 PASSWORD가 다른 경우 PASSWORD를 다시 입력하라는 메세지를 전달하는 APP을 만들고 싶었다. 그래서 내가 처음 짠 코드는 아래와 같다. 초기 코드조건문을 어떻게 해야하는 지 고민스러웠다.일단 가장 쉬운 if로만 이루어진 코드를 짰다.원하는대로 작동하니 정말 뿌듯했다. 1234567891011121314151617181920212223242526272829303132333435public class authapp { public static void main(String[] args) { String[][] users = { {\"민지\", \"111\"}, {\"하지\", \"222\"}, {\"뽀니\", \"333\"}, {\"라미\", \"444\"} }; String inputId = args[0]; String inputPass = args[1]; Boolean isRightId = false; Boolean isRightPass = false; for(int i=0; i&lt;users.length; i++) { String[] current = users[i]; if(current[0].equals(inputId)){ isRightId = true; if(current[1].equals(inputPass)){ isRightPass = true; break; } } } System.out.println(\"Hi,\"); if(isRightId &amp;&amp; isRightPass) { System.out.println(args[0] + \" Long time No see!\"); }else if (isRightId &amp;&amp; (!isRightPass)) { System.out.println(args[0] + \" Please check password again\"); }else{ System.out.println(args[0] + \"Please sign up\"); } }} 작동해서 뿌듯했지만 프로그래머들 사이에서 들여쓰기가 3번이상된다면 코드를 한번 더 봐라라는 격언이 있다고 들었다. 리팩토링 두번째코드주석없이도 다른 사람이 알아볼 수 있는 코드를 만들고 싶었다.위의 코드와 1줄차이이고 두번째코드가 오히려 1줄 더 길다.하지만 나는 두번째코드가 직관적이라서 더 좋은 느낌이다. 12345678910111213141516171819202122Boolean isRightId = false;Boolean isRightPass = false;for(int i=0; i&lt;users.length; i++) { String[] current = users[i]; if(current[0].equals(inputId) &amp;&amp; current[1].equals(inputPass)) { isRightId = true; isRightPass = true; break; }else if(current[0].equals(inputId)) { isRightId = true; break; }}System.out.println(\"Hi,\");if(isRightId &amp;&amp; isRightPass) { System.out.println(args[0] + \" Long time No see!\");}else if (isRightId &amp;&amp; (!isRightPass)) { System.out.println(args[0] + \" Please check password again\");}else{ System.out.println(args[0] + \"Please sign up\");} 좋은 코드란 무엇일까? 아직까지 잘 모르겠다.JAVA를 더 배우고나면 좋은 코드가 무엇인지 감이 확실히 올거라 믿는다.","link":"/2020/05/23/200523javae/"},{"title":"[패스트캠퍼스 수강 후기] 파이썬 인강 자기계발 챌린지 시작","text":"[패스트캠퍼스 수강 후기]파이썬인강 자기계발 챌린지 시작기회는 준비된 자에게 온다고 했던가?이번에 패스트캠퍼스 5주 자기계발 챌린지 라는 좋은 기회가 있어 바로 기회를 잡았다. 앞으로 35일간 매일 TIL을 작성할 예정이다이번 인강을 통해 Python을 실무에서 쓸 수 있었으면 좋겠다. 참고링크 파이썬 웹 개발 올인원 패키지 Online : https://bit.ly/2WG0IXN","link":"/2020/05/24/200524python/"},{"title":"[패스트캠퍼스 수강 후기] 파이썬 인강 자기계발 챌린지 1회차 미션","text":"괄호종류, .format(), 기본단축키, 가상환경명령어, 데이터타입1. 괄호종류 : 대괄호[] - 중괄호{} - 소괄호()2. format사용Python에서 중요한 format함수의 활용에 대해 공부했다.각 약어들의 의미는 아래와 같다 $s : 문자 $d : 정수 (ex: -1,0,1등) $f : 실수 (유리수 + 무리수이므로 ex: 1.8, 3/4, √4, π 등) 12345678print('{} and {}'.format('You', 'I'))print('{0} and {1} and {1}'.format('You', 'I'))print(\"%s likes to go %d St. %s\" %('Kim', 7, 'library'), '도서관')# run하면 아래와 같이 터미널에 나타난다. # You and I# Me and I and I# Kim likes to go 7 St. library 도서관 3. 기본 단축키 ctrl + shift + B =&gt; 터미널에 코드실행 (터미널에 적힌 코드들의 실행값을 볼 수 있음) ctrl + / =&gt; 파이썬에서 주석을 나타낼 수 있다. 언어마다 주석이 다른데 파이썬은 앞에 #이 붙으면 주석처리가 된다. 4. 가상환경 명령어여러 프로젝트를 진행하다보면 다양한 프로그램들을 다운로드하게 되고 python버전끼리 또는 프로그램끼리 서로 충돌할 수 있다.에러를 해결하기위해 고군분투하다가 심한 경우 포맷을 해야하는 끔찍한 상황에 처할 수 있다. 이를 방지하기 위해 프로젝트를 가상환경안에서 진행하면 좋다.프로그램끼리 충돌이 생겨 에러가 난 경우, 가상환경안의 include폴더, Lib폴더 그리고 Scripts폴더만 삭제해주면 끝!굳이 눈물의 포맷을 할 필요가 없다! 가상환경설정을 윈도우기준으로 설명하자면, cmd를 검색하여 명령 프롬프트를 연다 cd 원하는파일위치복붙: 원하는 파일위치를 연다 dir: 현재 파일 위치안에 있는 파일들을 확인한다 cd Scripts: Scripts파일로 들어간다 activate.bat : 명령어를 입력하면 경로 제일 앞에 괄호가 생기고 그 안에 (지정했던 가상환경파일)이 적힌다. 이렇게 되면 가상환경안에 들어와 있는 것이 된다! code: 가상환경안에 있음을 확인 후 code를 쳐서 에디터를 연다.꼭 가상환경안에서 에디터를 열어야 추후 일어날 수 있는 문제를 예방할 수 있다. deactivate.bat: 가상환경 밖으로 나갈 수 있는 코드이다. 5. 가상환경설정시 warning 해결명령 프롬프트를 열고 열심히 강의를 따라하고 있는데 아래 이미지와 같이 warning이 나타났다.옛날이었으면 엄청 당황했겠지만 공부하는 동안 꽤 많이 봐왔다.당황하지않고 찬찬히 읽어보았다. 현재 pip버전이 옛날 버전이므로 이를 업그레이드하라는 말이었다.뭐야~ 쉽잖아!휴~ 난 또,, 놀래라! 그래서 적혀저있는 그대로~ 하라는대로~ python -m pip install --upgrade pip를 복붙했다.짜잔-위의 사진에서 위와 아래, 두 개의 빨간 동그라미를 통해 버전업그레이드가 잘 된것을 확인할 수 있다. 6. 파이썬의 데이터타입 종류 파이썬의 데이터타입에는 * Boolean * Numbers * String * Bytes * List * Tuples * Sets * Dictionaries 사실 모든 테이터 타입들이 다 중요하다. 이 중 중요한 타입들로는 Lists, Sets, Dictionaries라고 한다. 참고링크 파이썬 웹 개발 올인원 패키지 Online : https://bit.ly/2WG0IXN총 글자수 : 1647자 (공백포함) by 다음 글자수세기","link":"/2020/05/25/200525python/"},{"title":"[패스트캠퍼스 수강 후기] 파이썬 인강 자기계발 챌린지 2회차 미션","text":"데이터타입(리스트, 튜플, 딕셔너리, 셋)다른 데이터들은 익숙한데 위의 데이터타입들은 생소해서 꼼꼼하게 인강을 들었다.이러한 데이터들만 잘 활용해도 파이썬을 제대로 사용할 수 있을 것만 같다신기한게 다음 인강이 test인강이었다. 답을 어디 제출하는 것은 아니지만 숙제개념으로 먼저 풀어본 뒤 인강을 들으면 진짜 학원다니는 느낌(?)을 낼 수 있다 ㅋㅋㅋㅋㅋ 1. 리스트리스트는 아래 4가지가 다 가능한 매우 유연한 데이터타입이다. 순서O 중복O 수정O 삭제O 1-1 리스트의 선언선언은 쉽다 12345678a = [1,2,3,4,5]b = list('a') c = [1,2,'Apple', ['Pink', 'Red']]d = list(1)print(a)print(b)print(d) 출력값으로는 123[1, 2, 3, 4, 5]['a']#에러발생, int값은 출력이 안됨. d = list(‘a’)는 출력이 가능하나 list(1)은 출력이 불가능했다. 1-2 리스트의 인덱싱위의 선언을 그대로 아래코드를 입력했다 12345print(c[0])print(c[-1]) print(c[1]) print(c[-1][-2]) print(c[3][1]) 그 출력값은 아래와 같다.특히 -인덱스에서 출력되는 값들이 조금 헷갈린다실습을 많이해서 실수하지 않도록 해야겠다. 123451['Pink', 'Red']2PinkRed 1-3 리스트의 슬라이싱선언한 c에서 1부터 사과까지의 값만 가지고 오고싶다면 슬라이싱을 하면 된다. 12c = [1,2,'Apple', ['Pink', 'Red']]print(c[0:3]) 출력값 1[1, 2, 'Apple'] 1-4 리스트의 연산곱하기 연산이 신기했다 12a = [1,2]print(a * 3) 출력값은 1[1,2,1,2,1,2] 1-5 리스트의 수정 및 삭제리스트는 수정 및 삭제가 간편했다. 1234567891011c[0] = 77print(c)a[1:3] = [100, 200, 300]print(a)c[1] = aprint(c)del c[1]print(c) 출력값 1234[77, 2, 'Apple', ['Pink', 'Red']][1, 100, 200, 300, 4, 5][77, [1, 100, 200, 300, 4, 5], 'Apple', ['Pink', 'Red']][77, 'Apple', ['Pink', 'Red']] 1-6 리스트 함수함수는 재미있는 내용이 꽤 많았다 append(a)와 insert(a,b), extend(c)의 차이점 append(a)는 배열 맨 뒤에 a값을 넣음 insert(a,b)는 a번째 인덱스에 b값을 넣음 list.extend(a)는 a가 배열인 경우 배열 통채로 list에 삽입되지만 list.extend(a)는 a의 원소들이 list에 삽입됨 차이점은 아래 코드를 보면 명확히 나타난다 123456789101112131415y = [5,2,3,1,4]print(y)y.append(6)print(y)list = [10,20,30]list.append(y)print(list)list.extend(y)print(list)y.insert(2,7) #2번째 인덱스에 7을 넣음print(y) 출력값은 12345[5, 2, 3, 1, 4][5, 2, 3, 1, 4, 6][10, 20, 30, [5, 2, 3, 1, 4, 6]][10, 20, 30, 5, 2, 3, 1, 4, 6][1, 2, 7, 3, 4, 5, 6] append는 배열 통채로 추가되는 것을 확인할 수 있다. sort()와 reverse()는 서로 반대! sort()는 순서대로정렬, 오름차순정렬 reverse()는 역순정렬, 내림차순정렬 del, remove(), pop()은 셋 다 삭제하는 기능이다! del는 인덱스로 삭제 가능 remove(a)는 인덱스의 값이 지워지는게 아니라 a라는 값을 찾아서 삭제해줌 pop() 맨 마지막 값을 꺼냄, 참고로 pop()과 push())를 LIFO(Last in first out)구조를 가진 스택(Stack)이라고 부른다 12345y.remove(7)print(y)y.pop()print(y) 출력값은 12[1, 2, 3, 4, 5, 6][1, 2, 3, 4, 5] 2. 튜플언뜻보면 리스트와 다름없는 튜플은 왜 있는걸까?수정이나 삭제되면 안되는 중요 데이터를 다룰때 튜플에 저장사용하면 좋기 때문이다리스트와 중복되는 부분이 많아 내게 필요한 부분만 정리해보았다 순서O 중복O 수정x 삭제x 1234d = (10, 20, 30, ('a', 'b', 'c'))print(d[2:])print(d[3][0:1]) 출력값은 12(30, ('a', 'b', 'c'))('a',) 마지막 출력값에 ,가 찍히는 건 튜플의 특성이다. 튜플은 수정과 삭제가 안되기 때문에 위의 이미지처럼 del로 삭제를 시도한 경우 터미널에 TypeError코드가 생기며 deletion을 support하지 않는다고 알려준다. 3. 딕셔너리dictionary 는 key, value, items를 구분할 줄 알아아한다.딕셔너리를 배우면서 이렇게 데이터를 효율적으로 다룰 수 있단 말이야? 하며 크게 놀랐다.왜 파이썬이 데이터베이스에 많이 사용되는 언어인지 이해가 갔다. 순서x 중복x 수정o 삭제o 3-1 딕셔너리의 선언12a = {'name' : 'kim', 'Mobile':'02-3196-777'}b = {'arr' : [1,2,3,4,5]} 3-2 딕셔너리의 출력딕셔너리 출력시 그냥 출력하는 것보다 get()을 이용하는 걸 추천한다.get()을 이용해서 key를 찾으면, None을 통해 key유무를 확실히 확인할 수 있어 유용하다 12print(a['name'])print(a.get('name')) 둘 다 동일한 출력값을 가진다. 12kimkim 3-3 딕셔너리의 추가123456a['address'] = 'Seoul'print(a)``` 출력값```python{'name': 'kim', 'Mobile': '02-3196-777', 'address': 'Seoul'} 3-4 keys, values, items(keys와 values 합친거)형변환 필수! 1234567print(a.keys())print(list(a.keys()))# 정말 자주 사용함. 중요해! for반복문할때 temp에 넣어서 자주 사용temp = list(a.keys())print(temp[1:3])print(a.values()) # 대량의 데이터처리가 매우 쉬움print(a.items()) 출력값은 12345dict_keys(['name', 'Mobile', 'address'])['name', 'Mobile', 'address']['Mobile', 'address']dict_values(['kim', '02-3196-777', 'Seoul'])dict_items([('name', 'kim'), ('Mobile', '02-3196-777'), ('address', 'Seoul')]) 3-5 ( in )은 keys 유무확인만 가능할뿐 value유무확인은 안됨12print('name' in a) print('kim' in a) 출력값은 12TrueFalse 4.집합(Sets)셋의 특징은 아래와 같다.셋을 통해 파이썬이 빅데이터처리에 유용하다는 것을 느꼈다. 순서x 중복x 1234z = set([1,2,7])y = set([1,2,3,4,4,5,6])print(y) 출력값은 1{1, 2, 3, 4, 5, 6} sets은 중복을 허용하지않기때문에 알아서 중복제거해준다. 4-1 교집합12print(z.intersection(y))print(z &amp; y) 동일한 출력값을 가진다 12{1, 2}{1, 2} 4-2 합집합12print(z | y)print(z.union(y)) 동일한 출력값을 가진다 12{1, 2, 3, 4, 5, 6, 7}{1, 2, 3, 4, 5, 6, 7} 4-3 차집합123print(z - y)print(y - z)print(z.difference(y)) 출력값은 123{7}{3, 4, 5, 6}{7} 위에서 배웠던 데이터타입을 가지고 형변환을 하면 아래 이미지와 같이 출력된다괄호의 모형도 다르고 type도 다르다. 드디어 자료형에 대해 개략적으로 공부 완료했다실습을 통해 내것으로 빨리 만들어보는 시간을 가졌으면 좋겠다. 참고링크 : 파이썬 웹 개발 올인원 패키지 Online : https://bit.ly/2WG0IXN총 글자수 : 6792자(공백포함) by 다음 글자수세기","link":"/2020/05/26/200526python/"},{"title":"[패스트캠퍼스 수강 후기] 파이썬 인강 자기계발 챌린지 3회차 미션","text":"파이썬 인강 : 데이터 타입 관련 퀴즈 풀기내 돈 내고 듣고 있는 패스트캠퍼스의 파이썬 인강! 이때까지 배운 데이터 타입과 관련하여 16문제정도를 풀어보았다.다양한 방법으로 풀어보고 출력값이 일치하는 거 보니 참 뿌듯했다.이런 간단한 사항들을 자유자재로 다룰 수 있어야 나중에 프로젝트를 호율적으로 진행할 수 있을 것임에 틀림없다.간단하다고 약보지말자.16가지 문제 중 기억해야할 것들을 위주로 블로깅을 해보려고 한다 1. 문자열 “30” 을 각각 정수형, 실수형, 복소수형, 문자형으로 변환해보세요.이건 형변환문제이고 아주 쉽지만 중요하다참고로 문자형은 이미 “30” 문자이기때문에 그대로 적어도 되고str()을 사용해서 만들어도 된다. 12345678910print(type(int(\"30\")), int(\"30\"))print(type(float(\"30\")), float(\"30\"))print(type(complex(\"30\")), complex(\"30\"))print(type(\"30\"), \"30\", type(str(30)), str(30))# 출력값은 아래와 같다&lt;class 'int'&gt; 30&lt;class 'float'&gt; 30.0&lt;class 'complex'&gt; (30+0j)&lt;class 'str'&gt; 30 &lt;class 'str'&gt; 30 2. 다음 문자열 “Niceman” 에서 “man” 문자열만 추출해보세요.다양한 방법으로 풀 수 있고 강의에서는 슬라이싱방식과 인덱싱을 이용한 방법으로 풀이해주었다 123456789101112131415# 첫번째 방법: 슬라이스 활용q5 = \"Niceman\"print(q5[4:]) # 슬라이싱으로 간단하게 처리print(q5[4:7]) # 슬라이싱으로 간단하게 처리# 두번째 방법: index활용q5Idx = q5.index(\"m\")print(q5Idx)print(q5[q5Idx:])# 출력값은 순서대로manman4man 만약 Nice를 빼고 문자열을 추출해보세요라고 한다면 어떻게 하면 될까?나는 len()를 이용해서 풀어보았다.위와 동일한 값이 출력되는 것을 볼 수 있다.간단하게 응용도 해보니 파이썬을 향한 재미가 쑥쑥 올라간다. 12345q5len = len(\"Nice\")print(q5[q5len:])# 출력값은man 3. 다음 문자열을 거꾸로 출력해보세요. : “Strawberry”간단한 문제라서 reverse()로 접근했다. 123456q6 = \"Strawberry\"q6.reverse() print(q6)# 출력값은에러 에러가 발생해서 깜짝 놀랬는데 알고보니 reverse()는 리스트일때 사용하는거였다.이제 절대 안 잊어버릴것같다 ㅋㅋㅋㅋ문자형은 reversed()를 사용하면 된다심지어 내 에디터가 알려줬는데도 무시해버렸다ㅋㅋㅋㅋ에디터말 잘 들어야지! 1234print(reversed(q6))# 출력값은&lt;reversed object at 0x0000017E087888E0&gt; 이건 우리가 원하는 데이터가 아니므로 list로 형변환시키면된다 1234print(list(reversed(q6))) # 출력값은['y', 'r', 'r', 'e', 'b', 'w', 'a', 'r', 't', 'S'] 자 이제 원하는 값이 리스트형태로 나왔으니 슬라이싱 이용하면 된다 1234print(q6[::-1])# 출력값은yrrebwartS 손 쉽게 해결! 4. 다음 문자열에서 ‘-‘를 제거 후 출력하세요. : “010-7777-9999”이번 문제는 실무에서 활용도가 높은 문제였다.물론 해결방법은 여러가지가 있지만 제일 쉽게 접근 할 수 있는 방법은 역시 슬라이싱이다.강의에서 슬라이싱뿐만 아니라 아래 이미지처럼 정규표현식을 사용하여 풀이해주었는데 굉장히 재미있었다 4-1 첫번째 방법: 슬라이싱 이용.12345q7 = \"010-7777-9999\"print(q7[0:3]+q7[4:8]+q7[9:])# 출력값은01077779999 4-2 두번째 방법: 정규표현식 이용.이번 문제를 통해 정규표현식을 처음 접했는데 굉장히 재미있었다정규표현식은 언어와 상관없이 표준화가 거의 되어있다.따라서 정규표현식을 공부하면 언어를 초월해서 해당 언어(java,c,c++,js,python등)에 금방 적응할수있다 ^ 의미는 ‘아니다’ 이다. 0-9 는 0부터 9까지라는 의미이다. 즉 [^0-9] 뜻은 숫자제외이다. replace기능 가능 : 예를 들어 010또는 011이면 070으로 바꾸고싶을때 사용가능하다 1234567import reprint(re.sub('[^0-9]','', q7))print(re.sub('010|011','070', q7)) #010또는 011이면 070으로 바꾸고싶다면# 출력값은01077779999070-7777-9999 5. 다음 문자열(URL)에서 “http://“ 부분을 제거 후 출력하세요. : “http://daum.net&quot;이 문제는 위에서 배운 내용들을 토대로 혼자서 네가지 방식으로 풀어보았다다 제대로 값이 출력되니 여간 뿌듯한 게 아니다. 12345678910111213141516171819202122# 첫번째 방식: 슬라이싱q8 = \"http://daum.net\"print(q8[7:])# 두번째 방식: 인덱싱q8index = q8.index(\"/\")print(q8index)print(q8[q8index+2:])# 세번째 방식: len()길이q8len = len(\"http://\")print(q8[q8len:])# 네번째 방식: 정규표현식print(re.sub('http://','', q8))# 출력값은daum.net5daum.netdaum.netdaum.net 6. 다음 문자열을 슬라이싱을 이용해서 “cde”만 출력하세요. : “abcdefghijklmn”해당 문제는 슬라이싱을 이용해서 풀어라고 했기때문에 아래 이미지처럼 풀면 된다 하지만 이렇게 문자열 길이가 긴 문제의 경우 슬라이싱으로 몇 번째 인덱스인지 직접 세는 것보다 인덱싱을 활용하는 게 더 편하다고 생각해서 인덱싱으로 풀어보았다 123456q10 = \"abcdefghijklmn\"q10Index = q10.index(\"cde\")print(q10[q10Index:q10Index+3])# 출력값은cde 7. 다음 리스트에서 “Apple” 항목만 삭제하세요. : [“Banana”, “Apple”, “Orange”]리스트의 remove()를 이용해서 간단하게 풀었다 12345q11 = [\"Banana\", \"Apple\", \"Orange\"]print(q11.remove(\"Apple\")) # 출력값은None 그런데 출력값이 None이 떠서 당황했다.remove()한 내용은 출력할 필요가 없고 삭제완료한 리스트를 print하면 되었던 문제였다 123456q11 = [\"Banana\", \"Apple\", \"Orange\"]q11.remove(\"Apple\")print(q11)# 출력값은['Banana', 'Orange'] 참고링크 : 파이썬 웹 개발 올인원 패키지 Online : https://bit.ly/2WG0IXN총 글자수 : 3305자(공백포함) by 다음 글자수세기","link":"/2020/05/27/200527python/"},{"title":"[패스트캠퍼스 수강 후기] 파이썬 인강 자기계발 챌린지 4회차 미션","text":"파이썬의 흐름제어 : 조건문과 반복문 파이썬은 정말 문법에 자유로운 언어인 것 같다.조건문, 반복문에도 ()를 넣지 않아도 된다.점점 내 스타일이다 ㅋㅋㅋㅋㅋㅋㅋㅋㅋ 1. 조건문1. 조건문의 Boolean조건문에서 가장 중요한건 boolean이다 1234567if None: print(\"Yes1\")else: print(\"Yes2\")#출력값은Yes2 만약 Yes1을 출력하고 싶다면 if 의 조건을 True 값을 넣어야한다그렇다면 True 와 false 에는 뭐가 있을까? 참 거짓 종류참 : “내용” [내용] (내용) {내용} 1거짓 : “” [] () {} 0 1234567if 1: print(\"Yes1\")else: print(\"Yes2\")#출력값은Yes1 2. 관계연산자다양한 예가 있다.수학에서의 부등호와 비슷하기 때문에 직관적으로 의미를 알수있다.==, !=, &gt;, &gt;=, &lt;, &lt;= 3. 논리연산자 : and or notjs에서 and와 or 연산자만 배웠었는데python에서 not 연산자를 처음 봤다.not이란 연산자는 되게 흥미로워서 조금 더 찾아봤다논리연산자진리표를 보면 쉽게 이해가 간다. 아래 이미지는 논리연산자의 쉬운 예시이다 아래 코드의 의미는 참이 아닌 것을 출력하시오이다. 1234print(not True)# 출력값은False 4. 산술 &gt; 관계 &gt; 논리 순서대로 적용.위에서 배웠던 세 가지의 연산자들이 동시에 쓰이게 되면 우선순위대로 처리가 이루어진다 1234print('ex1 : ', 5+10 &gt; 0 and not 7+3 == 10)# 출력값은ex1 : False 관계연산자와 논리연산자를 함께 쓰면 아래와 같다 123456789score1 = 80score2 = 'A'if score1 &gt;= 90 and score2 =='A': print(\"합격입니다\")else: print(\"불합격입니다\")# 출력값은불합격입니다 5. 다중조건문 : 다중조건문은 위의 점수조건문을 응용해서 만들어볼 수 있다 num이 82이기에 B값이 터미널에 출력되는 것을 확인 할 수 있다. 2. 파이썬 흐름제어(반복문) : while, for 1. while과 for문while문은 아래와 같이 나타낼수있다while문과 for문이 자유자재로 바꿔 생각할 수 있어야 코딩 초짜를 뗄 수있다. 123456789101112131415v1 =1while v1 &lt; 11: print(\"vi is :\", v1) v1 +=1# 출력값은vi is : 1 vi is : 2 vi is : 3 vi is : 4 vi is : 5 vi is : 6 vi is : 7 vi is : 8vi is : 9vi is : 10 이걸 for 문으로 바꾼다면 어떻게 될까? 123456789101112for v2 in range(1, 11): print(\"v2 is : \", v2)v2 is : 1v2 is : 2v2 is : 3v2 is : 4v2 is : 5v2 is : 6v2 is : 7v2 is : 8v2 is : 9v2 is : 10 2. 1부터 100까지의 합을 구하는 두 가지 방법 첫번째 방법 while문사용 12345678910sum1 = 0cnt1 = 1while cnt1 &lt;= 100: sum1 += cnt1 cnt1 += 1print(' 1 ~ 100합은 : ', sum1)# 출력값은 1 ~ 100합은 : 5050 두번째 방법 range()함수사용 1234print(' 1 ~ 100합은 : ', sum(range(1,101)))# 출력값은 1 ~ 100합은 : 5050 위의 range 함수 활용range()함수는 3번째 매개변수까지 받을 수 있다.range(시작값, 끝값, 넘어가는숫자)) 예를 들어 1~100까지의 짝수의 합은? 123456print(' 1 ~ 100까지 짝수의 합은 : ', sum(range(1,101, 2)))print(' 1 ~ 100까지 짝수의 합은 : ', sum(range(1,101, 10))) # 십단위의 합# 출력값은 1 ~ 100까지 짝수의 합은 : 2500 1 ~ 100까지 짝수의 합은 : 460 3. 시퀀스순서가 있는 자료형을 반복 (매우중요)문자열, 리스트, 튜플, 집합, 사전 이 데이터들은 다 시퀀스 가능iterable 리턴함수 : range, reversed, enumerate, filter 예제 1 : 값을 하나씩 가져오시오 12345678names = ['kim', 'park', 'lee']for v in names: print(\"You are : \", v)# 출력값은You are : kimYou are : parkYou are : lee 예제 2 : ‘word’를 한 글자씩 가져오시오 123456789word = 'word'for s in word: print(\"Word : \", s)# 출력값은Word : wWord : oWord : rWord : d 예제 3 12345678910111213141516171819202122232425262728293031323334353637my_info = { 'name' : 'kim', 'city' : 'seoul', 'age' : 77}# 키를 가져오는 두가지 방법 :기본값과 keys()print('기본값은 키가져오기')for key in my_info: print(key)for key in my_info.keys(): print(key)# 값print('값가져오기')for key in my_info.values(): print(key)# 키와 값 둘 다print('키와 값 둘 다 가져오기')for k, v in my_info.items(): print(k, v)# 출력값은기본값은 키namecityagenamecityage기본값은 값kimseoul77기본값은 키와 벨류 둘다name kimcity seoulage 77 예제 4 : 대문자는 소문자로, 소문자는 대문자로 바꾸시오 12345678910111213141516name = 'GoodbYe'for n in name: if n.isupper(): print(n.lower()) else: print(n.upper())# 출력값은gOODByE 4. break정말 중요한 break!사소하지만 효율을 올려준다 1234567891011121314151617numbers = [14,3,4,7,10,33,24,17]for num in numbers: if num == 33: print('찾았다', num) else: print('못찾았다')# 출력값은못찾았다못찾았다못찾았다못찾았다못찾았다찾았다 33못찾았다못찾았다 위의 코드로 하면 원하는 값을 찾은 뒤에 2번 더 실행되는 것을 볼 수 있다.효율이 떨어지므로 break걸어주면 좋다 1234567891011121314for num in numbers: if num == 33: print('찾았다', num) break else: print('못찾았다')# 출력값은못찾았다못찾았다못찾았다못찾았다못찾았다찾았다 33 5. for - else 구문흥미롭게도 python에는 for문에도 else가 있다 (중요)반복문이 정상적으로 수행 된 경우 else 블럭 수행블럭안에 break가 들어간 경우 반복문 전체가 실행되지않기에 for-else문이 출력되지않는다 123456789101112131415161718for num in numbers: if num == 33: print('찾았다', num) else: print('못찾았다')else: print('반복문끄읕') # 출력값은못찾았다못찾았다못찾았다못찾았다못찾았다찾았다 33못찾았다못찾았다반복문끄읕 6. continuebreak의 반대이다아래는 continue를 가장 이해하기 쉬운 예시이다 12345678lt = [\"1\", 2, 5, True, 4.3, complex(4)]for v in lt: if type(v) is float: print('찾았다, float : ', v)# 출력값은찾았다, float : 4.3 만약 찾은 float빼고 나머지를 보고싶다면?이때 continue사용하면 좋다! for v in lt: if type(v) is float: continue print('타입 : ', type(v)) # 출력값은 타입 : &lt;class 'str'&gt; 타입 : &lt;class 'int'&gt; 타입 : &lt;class 'int'&gt; 타입 : &lt;class 'bool'&gt; 타입 : &lt;class 'complex'&gt; float만 빼고 출력된 것을 확인할 수있다개이득! 참고링크 : 파이썬 웹 개발 올인원 패키지 Online : https://bit.ly/2WG0IXN총 글자수 : 4272자(공백포함) by 다음 글자수세기","link":"/2020/05/28/200528python/"},{"title":"ITWILL : JSP 기초이론","text":"ITWILL학원 : 1강 JSP BY 정규태강사1강 프로그래밍 기초이론1. 프로그래밍특정 목적을 위해서 컴퓨터에 명령을 내리는 동작 혹은 동작의 집합 시스템 프로그래밍 : OS제작, 수정 응용 프로그래밍 : 엑셀 제작, 원가 관리 프로그램 등 웹프로그래밍 : 홈페이지 제작 등, 프로그래밍에는 다양한 것들이 있지만 웹 프로그래밍위주로 공부 할 예정(웹 프로그래밍은 망하지 않을 듯) 2. jsp (= java server page)자바 class, 객체 개념 인지 필수! 3. 하드웨어 vs 소프트웨어 vs 펌웨어 하드웨어 : 물리적인 기계 자체 소프트웨어 : 운영체제 : 리눅스, 윈도우, 맥 응용프로그램(application program): excel, power point, 계산기 등등 펌웨어 : 하드웨어+소프트웨어 4. 기억장치(Memory) 주기억장치:RAM 보조기억장치:CD-RM, FDD(플로피디스크-&gt;USB), HDD(하드디스크드라이브)-발전-&gt;SDD 모든 프로그램은 주기억장치에서만 실행된다 : 메모리가 크면 한번에 많은 일을 처리할 수 있어서 메모리가 클수록 성능이 좋다 5. 기본용어 적재(load) : 보조기억장치에서 주기억장치로 (HDD-&gt;RAM) 넘어가는 과정 프로그램 : 하드디스크에 들어 있는 상태 프로세스 : 주기억장치에 로드된 상태의 프로그램(실행되고 있는 프로그램) (작업관리자의 백그라운드프로세스가 많을수록 컴터속도가 느려짐) 6. WEB(웹)인터넷 환경에서 여러가지 정보를 html문서 타입을 결과를 나타내는 환경 7. 웹 브라우저웹의 정보를 볼 수 잇는 클라이언트 프로그램ex)익스,크롬,웨일,맥 등 8. 클라이언트 vs 서버 클라이언트 : 정보를 제공 받는 쪽 서버 : 정보를 제공해주는 쪽 9. 클라이언트와 서버는 어떻게 요청을 주고 받을까? 클라이언트가 주소를 검색한다 (https://www.naver.com) http는 통신규약 (보내는 방식, 속도등이 포함되어 있음) http:// https:// 후자가 전자보다 보안이 더 좋음 도메인주소는 인간에게 편하게 만든거고 컴퓨터끼리는 IP주소임 IP주소 : 웹에서 컴퓨터를 구분하는 값 (0~255숫자조합임) ex)http://192.168.7.200 인간이 기억하기 어렵기때문에 도메인으로 이용 도메인서버 : IP &lt;-변경-&gt; 도메인 서버 주소 시키는 역활을 함","link":"/2020/05/28/200528jspi/"},{"title":"ITWILL : JAVA 기초이론","text":"ITWILL학원 : 1강 JAVA BY 윤미영강사1강 컴퓨터와 자바 기초이론1. Bit0 또는 1의 정보를 나타내는 최소 단위쉽게말해 64bit라면 64개의 선들이 한번에 cpu로 들어가는 간다.그리고 신기한 점은 똑같은 0001, 0001이라도 컴퓨터가 알아서 저 비트가 명령어인지 숫자1인지 구분해준다 Q 그렇다면 비트는 모스부호와 같은 건가?궁금해서 검색해보았는데 단순히 이진수의 개념인듯하다. 다음주에 강사님 만나면 물어봐야지 2. Adapter어탭터는 전압을 맞춰주는 역할을 한다만약 220볼트라면, 어탭터는 0~5볼트처럼 컴퓨터가 쓸 수 있는 낮은 전압으로 바꿔 준다. 3. 프로그래밍 언어의 변천사 기계언어 = 이진수로 나타내는 언어 ex) 0000000010101010, 01010110101110 기계언어로는 너무 복잡해서 사람이 프로그램을 짤 수 가 없다. 그래서 생긴 언어가 어셈블리어 : 니모닉 기호로 이루어짐 ex) add 1, 1 그래도 자료구조 표현 어렵고 복잡함 그래서 만들어진 게 고급언어 Pascal, Algol, visaul Basic, C/C++, C#, Lisp, Fortran ex) a =1+1 개발자가 작성한 고급언어를 기계어로 바꾸어주는 것은 컴파일이라고 함 내가 언어를 만든다고 사용할수있을까? NOPE! 컴파일러가 있어야지만 가능. 자바도 자바컴파일러(javac)도 있고 파이썬도 파이썬컴파일러가 있다 기타 기계언어 + 어셈블리어 = 임베디드와 관련이 있다고 한다. 내 절친 라미가 임베디드 공부했었다던데… 그가 얼마나 어려운 언어를 했는지 조금이 짐작이 간다. 4. 절차지향적언어 VS 객체지향적언어 절차지향언어 흐름도에 따라 일련의 동작들이 순서에 맞게 실행 기능 위주의 언어. 예를 들어 python, c등등 소스 코드 분석시 경비가 높아 기술의 한계가 있음 객체지향적언어 효율적 개발을 위해 등장 소프트웨어의 조립화 5. 스크립트언어스크립트언어란 소스코드를 compile하지 않고도 실행할 수 있는 프로그래밍 언어이다객체지향적언어가 너무 코드가 기니까 짧게 만든게 스크립트언어이고 그 예로 java에서 jsp가 있다.기존에 이미 존재하는 어플리케이션을 제어하기 위한 용도로 쓰이는 언어이고 인터프리터 형식의 언어이다.수정이 빈번하게 일어나는 곳에서 쓰인다 6. Compile VS Interpreter컴파일 : 소스파일을 기계어로 변환인터프리터 : 컴파일로 번역된 내용을 메모리에 올려서 실행을 해준다참고링크 7. java의 특징 플랫폼 독립적 컴퓨터는 개발환경(intel CPU, 애플mac / 윈도우,맥,리눅스)를 플랫폼이라고 하는데 c언어는 개발환경이 다른 경우 구현이 불가능함. 하지만 자바는 가능함 이걸 플랫폼 독립적이라고 함. 가능한 이유는 JVM(java virtual machine)이 해줌. 거의 모든 컴터에 기본적으로 다운로드 되어있음 java 프로그램의 단위는 class이다. ex) class XXX {} 순서대로 class=예약어, XXX=클래스의이름, {}=실행코드 C#언어와 거의 똑같다. C보다는 처리속도가 느리지만 C만큼 빠르다 8. 자바실행환경소스파일(.java) -&gt; 컴파일 -&gt; 바이트코드(기계어.class) -&gt; JVM이 인터프리터 -&gt; 실행 9. 로딩CPU를 동작시키는 프로그램을 메모리에 올려놓는 작업","link":"/2020/05/28/200528javai/"},{"title":"ITWILL : DB 기초이론","text":"ITWILL학원 : 1강 Database BY 정지윤강사1강 DB 기초이론실습환경 운영체제는 Linux!윈도우os에서도 oracle이 잘되지만 Linux위에서 DB운영 리눅스궁금했는데 다루게된다니 신기하다! MySQL도 수업시간에 같이 배울 예정이며다양한 DBMS중 거진 비슷하기때문에 하나만이라도 제대로 해놓으면 다른 프로그램도 쉽게 다룰 수 있다. 1. 가상 PC환경설치현재 OS가 윈도우이기때문에 가상PC환경에서 리눅스를 이용하려고 한다.가상머신을 운영할수있게 도와주는 프로그램이있다 : virtual box, ubuntu 등등 virtual box 다운로드 아래 사진처럼 파일 &gt; 환경설정 &gt; 입력 &gt; 가상머신 &gt; 호스트키조합을 설정해준다.이는 가상PC에 마우스가 들어가면 빠져나올 수 있는 세팅이라 꼭 필요하다!이걸 세팅안하고 가상환경시작하면 가상환경 나올땐 컴터 강제종료밖에……… 2. DBMS : Database Management SystemOracle은 엄연히 말하면 DB가 아니라 DBMS이다. 즉 DBMS의 한 종류가 바로 Oracle이다ex) Oracle, MySQL, Tibero(티베로)시중에 나와있는 DBMS는 대부분 관계형 DBMS이다 줄여서 RDBMS.관계형DMBS란 클라이언트가 원하는 것을 요청할때 요청사항에 위치가 포함되는게 아니라 그냥 what을 요청한다 그 후 RDMBS는 어느 위치에 있는지 스스로 찾아 데이터를 가져온다 Q. 그렇다면 DBMS와 RDBMS 차이점이 무엇일까?DBMS안에 RDBMS가 속해있음DBMS와 달리 RDBMS는 정규화를 수행할 수 있어 데이터중복을 최소화한다참고링크1, 참고링크2 3. SQL : Structured Query LanguageDBMS와 소통하려면 어떻게 해야할까? 소통할 수 있는 언어를 사용해야한다.그러한 언어가 바로 SQL이다. 참고링크 4. 제약조건크게 5개정도가 있다. Primary key 제약조건 : 테이플의 각 행(row)을 고유하게 식별하는 열(column) 또는 열 집합 Foreign key 제약조건 : 다른 테이블의 기본 키를 참조하는 열 Not null 제약조건 : 주로 이름컬럼에 걸어놓으면 레지스터가 이루어지지않는다 즉 필수입력사항을 이 제약조건으로 걸수있다.","link":"/2020/05/29/200529dbi/"},{"title":"ITWILL : HTML 기초이론","text":"ITWILL학원 : 1강 WEB(HTML, CSS) BY 김영희1강 HTML 기초WEB(HTML, CSS)을 담당하며 일주일에 1번 4시간 수업 HTML은 웹페이지를 만들어 주는 프로그래밍 언어이며 웹페이지의 구조를 담당한다enter나 space bar(2칸 이상)는 명령으로 해결한다. 1. tag는 원칙상 대소문자의 구별이 없으나 소문자로 입력한다2. !DOCTYPE html의 의미는 html5 문서임을 선언3. &lt;pre&gt;태그&lt;pre&gt;태그는 html문서안에서 &lt;p&gt;나 &lt;br&gt;를 쓰지않아도 html상의 Enter나 Tab, Space를 다 표현할 수 있기때문에 긴 문장등을 표현할때 굉장히 효율적으로 사용할 수 있다.더불어서 자동적으로 모든 문자의 width 간격을 일치시켜준다ex) i와 w의 크기가 같다 1234567만날 수 없어만나고 싶은데이런 슬픔처음인걸말할 수 없어말하고 싶은데속마음만 들키는 걸 위 내용을 html상에 적고 브라우저로 열어보면 1만날 수 없어만나고 싶은데이런 슬픔처음인걸말할 수 없어말하고 싶은데속마음만 들키는 걸 우리가 원하는 건 이게 아니다!&lt;p&gt;와&lt;br&gt;태그를 이용할 수 있으나 여간 귀찮은 일이아니다.이때 사용하는 것이 &lt;pre&gt;태그이다 123456789101112131415161718192021&lt;pre&gt;만날 수 없어만나고 싶은데이런 슬픔처음인걸말할 수 없어말하고 싶은데속마음만 들키는 걸&lt;/pre&gt;``` 위의 내용을 출력하면 아래와 같이 편~안하게 우리가 원하는대로 나타낼 수 있다```html만날 수 없어만나고 싶은데이런 슬픔처음인걸말할 수 없어말하고 싶은데속마음만 들키는 걸 4. 특수문자(기호태그)특수문자(기호)표현을 위한 특수문자 태그들. &amp;lt;는 &lt; 를 나타내고 &amp;gt;는 &gt; 를 나타낸다.위의 태그들을 사용하면 html이 자신의 태그로 인식하지않고 특수문자로 인식해서 그대로 표현해준다 12345678910이것은 &lt;br&gt; 태그입니다이것은 &amp;lt;br&amp;gt; 태그입니다``` 각 두 줄의 코드를 동일한 값이 나오길 기대하며 브라우저 출력물해보자 아래와 같이 표시된다```html이것은 태그입니다이것은 &lt;br&gt;태그입니다 띠용~ 그래서 이럴때 특수문자를 사용해준다 자주 사용하는 특수문자는 result 1번부터 5번까지는 기본으로 암기해야한다 1이것은 &amp;lt;br&amp;gt; 태그입니다 출력물은 아래와 같다 1이것은 &lt;br&gt;태그입니다 &amp;nbsp;는 space bar를 넣는 태그이고 자주 사용 하지만 css를 사용하면 굳이 사용할 필요없기도 한 모호한 녀석이다. &amp;#9977를 하면 운동하는 사람 아이콘이 나온다. 컬러풀하고 귀여운 symbols를 확인하고 사용할 수 있다 &amp;amp;는 &amp;를 나타낸다 1운동하는 사람 &amp;amp;#9977이 &amp;amp;#9748가 와서 운동을 그만하고 &amp;amp;#9749를 마셨다 출력값은 아래 이미지처럼 짜잔! 5. &lt;b&gt;태그 와 &lt;strong&gt;태그의 차이점 b태그 : 단순히 굵게 표시 strong태그 : 굵기와 더불어 스크린 리더를 사용하는 경우, 음성으로도 강조해서 알려주니까 b태그보단 strong태그 이용할 것. 이와 동일하게 작용하는 것이 기울임태그이다 i태그는 단순히 기울이게 표시 em태그는 기울임과 더불어 스크린 리더를 이용할 경우, 음성으로 강조해서 알려준다. 참고링크 6. &lt;center&gt;태그는 더이상 사용하지않으며 대신 CSS로 text-align:center를 이용한다","link":"/2020/05/29/200529webi/"},{"title":"[패스트캠퍼스 수강 후기] 파이썬 인강 자기계발 챌린지 5회차 미션","text":"파이썬의 조건문과 반복문 중간 점검 퀴즈조건문과 반복문 중간 점검 퀴즈를 하였다데이터타입 중간 점검 퀴즈와는 다르게 조금 어려웠다. 여러 문제를 풀었지만 내가 모르는 문제해결방법 위주로 정리해보았다이번 중간 퀴즈도 역시 유익했다. 1. 아래 딕셔너리에서 ‘가을’에 해당하는 과일을 출력하세요.동일한 접근 방법이지만 keys()를 가져올 지 items()를 가져올 지 선택할수있다 첫번째 방법 : for와 if문 사용 12345q1 = {\"봄\": \"딸기\", \"여름\": \"토마토\", \"가을\": \"사과\"}for k in q1.keys(): if k == '가을': print(q1[k]) 두번째 방법 : keys()말고 items()가져오기 123for k, v in q1.items(): if k == '가을': print(v) 첫번째, 두번째 출력값은 12사과사과 2. 다음 세 개의 숫자 중 가장 큰수를 출력하세요.(if문 사용) : 12, 6, 18나는 아래와 같이 풀었다. 쉽게쉽게~! 1234567891011121314a = 12b = 6 c = 18if a &gt; b: if a &gt; c: print(a) else: print(c)else: print(b) # 출력값은18 위는 내가 푼 코드이고 아래는 강사가 푼 코드이다.변수선언이나 코드길이도 훨씬 효율적여보인다.여러 방법으로 푸는 방법을 익히고 그리고 여러 방법으로 풀어보려는 자세가 중요하다. 12345678a, b, c = 12, 6, 18best = aif b &gt; a: best = bif c &lt; b: best = c print('best : ', best) 두 방법 다 꼭 기억해야겠다. 3. s에서 7자리 숫자를 사용해서 남자, 여자를 판별하세요. (1,3 : 남자, 2,4 : 여자)처음에 어떻게 풀지 막막했다. 결국 겅의를 보게 되었고 결과는 허무했다.이렇게 간단한거였는데 풀지도 못하다니 수학적 사고를 길러야겠다고 생각이 들었다 123456789s = '021022-4473837'if int(s[7]) % 2 == 0: print('여자')else: print('남자')# 출력값은여자 4. 다음 리스트 중에서 ‘아’ 글자를 제외하고 출력하세요.여기서 continue 를 쓸 생각을 하지못했다.슬라이싱 처리하려고 했는데 잘 안되서 막막하던 차에 강의에서 continue쓰고 묵혔던 답답함이 쏴악 해소되었다.이제 컨디뉴 절대 안 잊어버릴것같다 1234567891011q3 = [\"지\", \"컨\", \"아\", \"세\", \"요\"]for v in q3: if v == '아': continue else: print(v, end='')print()# 출력값은지컨세요 5. 아래 리스트 항목 중에서 5글자 이상의 단어만 출력하세요.이건 보자마자 길이함수를 써야겠다는 확신이 들었다js를 할때 길이를 항상 length()로 사용해서 무의식적으로 length()적었다가 에러가 떴다아차차 하고 바로 len()로 바꿨다비슷하지만 조금씩 다른 함수들이 있어서 가끔 혼동스럽다헷갈리지 않도록 더 빡세게 암기해야겠다. 123456789q4 = [\"nice\", \"study\", \"python\", \"anaconda\", \"!\"]for v in q4: if len(v) &gt;= 5: print(v, end=' ')print()# 출력값은study python anaconda 6. 아래 리스트 항목 중에서 소문자만 출력하세요.나는 당연히 islower()함수만 썼는데 강의에서 continue를 써서 깜짝 놀랬다.이런 부분때문에 혼자 공부하는 것보다 강의나 여럿이 공부하는 것이 좋은 것같다어서 실력을 키워 모각코나 스터디그룹을 만들고 싶다 123456q5 = [\"A\", \"b\", \"c\", \"D\", \"e\", \"F\", \"G\", \"h\"]for v in q5: if v.islower(): print(v, end=' ')print() 또는 continue를 써서 풀수도 있다 123456for v in q5: if v.isupper(): continue else: print(v, end=' ')print() 위의 두가기 방식의 출력값은 12b c e hb c e h 7. 아래 리스트 항목 중에서 소문자는 대문자로 대문자는 소문자로 출력하세요.재밌는 문제였다. 위의 방법을 그대로 응용하면 되는 문제라 풀면서도 재미있었다저 출력값들을 한 문장으로 나타내려면 어떻게하면 좋을까?if문 끝난 값들을 temp에 넣고 end()로 한 문장에 넣으면 될 것 같다나중에 실습해봐야지 123456789101112131415161718q6 = [\"A\", \"b\", \"c\", \"D\", \"e\", \"F\", \"G\", \"h\"]for v in q6: if v.isupper(): print(v.lower()) elif v.islower(): print(v.upper())print()# 출력값은aBCdEfgH 참고링크 : 파이썬 웹 개발 올인원 패키지 Online : https://bit.ly/2WG0IXN총 글자수 : 2471자(공백포함) by 다음 글자수세기","link":"/2020/05/29/200529python/"},{"title":"[패스트캠퍼스 수강 후기] 파이썬 인강 자기계발 챌린지 6회차 미션","text":"파이썬 인강 : 파이썬 함수식함수식과 람다에 대해 자세히 알아보자.우리가 함수를 사용하는 이유는 반복적이고 중복되는 프로그램을 방지하기위해서다 1. 함수 정의 방법아래처럼 하면 끝! 12def 함수명(parameter): code작성하기 여기서 def는 define의 약자이다. 함수를 호출하는 방법은 함수명() 이고 만약 parameter가 있다면 함수명(parameter)로 호출하면 된다 1234567def hello(world): print(\"Hello, \", world)hello(\"Python!\")# 출력값은Hello, Python! 2. 함수 선언 위치함수를 선언할때는 선언 위치가 매우 중요하다파이썬은 항상 위에서부터 아래로 실행되기 때문이다위의 예제에서 아래 사진처럼 선언 위치를 바꾸면 터미널에 NameError 뜨는 것을 볼 수 있다hello라는 이름이 정의되어 있지 않다는 에러이다. 리턴이라는 예약어를 통해서 함수를 출력할수도있다아래 예제를 보자항상 형변환을 주의하자 123456789def hello_return(world): value = \"Hello, \" + str(world) return valuestr = hello_return(\"천사!\")print(str)# 출력값은Hello, 천사! 3. 다중리턴다중리턴을 사용하면 짜임새있는 함수를 만들 수 있다.java나 기타언어들은 return값이 하나인 게 원칙인데 파이썬은 다르다파이썬은 다중리턴을 허용한다 123456789101112def func_mul1(x): y1 = x * 2 y2 = x * 4 y3 = x * 6 return y1, y2, y3val1, val2, val3 = func_mul1(10)print(val1, val2, val3)# 출력값은20 40 60 파이썬의 매력적인 부분은 return값의 데이터 타입 변환이다.왜냐면 엄청 간단하고 쉽기때문에위의 예제에서 return의 데이터형태는 int(정수)이다.만약 데이터형태를 int가 아닌 다른 형태로 나타내고 싶다면 어떻게 하면 될까?만약 데이터형태를 리스트로 받고싶다면 return[y1, y2, y3]를 적어주면 끝!만약 튜플로 받고싶다면 return(y1,y2, y3)로 하면 끝!만약 딕셔너리로 return받고싶다면? 12345678910111213def func_mul3(x): y1 = x * 2 y2 = x * 4 y3 = x * 6 return {'ret1': y1, 'ret2': y2, 'ret3': y3}dic = func_mul3(8)print(type(dic), dic, dic.get('ret3'), dic.items(), dic.keys(), dic.values())# 출력값은&lt;class 'dict'&gt; {'ret1': 16, 'ret2': 32, 'ret3': 48} 48 dict_items([('ret1', 16), ('ret2', 32), ('ret3', 48)]) dict_keys(['ret1', 'ret2', 'ret3']) dict_values([16, 32, 48]) 정말 저세상 간단함!정말 매력적인 언어다! 4. *args, **kwargs 이해 *args (아스타)arguments의 약자로 가변인자(인자의 갯수가 변할 수 있음)를 뜻한다다양한 매개변수를 받아서 함수의 흐름이 바뀌게한다매개변수를 하나를 넣든 세개를 넣든 튜플의 형태로 출력해준다기본적으로 *args라고 적지만 이 매개변수명은 자유롭게 변경 가능하다enumerate는 순회라는 의미로 index를 넣어서 나타낼 수 있다. 꼭 알아두자 123456789101112131415def args_func(*args): # 매개변수명 자유롭게 변경 가능 for i, v in enumerate(args): print(v, i)args_func('비')args_func('비', '보')args_func('비', '보', 'TV')# 출력값은비 0비 0보 1비 0보 1TV 2 만약 출력값을 여러줄 나오는게 싫다! 한 줄로 나타내고 싶다면?print(v, i)를 print(‘{}’.format(i), v, end=’ ‘)로 바꿔주면 된다 12# 출력값은0 비 0 비 1 보 0 비 1 보 2 tv 만약 *args와 range()를 같이 사용하면 어떻게 될까? 123456789def args_range(*args): for i, v in enumerate(range(3)): print(i,v)args_range()# 출력값은0 01 12 2 kwargsargs와 똑같은 가변인자이나 딕셔너리로 받는다는 차이점이 있다.별표가 하나일때는 튜플로 받는데 별표가 두개인경우 딕셔너리로 받는다.위의 args와 마찬가지로 매개변수명은 자유롭게 변경 가능하다 1234567def kwargs_func(**kwargs): # 매개변수명 자유롭게 변경 가능 print(kwargs)kwargs_func(name1='가')kwargs_func(name1='가', name2='나')# 출력값은{'name1': '가'}{'name1': '가', 'name2': '나'} 딕셔너리형태말고 한 줄에 주르륵 출력하고 싶으면print(kwargs)를 print(‘{}’.format(v), kwargs[v], end=’ ‘)로 바꿔주면 된다 12# 출력값은name1 가 name1 가 name2 나 *args와 *kwargs의 혼합효율적인 코딩을 위해 필수이며 꼭 이해를 해야하는 부분이다 아래 터미널처럼 가변인자(args와 kwargs)는 없이 int 10과 20만을 넣어도 출력이 되는 것을 알 수 있다. 가변인자는 값이 없기때문에 빈 튜플과 빈 딕셔너리가 출력된다. 1234567def example(arg_1, arg_2, *args, **kwargs): print(arg_1, arg_2, args, kwargs)example(10, 20, 'park', 'kim', age1=77, age2=80 )# 출력값은10 20 ('park', 'kim') {'age1': 77, 'age2': 80} 실습을 하면서 궁금했던 점은 어떻게 튜플과 딕셔너리를 나누는 지 궁금했는데 완전 초보적인 생각이었다딕셔너리형태인 address=뭐시기를 넣으면 자동적으로 **kwargs 로 출력된다.만약 딕셔너리 형태를 순서를 섞어 놓으면 1example(10, 20, address=\"Busan\", 30, 'park', age1=77, age2=80 ) 아래 이미지와 같이 SyntaxError가 발행한다. 전체적으로 쉽게 설명한 참고링크1 5. 중첩함수말그래도 함수안에 함수가 있는 것중첩함수를 잘해둬야 클로저를 잘 해결할 수 있다클로저를 나아가서 Python decorator도 중급자에서 필수적인 내용이니 꼭 이해하자 123456789101112def nested_func(num): def func_in_func(num): print('언제실행될까? ', num) print(\"함수 안에서\") func_in_func(num + 100)nested_func(1)# 출력값은함수 안에서언제실행될까? 101 혹시 함수안의 함수 func_in_func()를 실행시킬 수 있을까? 1func_in_func(1) 정답은 실행불가!아래 이미지처럼 Name Error가 발생한다 참고링크 : 파이썬 웹 개발 올인원 패키지 Online : https://bit.ly/2WG0IXN총 글자수 : 3545자(공백포함) by 다음 글자수세기","link":"/2020/05/30/200530python/"},{"title":"[패스트캠퍼스 수강 후기] 파이썬 인강 자기계발 챌린지 7회차 미션","text":"파이썬 인강 : Hint과 클래스 기초1. Hint데이터타입을 명시적으로 알려주는 역할을 한다위의 사진에서와 같이 x : int의 의미는 x는 int형만 와야한다는 의미이고-&gt; list: 는 리스트형태로 출력될 것이다라는 의미이다.패키지를 통해 해당 함수를 다른 파일로 빼놓을때 유용하게 사용할 수 있다. 123456789def tot_length1(word: str, num: int) -&gt; int: return len(word) * numprint('hint exam1 : ', tot_length1(\"HeavyTalker\", 10))print(len(\"HeavyTalker\"))# 출력값은hint exam1 : 11011 2. 람다식 예제람다식의 장점은 메모리 절약, 가독성 향상, 코드 간결해진다함수와 람다의 차이점은 함수는 객체 생성 -&gt; 리소스(메모리) 할당 람다는 즉시 실행 함수(Heap 초기화) -&gt; 메모리 초기화즉 함수도 객체이기때문에 메모리에 할당되는 반면에 람다는 즉시실행함수여서 메모리를 효율적으로 사용할 수 있다.람다식을 남발하는 경우에는 가독성이 떨어지므로 실무에서는 주로 익명함수를 사용할때 람다식을 쓴다. 1. 일반적 함수 -&gt; 변수 할당 위의 이미지는 우리가 일반적인 함수를 변수에 할당하는 방법이다 var_func이란 변수에 우리가 만든 def를 대입하면 터미널에서 볼수있듯이 메모리에 할당되어있고 type은 function이다. 123456789print()def mul_10(x: int) -&gt; int: return x * 10mul_func = mul_10print(mul_func(77))# 출력값은770 2. 람다 함수 -&gt; 할당위의 일반함수식과 비교하면 123456print()lambda_mul_func = lambda x: x * 10print(lambda_mul_func(77))# 출력값은770 동일한 결과값이 출력되는 것을 확인할수있다.좀 더 나아가 활용할 수 있는 방법이 있다함수를 매개변수로 받는 방법이다위에서 만들었던 lambda_mul_func를 이용한 함수를 만들었다. 12345678print()def func_final(x, y, func): print(x * y * func(7))func_final(10, 10, lambda_mul_func)# 출력값은7000 만들어놓은 람다함수 사용하지않고 즉시 람다식을 넣어서 인자로 함수를 넘길 수 있다None은 더이상 출력할 값이 없어서 출력되는 것임. 12345print(func_final(10,10, lambda x : x * 10))# 출력값은7000None 3. 클래스선언 먼저 클래스를 사용해야 할 이유에 대해 알아보자 방대한 어플리케이션이 운영하기 위해서는 클래스방식의 코딩을 해서 구조화를 시키고 결합을 느슨하게 해서 유지보수에 용이하게 한다. 클래스선언시 첫글자는 대문자여야한다.클래스는 속성과 매서드로 구분된다. 클래스(객체), 인스턴스 차이는 매우 중요하디 네임스페이스 : 객체를 인스턴스화 할 때 저장된 공간 클래스 변수 : 직접 사용 가능, 객체보다 먼저 생성 인스턴스 변수 : 객체마다 별도로 존재, 인스턴스 생성 후 사용 아래는 클래스를 인스턴스 변수로 사용한 예이다. 12345678910111213141516171819202122232425262728293031323334class UserInfo: def __init__(self, name): #초기화 self.name = name def print_info(self): print(\"Name: \" + self.name) def __del__(self): print(\"Instance removed!\")# 인스턴스변수 생성하기user1 = UserInfo(\"Kim\") user2 = UserInfo(\"Park\") print(id(user1))print(id(user2))user1.print_info()user2.print_info()# 클래스 네임스페이스 확인print('user1 : ', user1.__dict__) print('user2 : ', user2.__dict__)print(user1.name)# 출력값은26833662374242683366443184Name: KimName: Parkuser1 : {'name': 'Kim'} user2 : {'name': 'Park'}Kim 참고링크 : 파이썬 웹 개발 올인원 패키지 Online : https://bit.ly/2WG0IXN총 글자수 : 자(공백포함) by 다음 글자수세기","link":"/2020/05/31/200531python/"},{"title":"[패스트캠퍼스 수강 후기] 파이썬 인강 자기계발 챌린지 8회차 미션","text":"파이썬 인강 : 클래스의 self의 이해, 클래스, 인스턴스 변수오늘은 중요한 개념에 대해 공부할 예정이다 1. 클래스의 self의 이해self 매개변수의 유무에 따른 차이를 아래 예시를 통해 확인해보자 12345678910print()class SelfTest: #class SelfTest(): 빈괄호가 있어도되고 없어도 된다 def function1(): # self매개변수없음 = 클래스매서드 print(\"function1 called!\") def function2(self): # self매개변수있음 = 인스턴스매서드 print(id(self)) print(\"function2 called!\")self_Test = SelfTest() # 인스턴스 생성 이제 function1을 호출해보자 1234# self_Test.function1()# 출력값은TypeError: unction1() takes 0 positional arguments but 1 was given function1은 클래스매서드이기에 그냥 출력하면 타입에러가 발생한다아래와 같이 출력해야한다 1234SelfTest.function1()# 출력값은function1 called! 잘 출력되는 것을 확인할 수 있다self매개변수를 선언한 함수는 어떨까? 1234567self_Test.function2()SelfTest.function2()# 출력값은function2 called!TypeError: function2() missing 1 required positional argument: 'self'# 두번째 방법의 타입에러를 해결하려면 아래 이미지처럼 하면 된다터미널을 확인해보면 id값이 일치하는 것을 확인할 수 있다. 2. 변수 , 인스턴스 변수클래스변수는 self가 없고 인스턴스변수는 self가 있어야한다클래스변수는 공용으로 쓸 수 있다 12345678910111213141516print()class Warehouse: # 클래스 변수 stock_num = 0 def __init__(self, name): # 인스턴스 변수 self.name = name Warehouse.stock_num += 1 def __del__(self): Warehouse.stock_num -= 1user1 = Warehouse('Kim')user2 = Warehouse('Park') 그리고 유저1과 유저2 그리고 웨어하우스의 네임스페이를 확인해보자 12345678print(user1.__dict__)print(user2.__dict__)print(Warehouse.__dict__) # 클래스 네임스페이스 , 클래스 변수를 공유한다.# 출력물{'name': 'Kim'}{'name': 'Park'}{'__module__': '__main__', 'stock_num': 2, '__init__': &lt;function Warehouse.__init__ at 0x000001ED3D0C79D0&gt;, '__del__': &lt;function Warehouse.__del__ at 0x000001ED3D0C7A60&gt;, '__dict__': &lt;attribute '__dict__' of 'Warehouse' objects&gt;, '__weakref__': &lt;attribute '__weakref__' of 'Warehouse' objects&gt;, '__doc__': None} 이를 통해 유저1과2에는 이름밖에 없고 웨어하우스에 stock_num이 있다는 것을 알수있다만약 유저안에서 stock_num을 찾는다면 어떻게 될까? 123456print(user1.stock_num) print(user2.stock_num)#츨력물22 네임스페이스안에 이름밖에 없었기때문에 stock_num을 못찾을것같지만 인스턴스는 자신의 네임스페이스에 없으면 클래스의 네임스페이스에서 찾아서 불러온다이러한 점을 이용하여 연봉인상율같은 계산등에 활용할 수 있다. 참고링크 : 파이썬 웹 개발 올인원 패키지 Online : https://bit.ly/2WG0IXN총 글자수 : 자(공백포함) by 다음 글자수세기","link":"/2020/06/01/200601python/"}],"tags":[{"name":"Journal","slug":"Journal","link":"/tags/Journal/"},{"name":"Review","slug":"Review","link":"/tags/Review/"},{"name":"Web Game","slug":"Web-Game","link":"/tags/Web-Game/"},{"name":"TIL","slug":"TIL","link":"/tags/TIL/"},{"name":"HTML&amp;CSS","slug":"HTML-CSS","link":"/tags/HTML-CSS/"},{"name":"생활코딩","slug":"생활코딩","link":"/tags/%EC%83%9D%ED%99%9C%EC%BD%94%EB%94%A9/"},{"name":"패스트캠퍼스(파이썬웹개발)","slug":"패스트캠퍼스-파이썬웹개발","link":"/tags/%ED%8C%A8%EC%8A%A4%ED%8A%B8%EC%BA%A0%ED%8D%BC%EC%8A%A4-%ED%8C%8C%EC%9D%B4%EC%8D%AC%EC%9B%B9%EA%B0%9C%EB%B0%9C/"},{"name":"ITWILL(JAVA)","slug":"ITWILL-JAVA","link":"/tags/ITWILL-JAVA/"}],"categories":[{"name":"Journal","slug":"Journal","link":"/categories/Journal/"},{"name":"코드스테이츠 PRE35기","slug":"코드스테이츠-PRE35기","link":"/categories/%EC%BD%94%EB%93%9C%EC%8A%A4%ED%85%8C%EC%9D%B4%EC%B8%A0-PRE35%EA%B8%B0/"},{"name":"제주코딩베이스캠프 10기","slug":"제주코딩베이스캠프-10기","link":"/categories/%EC%A0%9C%EC%A3%BC%EC%BD%94%EB%94%A9%EB%B2%A0%EC%9D%B4%EC%8A%A4%EC%BA%A0%ED%94%84-10%EA%B8%B0/"},{"name":"Lectures &amp; Seminars","slug":"Lectures-Seminars","link":"/categories/Lectures-Seminars/"},{"name":"JAVA","slug":"JAVA","link":"/categories/JAVA/"},{"name":"JavaScript","slug":"JavaScript","link":"/categories/JavaScript/"},{"name":"Python","slug":"Python","link":"/categories/Python/"},{"name":"JSP","slug":"JSP","link":"/categories/JSP/"},{"name":"Oracle","slug":"Oracle","link":"/categories/Oracle/"},{"name":"HTML&amp;CSS","slug":"HTML-CSS","link":"/categories/HTML-CSS/"}]}