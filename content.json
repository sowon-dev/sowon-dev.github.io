{"pages":[],"posts":[{"title":"장염과 배열에 두 번 무너지다","text":"비전공자가 IT개발자로, 커리어전환기2장염과 배열에 두번 무너지다.이번주는 급 장염이 목요일 Live session에 참가를 못했다.안그래도 내가 제일 못하는데진짜 죽다가 살았다 화장실과 한발짝도 떨어질. 수. 가. 없었음진심 ㅈ 될뻔.또르… 다행히 live session은 런코에 동영상이 올라와서 보면서 공부중이다.근데 배열 너무 어려운거아님??또르르… 아래는 spilce인데 내가 도저히 이해가 안되서 들고 와봤다.w3school splice를 공부해 보자면 아래와 같다 12var arr = [\"Banana\", \"Orange\", \"Apple\", \"Mango\", \"Kiwi\"];arr.splice(2, 2); 12var arr = [\"Banana\", \"Orange\", \"Apple\", \"Mango\", \"Kiwi\"];arr.splice(2); 아래 2가지가 이해가 되지 않는다. 두 식의 값은 같은데 왜 나는 변환하며 이해가 안가는건지… 1234567function new1(array, n) { let newArr = []; for (let i = n + 1; i &lt; array.length; i++) { newArr.push(array[i]); } return newArr;} 123function new2(array, n) { return array.splice(n+1);} TWIL array.push 쓸 때, return 쓰면 안됨. push의 return 값이 항상 array의 length값을 가져다 줌. 띠용.EX ) 12345function ans(array, value){ array.push(valus);}let test = [1,2] ; ans[test, 3] // ans = [1,2,3] 위의 식은 ok이지만 여기서 아래처럼 return을 쓰면 12345function ans(array, value){ return array.push(valus);}let test = [1,2] ; ans[test, 3] // ans = 3 (원래는 1,2,3을 기대했지만 return은 length인 3의 값을 가져왔음) 중요한 문법 순서 : for반복문 &gt; filter, map, reduce, foreach는 필수","link":"/2019/08/02/190802/"},{"title":"비전공자, 드디어 깃허브 블로그 개설","text":"비전공자가 IT개발자로, 커리어전환기1비전공자, 드디어 깃허브 블로그를 개설하다. 나는 경영학도다.IT개발자로 커리어를 전환하기 위한 엄청난 노력과 그 과정, 아니,그 험.난.한. 과정을 이 블로그에 적을 예정이다.왜 험난하냐고? 나는 프로그래밍 지식이 1도 없기 때문이다. 또르. 그럼에도 불구하고 내가 개발자가 되려는 이유는내가 현업에서 겪은 문제들을 해결할 수 있는 프로그램을 스스로 개발하고 싶어서이다이 야망찬 꿈! 한 선배가 나한테 한 말이 생각난다.“직장생활 힘들지?” “네” “야 그럴땐 눈 감아봐” “왜요?(당시 순진했던 나는 순순히 눈을 감았다.)” “깜깜해서 아무것도 안보이지? ““네”“그게 니 미래야” 띠용!ㅇㅅㄲㄱ 갓띵언이다끝이 보이지 않는 이~토록 깜깜한 나의 미래 고생고생개고생해서 드디어 깃허브 블로그를 개설했다! CSS 적용 방법을 찾아 해맨다고 정말 개고생했다! 친절하게 설명적혀져 있었지만 내가 까막눈이라… (왜 때문에 설명이 영어…?) 심지어 이거 적을때도 HTML 알아야함ㅁㅊ그게 무슨 말이냐면~ 포스팅쓰다가 어떤 부분응 강조를 하고 싶을땐 굵게라는 버튼이 없다!그동안 넘나 편하게 살았던 것.포스팅 작성시 마크다운사용법을 숙지해야한다줄바꿈을 하고 싶으면 ‘바’를 넣어야한다이거예요근데 이거 어떻게 적용안시키고 넣는지를 모르겠네?ㅋㅋㅋㅋㅋㅋㅋㅋㅋ색깔은 또 우째넣지….ㅋㅋㅋㅋㅋㅋㅋㅋㅋ대환장파티ㅋㅋㅋㅋㅋㅋㅋㅋ 그래도 나아가보려고한다.힘차게 힘차게 한 걸음 한 걸음씩내 기록이 다른 누군가에게 큰 힘이 되었으면 좋겠다 비전공자도 할 수 있다아아아아아! 비전공자가 IT개발자가 되는 방법을 검색하면 다양한 방법과 후기가 나온다.그 중 고심끝에 내가 택한 것은 코드스테이츠의 pre course코스다해당 코스는 10주짜리 코스이다.이제 막 블로그를 개설하고 프로그래밍기초 수업을 듣고 있다.그렇다 나는 이제 고작 한 걸음 내딛었을 뿐이다. 고작 한 걸음이지만, 그리고 앞으로 갈 길이 엄청 멀~지만그래도 나아가보자 혼자 가는 길, 막막할 땐 코드스테이츠를 추천한다원하는 목적지까지 손잡아 이끌어 줄 것이다.물론 다리를 움직여 걷는 것은 나의 몫. This Week I learn가장 중요한 건 크롬의 개발자 도구!F12를 누르면 해당페이지의 엘리먼트들을 볼 수 있고콘솔을 눌러서 간단한 체크를 해볼수있다에러에 대한 코멘트도 나오기때문에 내가 뭘 잘못적어서 틀렸는 지 알 수 있어 매우 유용하다 첫주차에 JavaScript 기본 문법을 공부했다진도가 겁나 빡셈근데 새로운 걸 배울땐 초기에 빡시게 공부하는 것이 맞다.초기가 가장 동기부여가 잘 되어있는 시기기 때문!변수와 타입, 조건문과 함수, 배열등을 배웠다.아직 내게 제일 어려운 건 문자열의 조건문이다. 코드짜다가 도저히 안 풀리는 점이 있어서 코드스테이츠의 help desk에 문의하니 바로 답변해주셨다이래서 코드스테이츠 하는구나. 혼자였으면 구글링 삼천번하고 빡쳐서 아이스크림 사먹으러 나갔을텐데(응?)이제 구글링 10번 하다 안되면 침착히 help desk에 문의하면 된다.개이득이래서 스스로 공부할 때는 선생님이 필요하다. 첫 페어프로그래밍을 하면서 느낀 점은 함수적고 return을 굳이 적을 필요가 없다는 점이다나는 리턴을 남발했는데 그냥 funcion끝나기 전에 한번 하면 됨.페어프로그래밍을 통하여 다른 사람은 코드를 어떻게 효율적으로 짜는 지 보니까 큰 도움이 되었다.물론 내가 페어를 잘 만난 것도 있겠지?내 첫페어분은 C언어를 공부해보셨던 분이라고 하셔서 두뇌회전 속도가 장난아님.천잰줄다음에도 내 페어가 되어주셨으면 좋겠다…나도 빡공해서 페어에게 도움이 되는 페어가 되어야지!","link":"/2019/07/26/190726/"},{"title":"제주코딩베이스캠프 후기2: 카카오특강 + 부트스트랩","text":"두번째이야기, 제주코딩베이스캠프 후기2:카카오특강+부트스트랩 드디어 자바스크립트!오늘을 제일 기다렸다!이거랑 내일 파이썬이 제일 기대된다.그리고 오늘은 카카오 특강이 있는데 도대체 무슨 이야기를 하려나 싶어 참 궁금했다 오전 강의 정리 : CSS &amp; JS오늘내내 CSS에 대해 DEEP하게 배웠다어제 배웠던 내용을 실습해볼수 있어서 큰 도움이 되었다.그리고 내가 기대했던 자바스트립트는 1시간안에 축약적으로 설명을 들었다.자바스크립트의 기본중의 기본, 데이터타입, 변수, 함수까지만 설명해주었다.깊게 들어가지 않아서 실망스러웠다 쳇- 오후 강의 정리 : 카카오특강강의내용은 들여쓰기로 저장해내봤다. 카카오는 크게 제주와 판교.카카오는 서류전형에 학력입력란이 없음. 오로지 코딩테스트를 통해서 선발됨.현직자로서 느끼는 카카오 복지는 매력적칼퇴 후 가족과 제주바닷가에서 보내는 그 시간이 참 좋다전직원에게 법인카드 제공하는데 승인시스템은 없음. 다만 사용내역 전부 내역이 공개되기에 자신이 판단해서 사용한다3년근속하면 안식휴가(한달유급휴가+휴가비까지 지원) 냐하… 개좋다 진짜 On-demand 경제 : 생산자가 아닌 고객 결정 중심으로 서비스가 제공되는 체제의 총칭.2017년부터 중요할 거라고 대두되는 중요한 개념으로 온라인 장터등을 통해수요자가 원하는 형태로 즉각 제공되는 경제 시스템이다on-demand경제 = o2o + 공유경제 카카오택시 기획자분은 해당 서비스를 런칭하기 위해서 택시업체에 1년간 상주하면서 나오게 된 서비스이다. 서비스런칭은 생각보다 고된 직업이구나. 쉬울거라 생각해본적없지만 역시 쉬운 일은 없다 제주데이터허브 = 민간데이터(카카오) + 관공서데이터(제주도청) 으로 최초의 민관데이터허브데이터사이언티스티 라는 직업군이 생길 것. : 빅데이터를 분석하는 직업카카오 API : 유용하게 이용할 수 있음개발시 자주 사용하는 언어 : 스칼라, 자바, 파이선(머신러닝시 주로 이용)신입은 총 7단계를 거쳐 정직원으로 선발 됨 : 서류 &gt; 코딩테스트 &gt; 화상테스트 &gt; 1차면접 &gt; 임원면접 &gt; 신입의경우 3개월의 인턴과정 후 현업평가 &gt; 개발직군평가컴퓨팅사고(Unplugged coding) : 문제해결 능력을 키워주는 사고 ex) 땅콩잼 샌드위치 만들기 저녁 강의 정리 : 부트스트랩부트스트랩은 처음 배우는데 css와 되게 비슷하다.좀더 공부하면 다른 점을 확실히 느끼겠지.그래도 CSS공부하다가 부트스트랩 들으니까 뭔가 친숙한 느낌적인 느낌느낌!부트스트랩은 CSS보다 덜 자유도를 가지고 사용하는 디자인 프로그램 같은 거다.CSS를 잘 못 다루더라고 이렇게 예쁜 버튼을 만들수있다.어떻게?그냥 복붙해서 ㅋㅋㅋㅋ먼저 아래 Bootstrap CSS 태크를 head태그 사이에 입력한다 12&lt;!-- Bootstrap CSS --&gt;&lt;link rel=&quot;stylesheet&quot; href=&quot;https://stackpath.bootstrapcdn.com/bootstrap/4.3.1/css/bootstrap.min.css&quot; integrity=&quot;sha384-ggOyR0iXCbMQv3Xipma34MD+dH/1fQ784/j6cY/iJTQUOhcWr7x9JvoRxT2MZw1T&quot; crossorigin=&quot;anonymous&quot;&gt; 그리고 원하는 링크를 가져와서 body태그 사이에 복붙한다그럼 끝!추가로 바디태그 닫기 바로 직전에 아래 js태크를 입력해주면 된다 12345&lt;!-- Optional JavaScript --&gt;&lt;!-- jQuery first, then Popper.js, then Bootstrap JS --&gt;&lt;script src=&quot;https://code.jquery.com/jquery-3.3.1.slim.min.js&quot; integrity=&quot;sha384-q8i/X+965DzO0rT7abK41JStQIAqVgRVzpbzo5smXKp4YfRvH+8abtTE1Pi6jizo&quot; crossorigin=&quot;anonymous&quot;&gt;&lt;/script&gt;&lt;script src=&quot;https://cdnjs.cloudflare.com/ajax/libs/popper.js/1.14.7/umd/popper.min.js&quot; integrity=&quot;sha384-UO2eT0CpHqdSJQ6hJty5KVphtPhzWj9WO1clHTMGa3JDZwrnQq4sF86dIHNDz0W1&quot; crossorigin=&quot;anonymous&quot;&gt;&lt;/script&gt;&lt;script src=&quot;https://stackpath.bootstrapcdn.com/bootstrap/4.3.1/js/bootstrap.min.js&quot; integrity=&quot;sha384-JjSmVgyd0p3pXB1rRibZUAYoIIy6OrQ6VrjIEaFf/nJGzIxFDsf4x0xIM+B07jRM&quot; crossorigin=&quot;anonymous&quot;&gt;&lt;/script&gt; 개신기하다! 부트스트랩을 쓰다가 너무 못생겼는데 싶으면 Semantic UI추천부트스트랩의 생태계가 더 큼. 유료 템플릿을 이용하고자하면 부트스트랩을, 무료로 이용하고자하면 시맨틱유아이를 추천시맨틱유아이를 추천하는 이유는 기본적으로 예쁘고 제공하는 것들팁: 템플릿이 많다보니 구글링할때 best를 붙이면 편하다 ㅋㅋㅋ제이쿼리란? 자바스트립트에서 사용할 함수들을 미리 만들어놔서 거기서 바로 사용할 수 있는 라이브러리라이브러리란? 함수들을 미리 만들어 놓은 곳 시간이 촉박하여 실습위주로 빠르게 진행하였다부트스트랩은 활용도 높을 듯!","link":"/2019/08/06/190806/"},{"title":"제주코딩베이스캠프 후기1: 캠프소개 + HTML","text":"첫번째이야기, 제주코딩베이스캠프 후기1:캠프소개+HTML 드디어 첫 교육!얼마나 기다려왔던가!여러 직업들에 대해서 들었는데 나는 front end나 정보보완쪽으로 가고싶다.내가 생할코딩을 들었더니 다행히 html과 css는 따라잡을 수 있었다.JS는 어쩌려나… 나 이거 개 못하는데. 오전 강의 정리 : 개요설명 하는 일 우선순위 언어,해야할 것들, 할 수 있는 직업 Front-end HTML, CSS, JS back-end Linux, JS, Jaca, Python 네트워크관리사 네트워크관리사 2급, CCN 정보보안 통합보안관제실, 정보보안 R&amp;D, 보안 운영, 정보보안기사(자격증취득시 바로 취업가능) 정보보안은 깊게 이해하고 있어야한다. 항상 인력이 부족한 영역. 오전 강의 정리 : HTML 꿀팁설명atom에서 느낌표와 탭을 누르면 html자동으로 적힌다 글자크기확대는 컨트롤과 마우스의 힐로 조정. 쉬프트 누르고 행을 클릭하면 해당 행 삭제됨. div는 디비전으로 특정 영역을 나눠 주는 것. 그 특정 영역만 css다르게 적용할 때 주로 사용(ex)특정부분 색깔 변경 등등 web brower란 서버에서 가져온 태크(내가 쓴 태크)를 해석해주는 것. 웹브라우저(크롬,익스플로어등등)마다 지원해주는 태크가 다르다. 123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104h1누르고 tab을 클릭하면 자동으로 h1 /h1 꺽쇠세트가 자동완성됨.&lt;h1&gt;&lt;/h1&gt;h1{hello world}*n 누르고 tab 치면 n번 적힘 예를들어 h1{hello world}*5 누르고 tab을 누르면 5번 적힌다 &lt;h1&gt;hello world&lt;/h1&gt; &lt;h1&gt;hello world&lt;/h1&gt; &lt;h1&gt;hello world&lt;/h1&gt; &lt;h1&gt;hello world&lt;/h1&gt; &lt;h1&gt;hello world&lt;/h1&gt;h$*6 누르고 tab을 치면 h1부터 h6까지 꺽쇠포함해서 작성됨 개이득.&lt;h1&gt;&lt;/h1&gt;&lt;h2&gt;&lt;/h2&gt;&lt;h3&gt;&lt;/h3&gt;&lt;h4&gt;&lt;/h4&gt;&lt;h5&gt;&lt;/h5&gt;&lt;h6&gt;&lt;/h6&gt;.one하고 tab치면 div class=\"one\" /div 이렇게 클래스가 됨&lt;div class=\"one\"&gt; &lt;/div&gt; .one#two하고 tab치면 div class=\"one\" id=\"two\"/div 이렇게 클래스는 원이고 아이디는 투가 됨&lt;div class=\"one\" id=\"two\"&gt; &lt;/div&gt; .one two three#four하고 tab치면 div class=\"one two three\" id=\"four\" /div 이렇게 클래스는 원투쓰리고 아이디는 포가 됨.&lt;div class=\"one two three\" id=\"four\"&gt; &lt;/div&gt;table&gt;(tr&gt;td*4)*5하고 tab치면 테이블이 완성 되며,tr이 행(5개)이고 td가 열(4개)임. &lt;table&gt; &lt;tr&gt; &lt;td&gt;&lt;/td&gt; &lt;td&gt;&lt;/td&gt; &lt;td&gt;&lt;/td&gt; &lt;td&gt;&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td&gt;&lt;/td&gt; &lt;td&gt;&lt;/td&gt; &lt;td&gt;&lt;/td&gt; &lt;td&gt;&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td&gt;&lt;/td&gt; &lt;td&gt;&lt;/td&gt; &lt;td&gt;&lt;/td&gt; &lt;td&gt;&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td&gt;&lt;/td&gt; &lt;td&gt;&lt;/td&gt; &lt;td&gt;&lt;/td&gt; &lt;td&gt;&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td&gt;&lt;/td&gt; &lt;td&gt;&lt;/td&gt; &lt;td&gt;&lt;/td&gt; &lt;td&gt;&lt;/td&gt; &lt;/tr&gt; &lt;/table&gt;.one_$*5하고 tab하면 클래스 1부터 5까지 만드는 거임&lt;div class=\"one1\"&gt;&lt;/div&gt;&lt;div class=\"one2\"&gt;&lt;/div&gt;&lt;div class=\"one3\"&gt;&lt;/div&gt;&lt;div class=\"one4\"&gt;&lt;/div&gt;&lt;div class=\"one5\"&gt;&lt;/div&gt; h1+h2 하고 tab치면 h1꺽쇠세트와 h2꺽쇠세트가 자동완성됨.&lt;h1&gt;&lt;/h1&gt;&lt;h2&gt;&lt;/h2&gt;의미없는 문자열 만드는 것은 lorem하고 tab치면 됨. 홈페이지만들때 글자골격을 위해 자주 사용함.Lorem ipsum dolor sit, amet consectetur adipisicing elit. Culpa perferendis libero nemo inventore enim aspernatur asperiores consectetur voluptatibus quasi accusamus quas nobis earum, animi, ab, itaque sequi ipsa voluptas cumque?b태크와 strong태크는 HTML5에서 같이 굵게를 만들어주지만 차이점이 있다면, 시각장애인을 위해 음성을 읽을때 b태그는 음성강조가 안되지만 strong태크는 음성강조가 됨 =&gt; strong 태크를 쓸 것!&lt;strong&gt;야망&lt;/strong&gt;i태크와 em태크도 기울게로 동일하지만 음성인식에 있어 em태그가 음성강조가 들어감.=&gt; em태크 쓸 것!&lt;em&gt;야망&lt;/em&gt;mark태크는 노란색으로 셀색칠해줌&lt;mark&gt;야망&lt;/mark&gt;ol과 ul차이점은 ol은 순서가 있는 리스트 만들어주고 ul은 순서가 없는 리스트임. 활용팁 : ul태크는 앞의 점을 없애고 가로로 나열되는 걸 세로로 나열해서 홈페이지의 메뉴로 많이 사용함&lt;ol&gt;&lt;/ol&gt;&lt;ul&gt;&lt;/ul&gt; 오후 강의 정리 : HTML123456HTML 주석달기 : 컨트롤 + / =&gt; 주석처리모양 &lt;!-- --&gt;CSS 주석달기 : 컨트롤 + / =&gt; 주석처리모양 /* */","link":"/2019/08/05/190805/"},{"title":"제주코딩베이스캠프 후기3: Python + 홈페이지기획","text":"세번째이야기, 제주코딩베이스캠프 후기3: Python + 홈페이지기획 드디어 파이썬교육!얼마나 기다려왔던가!궁금터진다 어떤 언어길래 각광받고 있는 것일까 오전 강의 정리 : 파이썬 파이썬을 왜 배울까?쉬워서 근데 에러를 잡지 못하고 바로 실행해버리곤한다. 그렇다면 디버깅이 어려운데 왜 이 언어를 쓰는거지?콘솔창에서 디렉토리로 가는 법은 shell명령어1shell명령어2를 알아야한다특히 cd 중요. 디렉토리를 움직일때 자주 사용된다이걸 몰라서 콘솔 사용 못할뻔ㅋㅋㅋㅋㅋㅋ나란 사람, 개초보… 콘솔창에 있는 내용을 복사하고 싶으면 컨트롤c는 안 먹힌다. 왜냐면 다른 단축키라서. 예약어란링크예시와 같이 빌트인fuction이라고 해서 이미 사용하고 있는 단어들을 말한다기능이 정혀져있는 단어다예약어를 어떤 값으로 할당은 가능하나 실제로 사용하지 않는다. 헷갈리기때문 형변환형변환 중 숫자를 문자형으로 변환해야한다고 하자 1print(chr(66)) 숫자6을 문자열로 변환하면 뭘까? 1B B이다 왜때문에?바로 아스키문자표 때문! 오후 강의 정리 : 파이썬 + 해커톤 팀빌딩나는 이번에는 해커톤을 참여하지 않기로 했다.본래 참여목적인 여러 언어 맛보기 + 제주디폴트립이기때문에.잘한 선택인지 고민했으나 지금은 휴식이 필요한 시기라고 판단했다.그 노래가 생각난다. 윤하-someday나는 나를 더 아낄꺼야~ 나는 나를 사랑해~ 저녁 강의 정리 : 홈페이지 기획범재님이 강의해주셨다범재님의 부트스트랩강의도 들었는데 강의스타일이 나랑 잘맞다!이번에도 역시 강의를 잘 하신다.홈페이지 기획에 대해 유용한 사이트를 많이 알게되었다기획의도를 받고 주요 질문들을 해야한다 홈페이지기획 기획을 하기 앞서 먼저 해야할 질문들 웹사이트 만드는 이유? 핵심 요소는? 홈페이지 방문 타켓은? 어떤 기능? 화면설계 순서 추천 도구 와이어프레임 목업 스토리보드 oven 프로토타입 프로토파이, 스케치","link":"/2019/08/07/190807/"},{"title":"잘 풀리지 않는 자바스크립트알고리즘 sumDigits 디버깅을 통한 문제해결","text":"비전공자가 IT개발자로, 커리어전환기4잘 풀리지 않는 자바스크립트알고리즘 sumDigits 디버깅을 통한 문제해결하기.아니 왜이렇게 안 풀리는거야?한 문제가지고 몇시간동안 씨름하기도 지친다자쳐이렇게해서 언제 코언즈풀고 진도 따라가냐… 어휴 TWILa005_sumDigits문제 : 숫자가 주어졌을때, “sumDigits” 함수는 숫자의 각 자리수를 모두 더한 값을 반환합니다.12345function sumDigits(num) { //코드를 작성해보세요}let output = sumDigits(-316);console.log(output); // --&gt; 4가 나와야합니다. 반복문으로 돌리면서 조건문을 넣어야하는 건 알겠는데 말이지 1234567891011121314function sumDigits(num) { let sum = 0; let stringNumArr = num.toString().split(''); for (let i = 0; i &lt; stringNumArr.length; i++) { if (stringNumArr[0] === '-' &amp;&amp; i === 1) { sum = sum - Number(stringNumArr[1]); } else if (stringNumArr[i] !== '-') { sum = sum + Number(stringNumArr[i]); } } return sum;} 12let output = sumDigits(-316);console.log(output); // --&gt; 4 예시대로 디버깅해서 풀어 써보면 1234567891011121314151617181920212223242526272829303132function sumDigits(num) { let sum = 0; let stringNumArr = num.toString().split(''); //=&gt; stringNumArr = ['-', '3', '1', '6'] for (let i = 0; i &lt; 4; i++) { if (stringNumArr[0] === '-' &amp;&amp; 0 === 1) { //=&gt; false sum = 0 - Number(stringNumArr[1]); } else if (stringNumArr[0] !== '-') { //=&gt; false sum = 0 + Number(stringNumArr[0]); } if (stringNumArr[0] === '-' &amp;&amp; 1 === 1) { //=&gt; true sum = 0 - Number(stringNumArr[1]); //=&gt; sum = 0 - 3 =&gt; sum = -3 } else if (stringNumArr[0] !== '-') { //=&gt; false sum = 0 + Number(stringNumArr[1]); } if (stringNumArr[0] === '-' &amp;&amp; 2 === 1) { //=&gt; false sum = -3 - Number(stringNumArr[1]); } else if (stringNumArr[0] !== '-') { //=&gt; true sum = -3 + Number(stringNumArr[2]); //=&gt; sum = -3 + 1 =&gt; sum = -2 } if (stringNumArr[0] === '-' &amp;&amp; 3 === 1) { //=&gt; false sum = -2 - Number(stringNumArr[1]); } else if (stringNumArr[0] !== '-') { //=&gt; true sum = -2 + Number(stringNumArr[3]); //=&gt; sum = -2 + 6 =&gt; sum = 4 } } return sum; //=&gt; 4}","link":"/2019/08/19/190819/"},{"title":"제주코딩베이스캠프 후기4: Python + Django","text":"마지막이야기, 제주코딩베이스캠프 후기4: Python + Django 날씨가 이렇게 좋기 있기없기? 오전 강의 정리 : 파이썬 + Django cd = change directory꿀팁 : so치고 탭치면 source라고 자동완성되고 ac치고 탭치면 activate로 나옴장고는 해커톤의 치트키라는 별명을 가지고 있음.한 10개정도 만들면 숙련이 될 것이고 그 후 원하는 앱을 만들 수 있을것임. 이거 줄임말인지 몰랐음ㅋㅋㅋㅋ이제 안 헷갈린다 하하 구름IDE컨테이너에서 항상 가상환경안에서 작업을 해야한다.컨테이너 다시 실행해도 명령어 3종 세트. 이건 그냥 세트다 세트!가상환경만들고 들어가는 방법은 아래와 같다 123cd mysitesource myvenv/bin/activatepython manage.py runserver 0:80 아래와 같이 콘솔 맨 앞에 (my venv)로 꼭 들어가 있는지 확인하고 코딩 작업할 것! 필수! 아래처럼 allow host의미는 화이트리스트기반 여기안에들어온 친구만 접속하게하고 나머지 차단하겠다는 의미.보안이 좋음. 오후 강의 정리 : 파이썬 + Django MVC모델 :MTV 모델(Django용) : ORM기법(Object Relationship Management) 파이선 문법을 가지고 DB를 조작할 수 있음SQL언어 : 데이터베이스 다룰때 가장 좋은 툴이지만 어려움 그래서 python + django로 대신 DB다룰 수 있음파이선+장고를가지고 DB를 다룰 수 있다. make migrations 하고 .py파일을 만지고 mighrate할것임.장고문법이 궁금하다면 여기클릭","link":"/2019/08/08/190808/"},{"title":"콘솔로그 찍는 방법과 디버깅하는 방법","text":"비전공자가 IT개발자로, 커리어전환기5쌩초보를 위한 콘솔로그 찍는 방법과 디버깅하는 방법코플릿문제를 풀다보면 도대체 어디서 잘못되었는지 궁금할 때가 있다.그때 아주 유용하게 사용할 수 있는 것이 바로 console.log 찍기이다. TWIL 콘솔로그찍는 방법 아래와 같은 예제 console.log를 찍어봤다. 12345678910111213141516171819function sumDigits(num) { let n = num.toString(); let arr = n.split(''); return arr.reduce(function(acc, curr, idx, original){ console.log('-----------------')//=&gt;줄긋기 console.log('넘어온 값', acc) console.log('현재값', curr); if(curr === '-'){ return acc; } if(original[idx-1] === '-'){ return -(Number(curr)) + Number(acc); } else { return Number(curr) + Number(acc); } }, 0); console.log(value)} 1234567891011121314151617sumDigits(-123)/*-----------------넘어온 값 0현재값 ------------------넘어온 값 0현재값 1-----------------넘어온 값 -1현재값 2-----------------넘어온 값 1현재값 3최종 값은 4*/ 위 예시에서 디버깅해서 풀어 써보면 아래와 같다개발자도구에서 함수 아래부분에 그냥 debugger라고 적어주면 된다!완전 쉬움 123456789101112131415161718function sumDigits(num) { debugger; let n = num.toString(); let arr = n.split(''); return arr.reduce(function(acc, curr, idx, original){ if(curr === '-'){ return acc; } if(original[idx-1] === '-'){ return -(Number(curr)) + Number(acc); } else { return Number(curr) + Number(acc); } }, 0);}sumDigits(-123) **콘솔로그는 에러난 코드 또는 알아 보고싶은 코드 바로 윗줄에 찍는 게 좋음","link":"/2019/08/20/190820/"},{"title":"코드스테이츠 프리코스에 관한 질문들과 나의 솔직 답변","text":"비전공자가 IT개발자로, 커리어전환기3코드스테이츠 프리코스에 관한 질문들과 나의 솔직 답변과 첫 오프라인 모임저번주에 제주코딩베이스캠프를 마치고 돌아왔다.저번주 내내 코드스테이츠 수업에 참석하지 못해서 발등에 불 떨어졌다다행히 live session은 런코에 동영상이 올라와서 보면서 공부중이지만이미 진도는 안드로메다로…내가 코드스테이츠의 pre코스를 수강중이라고 하니 몇가지 질문을 받았는데코드스테이츠 pre 코스에 대해 궁금한 사람들을 위해 말해보자면 Q1 코드스테이츠 pre코스는 HTML과 CSS, JS를 다루나요?A1 아니요. 자바스크립트만 다룹니다. Q2 비전공자가 따라가기 어렵지 않나요?A2 네, 겁나 버겁습니다. 시간 많을 때 수강하세요. Q3 10주동안 뭘 배우나요?A3 10주동안 기본 개념들을 구글링하면서 아래의 과제들을 수행해야합니다. 주차 과제 1주차 코플릿 자바스크립트 베이직 2주차 코플릿 자바스크립트 베이직 3주차 코플릿 자바스크립트 알고리즘 + 자바스크립트 코언즈 4주차 자바스크립트 코언즈 + 자바스크립트 테스트빌더 5주차 자바스크립트 테스트빌더 + 자바스크립트 트위틀러 6주차 자바스크립트 트위틀러 7주차 자바스크립트 트위틀러 + 언더바 8주차 solo week (추석기간임) 9주차 언더바 +Recursion 10주차 Recursion 난 아직도 코플릿 베이직풀고있는데 다른 분들은 코플릿 알고리즘 다 풀고 코언즈 하고 있었다.또르…빨리 알고리즘을 풀고 코언즈로 넘어가고싶지만… 빨리 푸는게 마음대로 안되고한번 푼다고해서 완벽하게 아는게 아니다.다시 풀면 새로운 느낌적인 느낌느낌 오늘은 첫 오프라인 모임에 참석했다.내가 비전공자고 아직도 베이직풀고있어서 코드스테이츠 오프라인 모임에 참석할까말까 고민을 많이했는데그냥 일단 하자!한다! 라는 고리님의 명언이 생각나서 그냥 참석했다참석하고나니 굉장히 유익했다서로 알고있는 개념들을 공유하여 공고히 다지고생각해왔던 것들을 이야기를 나누다보니 동기부여가 많이 되었다만난김에 같이 live session도 들었다 개이득같이 들으니까 집중도 잘되고 더 재미있었다ㅋㅋㅋ오래전 고딩시절 야자했던 기억이 새록새록 ㅋㅋㅋ 젊어진 느낌 TWIL 기초가 바로 잡혀있지 않으면 시간이 갈수록 계속 헷갈린다. 기본중의 기본 sum += i 의 의미는 sum = sum + i이고 아래에서 i++의 의미는 i를 1씩 증가시킨다는 의미이다 123456789var sum = 0;for (i=0; i&lt;5; i++){sum += i}sum = sum + 1; // value = 1sum = sum + 2; // value = 3sum = sum + 3; // value = 6sum = sum + 4; // value = 10sum = sum + 5; // value = 15 그렇다면 sum -= i의 의미는? 1sum = sum - i 자잘한 기본들. for문과 for … in문은 다르다. 고르는 건 필터 filter 새로만드는건 맵 map 누적 리듀스 reduce reduce는 acc과 curr 값을 이용해서 하나의 연산 결과를 만들 때 쓰고, 단순히 배열을 순회하고 싶다면 for문이나 forEach를 쓰는게 더 알맞다 코드를 깔끔하게 하는 것은 나중의 일. 지금은 코드를 작성하는 것에 몰두하는 것이 좋다. 코언즈이용시 기본들. commit은 내가 변경한 내용 저장하는 것. push는 commit한 내용을 원격저장소에 전송하는 것.","link":"/2019/08/16/190816/"},{"title":"new Array(), Array.join()의 차이","text":"비전공자가 IT개발자로, 커리어전환기6new Array(), Array.join()의 차이자바스크립트 알고리즘을 눈물로 끝내고 나서…(다시보면 풀지못하는 문제가 너무 많다)드디어 코언즈시작한다.코언즈는 까리한 프로그램을 이용하여 제출해야하는 과제인데, git bash와 Visual Studio Code이다.둘 다 제코베에서 건들여본적이 있어서 어떻게 사용하는 지 대충…정말 대강 조금 알고 있다코언즈가 자바스크립트 알고리즘보다 더 쉽게 느껴진다.왜냐면 콘솔로그 찍으면 바로 답이 나오니까ㅋㅋㅋㅋㅋ 이거 빨리 끝내고 후딱 테스트빌더하고 현재 진행중인 트위틀러로 넘어가야지..갈..길..이..보이지…않아…아직도…하 멀다 멀어 누군가 그랬었지, 행복은 멀리 있는 것이 아니라고어어어어어어어어어엄청 멀리있다고 내게 남은 과제도…또르 TWIL Array 길이 확인하기.겁나 베이직한 개념인데 내가 이해를 못해서 적어봄.아래 문제에서 ‘답’에 들어갈 답은? 12let tenEmptyElementArray = new Array(10);expect(tenEmptyElementArray.length).toBe('답'); 정답은 아래와 같다. 12let tenEmptyElementArray = new Array(10);expect(tenEmptyElementArray.length).toBe(10); 콘솔로그를 찍어보면 나는 빈배열이니까 배열의 길이는 0이라고 생각했는데왜 10인걸까?일단 new는 class를 만드는 명령어이다. 123456Array(숫자) //=&gt; 이거는 숫자만큼 빈배열이 만들어지는 것.//만약let arr = new Array(3) //위와 같다면 arr는 아래와 같다arr = [ , , ]//=&gt;빈칸이 3개 생기는 것임. empty * 3 따라서 아까는 괄호안에 숫자 10이 있었으므로 빈칸이 10개가 생겨서 length도 10임.더불어서 123let arr2 = new Array(1,2,3) //=&gt;이렇게 하면 arr2는 어떻게 구성되어 있을까?//정답은?arr2 = [1,2,3] 더 나아가 Array.join을 알아보자. 123456let arr3 = new Array(3).join(); //=&gt; 어떻게 될까?arr3 = [ ]//=&gt;빈칸 3개가 합쳐진 것임. 헷갈리므로 숫자를 넣어서 보면 이해하기 편하다. 중요한 점은 join을 하는 순간 배열이 아님! string임!let ans = new Array(1,2,3).join();ans = '123' 만약 join안에 숫자가 있다면? 12let ans2 = new Array(1,2,3).join(0);ans2 = '10203' //=&gt;3뒤에는 0이 붙지 않는다! 숫자들 사이에만 join안의 string이 들어감!","link":"/2019/08/21/190821/"},{"title":"HTML기초: div와 span의 차이, 새탭에서 링크열기","text":"비전공자가 IT개발자로, 커리어전환기8HTML기초: div와 span의 차이, 새탭에서 링크열기드디어 HTML을 배운다. 1. 먼저 div VS span 태그의 차이점12345div 태그는 한 줄을 차지한다&lt;div&gt;division&lt;/div&gt;span태그는 컨텐츠 크기만큼 공간을 차지한다&lt;span&gt;요~~~만큼span&lt;/span&gt; 2. 새탭에서 링크열기1&lt;a href=\"http://naver.com\" target=\"_blank\"&gt; 새탭에서 네이버링크열기&lt;/a&gt; 3. 아이디와 비밀번호 입력칸 만들기아이디칸을 만들때는 인풋타입을 text로 하고비밀번호칸을 만들때는 인풋타입을 password로 지정해주면 됨! 12&lt;input type=\"text\" placeholder=\"아이디\"&gt;&lt;input type=\"password\" placeholder=\"비밀번호\"&gt; 또는 아래와 같이도 그럴듯하게 만들 수 있다! 123456789&lt;div&gt; ID &lt;input type=\"text\" placeholder=\"아이디\"&gt;&lt;/div&gt;&lt;div&gt; PASSWORD &lt;input type=\"password\" placeholder=\"비밀번호\"&gt;&lt;/div&gt;&lt;div&gt; &lt;input type=\"checkbox\"&gt; 항상 ID기억하기&lt;/div&gt; 4. 라디오버튼과 체크박스버튼의 차이점은?라디오버튼은 그룹설정가능, 중복선택불가능체크박스버튼은 그룹설정불가능, 중복선택가능 123456&lt;div&gt; &lt;input type=\"radio\" name=\"choice1\" value=\"a\"&gt; 출근이 힘들까? &lt;input type=\"radio\" name=\"choice1\" value=\"b\"&gt; 퇴근이 힘들까?&lt;/div&gt;만약 name이 없다면 중복선택이 가능하다.근데 한 번클릭하면 해제가 안됨.name의 값은 똑같은 이름이 되어야 같은 그룹으로 지정이 되어 둘중하나 선택이 가능해진다 1234&lt;div&gt; &lt;input type=\"checkbox\" checked&gt; 월급은 내가 받을게 &lt;input type=\"checkbox\"&gt; 출근은 누가 할래&lt;/div&gt; 5. textarea는 줄바꿈이 가능하다!123&lt;div&gt;&lt;textarea&gt;&lt;/textarea&gt;&lt;/div&gt; 6. 버튼만들기123&lt;div&gt; &lt;button&gt; 제출하기 &lt;/button&gt;&lt;/div&gt; 지금까지의 내용들을 html로 보면 아래와 같다","link":"/2019/08/27/190827/"},{"title":"CSS기초: block과 inline, inline-block의 차이,  border-box, postion","text":"비전공자가 IT개발자로, 커리어전환기9CSS기초: block과 inline, inline-block의 차이, border-box, postion1. block과 inline, inline-block의 차이1234block은 &lt;div&gt;태그처럼 한 줄을 다 차지하는 요소inline과 inline-block은 &lt;span&gt;태그처럼 딱 콘텐츠 공간만을 차지하는 요소그 중 inline은 높이height를 가질 수 없다.inline-block은 높이height를 가질 수 있다. 그림이 이해가 쉬우니까 구글링해보았다 2. CSS box-sizing : border-box로 꼭!CSS 시작 전에 box-sizing : border-box로 지정해두면 편하다지정하는 방법은 2가지 1234567891011121314151. 지정하고픈 id나 class에 각각 지정#id, .class { box-sizing : border-box;}2. style sheet 시작시에 바로 기재*{ box-sizing : border-box;}#id { //write your code} 3. 어렵고도 어려운 postion항상 어려운 게 포지셔닝이다.대학시절 마케팅때고 포지셔닝이 어려웠는데 여기서 또 만날 줄이야?!(물론 다른 학문으로) 12345static: 기본값relative: 기본값+상대적인위치fixed: 브라우저 화면의 좌상단을 기준으로 절대적인 위치absolute: 모부 중 기준점이 있는 경우, 그 기준으로 절대적인 위치sticky: 기본적으로 relative처럼 작동하나, &lt;strong&gt;스크롤 영역을 벗어나면 fixed처럼 작동&lt;/strong&gt; ex)스크롤내리면 따라다니는 팝업광고창","link":"/2019/08/29/190829/"},{"title":"코드스테이츠 이머시브코스의 질문과 솔직한 답변","text":"비전공자가 IT개발자로, 커리어전환기7코드스테이츠 이머시브코스의 질문과 솔직한 답변하기오늘은 이머시브코스와 관련해서 질의응답시간이 있었다바로 참석해서 이때까지 궁금했던 것들을 물어보았다이머시브코스의 비용이 궁금하다면 클릭다양한 결제방식이 있어서 딱 얼마다라고 말하기가 어렵다.나는 대략적으로 2년에 900만원(월40만원정도)이라고 생각하고 있다. Q. 이머시브코스는 무엇인가?A. Full stack을 지향하는 주니어 개발자를 기르는 것이 목적인 16주짜리 코스이다.주로 자바스크립트, 컴퓨터공학개념, 프론프앤드와 백앤드를 배운다 Q. IAT는 무엇인가?A. Immersive Course를 수강하려면 입학 시험(IAT, Immersive Admission Test)를 통과해야한다.시험수준은 pre course의 과제들을 다양한 방식으로 풀어낼 수 있으면 통과할 수 있다고 한다 Q. 이머시브코스의 결과물은 몇 개인가?A. 2주짜리 결과물 1개와 4주짜리 결과물 1개로 총 2개. 완성도가 높은 건 당연히 4주짜리 결과물! Q. 외국에서 수강가능한가?A. 한국시간기준으로 출첵 가능하고 잠을 줄일 수 있다면 충분히 가능하다. 출석체크는 시프티라는 어플을 통해 한국시간기준으로 보통 오전9시에 함. 팀플이기때문에 다른 팀원들에게 피해를 끼치지 않는 선에서 충분히 수강이 가능하다 Q. 온라인 수강과 오프라인 수강이 어떻게 나누어져있는 것인지?A. 쉽게 말하면, 온라인수강, 오프라인수강, 핫데스크 이렇게 나누어진다고 생각하면 됨Immersive Course의 모든 과정은 기본적으로 온라인으로 진행됨 하지만 오프라인 과정 분들은 코드스테이츠가 제공하는 공간(위워크)에 모여서 함께 학습하게 됨온라인과 오프라인 수강생들 모두 주로 zoom을 통해 온라인으로 협업함원한다면, 온라인수강생들도 코드스테이츠의 제휴 공간들(위워크)에서 별도의 비용을 지불하고 함께 모여 수강할 수 있음온라인 : 집에서 수강오프라인 : 출석체크 오전9시 퇴실체크 오후8시. 개인학습공간이 주어짐. 개인짐을 놔두고 다닐 수 있음.핫데스크 : 도서관처럼 위워크에서 제공하는 자리 중 남은 자리를 이용함. (메뚜기) 개인짐을 들고 다녀야하지만 위워크사물함 월3만뭔에 이용가능하다고 한다 Q. CSE란?A. 기수당 2명정도 뽑는다CSE가 되면 이머시브코스에서 수강생에게 도움을 주고 혜택을 받는다어떤 혜택인지 문의해놨음 답변받으면 기재해야지","link":"/2019/08/23/190823/"},{"title":"DOM : JS에서 자식태그만들기, .append와 .appendChild의 차이점, innerHTML","text":"비전공자가 IT개발자로, 커리어전환기10DOM : JS에서 자식태그만들기, .append와 .appendChild의 차이점, innerHTML우연한 기회에 친한 언니에게 내가 만든 블로그를 소개해주려고 모바일로 접속했다(자랑할라고ㅋㅋㅋ) 이거 봐라~하면서 의기양양하게 클릭했는데 아니?! 코드의 왼쪽 부분이 다 짤려서 보이지 않았다(쭈굴) 그래서 집에 오자마자 배운 CSS로 바로 margine 넣어서 간단하게나마 반응형 웹을 만들었다(여기서라도 자랑중) 1. 자식태그만들기123&lt;div&gt;태그만들기 &lt;button&gt;버튼&lt;/button&gt;&lt;/div&gt; 을 js에서 만들려면 방법2가지가 있다. 123456789방법 1 : append 쓰기var div태그 = document.createElement('div'); div태그.textContent = '태그만들기'; document.body.append(div태그);var 버튼태그 = document.createElement('button'); 버튼태그.textContent = '등록'; div태그.append(버튼태그); //div태그(모부태그)안에 자식태그로 넣는 것. 123456789방법 2 : appendChild 쓰기var div태그 = document.createElement('div'); div태그.textContent = '태그만들기'; document.body.append(div태그);var 버튼태그 = document.createElement('button'); 버튼태그.textContent = '등록'; div태그.appendChild(버튼태그); //div태그(모부태그)안에 자식태그로 넣는 것. 둘 다 잘 작동한다 그렇다면 둘의 차이점은 무엇일까? 2. .append와 .appendChild의 차이점123&lt;div&gt;태그만들기 &lt;button id='비교해보자'&gt;등록&lt;/button&gt;&lt;/div&gt; 기존 js 12345678var div태그 = document.createElement('div'); div태그.textContent = '태그만들기'; document.body.append(div태그);var 버튼태그 = document.createElement('button'); 버튼태그.textContent = '등록'; 버튼태그.id = '비교해보자'div태그.append(버튼태그); //div태그(모부태그)안에 자식태그로 넣는 것. 위와 같이 이미 만들어져있는 HTML에서 ‘버튼’뒤에 string을 추가하고 싶다. 이때 2가지 비교해보자. 1234방법 1 : append 쓰기기존 js의 아래부분에 추가한다document.getElementById('비교해보자').append(\" 이건 어팬드\"); 버튼안에 ‘버튼 이건 어팬드’라고 출력되며 잘 작동한다 두번째 appendChild쓰면 어떨까? 12345방법 2 : appendChild 쓰기기존 js의 아래부분에 추가한다document.getElementById('비교해보자').appendChild(\" 이건 어팬드차일드\");//TypeError: Failed to execute 'appendChild' on 'Node': parameter 1 is not of type 'Node'. 타입에러가 난다. 왜일까? appendChild는 element가 필요하기 때문. 따라서 아래와 같이 적어야한다. 12345678방법 2-1 : appendChild 쓰기기존 js의 아래부분에 추가한다var 어팬드차일드 = document.createElement('text');또는var 어팬드차일드 = document.createElement('span');어팬드차일드.textContent = ' 이건 어팬드차일드'document.getElementById('비교해보자').appendChild(어팬드차일드); 버튼안에 ‘버튼 이건 어팬드차일드’라고 출력되며 잘 작동한다 만약 버튼 안의 text를 아예 바꾸고 싶다면 appendChild와 innerHTML를 세트로 사용하면 된다! 1234567방법 2-2 : appendChild + innerHTML 세트로 쓰기//이 방법은 기존js에서 수정이 필요하다//div태그.append(버튼태그);에서 appendChild로 수정이 필요하다 div태그.appendChild(버튼태그); document.getElementById('비교해보자').innerHTML =' 이건 어팬드차일드'; 딱 2줄 바꿨다. 근데 이건 버튼태그안의 내용에 추가하는 게 아니라 내용 자체를 변경하는 것이다 따라서 버튼태그안의 text인 ‘등록’은 없어지고 ‘ 이건 어팬드차일드’만 남는다. 결론1.appendChild사용할 수 있는 모든 경우는 append 사용이 가능하지만, 그 반대는 아니다.2.appendChild는 DOM method고 append는 jQuery method 이다.appendChild + innerHTML 세트로 사용하면 내용 변경에 유용하다참고링크 : https://rpubs.com/raulUbiqum/append 참고링크 : https://developer.mozilla.org/en-US/docs/Web/API/ParentNode/append","link":"/2019/09/05/190905/"},{"title":"동기와 비동기, split, join, indexOf, i++과 i+&#x3D;1","text":"웹 게임을 만들며 배우는 JS : 숫자야구동기와 비동기, split, join, indexOf, i++과 i+=11. 동기와 비동기동기 : 위에서 아래로 순차적으로 코드가 실행 됨. 비동기 : 순차적X, 언제 코드가 실행될 지 모름. ex) .addEventListener 2. split와 join1234문자.split(구분자) -&gt; 배열배열.join(구분자) -&gt; 문자구분자 ex : ' ' 또는 ' : ' 또는 ',' 등등 다양하게 가능. 3. 배열. indexoOf1234배열.indexOf(값)값의 위치를 알 수 있다.배열속의 0번째인지 2번째인지 등등배열속에 없으면 -1 출력. 활용방안 123456789101112let 숫자배열 = [1,3,4,5];숫자배열.indexOf(1) //=&gt; 0숫자배열.indexOf(4) //=&gt; 2숫자배열.indexOf(8) //=&gt; -1어떤 배열에 내가 궁금한 숫자가 있는 지 확인하고 싶을때 for (let i =0; i&lt;숫자배열.length; i+=1){ if (숫자배열.indexof(내가궁금한숫자) &gt; -1){ 있다 ++ }} 4. i++ 과 i+=1123456i = i + 1을 두가지 방식으로 짧게 표현할 수 있다첫번째 : i+=1원래 순서대로라면 i=+1이 되어야할텐데 왜 +=순서냐면, 연산자에 순서가 있는데 그중에 = 이 제일마지막에 와야하기 때문! 두번째 : i++ 첫번째가 더욱 직관적이기때문에 첫번째 방식으로 공부하기를 추천함.","link":"/2019/09/06/190906/"},{"title":"끝말잇기: 괄호의종류,객체벤다이어그램,배열기본,콜백함수,이벤트리스너","text":"웹 게임을 만들며 배우는 JS : 끝말잇기괄호의종류,객체벤다이어그램,배열기본,콜백함수,이벤트리스너 1. 대괄호 [] 중괄호 {} 소괄호 ()2. 객체 벤다이어그램함수는 객체지만, 객체는 함수가 아님. 배열은 객체지만, 객체는 배열이 아님. 3. 객체 = { 속성(프로퍼티) : 값(value), 속성(메서드) : 함수, } 3-1. 객체에서 값을 가져올 때, 2가지 방법123456789101112131415161718let 가랑카페 = {커피 : '아메리카노',가격 : 1500}//첫번째 방법 : 닷 노테이션가랑카페.커피//두번째 방법 : 브라켓 노테이션가랑카페['커피'] 방법이 두가지인 이유는? 닷노테이션은 변수를 가져오지 못한다 1234567var 값 : '커피'가랑카페.값 //=&gt; undefined가랑카페['값'] //=&gt; '아메리카노' 3-2 객체에서만 쓸 수 있는 것 닷 노테이션 ex) ‘안녕하세요’.length 또는 ‘*’.repeat(5) 브라켓 노테이션 ex) ‘안녕하세요’[1] 여기서 잠깐!‘안녕하세요’는 문자인데 어떻게 both 노테이션을 쓸 수 있을까? 브라우저가 자동으로 문자객체로 바꾸기 때문에 가능. 직장생활 꿀팁1. 객체 속성 값을 지우고 싶을 때는 undefined 가 아닌 null로 값을 덮어씌움으로써 내가 직접 지웠는지 아닌지 구분할 수 있다 직장생활 꿀팁2. 객체에서 값을 작성한 후 마지막 속성에도 꼭 반점(,) 을 찍어준다. 그게 실전에서 편함. 4. 배열 = [ ‘사과’, ‘오렌지’, ‘포도’, ] 12345let 과일 = [ '사과', '복숭아', '배']console.log(과일[1]) // =&gt; 복숭아 여기서 잠깐!과일은 배열인데 어떻게 브라켓 노테이션을 쓸 수 있을까? 배열은 객체이기때문! 하지만 객체는 배열이 아님! 직장생활 꿀팁3. 그룹화하고싶지만 속성이름을 따로 주고 싶지 않을 때 배열을 사용한다. 직장생활 꿀팁4. 배열에서 값을 작성한 후 마지막 속성에도 꼭 반점(,) 을 찍어준다. 그게 실전에서 편함. 5. 무한 반복문을 끄고 싶으면 shift + esc -&gt; 크롬관리자창에서 현재탭 종료6. JS에서 HTML 태크 만들기1234567891011var 바디 = document.body;var 단어 = document.createElement('div');단어.textContent = '단어';document.body.append(단어);var 폼 = document.createElement('form');document.body.append(폼);var 입력창 = document.createElement('input');폼.append(입력창);var 등록버튼 = document.createElement('button');등록버튼.textContent = '등록';폼.append(등록버튼); 위와 JS와 아래의 HTML은 동일하다 12345&lt;div&gt;단어&lt;/div&gt;&lt;form&gt; &lt;input type=\"text\" &gt; &lt;button&gt;등록&lt;/button&gt;&lt;/form&gt; 7. 콜백함수매개변수 이름은 마음대로! but 다른 사람이 봐도 알 수 있게 명확히 이름짓는 것이 포인트! 12345678function 콜백함수 (이벤트) {}예를 들어 function 더하기 (숫자1, 숫자2) { console.log(숫자1 + 숫자2);}더하기(3, 5) //=&gt;8 8. 이벤트리스너 = 반복문 역할 (아닐 때도 있음)1234567891011121314151617181920212223242526폼.addEventListener('submit', function (이벤트) { //sunmit은 enter를 치면 기본적으로 새로고침이 되고 기존 기억이 리셋된다.//그걸 방지하고 계속 진행하기 위해 아래와 같이 preventDefault를 넣어줌 이벤트.preventDefault(); if (단어.textContent[단어.textContent.length -1] === 입력창.value[0]){ 결과창.textContent = '딩동댕'; 단어.textContent = 입력창.value; 입력창.value = ''; //입력창을 비워주는 것 입력창.focus(); //커서가 자동으로 입력창에 있음 }else{ 결과창.textContent = '땡!'; }});===반복문// while(true){// var answer = prompt(word);// if (word[word.length -1] === answer[0]){// alert('딩동댕');// word = answer;// } else {// alert('땡');// }// }","link":"/2019/09/04/190904/"},{"title":"한국코드페어 python 특강 후기: 데이터의 관점으로 생각하기","text":"데이터의 관점으로 생각하기 by 이숙번강사 2019년 한국코드페어 - SW 빌더스 챌린지 오프라인 특강「데이터의 관점으로 생각하기」강사: 이숙번 blackdew7@gmail.com 강의 내용 여러 관점으로 데이터 이해하기 데이터와 모델 마법의 공식 Y = WX + b 마법의 공식에서 w는 가중치이다 딥러닝은 W과 b값을 스스로 찾는 것 이숙번 강사 소개파인코드에서 주 4회근무 &amp; 한달에 1번 강연반 로섬이 파이썬을 만든 이유 : 로컬에서 FILE들을 편리하게 처리하고 싶어서 만든 언어파이썬은 script, web, data science, machine learning등 다양한 분야에서 강력한 개발 환경을 갖추게 됨 구글드라이브 colaboratory.python을 다운 받지 않아도 바로 사용할 수 있는 걸 구글이 구글드라이브에 만들어놨음 프로그램이란?진행 계획이나 순서. 또는 그 목록.코드(=명령어)를 순서대로 실행시키는 것. 컴퓨터의 구성요소land gate를 쌓아서 computer가 만들어짐 land gate = universial gate land gate를 중첩해서 쌓으면 computer같은 효과가 나타남 머신러닝이란?사람이 패턴을 학습하는 방법을 알아냈고 그걸 컴퓨터에게 알려준 것패턴에서 가장 중요한 것은 바로 데이터 데이터를 잘 준비하려면,1.데이터에 대해 잘 알기2.데이터 잘 다루기3.데이터 찾고 수집하고 만들기4.데이터 제대로 해석하기5.데이터 관점에서 생각하기 Python을 추천하는 이유는 2~4번까지가 잘 되게 때문임 1.데이터에 대해 잘 알기1. 변수 (특징, feature)다리라는 특징으로 동물이라는 데이터를 표현하도록 만든 것변수의 타입은 2가지임 : 범주형, 숫자형ex) 숫자라고 해서 숫자형데이터가 아니다. 예를 들어 month라는 변수가 있을때 1월 2월~12월이라고 해서12월이 1월의 12배인게 아니니까 -&gt; 이건 범주형데이터고 이걸 정확히 비교해야 데이터를 올바로 이해하는 것임또 다른 예로 hour가 있다1시가 6시에 비해 6배가 더 많은 게 아니다 또 다른 예로 rank가 있다1등급과 3등급이 3배차이가 나는 것이 아니다 2. 차원과 데이터 포인트2교시 : colab을 통해 딥러닝모델 만들기내가 준 a와 내가 정해준 b를 loss 줄이게끔 스스로 딥러닝하는 모델을 만드는 거임그니까 f(x)를 컴퓨터 스스로가 찾는 거임처음에는 loss가 10,000이었는데 천번째 돌리면 loss가 7300이고 삼천번째 돌리면 loss가 300으로 낮아짐 숫자형 데이터(y = Wx+b) : linear regression리니어 리그레이션 (직선) , 위아래(b)와 기울기(W)를 통해 오차값을 줄인다범주형 데이터(sigmoid(y = Wx+b)) : logistic regression로지스틱 리그레이션 (곡선) , sigmoid함수안에 오차값이 들어있음(y = Wx+b) , 위아래(b)와 기울기(W)를 통해 오차값을 줄인다 3교시 : 인공신경망인공신경망은 리니어 리그레이션과 로지스틱 리그레이션을 깊게 쌓아서 개와 고양이를 구분해낼 수 있다머신러닝 = 리니어 리그레이션 : y=M(X) 이 수식은 행렬수식이다 칼럼이 한개 : y = W1X1 + W0칼럼이 두개 : y = W2X2 + W1X1 + W0행렬연산은 데이터를 펼쳐놓은 것칼럼이 늘수록 W렬의 갯수가 늘어난다 인공신경망을 위해 공부해야할 것 : linear regression리니어 리그레이션 + logistic regression로지스틱 리그레이션 + 행렬 + 미분 우리 뇌에는 cpu가 없다 오직 Neuron으로만 이루어져있음뉴런의 촉수들이 연결되어있다 input이 중요하다하면(가중치가 높다면) 스스로 다음 촉수로 보내고 가중치가 낮으면 input을 무시한다 relu함수를 통해서 학습이 진행됨.기존 sigmoid를 통해 앞에서 보낸 신호가 학습이 안되었는데 relu를 이용하여 앞에서 보낸 신호를 학습가능하게 됨","link":"/2019/08/31/190831/"},{"title":"Image sprite, Dictionary자료구조, setInterval(fuction(){},100), find VS findindex VS indexOf, Object.entries(객체), or연산자를 [].includes()로","text":"웹 게임을 만들며 배우는 JS : 가위바위보Image sprite, Dictionary자료구조, setInterval(fuction(){},100), find VS findindex VS indexOf, Object.entries(객체), or연산자를 [].includes()로1. 이미지스프라이트(Image sprite)가위바위보게임을 만들기 위해 가위,바위,보 손가락 모양의 이미지가 필요하다. 흔히 이미지를 가위 하나, 바위 하나, 보 하나 총 3장이 있어야 된다고 생각하기 쉬운데~ 땡!!! 가위바위보가 다 그려져있는 한 장의 이미지를 가지고 표현할 수 있다. 이것을 이미지스프라이트라고 한다 12345678910111213141516&lt;head&gt; &lt;style&gt; #computer { width : 273px; height: 350px; background :url(\"가위바위보.jpeg\") no-repeat; background-position: -273px 0; //각각 왼쪽부터 x축과 y축의 좌표. x축의 좌표를 변경하여 한장으로 가위,바위,보를 각각 나타낼 수 있다 } &lt;/style&gt;&lt;/head&gt;&lt;body&gt; &lt;div id=\"computer\"&gt; &lt;img src=\"\" alt=\"\"&gt; &lt;/div&gt;&lt;/body&gt; 추천링크1 : https://developer.mozilla.org/ko/docs/Web/CSS/CSS_Images/Implementing_image_sprites_in_CSS 추천링크2 : http://tcpschool.com/css/css_basic_imageSprites 2. Dictionary 딕셔너리자료구조123456789//딕션너리자료구조var dictionary = { //딕셔너리자료구조 바위 : ['0', '바위', 'rock'] //1대 多 구조 가능 보 : { 한국어 : '바위', 영어 : 'paper', 값 : '0' } //배열,객체 구조도 가능. 다국어 지원시 용이}; 3. setInterval(fuction(){},100)1234567891011setInterval(function(){ if(컴퓨터의선택 === dictionary.바위){ 컴퓨터의선택 = dictionary.가위; }else if(컴퓨터의선택 === dictionary.가위){ 컴퓨터의선택 = dictionary.보; }else { 컴퓨터의선택 = dictionary.바위; } document.querySelector('#computer').style.background = \"url('가위바위보.jpeg') \"+ 컴퓨터의선택 + ' 0';}, 100) //0.1초마다 반복 실행 setInterval과 setTimeout 차이점 setInterval n초마다 반복실행(인터벌은 간격을 뜻하니까) setTimeout n초에 한번실행 후 종료 4. find VS findindex VS indexOf차이점은 indexOf는 1차원배열에 쓰고, find또는findindex는 2차원배열에 쓴다 find반복문이지만 지정된 값을 찾으면 반복문 자동 종료 findindex는 2차원배열의 인덱스값(몇번째인지)을 알려준다 5. Object.entries(객체)Object.entries(객체)는 객체를 배열로 바꾸어준다. 1234567891011121314var dictionary = { //딕셔너리자료구조 가위 : '-255px', 바위 : '0', 보 : '-535px'};console.log(dictionary);// {가위: \"-255px\", 바위: \"0\", 보: \"-535px\"}console.log(Object.entries(dictionary));// (3) [Array(2), Array(2), Array(2)]// 0: (2) [\"가위\", \"-255px\"]// 1: (2) [\"바위\", \"0\"]// 2: (2) [\"보\", \"-535px\"] 2차원 배열인 [key, 값(value)] 로 만들어진다 6. or연산자를 [].includes()로 나타내기123if (결과 === -1 || 결과 === 2 ){ console.log('이겼습니다!!')} 위의 or연산자를 [].includes() 간단하게 나타낼 수 있다. 123if([-1,2].includes(결과)){ console.log('이겼습니다!!')}","link":"/2019/09/22/190922/"},{"title":"WCC1기 OFF-SESSION 후기","text":"WCC1기 OFF-SESSION 후기유이경연사님의 프레시코드 창업기, 이은지연사님의 데이터 분석 교육 프로그램 기획자의 커리어 이야기오늘은 코드스테이츠의 OFF SESSION이 있는 날이다. WCC장학프로그램을 수료완료한 장학생을 대상으로 연사님들의 특강을 듣는 날이다. 이 날을 얼마나 기다리고 기다렸던지…! 네 분의 연사님 중에서 두 분의 강연을 골라 들을 수 있었다 몸을 쪼개어 강의를 전부 다 듣고 싶었다 ㅋㅋㅋㅋㅋ&lt;진심. 궁서체. 1. 유이경 연사님의 프레시코드 창업기유이경 연사님은 프레시코드의 창업자이다. 프레시코드란 건강편의식 거점 배송 물류 유통망 온라인 플랫폼이다. 일반 배송원가는 3~4000원인데 반해 늘어나고 있는 1인가구엔 너무 비효율적이라고 늘 생각했던 터에 실리콘밸리에서 인턴을 하며 샐러드를 밥으로 먹는 사람들을 보며 큰 시장이 될 것을 확신했다고 한다. 연사님이 좋아하는 것 사회적 가치, SIFE(현, ENACTUS) 활동 아이디어 내기 새로운 활동 [걸스인텍(https://www.facebook.com/GITSeoul/)] 활동 자신이 좋아하는 것을 어떻게 풀어낼까 하다가 창업을 선택하게 되었다고 한다. 연사님의 강연 중 가장 와닿았던 부분은 초기 창업자에게 필요한 것에 대한 조언이었다. 초기장업자에게 필요한 것은1. 창업자는 마케터이다2. Connecting the dots 내 주변에 알리기도 필요하다.내 주변도 설득 못 하면서 하물며 알지도 못하는 고객을 어떻게 설득시키겠는가 3. 실행력초반의 프레시코드를 구상할 당시에는 몰랐지만 지나고보니 Lean startup cycle를 비슷하게 사이클했다고 한다. 갓 창업을 구상할 때 추천하는 사이클이라고 했다. 아이디어 -&gt; 베타제품제작 -&gt; 마켓테스팅-&gt; 2-1. 페이스북홍보+구글폼 -&gt; 2-2. 애플리케이션에서 웹사이트로 제작변경(becaz 초기 단계에선 접근성에 유리)-&gt; 2-3. 개발자들이 웹사이트 제작하는 동안 창업자들은 임시 웹사이트를 열어 한 달간 샐러드어택이벤트를 진행함-&gt; 2-4. 72개사에 110개판매로 성공적으로 베타서비스 완료 분석 -&gt; 3-1. 거점 배송지 증설 3-2. 산학협력으로 신메뉴개발 아이디어검증 기억에 남는 두 문장 처음부터 완벽한 전략은 없다. 그 대신 찾아오는 기회를 빠르게 잡을 수 있어야 한다. 한 명의 안티를 붙잡는 것보다 10명의 충성고객을 유지하는 것이 중요하다 딱딱하지 않고 친근한 연사님이었다. 대단하다는 생각과 동시에 나도 할수있다는 동기부여를 얻었다. 2. 이은지 연사님의 데이터 분석 교육 프로그램 기획자의 커리어 이야기시작부터 화끈한 이은지 연사님은 그야말로 카리스마 대장이었다 강연시작하자마자 SI업체에 가지말라고ㅋㅋㅋㅋㅋ 국비지원학원을 다나면 취업연계로 경력 뻥튀기해서 SI업체로 종종 연결해준다고 한다 SI란 시스템 통합을 뜻하며 추가로 더 구글링해봤는데 읽어도 무슨 말인지 잘 모르겠었다. 그 중에 발견한 티스토리블로그가 있다. 실제 SI업체에서 업무중인 신입개발자의 솔직담백한 이야기를 들을 수 있었다. 티스토리 : 부산 신입 개발자 SI업체 취업기 1년 한국의 대표적인 3대 SI업체로는 삼성SDS, LG CNS, SK C&amp;C가 있고 절대 가지말라고 하셨다 ㅋㅋㅋㅋㅋㅋㅋㅋㅋ 개발자의 무덤이라고 ㅋㅋㅋㅋㅋ 그리고 시작된 재미있는 데이터사이언스강연에 나는 퐁당 빠져버리고 말았다. 1. 데이터사이언스란데이터에 기반한 방법으로 현실 세계의 문제를 해결 하는 것. 문제 해결을 위한 적정 기술. 2. 비교: 인공지능 VS 머신러닝 VS 딥러닝 VS 데이터과학 머신러닝 : 데이터와 결과를 주고 예측 모델 만드는 것 딥러닝 : 데이터를 주면 데이터간의 연결관계를 찾고 컴퓨터 스스로 결과와 예측모델을 만드는 것 3. 데이터과학자가 되고 싶으면?SQL과 python + R 이 기본이다 단계별로 배워가면 된다 파란 계단으로 올라섰으면 데이터사이언스 주황 계단으로 올라가면 머신러닝 노랑 계단으로 올라가면 빅데이터에 특화되었다고 볼 수 있다. 신입이 맡게되는 직무는 크게 2가지이다 데이터분석가 퍼포먼스마케터 기억에 남는 두 문장 절대 혼자 공부하지 마세요. 무료인강과 커뮤니티를 적극 활용하세요 고과의 교육 과정으로 시작해야만 좋은 데이터 분석가가 되는 것은 아닙니다 기술적으로 완성되지 않아도 취업할 수 있습니다 모든 것을 다 배워야 한다는 압박감 때문에 너무 긴 시간을 공부에만 투자하지 마세요 공부한다고 모든 것을 알 수 없어요. 입사하면 어차피 새로운 것을 배우게 되어있습니다.","link":"/2019/09/28/190928/"},{"title":"isNaN(), parseInt(), 연속된 숫자생성3종세트Array().fill().map(), 뽑은 숫자들을 랜덤도splice(Math.floor(Math.random()*arr.length, n)","text":"웹 게임을 만들며 배우는 JS : 지뢰찾기isNaN(), parseInt(), 연속된 숫자생성3종세트Array().fill().map(), 뽑은 숫자들을 랜덤도splice(Math.floor(Math.random()*arr.length, n)1.isNaN()isNaN()는 value가 Not-A-Number인 경우 true를 return한다. return type은 boolean이다. 즉 숫자가 아닌 것을 찾는 함수다. 12345678console.log(isNaN(2));// expected output: false 숫자아님? 놉! 숫자임console.log(isNaN('me'));// expected output: true 숫자아님? 얍! 숫자아님console.log(isNaN('2'));// expected output: false 숫자아님? 놉! 숫자임 참고로Number.isNaN(https://www.w3schools.com/jsref/jsref_isnan_number.asp) 와 isNaN()(https://www.w3schools.com/jsref/jsref_isnan.asp)은 완전히 다르다. 2. parseInt()parseInt()는 문자열을 구분하고 정수로 변환한다. 1234567891011function roughScale(x, base) { var parsed = parseInt(x, base); if (isNaN(parsed)) { return 0 } return parsed * 100;}console.log(roughScale(' 0xF', 16));// expected output: 1500console.log(roughScale('321', 2));// expected output: 0 코딩공부하면서 수학공부를 다시 하게 된다ㅋㅋㅋㅋㅋ하… 대환장파티 정수가 뭐였더라? 3. 연속된 숫자생성 3종세트지뢰 위치를 뽑기 위해 0부터 99까지의 숫자를 생성해야한다. 이때 암기해두면 좋은 함수 3가지가 있다. Array().fill().map()꼭 암기할것 연속된 숫자생성에 필요한 3종세트라고 생각하면된다 Array(n)로 =&gt; n개의 빈 배열을 만들고 fill()로 =&gt; 빈 배열을 undefined로 채워고 map()으로 =&gt; n개의 빈 배열과 n개의 undefined를 1대1매칭 시켜준다 예를들어 for문 안쓰고 3~50까지 숫자만들고 싶을때 유용하다. 12345//step3. 지뢰 위치 뽑기 var 후보군 = Array(hor*ver).fill().map(function(요소, 인덱스){ return 인덱스 //0부터 99까지 인덱스를 리턴. 1~100까지하고싶으면 인덱스+1 하면 됨 }); // 100개의 숫자를 만들고 칸에 fill채워주고 map으로 숫자와 칸을 1대1매칭시켜준다 4. 뽑은 숫자들을 랜덤하게 나타내기후보군으로 뽑은 숫자들을 랜덤하게 나타나게 하고 싶을 때 아래와 같이 코딩한다 12345var 셔플 = [];while (후보군.length &gt; 80){ //지뢰는 20개만 필요하므로 100개중애 80개는 안쓴다 var 이동값 = 후보군.splice(Math.floor(Math.random()*후보군.length), 1)[0]; 셔플.push(이동값); //랜덤하게 순서를 섞어서 셔플배열에 넣어준다}","link":"/2019/10/01/191001/"},{"title":"Git bash 명령어(깃허브로 클론하고 커밋남기고 푸쉬하기)","text":"비전공자가 IT개발자로, 커리어전환기121. git 순서 : 처음시작시 원하는 폴더안으로 들어가기 : cd Documents 꿀팁) cd do까지 입력한 뒤 tab치면 fullname폴더 찾아줌! 개이득! 폴더안에 어떤 폴더가 있는 지 확인 : ls 폴더만들기 : mkdir 폴더이름 만든 폴더 안으로 이동 : cd 폴더이름 주소에 맨 끝에 (master)로 지정되어있는지 꼭 확인! 복붙원하는 깃허브 fork -&gt; 내 repo생성 -&gt; code 탭에서 clone or download클릭 -&gt; 주소복사 복붙하기 : git clone 마우스우클릭paste 복붙한 내용 열기 : ls 방금복붙한주소의파일 –주소 맨 끝 (master)확인–&gt; code . 열코 : 코딩하기 수정한 코드 확인하기 : git status 추가하기 : git add 스테이터스에나온이름 커밋하기 : git commit -m '커밋메세지' 깃 스테이터스에 더이상 수정한 내용이 없을 때까지 반복 9~10번 반복 푸쉬하기 : git push origin master 나의 깃허브 repo로 가서 상단 메뉴의 pull requests 클릭 -&gt; new pull request 클릭 -&gt; Create pull request 클릭 후 제목과 내용작성 -&gt; Create pull request -&gt; 끝! 2. git remote가 바로 원격 저장소를 관리git push와 git pull을 할 때, remote 저장소와 push 또는 pull할 branch를 함께 설정할 수 있다. 12$ git push [리모트저장소이름] [branch name]$ git pull [리모트저장소이름] [branch name] 2-1. remote 저장소 현재 remote 저장소 확인 1$ git remote -v remote 저장소 설정새로운 저장소 주소를 추가 12345//기본$ git remote add [리모트저장소이름] [깃헙저장소주소명]//예시$ git remote add [remote name] https://github.com/[깃헙프로젝트유저명]/git remote 저장소 수정추가된 저장소 주소를 변경 1$ git remote set-url upstream/origin https://github.com/[깃헙프로젝트유저명]/git remote 저장소 삭제만약 origin지우고싶다면 아래 코드를 입력하면 된다 1234$ git remote remove [리모트저장소이름]//예시$ git remote remove origin 참고링크 : git push와 git pull에 대해서 3. git 순서 : 기존의 repo에서 데이터 가져와서 시작 터미널창에서 git init를 해놓은 경로로 들어가기 git pull origin master 열코! 수정한 코드 확인하기 : git status 추가하기 : git add 스테이터스에나온이름 커밋하기 : git commit -m '커밋메세지' 푸쉬하기 : git push origin master 4. 꿀팁 잘못 들어왔을 때 상위폴더로 나가는 명령어 : cd .. Git bash로 editor여는 명령어 : code","link":"/2019/10/06/191006/"},{"title":"func(...arguments) 의미, 화살표함수 &#x3D;&gt; 의미","text":"비전공자가 IT개발자로, 커리어전환기13func(…arguments) 의미, 화살표함수 =&gt; 의미func(…arguments)함수선언은 아래와 같이 한다면, 123function A(func, ...args){ func(...args)} 함수사용을 아래와 같이 하면, 1A(Add,1,2,3,4) Add는 편의상 숫자를 더하는 함수라고 치면 A함수는 그 내부에서 Add(1,2,3,4)를 실행시켜주는역할을 하는 함수가 된다 여기서 (…arguments)의 의미는 매개변수가 몇 개가 들어올 지 모르니 유동적으로 받겠다는 의미이다 화살표함수 =&gt; 의미화살표함수는 익명함수를 만드는 명령어로 적기귀찮아서 줄여서 쓰는 것이다 (별다줄) 이름 필요없이 한 번 쓰고 버릴 함수 만들 때 유용하게","link":"/2019/10/08/191008/"},{"title":"우클릭이벤트실행, target VS currentTarget, arr.filter(function(v){}), arr1.concat(arr2), 스코프(scope)와 스코프체 렉시컬 스코프, 재귀함수, arr.filter((v)&#x3D;&gt;!!v)","text":"웹 게임을 만들며 배우는 JS : 지뢰찾기1. 우클릭이벤트 실행 addEventListener(‘contextmenu’, function(){})우클릭시 이벤트실행은 contextmenu사용 123456789101112131415161718//step5. 우클릭하면 깃발모양만들기td.addEventListener('contextmenu', function(e){ e.preventDefault(); console.log('우클릭');//우클릭한 곳이 몇번째줄 몇번째칸인지 알아야하니까 currentTarget 사용 var 모부tr = e.currentTarget.parentNode; var 모부tbody = e.currentTarget.parentNode.parentNode;//var 칸 = 모부tbody.children.indexOf(tr) 모부tr이 배열이 아니라서 indexOf적용안됨. 모부tbody는 유사배열임//indexOf를 쓰고 싶은데 배열이 아닌 애들한테 강제로 쓰는 법은 아래와 같이 Array.prototype.indexOf.call()를 사용 var 칸 = Array.prototype.indexOf.call(모부tr.children, e.currentTarget); var 줄 = Array.prototype.indexOf.call(모부tbody.children, 모부tr); console.log( 칸, ':', 줄); e.currentTarget.textContent = '!'; dataset[줄][칸] = '!'; //데이터와 화면일치를 위해 꼭 필요. 이게 불편해서 react를 많이 씀 }); 2. event.target VS event.currentTarget언뜻보면 이벤트가 일어난 곳을 둘 다 알 수 있는 것 같지만, 차이가 있다. target은 이벤트리스너가 발생하는 대상(내가 클릭한 td) currentTarget은 이벤트리스너를 단 대상(내가 클릭한 td가 속해있는 테이블 전체) 1234tbody.addEventListener('contextmenu', function(e){ console.log('타켓', e.target); console.log('커렌트타켓', e.currentTarget);}); 3. arr.filter(function(v){})배열에서 v인것을 필터링해주는 함수이다 123456789//step6. 클릭했을때 주변 지뢰 개수 세기e.currentTarget.textContent = [ dataset[줄-1][칸-1], dataset[줄-1][칸], dataset[줄-1][칸+1], dataset[줄][칸-1], dataset[줄][칸+1], dataset[줄+1][칸-1], dataset[줄+1][칸], dataset[줄+1][칸+1] ].filter(function(v){ return v === 'X' //=&gt; v가 'X'인 배열을 필터링함 }).length; 가장자리는 배열이 마이너스가 나기때문에 오류가 난다. 해결하는 방법은 아래 4번의 concat을 이용해서 배열을 다시 만들어주면 된다. 1234567891011121314151617181920td.addEventListener('click', function(e){ var 모부tr = e.currentTarget.parentNode; var 모부tbody = e.currentTarget.parentNode.parentNode; var 칸 = Array.prototype.indexOf.call(모부tr.children, e.currentTarget); var 줄 = Array.prototype.indexOf.call(모부tbody.children, 모부tr); if(dataset[줄][칸] === 'X'){ e.currentTarget.textContent = '펑!'; }else{ var 주변 = [dataset[줄][칸-1], dataset[줄][칸+1] ]; if(dataset[줄-1]){ 주변 = 주변.concat(dataset[줄-1][칸-1], dataset[줄-1][칸], dataset[줄-1][칸+1]); } if(dataset[줄+1]){ 주변 = 주변.concat(dataset[줄+1][칸-1], dataset[줄+1][칸], dataset[줄+1][칸+1]); } e.currentTarget.textContent = 주변.filter(function(v){ //배열에서 필터링하는 함수 return v === 'X' }).length; }}) 4. arr1.concat(arr2)배열과 배열을 합칠때 push말고 concat이 유용하다 MDN : concat 123456var 주변 = [ dataset[줄][칸-1], dataset[줄][칸+1] ];if(dataset[줄-1]){ 주변.push(dataset[줄-1][칸-1]); 주변.push(dataset[줄-1][칸]); 주변.push(dataset[줄-1][칸+1]);} 동일하게 concat으로 나타내면 1234var 주변 = [ dataset[줄][칸-1], dataset[줄][칸+1] ];if(dataset[줄-1]){ 주변 = 주변.concat(dataset[줄-1][칸-1], dataset[줄-1][칸], dataset[줄-1][칸+1]);} 5. Scope와 Scope Chain과 Lexical Scope변수는 자신을 감싸고 있는 함수의 바깥으로 빠져나갈 수 없다. var은 선언한 함수 내부에서만 유효하다 (= function scope) 참조 : 제로초 블로그 - 함수의 범위(scope) 6. 재귀함수재귀함수란 자신을 불러오는 함수로 반복문 역할로 사용 가능하다 1234function 재귀함수(숫자){ console.log(숫자); 재귀함수(숫자+1);}; 재귀함수(1)을 실행하면 12345function 재귀함수(숫자){ //=&gt; 1 &gt; 2 &gt; 3 &gt; 4 ...무한반복 console.log(숫자); //=&gt; 1 &gt; 2 &gt; 3 재귀함수(숫자+1); //=&gt; 2 &gt; 3 &gt; 4};재귀함수(1) 무한반복문이 된다. 그걸 방지하기 위해서 if로 숫자 제한을 둔다 123456function 재귀함수(숫자){ console.log(숫자); if(숫자&lt;3){ 재귀함수(숫자+1) }}; 재귀함수(1)을 실행하면 12345678function 재귀함수(숫자){ //=&gt; 1 &gt; 2 &gt; 3 console.log(숫자); //=&gt; 1 &gt; 2 &gt; 3 if(숫자&lt;3){ //=&gt; 1 &gt; 2 &gt; false 재귀함수(숫자+1) //=&gt; 2 &gt; 3 } //=&gt; end};재귀함수(1); 7. arr.filter((v)=&gt;!!v)배열에서 undefined, 0, null, 빈문자열 제거하는 코드로 암기필수이다. 123arr.filter(function(v){ return !!v;}); 최신문법으로 나타내면 1arr.filter((v)=&gt;!!v); 지난번 포스팅에서도 언급했듯이 화살표함수(=&gt;)는 익명함수를 만드는 명령어로 적기귀찮아서 줄여서 쓰는 것이다 (별다줄ㅋㅋㅋ)","link":"/2019/10/15/191015/"},{"title":"콜백함수실행, Blocking VS non-blocking, 배열.indexOf(value), Number.toFixed(숫자), 탬플릿태그","text":"비전공자가 IT개발자로, 커리어전환기11콜백함수실행, Blocking VS non-blocking, 배열.indexOf(value), Number.toFixed(숫자), 탬플릿태그1. 콜백함수실행 handleClick()은 실행이고 실행의 결과는 return값이 없으므로 undifiend이다 2. 동기와 비동기 개념설명 : Blocking VS non-blocking 비동기는 요청에 대한 결과가 동시에 일어나지 않는다. 요청을 다 받긴 한다. 그럼 결과가 언제 일어나느냐? callback이 일어날때 결과가 발생함! 3. 배열.indexOf(value)값의 위치를 알 수 있다. [0]번째인지 [2]번째인지 등등 값이 없으면 -1이 출력. 123456789//예제let 과일 = ['딸기', '포도', '바나나', '사과']console.log(과일.indexOf('바나나'))// expected output: 2console.log(과일.indexOf('리치'))// expected output: -1 4. Number.toFixed(숫자)Number.toFixed(2) = 소수점 둘째자리까지 반올림하여 표시 1234//예제1console.log(((1.2345).toFixed(1))// expected output: \"1.2\" 1234//예제2console.log((1.256).toFixed(2))// expected output: \"1.26\" 1234567//예제3function financial(x) { return Number.parseFloat(x).toFixed(2);}console.log(financial(123.456));// expected output: \"123.46\" 5. 템플릿태그 HTML에 템플릿 태그부분은 JS의 세번째 줄이 없으면 아예 브라우저가 읽지 않는다 따라서 이벤트리스너를 달때는 템플릿아이디를 가지고 와서 다는 게 아니라 템플릿안의 다른 클래스나 아이디를 가지고와야한다","link":"/2019/09/24/190924/"},{"title":"HTML5와 CSS : background 기본속성 7종세트","text":"CSS background 기본속성 7종세트, 1.CSS background 기본속성 7종세트 12345678910body{ width: 500px; height: 200px; background-image: url(\"../img/이미지이름\"); background-repeat: no-repeat; background-size: cover; background-position: center; background-attachment: fixed;} 2. div에 이미지 삽입했을 때 기본속성12345background-color: white;width: 100px;padding: 410px;margin: 30px auto;border: 10px solid coral; 위의 코드에 추가로 1234567891011121314151617 /* div든 뭐든 센터로 위치 시킬때(상-좌우-하 순서) */ margin: 30px auto;/* div든 뭐든 센터로 위치 시킬때(상-좌우-하 순서) */ margin: 30px auto 50px; /* div든 뭐든 센터로 위치 시킬때(상-우-하-좌 순서: ) */ margin: 10px 20px 30px 10px; /* div든 뭐든 테두리주고 싶을때 */ border-width: 10px; border-style: solid; border-color: coral; /* 위의 border 속성을 한 줄로 줄여쓸 수 있다(단축속성) */ border: 10px solid coral; div는 기본적으로 block속성이다 다시 가장 중요한 박스모델을 정리하자면 12345678Box modelwidth : 너비, 미설정시 모부크기만큼 꽉참height : 미설정시 자식높이만큼 자동 조절margin : 바깥여백padding : 안쪽여백, 설정시 자신의 width와 height에 padding만큼 증가함border : 테두리, 설정시 자신의 width만큼 증가함","link":"/2019/10/21/191021/"},{"title":"웹 게임을 만들며 배우는 JS 완강 후기","text":"웹 게임을 만들며 배우는 JS 완강 후기 온라인 인강을 혼자 수강한 경험이 있는 사람들은 많이 공감할 것이다.강의를 100% 수강하기가 굉장히 어렵다는 사실을.그 어려운 걸, 제가 해냅니다!!!ㅋㅋㅋㅋㅋㅋㅋㅋ 이 강의는 코드스테이츠 pre 코스를 수강하면서 부족한 나의 JS 실력을 쌓고자 들었던 무료강의이다. 이 강의의 장점은 무수히 많지만 그 중 몇가지를 꼽자면, 무료 실습위주라서 재미보장 10분단위의 강의로 집중도를 높임 제로초 유튜브계정에서도 무료로 강의를 볼 수 있지만 나는 구름에듀에서 인강을 보았다. 그 이유는 수강률을 보면서 동기부여를 스스로 받고 싶어서였고… 그 결과!!... 2019년 9월에 시작해서 2020년 3월에 완강에 성공했다.6개월내내 공부한 건 아니고….사실 중간에 손을 놓은 적도 몇 번있었다.&lt;원래 사람이 그렇잖아요? 허허 먼산…… 그래도 다시 마음잡고 끝까지 완강해서 뿌듯하고 참으로 많이 배웠다. 구름에듀에서는 100%완료한 강의에 대해서 수료증도 발급해준다.별거아니지만 받고 보면 참 뿌듯하다 ㅋㅋㅋㅋㅋ 나처럼 비전공자이면서도 JS 비기너에게 꼭 추천하고 싶은 강의이다!게임이 직접 실행되기때문에 재미있어 쉽게 따라갈 수 있고코드를 보고 떠오른 내 머리속 궁금증을 어떻게 알았는지 속시원하게 알려준다. why를 알려주니 이해가 쏙쏙!이렇게 적다보니 홍보같지만… 홍보아니고 개인적인 경험에 의한 강력추천무료강의니까 바로 시작해보시길!","link":"/2020/03/31/200331/"},{"title":"초기화버튼, Number와 String의 사칙연산","text":"ES2020 초급 웹게임 강좌 : 계산기 1. 값을 초기화를 하려면 보통 null이나 undefined 사용.초보자는 null추천 123456clearbtn.addEventListener('click', ()=&gt;{ //clearbtn클릭시 초기화 numberInput.value = null; temp = null ; operator = null; resultInput.value = null;}) 2. Number 와 String의 사칙연산숫자와 문자열을 더하면(+) 숫자가 문자열로 바뀌어서 계산됨ex) 10 + ‘5’ = ‘105’ (결과값이 문자열) 숫자와 문자열을 곱하기,빼기,나누기는 문자열이 숫자로 바뀌어서 계산됨ex) 10 / ‘5’ = 2 , ‘10’ * 5 = 50 , ‘10’ - ‘5’ = 5 (결과값이 숫자) 3. Falsy 값을 가지는 6가지 (암기필수)There are only six falsey values in JavaScript:undefined , null , NaN , 0 , “” (empty string), and false.","link":"/2020/04/30/200430/"},{"title":"이클립스 설치시 오류 해결 : Unable to connect the database server at this time(eclipse)","text":"자바 설치 및 이클립시 설치시 오류 해결 Java를 공부하기 위해선 다양한 방식이 있지만전통적인 JAVA와 Eclipse를 설치하는 것이 좋다 1단계, Java development kit 다운로드하기java development kit를 검색하여 최신버전을 다운로드 하면 된다JDK 다운로드를 클릭하면 된다. 2단계, Eclipse 다운로드하기Eclipse download를 검색하여 최신버전을 다운로드하면 된다 척척 잘 진행되는 것 같았으나… 문제가 생겼다. Eclipse의 다운로드 버튼을 누릴때마다 아래 사진처럼 Error창이 뜨는 것이다 Unable to connect the database server at this time(eclipse)짜Unable to connect the database server at this time(eclipse)증Unable to connect the database server at this time(eclipse)나죽겠네! 해결하고자 네이버링도하고 영어로 구글링도 했지만 뚜렷한 방법은 보이지 않는 듯 했다. 자바를 공부하고 있는 친구에게 상황을 설명하니 혹시 컴퓨터 user name이 한글이냐고 물어봤다 오브콜스! 그러자 친구가 말하길 user name이 한글이라서 안될수도 있다면서 자기도 그런 케이스라서 결국 노트북을 포맷했다고 한다. 포맷은 절대 하기 싫어서 온갖 방법을 써봤다 제어판 &gt; 계정 &gt; 사용자정보에서 내 Microsoft 계정관리에서 영어로 이름 변경한 뒤 노트북 재부팅 후 크롬브라우저에서 다운로드 시도 =&gt; 동일 현상으로 실패 집안의 다른 컴터에서 exe파일은 usb메모리에 받은 뒤 옮기기 =&gt; 동일현상으로 실패 크롬브라우저가 아니라 익스브라우저로 다운로드 시도 =&gt; 성공 정말 Java 공부 시작도 전에 짜증이 화르륵ㅋㅋㅋㅋㅋㅋㅋㅋ성공했을 때의 그 기쁨의 맛이란?! 참 뿌듯했다. [잘 다운로드 되고 있는 어여쁜 이클립스의 모습. 초록바가 차오를수록 나의 흥도 차오른다 아싸리~] 3번을 통해 나는 문제를 해결했고 이 점이 나와 같은 빡침을 겪은 사람에게 조금이라도 도움이 되었으면 좋겠다. 1번해결방법에서 컴퓨터 계정이름을 영어로 변경한 뒤 바로 컴퓨터에 반영되지 않았다. 그래서 좌절하고 있었는데 노트북 재부팅하고 5시간정도 지난 후에 변경한 계정이름이 반영되었다. 그 후로 크롬브라우저로 들어가 이클립스 다운로드를 누르니 다운이 잘 된다! 즉 이클립스 다운로드 오류는 내 노트북 계정 이름이 한글이었기때문에 발생했다고 할 수 있다. 결론혹시나 인터넷 익스플로러에서도 이클립스 다운로드 오류가 난다면, 노트북 계정이름을 영어로 변경 후 5시간 정도 기다린 뒤, 노트북의 계정이름이 영어로 반영된 것을 확인 후에 이클립스 다운로드하자!","link":"/2020/05/15/200515javae/"},{"title":"Hi, How are you?","text":"200505은 역사적인 날!어린이 날이면서도 깃헙블로그를 새로 단장한 날이다!기존에 Jekyll이었는데 hexo로 싹 바꿨다.고생많았지만 차근차근 많은 것을 배웠다.앞으로도 더 배워나가야지.스스로 테마도 만들어 볼 수 있는 수준까지 가자!!","link":"/2020/05/05/200505start/"},{"title":"Character VS String, 줄바꿈, 문자열안의 큰따옴표넣기","text":"생활코딩JAVA1 : 자바기초, Character VS String, 줄바꿈, 문자열안의 큰따옴표넣기1. 자바 기초아래를 항상 기초로 적어야한다 12345public class name { //name은 항상 파일명과 일치해야한다 public static void main(String[] args) { System.out.println(); }} 매번 코딩해야하기에 여간 귀찮은 게 아니다그래서 한가지 tip이 있다 sout 을 누르고 ctrl + space 를 누르면 짜잔! System.out.println()가 자동완성된다 2. Character VS String몇몇 언어와 다르게 JAVA에서는 큰따옴표&quot; &quot;와 작은따옴표' ' 명백한 차이가 있다. 12System.out.println(\"Hello World\");//String는 문자열으로 캐릭터들이 모여있는 것을 뜻한다 123System.out.println('H'); //Character는 문자 한 글자만 나타낼 수 있다//따라서, System.out.println(\"H\")와 위의 작은따음표('H')는 결과는 같아보일 수 있지만 사실 문자 한글자와 문자열로 나눠지기때문에 근본적으로 다르다. 3. 줄바꿈new line의 약자로 \\n을 해주면 된다 1System.out.println(\"Hello \\nWorld\"); 4. 문자열안의 큰따옴표 (escape)문자열 안에 큰따옴표를 사용하고 싶을 때는 \\&quot;\\&quot; 를 사용해주면 된다 1System.out.println(\"Hello \\\"World\\\"\");// Hello \"World\"","link":"/2020/05/16/200516javae/"},{"title":"JAVA 동작 원리","text":"생활코딩JAVA1 : JAVA 동작 원리모든 공부는 그 원리가 중요하다원리 즉 기초를 튼튼히 쌓아 올려야 무너지지 않는 건물이 되고 건물주가 될 수 있다&lt;응? 그렇다면 자바는 어떻게 작동할까? 우리는 자바라는 언어를 이용하여 컴퓨터에 우리가 원하는 것을 시킬 수 있다. 이때 컴퓨터는 우리의 언어를 이해하지 못한다. 이러한 우리의 언어를 컴퓨터가 이해할 수 있도록 컴파일(compile)을 한다. 컴파일링 후 .class가 생성되고 쉽게 말해 컴퓨터가 이해할 수 있는 언어로 번역된 것이다. 그리고 실행(Run)을 시키면 우리가 java를 설치하면서 다운로드했던 Java Virtual Machine을 거쳐서 computer는 결과를 도출한다.","link":"/2020/05/19/200519javae/"},{"title":"변수 기초(정확한 데이터타입)","text":"생활코딩JAVA1 : 변수 기초(정확한 데이터타입)자바는 변수를 설정할때 꼭 정확한 데이터타입을 적어줘야한다.숫자 1의 경우에는 Number지만 정확히 말하면 정수(Integer 인티저)에 속한다따라서 아래 변수a와 같이 int 를 적은 뒤 변수를 적는다. 숫자 1.1의 경우에는 실수(real number)이다.이를 아래 변수b처럼double로 나타내면 된다 문자열은 그래도 String을 쓰면 된다! 1234567891011121314public class Main { public static void main(String[] args) { // Number -&gt; integer ... -2, -1 , 0, 1, 2 ... int a = 1; System.out.println(a); // real number -&gt; double ... -2.0, -1.0, 0, 1.0, 2.0 ... double b = 1.1; System.out.println(b); String c = \"Hello World\"; System.out.println(c); }}","link":"/2020/05/17/200517javae/"},{"title":"코드스테이츠 Pre 35기 수료 후기","text":"코드스테이츠 Pre 35기 수료 후기코드스테이츠는 부트캠프 형식의 코딩 교육으로 알고리즘은 물론 JS, HTML, CSS를 페어프로그래밍을 통해서 공부할 수가 있다. 나는 코드스테이츠를 2019년 10월에 수료를 했다.Latte is horse, 코스가 총 2가지로 pre코스(기초과정)와 immersive코스(심화과정)으로 나뉘었었는데이번에 다시 홈페이지를 방문하니 기존 코스를 하나로 통합하여 몰입과정만 운영하고 있었다.멈춰있지않고 항상 나아가려고 노력하는 기업인 것 같다. 나는 코드스테이츠 pre과정에 엄청 만족했다.정말 다양한 이유가 있다. 1. 할 수 있는 언어가 +1 증가했습니다한국어, 영어만 할 수 있는 나에게 JS까지 3개국어를 할 수 있게 되었다ㅋㅋㅋㅋㅋㅋfront-end의 기본중의 기본인 바닐라 JS, HTML, CSS를 배웠다.비전공자인 나에게 그것조차 꽤 버거웠지만 수료하기위해서 많은 시간을 들여 공부했다.JS기반 알고리즘문제해결부터 single page application개발(간단한 트위터 구현)까지 진행하였고 과제를 수행할때마다 꽤 재미있었다. 2. 협업스킬이(가) +1 향상되었습니다코드스테이츠 덕분에 나는 전혀 몰랐던 Zoom과 Slack 그리고 Github를 주구장창 사용할 수 있게 되었다.모두 페어프로그래밍으로 진행하여 협업능력이 향상되었다.또 좋았던 부분은 질문과 답변시간인데, 내가 공부하다 막히는 부분이 있으면 언제든지 Github를 통해 질문했고, 질문들을 텍스트로 설명해줄뿐만아니라 매주2회 온라인강의에서 실시간으로 알려주었다.강사가 해결하는 방법을 보면서 ‘아 개발자는 저렇게 해결하는구나’라는 것을 느끼고 배울수있었다. 3. 평생친구를(을) 만났습니다.같은 목표를 보고 함께 만난 사람들중에 놀랍게도 나와 찰떡인 평생친구를 만났다.공통점이 많은 우리는 절친이 되서 같이 놀러도 다니고 지금까지 끈끈한 우정을 이어오고 있다. 별 건 아니지만 수료증도 주니 참 뿌듯뿌듯하다.덕분에 나의 경험치는 향상되었고 나는 정말 만족한다.내가 조금더 기초가 있었더라면 더 많은 경험치를 올릴 수 있었을텐데 하는 아쉬움과 함께 코드스테이츠를 수료했다.","link":"/2020/05/19/200519pre/"},{"title":"[패스트캠퍼스python] 괄호종류, .format(), 기본단축키, 가상환경명령어, 데이터타입","text":"괄호종류, .format(), 기본단축키, 가상환경명령어, 데이터타입1. 괄호종류 : 대괄호[] - 중괄호{} - 소괄호()2. format사용Python에서 중요한 format함수의 활용에 대해 공부했다.각 약어들의 의미는 아래와 같다 $s : 문자 $d : 정수 (ex: -1,0,1등) $f : 실수 (유리수 + 무리수이므로 ex: 1.8, 3/4, √4, π 등) 12345678print('{} and {}'.format('You', 'I'))print('{0} and {1} and {1}'.format('You', 'I'))print(\"%s likes to go %d St. %s\" %('Kim', 7, 'library'), '도서관')# run하면 아래와 같이 터미널에 나타난다. # You and I# Me and I and I# Kim likes to go 7 St. library 도서관 3. 기본 단축키 ctrl + shift + B =&gt; 터미널에 코드실행 (터미널에 적힌 코드들의 실행값을 볼 수 있음) ctrl + / =&gt; 파이썬에서 주석을 나타낼 수 있다. 언어마다 주석이 다른데 파이썬은 앞에 #이 붙으면 주석처리가 된다. 4. 가상환경 명령어여러 프로젝트를 진행하다보면 다양한 프로그램들을 다운로드하게 되고 python버전끼리 또는 프로그램끼리 서로 충돌할 수 있다.에러를 해결하기위해 고군분투하다가 심한 경우 포맷을 해야하는 끔찍한 상황에 처할 수 있다. 이를 방지하기 위해 프로젝트를 가상환경안에서 진행하면 좋다.프로그램끼리 충돌이 생겨 에러가 난 경우, 가상환경안의 include폴더, Lib폴더 그리고 Scripts폴더만 삭제해주면 끝!굳이 눈물의 포맷을 할 필요가 없다! 가상환경설정을 윈도우기준으로 설명하자면, cmd를 검색하여 명령 프롬프트를 연다 cd 원하는파일위치복붙: 원하는 파일위치를 연다 dir: 현재 파일 위치안에 있는 파일들을 확인한다 cd Scripts: Scripts파일로 들어간다 activate.bat : 명령어를 입력하면 경로 제일 앞에 괄호가 생기고 그 안에 (지정했던 가상환경파일)이 적힌다. 이렇게 되면 가상환경안에 들어와 있는 것이 된다! code: 가상환경안에 있음을 확인 후 code를 쳐서 에디터를 연다.꼭 가상환경안에서 에디터를 열어야 추후 일어날 수 있는 문제를 예방할 수 있다. deactivate.bat: 가상환경 밖으로 나갈 수 있는 코드이다. 5. 가상환경설정시 warning 해결명령 프롬프트를 열고 열심히 강의를 따라하고 있는데 아래 이미지와 같이 warning이 나타났다. 옛날이었으면 엄청 당황했겠지만 공부하는 동안 꽤 많이 봐왔다.당황하지않고 찬찬히 읽어보았다. 현재 pip버전이 옛날 버전이므로 이를 업그레이드하라는 말이었다.뭐야~ 쉽잖아!휴~ 난 또,, 놀래라! 그래서 적혀저있는 그대로~ 하라는대로~ python -m pip install --upgrade pip를 복붙했다.짜잔- 위의 사진에서 위와 아래, 두 개의 빨간 동그라미를 통해 버전업그레이드가 잘 된것을 확인할 수 있다. 6. 파이썬의 데이터타입 종류 파이썬의 데이터타입에는 Boolean Numbers String Bytes List Tuples Sets Dictionaries사실 모든 테이터 타입들이 다 중요하다.이 중 중요한 타입들로는 Lists, Sets, Dictionaries라고 한다.","link":"/2020/05/25/200525python/"},{"title":"[패스트캠퍼스python] 데이터타입(리스트, 튜플, 딕셔너리, 셋)","text":"데이터타입(리스트, 튜플, 딕셔너리, 셋)다른 데이터들은 익숙한데 위의 데이터타입들은 생소해서 꼼꼼하게 인강을 들었다.이러한 데이터들만 잘 활용해도 파이썬을 제대로 사용할 수 있을 것만 같다신기한게 다음 인강이 test인강이었다. 답을 어디 제출하는 것은 아니지만 숙제개념으로 먼저 풀어본 뒤 인강을 들으면 진짜 학원다니는 느낌(?)을 낼 수 있다 ㅋㅋㅋㅋㅋ 1. 리스트리스트는 아래 4가지가 다 가능한 매우 유연한 데이터타입이다. 순서O 중복O 수정O 삭제O 1-1 리스트의 선언선언은 쉽다 12345678a = [1,2,3,4,5]b = list('a') c = [1,2,'Apple', ['Pink', 'Red']]d = list(1)print(a)print(b)print(d) 출력값으로는 123[1, 2, 3, 4, 5]['a']#에러발생, int값은 출력이 안됨. d = list(‘a’)는 출력이 가능하나 list(1)은 출력이 불가능했다. 1-2 리스트의 인덱싱위의 선언을 그대로 아래코드를 입력했다 12345print(c[0])print(c[-1]) print(c[1]) print(c[-1][-2]) print(c[3][1]) 그 출력값은 아래와 같다.특히 -인덱스에서 출력되는 값들이 조금 헷갈린다실습을 많이해서 실수하지 않도록 해야겠다. 123451['Pink', 'Red']2PinkRed 1-3 리스트의 슬라이싱선언한 c에서 1부터 사과까지의 값만 가지고 오고싶다면 슬라이싱을 하면 된다. 12c = [1,2,'Apple', ['Pink', 'Red']]print(c[0:3]) 출력값 1[1, 2, 'Apple'] 1-4 리스트의 연산곱하기 연산이 신기했다 12a = [1,2]print(a * 3) 출력값은 1[1,2,1,2,1,2] 1-5 리스트의 수정 및 삭제리스트는 수정 및 삭제가 간편했다. 1234567891011c[0] = 77print(c)a[1:3] = [100, 200, 300]print(a)c[1] = aprint(c)del c[1]print(c) 출력값 1234[77, 2, 'Apple', ['Pink', 'Red']][1, 100, 200, 300, 4, 5][77, [1, 100, 200, 300, 4, 5], 'Apple', ['Pink', 'Red']][77, 'Apple', ['Pink', 'Red']] 1-6 리스트 함수함수는 재미있는 내용이 꽤 많았다 append(a)와 insert(a,b), extend(c)의 차이점 append(a)는 배열 맨 뒤에 a값을 넣음 insert(a,b)는 a번째 인덱스에 b값을 넣음 list.extend(a)는 a가 배열인 경우 배열 통채로 list에 삽입되지만 list.extend(a)는 a의 원소들이 list에 삽입됨 차이점은 아래 코드를 보면 명확히 나타난다 123456789101112131415y = [5,2,3,1,4]print(y)y.append(6)print(y)list = [10,20,30]list.append(y)print(list)list.extend(y)print(list)y.insert(2,7) #2번째 인덱스에 7을 넣음print(y) 출력값은 12345[5, 2, 3, 1, 4][5, 2, 3, 1, 4, 6][10, 20, 30, [5, 2, 3, 1, 4, 6]][10, 20, 30, 5, 2, 3, 1, 4, 6][1, 2, 7, 3, 4, 5, 6] append는 배열 통채로 추가되는 것을 확인할 수 있다. sort()와 reverse()는 서로 반대! sort()는 순서대로정렬, 오름차순정렬 reverse()는 역순정렬, 내림차순정렬 del, remove(), pop()은 셋 다 삭제하는 기능이다! del는 인덱스로 삭제 가능 remove(a)는 인덱스의 값이 지워지는게 아니라 a라는 값을 찾아서 삭제해줌 pop() 맨 마지막 값을 꺼냄, 참고로 pop()과 push())를 LIFO(Last in first out)구조를 가진 스택(Stack)이라고 부른다 12345y.remove(7)print(y)y.pop()print(y) 출력값은 12[1, 2, 3, 4, 5, 6][1, 2, 3, 4, 5] 2. 튜플언뜻보면 리스트와 다름없는 튜플은 왜 있는걸까?수정이나 삭제되면 안되는 중요 데이터를 다룰때 튜플에 저장사용하면 좋기 때문이다리스트와 중복되는 부분이 많아 내게 필요한 부분만 정리해보았다 순서O 중복O 수정x 삭제x 1234d = (10, 20, 30, ('a', 'b', 'c'))print(d[2:])print(d[3][0:1]) 출력값은 12(30, ('a', 'b', 'c'))('a',) 마지막 출력값에 ,가 찍히는 건 튜플의 특성이다. 튜플은 수정과 삭제가 안되기 때문에 위의 이미지처럼 del로 삭제를 시도한 경우 터미널에 TypeError코드가 생기며 deletion을 support하지 않는다고 알려준다. 3. 딕셔너리dictionary 는 key, value, items를 구분할 줄 알아아한다.딕셔너리를 배우면서 이렇게 데이터를 효율적으로 다룰 수 있단 말이야? 하며 크게 놀랐다.왜 파이썬이 데이터베이스에 많이 사용되는 언어인지 이해가 갔다. 순서x 중복x 수정o 삭제o 3-1 딕셔너리의 선언12a = {'name' : 'kim', 'Mobile':'02-3196-777'}b = {'arr' : [1,2,3,4,5]} 3-2 딕셔너리의 출력딕셔너리 출력시 그냥 출력하는 것보다 get()을 이용하는 걸 추천한다.get()을 이용해서 key를 찾으면, None을 통해 key유무를 확실히 확인할 수 있어 유용하다 12print(a['name'])print(a.get('name')) 둘 다 동일한 출력값을 가진다. 12kimkim 3-3 딕셔너리의 추가123456a['address'] = 'Seoul'print(a)``` 출력값```python{'name': 'kim', 'Mobile': '02-3196-777', 'address': 'Seoul'} 3-4 keys, values, items(keys와 values 합친거)형변환 필수! 1234567print(a.keys())print(list(a.keys()))# 정말 자주 사용함. 중요해! for반복문할때 temp에 넣어서 자주 사용temp = list(a.keys())print(temp[1:3])print(a.values()) # 대량의 데이터처리가 매우 쉬움print(a.items()) 출력값은 12345dict_keys(['name', 'Mobile', 'address'])['name', 'Mobile', 'address']['Mobile', 'address']dict_values(['kim', '02-3196-777', 'Seoul'])dict_items([('name', 'kim'), ('Mobile', '02-3196-777'), ('address', 'Seoul')]) 3-5 ( in )은 keys 유무확인만 가능할뿐 value유무확인은 안됨12print('name' in a) print('kim' in a) 출력값은 12TrueFalse 4.집합(Sets)셋의 특징은 아래와 같다.셋을 통해 파이썬이 빅데이터처리에 유용하다는 것을 느꼈다. 순서x 중복x 1234z = set([1,2,7])y = set([1,2,3,4,4,5,6])print(y) 출력값은 1{1, 2, 3, 4, 5, 6} sets은 중복을 허용하지않기때문에 알아서 중복제거해준다. 4-1 교집합12print(z.intersection(y))print(z &amp; y) 동일한 출력값을 가진다 12{1, 2}{1, 2} 4-2 합집합12print(z | y)print(z.union(y)) 동일한 출력값을 가진다 12{1, 2, 3, 4, 5, 6, 7}{1, 2, 3, 4, 5, 6, 7} 4-3 차집합123print(z - y)print(y - z)print(z.difference(y)) 출력값은 123{7}{3, 4, 5, 6}{7} 위에서 배웠던 데이터타입을 가지고 형변환을 하면 아래 이미지와 같이 출력된다 괄호의 모형도 다르고 type도 다르다. 드디어 자료형에 대해 개략적으로 공부 완료했다실습을 통해 내것으로 빨리 만들어보는 시간을 가졌으면 좋겠다.","link":"/2020/05/26/200526python/"},{"title":"[패스트캠퍼스python] 파이썬 인강 자기계발 챌린지 시작","text":"[패스트캠퍼스 수강 후기]파이썬인강 자기계발 챌린지 시작기회는 준비된 자에게 온다고 했던가?이번에 패스트캠퍼스 5주 자기계발 챌린지 라는 좋은 기회가 있어 바로 기회를 잡았다. 앞으로 35일간 매일 TIL을 작성할 예정이다이번 인강을 통해 Python을 실무에서 쓸 수 있었으면 좋겠다. 참고링크 파이썬 웹 개발 올인원 패키지 Online : https://bit.ly/2WG0IXN","link":"/2020/05/24/200524python/"},{"title":"[ITWILL : JSP]프로그래밍기초이론, 하드웨어 vs 소프트웨어 vs 펌웨어, 기억장치, 클라이언트 vs 서버","text":"ITWILL학원 : 1강 프로그래밍이론 BY 정규태강사1. 프로그래밍특정 목적을 위해서 컴퓨터에 명령을 내리는 동작 혹은 동작의 집합 시스템 프로그래밍 : OS제작, 수정 응용 프로그래밍 : 엑셀 제작, 원가 관리 프로그램 등 웹프로그래밍 : 홈페이지 제작 등, 프로그래밍에는 다양한 것들이 있지만 웹 프로그래밍위주로 공부 할 예정(웹 프로그래밍은 망하지 않을 듯) 2. jsp (= java server page)자바 class, 객체 개념 인지 필수! 3. 하드웨어 vs 소프트웨어 vs 펌웨어 하드웨어 : 물리적인 기계 자체 소프트웨어 : 운영체제 : 리눅스, 윈도우, 맥 응용프로그램(application program): excel, power point, 계산기 등등 펌웨어 : 하드웨어+소프트웨어 4. 기억장치(Memory) 주기억장치 : RAM 보조기억장치 : CD-RM, FDD(플로피디스크-&gt;USB), HDD(하드디스크드라이브)-발전-&gt;SDD 모든 프로그램은 주기억장치에서만 실행된다 : 메모리가 크면 한번에 많은 일을 처리할 수 있어서 메모리가 클수록 성능이 좋다 5. 기본용어 적재(load) : 보조기억장치에서 주기억장치로 (HDD-&gt;RAM) 넘어가는 과정 프로그램 : 하드디스크에 들어 있는 상태 프로세스 : 주기억장치에 로드된 상태의 프로그램(실행되고 있는 프로그램) (작업관리자의 백그라운드프로세스가 많을수록 컴터속도가 느려짐) 6. WEB(웹)인터넷 환경에서 여러가지 정보를 html문서 타입을 결과를 나타내는 환경 7. 웹 브라우저웹의 정보를 볼 수 잇는 클라이언트 프로그램ex)익스,크롬,웨일,맥 등 8. 클라이언트 vs 서버 클라이언트 : 정보를 제공 받는 쪽 서버 : 정보를 제공해주는 쪽 9. 클라이언트와 서버는 어떻게 요청을 주고 받을까? 클라이언트가 주소를 검색한다 (https://www.naver.com) http는 통신규약 (보내는 방식, 속도등이 포함되어 있음) http:// https:// 후자가 전자보다 보안이 더 좋음 도메인주소는 인간에게 편하게 만든거고 컴퓨터끼리는 IP주소임 IP주소 : 웹에서 컴퓨터를 구분하는 값 (0 ~ 255숫자조합임) ex)http://192.168.7.200 인간이 기억하기 어렵기때문에 도메인으로 이용 도메인서버 : IP &lt;-변경-&gt; 도메인 서버 주소 시키는 역활을 함 10.IPv4 VS IPv6나누는 이유가 뭘까?원래는 v4(4자리 조합)만 있으면 충분히 사용할 수 있었지만 요즘은 스마트폰, 테블릿, IPTV등 상용화가 많이 이루어지면서 4자리조합힘들어서 v6가 나왔다 IPv4 : IP를 4자리로 구분한 것 ex) 192.168.7.200","link":"/2020/05/28/200528jspi/"},{"title":"[패스트캠퍼스python] 데이터 타입 관련 퀴즈 풀기","text":"파이썬 인강 : 데이터 타입 관련 퀴즈 풀기내 돈 내고 듣고 있는 패스트캠퍼스의 파이썬 인강! 이때까지 배운 데이터 타입과 관련하여 16문제정도를 풀어보았다.다양한 방법으로 풀어보고 출력값이 일치하는 거 보니 참 뿌듯했다.이런 간단한 사항들을 자유자재로 다룰 수 있어야 나중에 프로젝트를 호율적으로 진행할 수 있을 것임에 틀림없다.간단하다고 약보지말자.16가지 문제 중 기억해야할 것들을 위주로 블로깅을 해보려고 한다 1. 문자열 “30” 을 각각 정수형, 실수형, 복소수형, 문자형으로 변환해보세요.이건 형변환문제이고 아주 쉽지만 중요하다참고로 문자형은 이미 “30” 문자이기때문에 그대로 적어도 되고str()을 사용해서 만들어도 된다. 12345678910print(type(int(\"30\")), int(\"30\"))print(type(float(\"30\")), float(\"30\"))print(type(complex(\"30\")), complex(\"30\"))print(type(\"30\"), \"30\", type(str(30)), str(30))# 출력값은 아래와 같다&lt;class 'int'&gt; 30&lt;class 'float'&gt; 30.0&lt;class 'complex'&gt; (30+0j)&lt;class 'str'&gt; 30 &lt;class 'str'&gt; 30 2. 다음 문자열 “Niceman” 에서 “man” 문자열만 추출해보세요.다양한 방법으로 풀 수 있고 강의에서는 슬라이싱방식과 인덱싱을 이용한 방법으로 풀이해주었다 123456789101112131415# 첫번째 방법: 슬라이스 활용q5 = \"Niceman\"print(q5[4:]) # 슬라이싱으로 간단하게 처리print(q5[4:7]) # 슬라이싱으로 간단하게 처리# 두번째 방법: index활용q5Idx = q5.index(\"m\")print(q5Idx)print(q5[q5Idx:])# 출력값은 순서대로manman4man 만약 Nice를 빼고 문자열을 추출해보세요라고 한다면 어떻게 하면 될까?나는 len()를 이용해서 풀어보았다.위와 동일한 값이 출력되는 것을 볼 수 있다.간단하게 응용도 해보니 파이썬을 향한 재미가 쑥쑥 올라간다. 12345q5len = len(\"Nice\")print(q5[q5len:])# 출력값은man 3. 다음 문자열을 거꾸로 출력해보세요. : “Strawberry”간단한 문제라서 reverse()로 접근했다. 123456q6 = \"Strawberry\"q6.reverse() print(q6)# 출력값은에러 에러가 발생해서 깜짝 놀랬는데 알고보니 reverse()는 리스트일때 사용하는거였다.이제 절대 안 잊어버릴것같다 ㅋㅋㅋㅋ문자형은 reversed()를 사용하면 된다심지어 내 에디터가 알려줬는데도 무시해버렸다ㅋㅋㅋㅋ에디터말 잘 들어야지! 1234print(reversed(q6))# 출력값은&lt;reversed object at 0x0000017E087888E0&gt; 이건 우리가 원하는 데이터가 아니므로 list로 형변환시키면된다 1234print(list(reversed(q6))) # 출력값은['y', 'r', 'r', 'e', 'b', 'w', 'a', 'r', 't', 'S'] 자 이제 원하는 값이 리스트형태로 나왔으니 슬라이싱 이용하면 된다 1234print(q6[::-1])# 출력값은yrrebwartS 손 쉽게 해결! 4. 다음 문자열에서 ‘-‘를 제거 후 출력하세요. : “010-7777-9999”이번 문제는 실무에서 활용도가 높은 문제였다.물론 해결방법은 여러가지가 있지만 제일 쉽게 접근 할 수 있는 방법은 역시 슬라이싱이다.강의에서 슬라이싱뿐만 아니라 아래 이미지처럼 정규표현식을 사용하여 풀이해주었는데 굉장히 재미있었다 4-1 첫번째 방법: 슬라이싱 이용.12345q7 = \"010-7777-9999\"print(q7[0:3]+q7[4:8]+q7[9:])# 출력값은01077779999 4-2 두번째 방법: 정규표현식 이용.이번 문제를 통해 정규표현식을 처음 접했는데 굉장히 재미있었다정규표현식은 언어와 상관없이 표준화가 거의 되어있다.따라서 정규표현식을 공부하면 언어를 초월해서 해당 언어(java,c,c++,js,python등)에 금방 적응할수있다 ^ 의미는 ‘아니다’ 이다. 0-9 는 0부터 9까지라는 의미이다. 즉 [^0-9] 뜻은 숫자제외이다. replace기능 가능 : 예를 들어 010또는 011이면 070으로 바꾸고싶을때 사용가능하다 1234567import reprint(re.sub('[^0-9]','', q7))print(re.sub('010|011','070', q7)) #010또는 011이면 070으로 바꾸고싶다면# 출력값은01077779999070-7777-9999 5. 다음 문자열(URL)에서 “http://“ 부분을 제거 후 출력하세요. : &quot;http://daum.net&quot;이 문제는 위에서 배운 내용들을 토대로 혼자서 네가지 방식으로 풀어보았다다 제대로 값이 출력되니 여간 뿌듯한 게 아니다. 12345678910111213141516171819202122# 첫번째 방식: 슬라이싱q8 = \"http://daum.net\"print(q8[7:])# 두번째 방식: 인덱싱q8index = q8.index(\"/\")print(q8index)print(q8[q8index+2:])# 세번째 방식: len()길이q8len = len(\"http://\")print(q8[q8len:])# 네번째 방식: 정규표현식print(re.sub('http://','', q8))# 출력값은daum.net5daum.netdaum.netdaum.net 6. 다음 문자열을 슬라이싱을 이용해서 “cde”만 출력하세요. : “abcdefghijklmn”해당 문제는 슬라이싱을 이용해서 풀어라고 했기때문에 아래 이미지처럼 풀면 된다 하지만 이렇게 문자열 길이가 긴 문제의 경우 슬라이싱으로 몇 번째 인덱스인지 직접 세는 것보다 인덱싱을 활용하는 게 더 편하다고 생각해서 인덱싱으로 풀어보았다 123456q10 = \"abcdefghijklmn\"q10Index = q10.index(\"cde\")print(q10[q10Index:q10Index+3])# 출력값은cde 7. 다음 리스트에서 “Apple” 항목만 삭제하세요. : [“Banana”, “Apple”, “Orange”]리스트의 remove()를 이용해서 간단하게 풀었다 12345q11 = [\"Banana\", \"Apple\", \"Orange\"]print(q11.remove(\"Apple\")) # 출력값은None 그런데 출력값이 None이 떠서 당황했다.remove()한 내용은 출력할 필요가 없고 삭제완료한 리스트를 print하면 되었던 문제였다 123456q11 = [\"Banana\", \"Apple\", \"Orange\"]q11.remove(\"Apple\")print(q11)# 출력값은['Banana', 'Orange']","link":"/2020/05/27/200527python/"},{"title":"ID와 PASSWORD 일치여부 앱의 코드 리팩토링","text":"ID와 PASSWORD일치여부 앱의 코드 리팩토링 생활코딩 JAVA를 수강중에 나오는 실습들만 따라하는 게 아니라 더 나아가 응용을 스스로 하고 있다.그만큼 JAVA의 매력에 푹 빠졌달까… 실습에선 ID와 PASSWORD가 일치하면 로그인되는 결과만 도출하는 APP이었다면 나는 더 나아가 ID만 일치하고 PASSWORD가 다른 경우 PASSWORD를 다시 입력하라는 메세지를 전달하는 APP을 만들고 싶었다. 그래서 내가 처음 짠 코드는 아래와 같다. 초기 코드조건문을 어떻게 해야하는 지 고민스러웠다.일단 가장 쉬운 if로만 이루어진 코드를 짰다.원하는대로 작동하니 정말 뿌듯했다. 1234567891011121314151617181920212223242526272829303132333435public class authapp { public static void main(String[] args) { String[][] users = { {\"민지\", \"111\"}, {\"하지\", \"222\"}, {\"뽀니\", \"333\"}, {\"라미\", \"444\"} }; String inputId = args[0]; String inputPass = args[1]; Boolean isRightId = false; Boolean isRightPass = false; for(int i=0; i&lt;users.length; i++) { String[] current = users[i]; if(current[0].equals(inputId)){ isRightId = true; if(current[1].equals(inputPass)){ isRightPass = true; break; } } } System.out.println(\"Hi,\"); if(isRightId &amp;&amp; isRightPass) { System.out.println(args[0] + \" Long time No see!\"); }else if (isRightId &amp;&amp; (!isRightPass)) { System.out.println(args[0] + \" Please check password again\"); }else{ System.out.println(args[0] + \"Please sign up\"); } }} 작동해서 뿌듯했지만 프로그래머들 사이에서 들여쓰기가 3번이상된다면 코드를 한번 더 봐라라는 격언이 있다고 들었다. 리팩토링 두번째코드주석없이도 다른 사람이 알아볼 수 있는 코드를 만들고 싶었다.위의 코드와 1줄차이이고 두번째코드가 오히려 1줄 더 길다.하지만 나는 두번째코드가 직관적이라서 더 좋은 느낌이다. 12345678910111213141516171819202122Boolean isRightId = false;Boolean isRightPass = false;for(int i=0; i&lt;users.length; i++) { String[] current = users[i]; if(current[0].equals(inputId) &amp;&amp; current[1].equals(inputPass)) { isRightId = true; isRightPass = true; break; }else if(current[0].equals(inputId)) { isRightId = true; break; }}System.out.println(\"Hi,\");if(isRightId &amp;&amp; isRightPass) { System.out.println(args[0] + \" Long time No see!\");}else if (isRightId &amp;&amp; (!isRightPass)) { System.out.println(args[0] + \" Please check password again\");}else{ System.out.println(args[0] + \"Please sign up\");} 좋은 코드란 무엇일까? 아직까지 잘 모르겠다.JAVA를 더 배우고나면 좋은 코드가 무엇인지 감이 확실히 올거라 믿는다.","link":"/2020/05/23/200523javae/"},{"title":"[패스트캠퍼스python] 조건문과 반복문","text":"파이썬의 흐름제어 : 조건문과 반복문 파이썬은 정말 문법에 자유로운 언어인 것 같다.조건문, 반복문에도 ()를 넣지 않아도 된다.점점 내 스타일이다 ㅋㅋㅋㅋㅋㅋㅋㅋㅋ 1. 조건문1. 조건문의 Boolean조건문에서 가장 중요한건 boolean이다 1234567if None: print(\"Yes1\")else: print(\"Yes2\")#출력값은Yes2 만약 Yes1을 출력하고 싶다면 if 의 조건을 True 값을 넣어야한다그렇다면 True 와 false 에는 뭐가 있을까? 참 거짓 종류참 : “내용” [내용] (내용) {내용} 1거짓 : “” [] () {} 0 1234567if 1: print(\"Yes1\")else: print(\"Yes2\")#출력값은Yes1 2. 관계연산자다양한 예가 있다.수학에서의 부등호와 비슷하기 때문에 직관적으로 의미를 알수있다.==, !=, &gt;, &gt;=, &lt;, &lt;= 3. 논리연산자 : and or notjs에서 and와 or 연산자만 배웠었는데python에서 not 연산자를 처음 봤다.not이란 연산자는 되게 흥미로워서 조금 더 찾아봤다논리연산자진리표를 보면 쉽게 이해가 간다. 아래 이미지는 논리연산자의 쉬운 예시이다 아래 코드의 의미는 참이 아닌 것을 출력하시오이다. 1234print(not True)# 출력값은False 4. 산술 &gt; 관계 &gt; 논리 순서대로 적용.위에서 배웠던 세 가지의 연산자들이 동시에 쓰이게 되면 우선순위대로 처리가 이루어진다 1234print('ex1 : ', 5+10 &gt; 0 and not 7+3 == 10)# 출력값은ex1 : False 관계연산자와 논리연산자를 함께 쓰면 아래와 같다 123456789score1 = 80score2 = 'A'if score1 &gt;= 90 and score2 =='A': print(\"합격입니다\")else: print(\"불합격입니다\")# 출력값은불합격입니다 5. 다중조건문 : 다중조건문은 위의 점수조건문을 응용해서 만들어볼 수 있다 num이 82이기에 B값이 터미널에 출력되는 것을 확인 할 수 있다. 2. 파이썬 흐름제어(반복문) : while, for 1. while과 for문while문은 아래와 같이 나타낼수있다while문과 for문이 자유자재로 바꿔 생각할 수 있어야 코딩 초짜를 뗄 수있다. 123456789101112131415v1 =1while v1 &lt; 11: print(\"vi is :\", v1) v1 +=1# 출력값은vi is : 1 vi is : 2 vi is : 3 vi is : 4 vi is : 5 vi is : 6 vi is : 7 vi is : 8vi is : 9vi is : 10 이걸 for 문으로 바꾼다면 어떻게 될까? 123456789101112for v2 in range(1, 11): print(\"v2 is : \", v2)v2 is : 1v2 is : 2v2 is : 3v2 is : 4v2 is : 5v2 is : 6v2 is : 7v2 is : 8v2 is : 9v2 is : 10 2. 1부터 100까지의 합을 구하는 두 가지 방법 첫번째 방법 while문사용 12345678910sum1 = 0cnt1 = 1while cnt1 &lt;= 100: sum1 += cnt1 cnt1 += 1print(' 1 ~ 100합은 : ', sum1)# 출력값은 1 ~ 100합은 : 5050 두번째 방법 range()함수사용 1234print(' 1 ~ 100합은 : ', sum(range(1,101)))# 출력값은 1 ~ 100합은 : 5050 위의 range 함수 활용range()함수는 3번째 매개변수까지 받을 수 있다.range(시작값, 끝값, 넘어가는숫자)) 예를 들어 1~100까지의 짝수의 합은? 123456print(' 1 ~ 100까지 짝수의 합은 : ', sum(range(1,101, 2)))print(' 1 ~ 100까지 짝수의 합은 : ', sum(range(1,101, 10))) # 십단위의 합# 출력값은 1 ~ 100까지 짝수의 합은 : 2500 1 ~ 100까지 짝수의 합은 : 460 3. 시퀀스순서가 있는 자료형을 반복 (매우중요)문자열, 리스트, 튜플, 집합, 사전 이 데이터들은 다 시퀀스 가능iterable 리턴함수 : range, reversed, enumerate, filter 예제 1 : 값을 하나씩 가져오시오 12345678names = ['kim', 'park', 'lee']for v in names: print(\"You are : \", v)# 출력값은You are : kimYou are : parkYou are : lee 예제 2 : ‘word’를 한 글자씩 가져오시오 123456789word = 'word'for s in word: print(\"Word : \", s)# 출력값은Word : wWord : oWord : rWord : d 예제 3 12345678910111213141516171819202122232425262728293031323334353637my_info = { 'name' : 'kim', 'city' : 'seoul', 'age' : 77}# 키를 가져오는 두가지 방법 :기본값과 keys()print('기본값은 키가져오기')for key in my_info: print(key)for key in my_info.keys(): print(key)# 값print('값가져오기')for key in my_info.values(): print(key)# 키와 값 둘 다print('키와 값 둘 다 가져오기')for k, v in my_info.items(): print(k, v)# 출력값은기본값은 키namecityagenamecityage기본값은 값kimseoul77기본값은 키와 벨류 둘다name kimcity seoulage 77 예제 4 : 대문자는 소문자로, 소문자는 대문자로 바꾸시오 12345678910111213141516name = 'GoodbYe'for n in name: if n.isupper(): print(n.lower()) else: print(n.upper())# 출력값은gOODByE 4. break정말 중요한 break!사소하지만 효율을 올려준다 1234567891011121314151617numbers = [14,3,4,7,10,33,24,17]for num in numbers: if num == 33: print('찾았다', num) else: print('못찾았다')# 출력값은못찾았다못찾았다못찾았다못찾았다못찾았다찾았다 33못찾았다못찾았다 위의 코드로 하면 원하는 값을 찾은 뒤에 2번 더 실행되는 것을 볼 수 있다.효율이 떨어지므로 break걸어주면 좋다 1234567891011121314for num in numbers: if num == 33: print('찾았다', num) break else: print('못찾았다')# 출력값은못찾았다못찾았다못찾았다못찾았다못찾았다찾았다 33 5. for - else 구문흥미롭게도 python에는 for문에도 else가 있다 (중요)반복문이 정상적으로 수행 된 경우 else 블럭 수행블럭안에 break가 들어간 경우 반복문 전체가 실행되지않기에 for-else문이 출력되지않는다 123456789101112131415161718for num in numbers: if num == 33: print('찾았다', num) else: print('못찾았다')else: print('반복문끄읕') # 출력값은못찾았다못찾았다못찾았다못찾았다못찾았다찾았다 33못찾았다못찾았다반복문끄읕 6. continuebreak의 반대이다아래는 continue를 가장 이해하기 쉬운 예시이다 12345678lt = [\"1\", 2, 5, True, 4.3, complex(4)]for v in lt: if type(v) is float: print('찾았다, float : ', v)# 출력값은찾았다, float : 4.3 만약 찾은 float빼고 나머지를 보고싶다면?이때 continue사용하면 좋다! for v in lt: if type(v) is float: continue print('타입 : ', type(v)) # 출력값은 타입 : &lt;class 'str'&gt; 타입 : &lt;class 'int'&gt; 타입 : &lt;class 'int'&gt; 타입 : &lt;class 'bool'&gt; 타입 : &lt;class 'complex'&gt; float만 빼고 출력된 것을 확인할 수있다개이득!","link":"/2020/05/28/200528python/"},{"title":"[패스트캠퍼스python] 파이썬의 조건문과 반복문 중간 점검 퀴즈","text":"파이썬의 조건문과 반복문 중간 점검 퀴즈조건문과 반복문 중간 점검 퀴즈를 하였다데이터타입 중간 점검 퀴즈와는 다르게 조금 어려웠다. 여러 문제를 풀었지만 내가 모르는 문제해결방법 위주로 정리해보았다이번 중간 퀴즈도 역시 유익했다. 1. 아래 딕셔너리에서 ‘가을’에 해당하는 과일을 출력하세요.동일한 접근 방법이지만 keys()를 가져올 지 items()를 가져올 지 선택할수있다 첫번째 방법 : for와 if문 사용 12345q1 = {\"봄\": \"딸기\", \"여름\": \"토마토\", \"가을\": \"사과\"}for k in q1.keys(): if k == '가을': print(q1[k]) 두번째 방법 : keys()말고 items()가져오기 123for k, v in q1.items(): if k == '가을': print(v) 첫번째, 두번째 출력값은 12사과사과 2. 다음 세 개의 숫자 중 가장 큰수를 출력하세요.(if문 사용) : 12, 6, 18나는 아래와 같이 풀었다. 쉽게쉽게~! 1234567891011121314a = 12b = 6 c = 18if a &gt; b: if a &gt; c: print(a) else: print(c)else: print(b) # 출력값은18 위는 내가 푼 코드이고 아래는 강사가 푼 코드이다.변수선언이나 코드길이도 훨씬 효율적여보인다.여러 방법으로 푸는 방법을 익히고 그리고 여러 방법으로 풀어보려는 자세가 중요하다. 12345678a, b, c = 12, 6, 18best = aif b &gt; a: best = bif c &lt; b: best = c print('best : ', best) 두 방법 다 꼭 기억해야겠다. 3. s에서 7자리 숫자를 사용해서 남자, 여자를 판별하세요. (1,3 : 남자, 2,4 : 여자)처음에 어떻게 풀지 막막했다. 결국 겅의를 보게 되었고 결과는 허무했다.이렇게 간단한거였는데 풀지도 못하다니 수학적 사고를 길러야겠다고 생각이 들었다 123456789s = '021022-4473837'if int(s[7]) % 2 == 0: print('여자')else: print('남자')# 출력값은여자 4. 다음 리스트 중에서 ‘아’ 글자를 제외하고 출력하세요.여기서 continue 를 쓸 생각을 하지못했다.슬라이싱 처리하려고 했는데 잘 안되서 막막하던 차에 강의에서 continue쓰고 묵혔던 답답함이 쏴악 해소되었다.이제 컨디뉴 절대 안 잊어버릴것같다 1234567891011q3 = [\"지\", \"컨\", \"아\", \"세\", \"요\"]for v in q3: if v == '아': continue else: print(v, end='')print()# 출력값은지컨세요 5. 아래 리스트 항목 중에서 5글자 이상의 단어만 출력하세요.이건 보자마자 길이함수를 써야겠다는 확신이 들었다js를 할때 길이를 항상 length()로 사용해서 무의식적으로 length()적었다가 에러가 떴다아차차 하고 바로 len()로 바꿨다비슷하지만 조금씩 다른 함수들이 있어서 가끔 혼동스럽다헷갈리지 않도록 더 빡세게 암기해야겠다. 123456789q4 = [\"nice\", \"study\", \"python\", \"anaconda\", \"!\"]for v in q4: if len(v) &gt;= 5: print(v, end=' ')print()# 출력값은study python anaconda 6. 아래 리스트 항목 중에서 소문자만 출력하세요.나는 당연히 islower()함수만 썼는데 강의에서 continue를 써서 깜짝 놀랬다.이런 부분때문에 혼자 공부하는 것보다 강의나 여럿이 공부하는 것이 좋은 것같다어서 실력을 키워 모각코나 스터디그룹을 만들고 싶다 123456q5 = [\"A\", \"b\", \"c\", \"D\", \"e\", \"F\", \"G\", \"h\"]for v in q5: if v.islower(): print(v, end=' ')print() 또는 continue를 써서 풀수도 있다 123456for v in q5: if v.isupper(): continue else: print(v, end=' ')print() 위의 두가기 방식의 출력값은 12b c e hb c e h 7. 아래 리스트 항목 중에서 소문자는 대문자로 대문자는 소문자로 출력하세요.재밌는 문제였다. 위의 방법을 그대로 응용하면 되는 문제라 풀면서도 재미있었다저 출력값들을 한 문장으로 나타내려면 어떻게하면 좋을까?if문 끝난 값들을 temp에 넣고 end()로 한 문장에 넣으면 될 것 같다나중에 실습해봐야지 123456789101112131415161718q6 = [\"A\", \"b\", \"c\", \"D\", \"e\", \"F\", \"G\", \"h\"]for v in q6: if v.isupper(): print(v.lower()) elif v.islower(): print(v.upper())print()# 출력값은aBCdEfgH 그리고 아래 내용들을 학습했다.정의에 관한 내용이라 블로깅할 부분이 없었지만 강의가 구체적으로 들어가면 자세히 블로깅 할 예정이다","link":"/2020/05/29/200529python/"},{"title":"[ITWILL : JAVA]컴퓨터와 자바 기초이론","text":"ITWILL학원 : 1강 JAVA BY 윤미영강사1강 컴퓨터와 자바 기초이론1. Bit0 또는 1의 정보를 나타내는 최소 단위쉽게말해 64bit라면 64개의 선들이 한번에 cpu로 들어가는 간다.그리고 신기한 점은 똑같은 0001, 0001이라도 컴퓨터가 알아서 저 비트가 명령어인지 숫자1인지 구분해준다 Q 그렇다면 비트는 모스부호와 같은 건가?궁금해서 검색해보았는데 단순히 이진수의 개념인듯하다. 다음주에 강사님 만나면 물어봐야지 2. Adapter어탭터는 전압을 맞춰주는 역할을 한다만약 220볼트라면, 어탭터는 0~5볼트처럼 컴퓨터가 쓸 수 있는 낮은 전압으로 바꿔 준다. 3. 프로그래밍 언어의 변천사 기계언어 = 이진수로 나타내는 언어 ex) 0000000010101010, 01010110101110 기계언어로는 너무 복잡해서 사람이 프로그램을 짤 수 가 없다. 그래서 생긴 언어가 어셈블리어 : 니모닉 기호로 이루어짐 ex) add 1, 1 그래도 자료구조 표현 어렵고 복잡함 그래서 만들어진 게 고급언어 Pascal, Algol, visaul Basic, C/C++, C#, Lisp, Fortran ex) a =1+1 개발자가 작성한 고급언어를 기계어로 바꾸어주는 것은 컴파일이라고 함 내가 언어를 만든다고 사용할수있을까? NOPE! 컴파일러가 있어야지만 가능. 자바도 자바컴파일러(javac)도 있고 파이썬도 파이썬컴파일러가 있다 기타 기계언어 + 어셈블리어 = 임베디드와 관련이 있다고 한다. 내 절친 라미가 임베디드 공부했었다던데… 그가 얼마나 어려운 언어를 했는지 조금이 짐작이 간다. 4. 절차지향적언어 VS 객체지향적언어 절차지향언어 흐름도에 따라 일련의 동작들이 순서에 맞게 실행 기능 위주의 언어. 예를 들어 python, c등등 소스 코드 분석시 경비가 높아 기술의 한계가 있음 객체지향적언어 효율적 개발을 위해 등장 소프트웨어의 조립화 5. 스크립트언어스크립트언어란 소스코드를 compile하지 않고도 실행할 수 있는 프로그래밍 언어이다객체지향적언어가 너무 코드가 기니까 짧게 만든게 스크립트언어이고 그 예로 java에서 jsp가 있다.기존에 이미 존재하는 어플리케이션을 제어하기 위한 용도로 쓰이는 언어이고 인터프리터 형식의 언어이다.수정이 빈번하게 일어나는 곳에서 쓰인다 6. Compile VS Interpreter둘 다 고급언어로 작성된 원시 프로그램(Source Program)을 목적 프로그램(Object Program)으로 번역하는 번역 프로그램이며, 프로그램 번역 방식에 따라 구분된다. 컴파일 목적프로그램을 생성 번역과정과 번역시간이 복잡하고 오래 걸리지만 한번 번역 후에는 다시 번역하지 않아도되므로 실행속도 빠름 대표적 JAVA, C언어 예시: 소스코드(.java) -&gt; 자바 컴파일 -&gt; 바이트코드(.class) -&gt; JVM 의 JIT 컴파일러 -&gt; 머신코드 -&gt; 실행 인터프리터 : 컴파일로 번역된 내용을 메모리에 올려서 실행을 해준다 대표적 JS, PYTHON 목적프로그램을 생성하지않고 위에서 아래로 순차적으로 실행(웹 브라우저에 포함되어있음) 번역속도는 빠르지만 프로그램 실행시 매번 번역해야해서 실행속도가 느리다 대표적 JS, PYTHON 예시1 : 소스코드(스크립트) -&gt; 인터프리터 -&gt; 실행 예시2 : A.class 파일을 메모리에 올리고 cpu가 해석하고 실행 참고링크1: 컴파일러와 인터프리터란 무엇인가참고링크2 : 컴파일언어와 스크립트언어 차이 7. java의 특징 플랫폼 독립적 컴퓨터는 개발환경(intel CPU, 애플mac / 윈도우,맥,리눅스)를 플랫폼이라고 하는데 c언어는 개발환경이 다른 경우 구현이 불가능함. 하지만 자바는 가능함 이걸 플랫폼 독립적이라고 함. 가능한 이유는 JVM(java virtual machine)이 해줌. 거의 모든 컴터에 기본적으로 다운로드 되어있음 java 프로그램의 단위는 Class이다. Class의 첫문자는 대문자이다 ex) Class XXX {} 위의 예제를 순서대로 Class=예약어, XXX=클래스의이름, {}=실행코드 C#언어와 거의 똑같다. C보다는 처리속도가 느리지만 C만큼 빠르다 8. 자바실행환경소스파일(.java) -&gt; 컴파일 -&gt; 바이트코드(기계어.class) -&gt; JVM이 인터프리터 -&gt; 실행 9. 로딩CPU를 동작시키는 프로그램을 메모리에 올려놓는 작업","link":"/2020/05/28/200528javai/"},{"title":"[ITWILL : WEB]&#96;&lt;pre&gt;&#96;태그, html특수문자입력, &#96;&lt;b&gt;태그&#96; 와 &#96;&lt;strong&gt;태그&#96;의 차이점","text":"ITWILL학원 : 1강 WEB(HTML, CSS) BY 김영희1강 HTML 기초WEB(HTML, CSS)을 담당하며 일주일에 1번 4시간 수업 HTML은 웹페이지를 만들어 주는 프로그래밍 언어이며 웹페이지의 구조를 담당한다enter나 space bar(2칸 이상)는 명령으로 해결한다. 1. tag는 원칙상 대소문자의 구별이 없으나 소문자로 입력한다2. !DOCTYPE html의 의미는 html5 문서임을 선언3. &lt;pre&gt;태그&lt;pre&gt;태그는 html문서안에서 &lt;p&gt;나 &lt;br&gt;를 쓰지않아도 html상의 Enter나 Tab, Space를 다 표현할 수 있기때문에 긴 문장등을 표현할때 굉장히 효율적으로 사용할 수 있다.더불어서 자동적으로 모든 문자의 width 간격을 일치시켜준다ex) i와 w의 크기가 같다 1234567만날 수 없어만나고 싶은데이런 슬픔처음인걸말할 수 없어말하고 싶은데속마음만 들키는 걸 위 내용을 html상에 적고 브라우저로 열어보면 1만날 수 없어만나고 싶은데이런 슬픔처음인걸말할 수 없어말하고 싶은데속마음만 들키는 걸 우리가 원하는 건 이게 아니다!&lt;p&gt;와&lt;br&gt;태그를 이용할 수 있으나 여간 귀찮은 일이아니다.이때 사용하는 것이 &lt;pre&gt;태그이다 123456789101112131415161718192021&lt;pre&gt;만날 수 없어만나고 싶은데이런 슬픔처음인걸말할 수 없어말하고 싶은데속마음만 들키는 걸&lt;/pre&gt;``` 위의 내용을 출력하면 아래와 같이 편~안하게 우리가 원하는대로 나타낼 수 있다```html만날 수 없어만나고 싶은데이런 슬픔처음인걸말할 수 없어말하고 싶은데속마음만 들키는 걸 4. 특수문자(기호태그)특수문자(기호)표현을 위한 특수문자 태그들. &amp;lt;는 &lt; 를 나타내고 &amp;gt;는 &gt; 를 나타낸다.위의 태그들을 사용하면 html이 자신의 태그로 인식하지않고 특수문자로 인식해서 그대로 표현해준다 12이것은 &lt;br&gt; 태그입니다이것은 &amp;lt;br&amp;gt; 태그입니다 각 두 줄의 코드를 동일한 값이 나오길 기대하며 브라우저 출력물해보자아래와 같이 표시된다 12이것은 태그입니다이것은 &lt;br&gt;태그입니다 띠용~ 그래서 이럴때 특수문자를 사용해준다 자주 사용하는 특수문자는 result 1번부터 5번까지는 기본으로 암기해야한다 1이것은 &amp;lt;br&amp;gt; 태그입니다 // 출력물은 아래와 같다 1이것은 &lt;br&gt;태그입니다 &amp;nbsp;는 space bar를 넣는 태그이고 자주 사용 하지만 css를 사용하면 굳이 사용할 필요없기도 한 모호한 녀석이다. &amp;#9977를 하면 운동하는 사람 아이콘이 나온다. 컬러풀하고 귀여운 symbols를 확인하고 사용할 수 있다 &amp;amp;는 &amp;를 나타낸다 1운동하는 사람 &amp;amp;#9977이 &amp;amp;#9748가 와서 운동을 그만하고 &amp;amp;#9749를 마셨다 출력값은 아래 이미지처럼 짜잔! 5. &lt;b&gt;태그 와 &lt;strong&gt;태그의 차이점 b태그 : 단순히 굵게 표시 strong태그 : 굵게와 중요한 내용이라는 표시가 내포되고있고 더불어 스크린 리더를 사용하는 경우, 음성으로도 강조해서 알려주니까 b태그보단 strong태그 이용할 것. 이와 동일하게 작용하는 것이 기울임태그이다 i태그는 단순히 기울이게 표시 em태그는 기울임과 강조하는 애용이라는 표시가 내포되어있고 더불어 스크린 리더를 이용할 경우, 음성으로 강조해서 알려준다. 참고링크 6. &lt;center&gt;태그는 더이상 사용하지않으며 대신 CSS로 text-align:center를 이용한다7 .&lt;hr&gt;태그는 구분선을 그어준다","link":"/2020/05/29/200529webi/"},{"title":"[ITWILL : DB]DB기초이론, DBMS","text":"ITWILL학원 : 1강 Database BY 정지윤강사1강 DB 기초이론실습환경 운영체제는 Linux!윈도우os에서도 oracle이 잘되지만 Linux위에서 DB운영 리눅스궁금했는데 다루게된다니 신기하다! MySQL도 수업시간에 같이 배울 예정이며다양한 DBMS중 거진 비슷하기때문에 하나만이라도 제대로 해놓으면 다른 프로그램도 쉽게 다룰 수 있다. 1. 가상 PC환경설치현재 OS가 윈도우이기때문에 가상PC환경에서 리눅스를 이용하려고 한다.가상머신을 운영할수있게 도와주는 프로그램이있다 : virtual box, ubuntu 등등 virtual box 다운로드 아래 사진처럼 파일 &gt; 환경설정 &gt; 입력 &gt; 가상머신 &gt; 호스트키조합을 설정해준다.이는 가상PC에 마우스가 들어가면 빠져나올 수 있는 세팅이라 꼭 필요하다!이걸 세팅안하고 가상환경시작하면 가상환경 나올땐 컴터 강제종료밖에……… 2. DBMS : Database Management SystemOracle은 엄연히 말하면 DB가 아니라 DBMS이다. 즉 DBMS의 한 종류가 바로 Oracle이다ex) Oracle, MySQL, Tibero(티베로)시중에 나와있는 DBMS는 대부분 관계형 DBMS이다 줄여서 RDBMS.관계형DMBS란 클라이언트가 원하는 것을 요청할때 요청사항에 위치가 포함되는게 아니라 그냥 what을 요청한다 그 후 RDMBS는 어느 위치에 있는지 스스로 찾아 데이터를 가져온다 Q. 그렇다면 DBMS와 RDBMS 차이점이 무엇일까?DBMS안에 RDBMS가 속해있음DBMS와 달리 RDBMS는 정규화를 수행할 수 있어 데이터중복을 최소화한다참고링크1, 참고링크2 3. SQL : Structured Query LanguageDBMS와 소통하려면 어떻게 해야할까? 소통할 수 있는 언어를 사용해야한다.그러한 언어가 바로 SQL이다. 참고링크 4. 제약조건크게 5개정도가 있다. Primary key 제약조건 : 테이플의 각 행(row)을 고유하게 식별하는 열(column) 또는 열 집합 Foreign key 제약조건 : 다른 테이블의 기본 키를 참조하는 열 Not null 제약조건 : 주로 이름컬럼에 걸어놓으면 레지스터가 이루어지지않는다 즉 필수입력사항을 이 제약조건으로 걸수있다.","link":"/2020/05/29/200529dbi/"},{"title":"[패스트캠퍼스python] 파이썬 함수식","text":"파이썬 인강 : 파이썬 함수식함수식과 람다에 대해 자세히 알아보자.우리가 함수를 사용하는 이유는 반복적이고 중복되는 프로그램을 방지하기위해서다 1. 함수 정의 방법아래처럼 하면 끝! 12def 함수명(parameter): code작성하기 여기서 def는 define의 약자이다. 함수를 호출하는 방법은 함수명() 이고 만약 parameter가 있다면 함수명(parameter)로 호출하면 된다 1234567def hello(world): print(\"Hello, \", world)hello(\"Python!\")# 출력값은Hello, Python! 2. 함수 선언 위치함수를 선언할때는 선언 위치가 매우 중요하다파이썬은 항상 위에서부터 아래로 실행되기 때문이다위의 예제에서 아래 사진처럼 선언 위치를 바꾸면 터미널에 NameError 뜨는 것을 볼 수 있다hello라는 이름이 정의되어 있지 않다는 에러이다. 리턴이라는 예약어를 통해서 함수를 출력할수도있다아래 예제를 보자항상 형변환을 주의하자 123456789def hello_return(world): value = \"Hello, \" + str(world) return valuestr = hello_return(\"천사!\")print(str)# 출력값은Hello, 천사! 3. 다중리턴다중리턴을 사용하면 짜임새있는 함수를 만들 수 있다.java나 기타언어들은 return값이 하나인 게 원칙인데 파이썬은 다르다파이썬은 다중리턴을 허용한다 123456789101112def func_mul1(x): y1 = x * 2 y2 = x * 4 y3 = x * 6 return y1, y2, y3val1, val2, val3 = func_mul1(10)print(val1, val2, val3)# 출력값은20 40 60 파이썬의 매력적인 부분은 return값의 데이터 타입 변환이다.왜냐면 엄청 간단하고 쉽기때문에위의 예제에서 return의 데이터형태는 int(정수)이다.만약 데이터형태를 int가 아닌 다른 형태로 나타내고 싶다면 어떻게 하면 될까? 만약 데이터형태를 리스트로 받고싶다면 return[y1, y2, y3]를 적어주면 끝!만약 튜플로 받고싶다면 return(y1,y2, y3)로 하면 끝!만약 딕셔너리로 return받고싶다면? 12345678910111213def func_mul3(x): y1 = x * 2 y2 = x * 4 y3 = x * 6 return {'ret1': y1, 'ret2': y2, 'ret3': y3}dic = func_mul3(8)print(type(dic), dic, dic.get('ret3'), dic.items(), dic.keys(), dic.values())# 출력값은&lt;class 'dict'&gt; {'ret1': 16, 'ret2': 32, 'ret3': 48} 48 dict_items([('ret1', 16), ('ret2', 32), ('ret3', 48)]) dict_keys(['ret1', 'ret2', 'ret3']) dict_values([16, 32, 48]) 정말 저세상 간단함!정말 매력적인 언어다! 4. *args, **kwargs 이해 *args (아스타)arguments의 약자로 가변인자(인자의 갯수가 변할 수 있음)를 뜻한다다양한 매개변수를 받아서 함수의 흐름이 바뀌게한다매개변수를 하나를 넣든 세개를 넣든 튜플의 형태로 출력해준다기본적으로 *args라고 적지만 이 매개변수명은 자유롭게 변경 가능하다enumerate는 순회라는 의미로 index를 넣어서 나타낼 수 있다. 꼭 알아두자 123456789101112131415def args_func(*args): # 매개변수명 자유롭게 변경 가능 for i, v in enumerate(args): print(v, i)args_func('비')args_func('비', '보')args_func('비', '보', 'TV')# 출력값은비 0비 0보 1비 0보 1TV 2 만약 출력값을 여러줄 나오는게 싫다! 한 줄로 나타내고 싶다면?print(v, i)를 print(‘{}’.format(i), v, end=’ ‘)로 바꿔주면 된다 12# 출력값은0 비 0 비 1 보 0 비 1 보 2 tv 만약 *args와 range()를 같이 사용하면 어떻게 될까? 123456789def args_range(*args): for i, v in enumerate(range(3)): print(i,v)args_range()# 출력값은0 01 12 2 kwargsargs와 똑같은 가변인자이나 딕셔너리로 받는다는 차이점이 있다.별표가 하나일때는 튜플로 받는데 별표가 두개인경우 딕셔너리로 받는다.위의 args와 마찬가지로 매개변수명은 자유롭게 변경 가능하다 1234567def kwargs_func(**kwargs): # 매개변수명 자유롭게 변경 가능 print(kwargs)kwargs_func(name1='가')kwargs_func(name1='가', name2='나')# 출력값은{'name1': '가'}{'name1': '가', 'name2': '나'} 딕셔너리형태말고 한 줄에 주르륵 출력하고 싶으면print(kwargs)를 print(‘{}’.format(v), kwargs[v], end=’ ‘)로 바꿔주면 된다 12# 출력값은name1 가 name1 가 name2 나 *args와 *kwargs의 혼합효율적인 코딩을 위해 필수이며 꼭 이해를 해야하는 부분이다 아래 터미널처럼 가변인자(args와 kwargs)는 없이 int 10과 20만을 넣어도 출력이 되는 것을 알 수 있다.가변인자는 값이 없기때문에 빈 튜플과 빈 딕셔너리가 출력된다. 1234567def example(arg_1, arg_2, *args, **kwargs): print(arg_1, arg_2, args, kwargs)example(10, 20, 'park', 'kim', age1=77, age2=80 )# 출력값은10 20 ('park', 'kim') {'age1': 77, 'age2': 80} 실습을 하면서 궁금했던 점은 어떻게 튜플과 딕셔너리를 나누는 지 궁금했는데 완전 초보적인 생각이었다딕셔너리형태인 address=뭐시기를 넣으면 자동적으로 **kwargs 로 출력된다.만약 딕셔너리 형태를 순서를 섞어 놓으면 1example(10, 20, address=\"Busan\", 30, 'park', age1=77, age2=80 ) 아래 이미지와 같이 SyntaxError가 발행한다. 전체적으로 쉽게 설명한 참고링크1 5. 중첩함수말그래도 함수안에 함수가 있는 것중첩함수를 잘해둬야 클로저를 잘 해결할 수 있다클로저를 나아가서 Python decorator도 중급자에서 필수적인 내용이니 꼭 이해하자 123456789101112def nested_func(num): def func_in_func(num): print('언제실행될까? ', num) print(\"함수 안에서\") func_in_func(num + 100)nested_func(1)# 출력값은함수 안에서언제실행될까? 101 혹시 함수안의 함수 func_in_func()를 실행시킬 수 있을까? 1func_in_func(1) 정답은 실행불가!아래 이미지처럼 Name Error가 발생한다","link":"/2020/05/30/200530python/"},{"title":"[패스트캠퍼스python] Hint과 클래스 기초","text":"파이썬 인강 : Hint과 클래스 기초1. Hint데이터타입을 명시적으로 알려주는 역할을 한다 위의 사진에서와 같이 x : int의 의미는 x는 int형만 와야한다는 의미이고-&gt; list: 는 리스트형태로 출력될 것이다라는 의미이다.패키지를 통해 해당 함수를 다른 파일로 빼놓을때 유용하게 사용할 수 있다. 123456789def tot_length1(word: str, num: int) -&gt; int: return len(word) * numprint('hint exam1 : ', tot_length1(\"HeavyTalker\", 10))print(len(\"HeavyTalker\"))# 출력값은hint exam1 : 11011 2. 람다식 예제람다식의 장점은 메모리 절약, 가독성 향상, 코드 간결해진다함수와 람다의 차이점은 함수는 객체 생성 -&gt; 리소스(메모리) 할당 람다는 즉시 실행 함수(Heap 초기화) -&gt; 메모리 초기화즉 함수도 객체이기때문에 메모리에 할당되는 반면에 람다는 즉시실행함수여서 메모리를 효율적으로 사용할 수 있다.람다식을 남발하는 경우에는 가독성이 떨어지므로 실무에서는 주로 익명함수를 사용할때 람다식을 쓴다. 일반적 함수 -&gt; 변수 할당 위의 이미지는 우리가 일반적인 함수를 변수에 할당하는 방법이다var_func이란 변수에 우리가 만든 def를 대입하면 터미널에서 볼수있듯이 메모리에 할당되어있고 type은 function이다. 123456789print()def mul_10(x: int) -&gt; int: return x * 10mul_func = mul_10print(mul_func(77))# 출력값은770 람다 함수 -&gt; 할당위의 일반함수식과 비교하면 123456print()lambda_mul_func = lambda x: x * 10print(lambda_mul_func(77))# 출력값은770 동일한 결과값이 출력되는 것을 확인할수있다.좀 더 나아가 활용할 수 있는 방법이 있다함수를 매개변수로 받는 방법이다위에서 만들었던 lambda_mul_func를 이용한 함수를 만들었다. 12345678print()def func_final(x, y, func): print(x * y * func(7))func_final(10, 10, lambda_mul_func)# 출력값은7000 만들어놓은 람다함수 사용하지않고 즉시 람다식을 넣어서 인자로 함수를 넘길 수 있다None은 더이상 출력할 값이 없어서 출력되는 것임. 12345print(func_final(10,10, lambda x : x * 10))# 출력값은7000None 3. 클래스선언 먼저 클래스를 사용해야 할 이유에 대해 알아보자방대한 어플리케이션이 운영하기 위해서는 클래스방식의 코딩을 해서 구조화를 시키고 결합을 느슨하게 해서 유지보수에 용이하게 한다. 클래스선언시 첫글자는 대문자여야한다.클래스는 속성과 매서드로 구분된다. 클래스(객체), 인스턴스 차이는 매우 중요하디 네임스페이스 : 객체를 인스턴스화 할 때 저장된 공간 클래스 변수 : 직접 사용 가능, 객체보다 먼저 생성 인스턴스 변수 : 객체마다 별도로 존재, 인스턴스 생성 후 사용 아래는 클래스를 인스턴스 변수로 사용한 예이다. 12345678910111213141516171819202122232425262728293031323334class UserInfo: def __init__(self, name): #초기화 self.name = name def print_info(self): print(\"Name: \" + self.name) def __del__(self): print(\"Instance removed!\")# 인스턴스변수 생성하기user1 = UserInfo(\"Kim\") user2 = UserInfo(\"Park\") print(id(user1))print(id(user2))user1.print_info()user2.print_info()# 클래스 네임스페이스 확인print('user1 : ', user1.__dict__) print('user2 : ', user2.__dict__)print(user1.name)# 출력값은26833662374242683366443184Name: KimName: Parkuser1 : {'name': 'Kim'} user2 : {'name': 'Park'}Kim","link":"/2020/05/31/200531python/"},{"title":"[ITWILL : DB]간단 리눅스명령어(복붙포함), Oracle 명령어, DB작동방법, 접속순서","text":"ITWILL학원 : 2강 Database BY 정지윤강사1. 리눅스 OS user root관리자권한 실행, 최상위유저, 자동으로 계정이 생성됨회사의 서버관리자가 보통 사용 OS유저서버관리자가 데이터베이스관리자나 개발자를 위해 만들어주는 계정보통 아래 두가지 정도의 최소한의 권한을 가짐 home/oracle 디렉토리 권한 u01/app/oracle 디렉토리 권한 계정을 나누지 않으면 개발자나 DB관리자가 서버시스템파일 수정이나 삭제 해버리면 모든 게 먹통된다.따라서 꼭 계정을 나눠서 사용해야한다. 리눅스계열의 샌토OS를 강의때 사용할 예정. 2. DB userDB를 처음 생성하면 관리자의 권한을 가지고 있는 두 개의 계정이 자동으로 생성됨왜 굳이 두개 계정이 생성될까?차이점을 확실히 알아야한다. 바로 권한에 차이가 있다 sys : sysdba 권한(= dba + DB + DB시작/종료), 가장 높은 권한. system : dba 권한 일반유저 : object 관리 권한(table, view, inex 등 관리) system이 새로운 유저를 만든 경우 dba 권한까지 줄 수 있다sys가 새로운 유저를 만들었을 경우 sysdba권한까지 줄수있을까? 2-1. NOPEsys라도 유저에게 줄 수 있는 최대 권한은 dba까지이다. 계정별 비밀번호는 default 값으로 180일간 사용가능하고 만료되기전에 비밀번호 바꿔줘야한다.바꿔주지 않을 경우 계정만료가 되어버린다. sys한테 얘기해서 임시pw설정해야한다 3. 리눅스 터미널 명령어 pwd : 현재 위치하고 있는 디렉토리를 알려주는 명령어 ls : 현재 디렉토리의 파일 목록을 출력하는 명령어 mkdir 만들_이름 : 만들_이름이란 폴더를 생성하는 명령어 명령어 –help : 궁금한 명령어 뒤에 –help 옵션을 주면 자세한 사용방법을 알려주는 명령어 cd : 홈그라운드 가는 명령어. 원래는 cd 뒤에 이동경로를 입력해야하는데 아무것도 입력하지 않을 경우 홈그라운드로 이동한다. 아래 명령어는 꼭 순서대로 실행해줄 것.DB를 켜고 끄는 중대한 DB관리작업은 SQL Developer에서 할 수 없다. lsnrctl start : 리스너를 작동시키는 명령어 sqlplus /nolog : sql+실행시키는 명령어 connect sys/oracle as sysdba : DB에 sys로 접속하는 명령어 startup : DB에 sys로 로그인한 후 DB실행하는 명령어 conn hr/hr : 유저 hr로 로그인 SQL Developer 클릭해서 실행 파일안의 내용을 보고 싶을때는 아래 2가지 명령어를 활용할수있다 cat 열고싶은_파일명 : 터미널내에서 열고싶은_파일의 내용이 출력된다 vi 열고싶은_파일명 : vi편집기 실행 -&gt; vi편집기 빠져나갈때는 :q! 리눅스 터미널에서 복붙은 ctrl+c 와 ctrl+v가 작동하질 않는다이를 대체해서 ctrl+insert와 Shift+insert를 사용하면된다 리눅스 터미널 명렁어 참고링크 오라클 명령어 참고링크 4. DB작동방법 리스너 실행DB를 적상적으로 작동시키려면 운영체제에 존재하는 리스너를 실행 후 DB를 실행한다. 순서 중요 : 리스너실행 후 DB실행 필수리스너없이 DB실행 가능하지만 작동오류가 난다. lsnrctl start(리스너컨트롤러의 약자) 명령어를 암기필수컴퓨터 부팅후에는 항상 리스너를 켜고 DB작업을 하자! SQL+실행SQL+를 설치 후 실행한 뒤 SQL언어로 DB와 소통할 수 있다운영체제별로 SQL+가 따로 있다. 윈도우용 SQL+ : 시작프로그램에서 클릭을 통해 실행 -&gt; 터미널 열림 리눅스용 SQL+ : 터미널창에서 명령어 입력으로 실행 그렇다면 명령어는? sql+입장 명령어 : sqlplus /nolog sql+퇴장 명령어 : exit (user도 함께 종료) 추후에는 에디터처럼 그래픽하게 사용할수있는 SQL DEVELOPER를 사용할 예정. DB에 sys로 접속후 DB 연결하기connect sys/비번 as sysdba 명령어로 접속하면 현재 DB가 꺼져있는 상태(idle)면 아래 코드처럼 show user -&gt; startup순으로 진행하면된다 1234567891011SQL&gt; connect sys/비번 as sysdbaConnected to an idle instanceSQL&gt; show userUSER is &quot;SYS&quot;SQL&gt; startupORACLE instance started(중략)Database mountedDatabase opened 만약 DB가 켜져있는 상태면 아래와 같이 나온다 12SQL&gt; connect sys/비번 as sysdbaConnected 이제 DB가 켜져있는 상태가 되었고 아래 명령어로 DB에 연결한다conn은 connect의 약자로 동일하게 사용가능한 명령어이다 12SQL&gt; conn sys/비번 as sysdbaConnected sys를 제외한 나머지 유저들은 아래와 같이 연결할 수 있다 12SQL&gt; conn 유저이름/비번Connected sys에서 다른 유저로 접속하면 이전의 유저접속은 자동적으로 끊긴다.어떤 유저로 접속한 지 궁금하면 show user명령어를 사용하면 된다 DB 끄는 명령어리스너가 켜진 후 DB를 켜야하는데 만약 리스너를 깜박하고 DB를 먼저 켠 경우 뒤늦게sys로 접속해서 DB를 끈 후 -&gt; 리스너를 켜고 -&gt; DB를 켜면 된다.그렇다면 DB를 끄는 명령어는 무엇일까?터미널창을 그냥 끄면 될까? 4-1. NOPE터미널창끈다고 DB가 꺼지는 건 아니다DB를 끄는 명령어는 크게 두가지이다. 1. shut abort 명령어 현재 처리중인 SQL statements를 모두 abort 시키고 rollback 안하고, users들 다 끊고, close &amp; dismount도 안한다. 즉, 그냥 꽝 닫는 것! 다음번 오라클 시작시에 인스턴스가 자동 복구된다.12345SQL&gt; shut abortORA-01031: insufficient privileges //이건 권한부족으로 shut은 sys유저에서 진행해야한다SQL&gt; shut abortOracle instance shut down 2. stop 명령어 아래 명령어 또한 DB와 리스너를 종료하는 명령어다12SQL&gt; stopDisconnected from Oracle Database 두 명령어의 차이점은 무엇일까? exit 명렁어와 shut abort, stop의 차이점이 명령어는 리스너나 DB를 끄는 명령어가 아니라 유저와 SQL+프로그램종료하는 언어다DB꺼지는거아님위의 명령어와 헷갈리지 말 것.12SQL&gt; exitDisconnected from Oracle Database","link":"/2020/06/02/200602dbi/"},{"title":"[ITWILL : DB]데이터베이스기초활용","text":"ITWILL학원 : 3강 Database BY 정지윤강사3강. 응용SW기초기술활용 : 데이터베이스 기초활용1. 데이터베이스 용어정리 (P63) 개체 = 엔티티(Entity) = 유무형의 객체테이블이라는 개체를 사용해서 DB에 데이터를 분류해서 저장해야한다.=&gt; 데이터베이스관리자의 역할이 아닌 개발자의 역할이다즉 데이터 모델링과정을 잘해야 좋은 개발자이다.데이터베이스관리자는 DB전체를 관리하는 사람이다 ex)백업 등 속성 = 애트리뷰트(attribute) = 컬럼 2. DB구조 위의 DB구성에서 추가적으로 아래 2가지가 있다. 데이터베이스 관리자(DBA) 하드웨어 물리적 구조 : 크게 중요하지 않음 논리적 구조 : 물리적구조보다 더 중요하다. 논리적 구졸르 알아야 데이터 저장구조를 알게되고 효율적으로, 그리고 성능좋게 DB를 사용할 수 있다 3. 데이터모델링현실 세계의 정보를 데이터베이스에 표현하는 중간 과정.데이터 모델링 과정:총 3단계로 구성되고 4단계라고 한다면 설계부분이 2가지 모델링(개념과 논리)로 나눠서 표현한 것이다. 1. 요구사항 수집 및 분석 2. 설계 - 개념모델링 - 논리모델링 3. 이터베이스 구현(물리모델링) ERD (ER 다이어그램) VS IE 표기법 둘 다 실무 데이터모델링에서 잘 사용하는 방법이다. IE표기법 쇼핑몰 예제","link":"/2020/06/05/200602dbi2/"},{"title":"[패스트캠퍼스python] 클래스의 self의 이해, 클래스, 인스턴스 변수","text":"파이썬 인강 : 클래스의 self의 이해, 클래스, 인스턴스 변수오늘은 꼭 알아야하면서도 엄청 중요한 개념이라고 할 수 있는 클래스의 self, 클래스, 인스턴스 변수에 대해 공부해보자 1. 클래스의 self의 이해self 매개변수의 유무에 따른 차이를 아래 예시를 통해 확인해보자 12345678910print()class SelfTest: #class SelfTest(): 빈괄호가 있어도되고 없어도 된다 def function1(): # self매개변수없음 = 클래스매서드 print(\"function1 called!\") def function2(self): # self매개변수있음 = 인스턴스매서드 print(id(self)) print(\"function2 called!\")self_Test = SelfTest() # 인스턴스 생성 이제 function1을 호출해보자 1234# self_Test.function1()# 출력값은TypeError: unction1() takes 0 positional arguments but 1 was given function1은 클래스매서드이기에 그냥 출력하면 타입에러가 발생한다아래와 같이 출력해야한다 1234SelfTest.function1()# 출력값은function1 called! 잘 출력되는 것을 확인할 수 있다self매개변수를 선언한 함수는 어떨까? 1234567self_Test.function2()SelfTest.function2()# 출력값은function2 called!TypeError: function2() missing 1 required positional argument: 'self'# 두번째 방법의 타입에러를 해결하려면 아래 이미지처럼 하면 된다 터미널을 확인해보면 id값이 일치하는 것을 확인할 수 있다. 2. 변수 , 인스턴스 변수클래스변수는 self가 없고 인스턴스변수는 self가 있어야한다클래스변수는 공용으로 쓸 수 있다 12345678910111213141516print()class Warehouse: # 클래스 변수 stock_num = 0 def __init__(self, name): # 인스턴스 변수 self.name = name Warehouse.stock_num += 1 def __del__(self): Warehouse.stock_num -= 1user1 = Warehouse('Kim')user2 = Warehouse('Park') 그리고 유저1과 유저2 그리고 웨어하우스의 네임스페이를 확인해보자 12345678print(user1.__dict__)print(user2.__dict__)print(Warehouse.__dict__) # 클래스 네임스페이스 , 클래스 변수를 공유한다.# 출력물{'name': 'Kim'}{'name': 'Park'}{'__module__': '__main__', 'stock_num': 2, '__init__': &lt;function Warehouse.__init__ at 0x000001ED3D0C79D0&gt;, '__del__': &lt;function Warehouse.__del__ at 0x000001ED3D0C7A60&gt;, '__dict__': &lt;attribute '__dict__' of 'Warehouse' objects&gt;, '__weakref__': &lt;attribute '__weakref__' of 'Warehouse' objects&gt;, '__doc__': None} 이를 통해 유저1과2에는 이름밖에 없고 웨어하우스에 stock_num이 있다는 것을 알수있다만약 유저안에서 stock_num을 찾는다면 어떻게 될까? 123456print(user1.stock_num) print(user2.stock_num)# 출력물22 만약 유저를 한명 더 추가한다면 아래와 같이 출력된다 네임스페이스안에 이름밖에 없었기때문에 stock_num을 못찾을것같지만 인스턴스는 자신의 네임스페이스에 없으면 클래스의 네임스페이스에서 찾아서 불러온다이러한 점을 이용하여 연봉인상율같은 계산등에 활용할 수 있다.","link":"/2020/06/01/200601python/"},{"title":"ITWILL : JS기초이론, Compile VS Interprete, 변수, js라이브러리,객체타입","text":"ITWILL학원 : 2강 JS기초이론 BY 정규태강사1. 자바스크립트JAVA와 이름은 비슷하지만 어떠한 연관성도 없는 언어이다.JS 특징 객체기반의 스크립트 프로그래밍 언어. C언어 기반의 문법 사용 넷스케이프에서 개발 HTML 문서 내부에 포함되어 있는 기능 웹 브라우저를 통해서 실헹 인터프리터를 사용해서 실행 : 컴파일러가 필요없고 위에서 아래로 순차적 실행 서버의 작업처리부담을 덜어준다(클라이언트에서 처리가 되기 때문에) JS소스코드는 오픈소스로 누구나 코드를 볼 수 있다.(보안측면상 100% 오픈은 아님) 다양한 JS라이브러리를 제공한다 2. 스크립트 프로그래밍 언어란?스크립트 언어 - 어플리케이션에 명령을 전달하기 위한 것. ex) sql, awk, 자바스크립트 등 3. 인터프리터언어와 컴파일러 언어란?Compile VS Interpreter둘 다 고급언어로 작성된 원시 프로그램(Source Program)을 목적 프로그램(Object Program)으로 번역하는 번역 프로그램이며, 프로그램 번역 방식에 따라 구분된다. 컴파일 목적프로그램을 생성 번역과정과 번역시간이 복잡하고 오래 걸리지만 한번 번역 후에는 다시 번역하지 않아도되므로 실행속도 빠름 대표적 JAVA, C언어 예시: 소스코드(.java) -&gt; 자바 컴파일 -&gt; 바이트코드(.class) -&gt; JVM 의 JIT 컴파일러 -&gt; 머신코드 -&gt; 실행 인터프리터 목적프로그램을 생성하지않고 위에서 아래로 순차적으로 실행(웹 브라우저에 포함되어있음) 번역속도는 빠르지만 프로그램 실행시 매번 번역해야해서 실행속도가 느리다 대표적 php, PYTHON 예시 : 소스코드(스크립트) -&gt; 인터프리터 -&gt; 실행 참고링크1 참고링크2 4. JS라이브러리란?라이브러리란 특수한 기능을 모아놓은 것을 말한다ex) jQuery, Ajax, JSON 5. 왜 JS를 쓸까?자바는 서버에서 사용되는 언어이다. 서버에서 처리를 한 후 돌려줘야 한다.반면 JS는 서버가 아닌 클라이언트에서 처리된다. 그래서 서버의 부담이 줄어든다 그렇다면 전부 JS로 하면 안될까?? 하지만 JS에 한계가 있기 때문에 서버의 언어와 클라이언트의 언어를 같이 사용하게 된 것이다. 6. JS 사용시 주의점 항상 대/소문자 구문해서 사용한다.아래 코드는 같은 의미를 가지고 있는 것 같지만 출력값은 다르게 출력된다 12new Date();New DATE(); 실행문을 끝낼때 항상 ;을 사용한다.세미콜론이 없이 실행가능할 수 있지만 실행중에 문제가 발생할 수도 있기에 붙이는 것을 권장한다 사용자(개발자)의 편의성을 위해 한 줄에 하나의 문장을 작성한다. 큰 따옴표와 작은 따음펴 사용에 주의한다 자바의 경우, &quot;&quot;는 String만 가능, ''는 char만 가능 js의 경우, 구분없이 다 사용가능하고 항상 짝으로 사용하면 된다.12// ex)document.write('안녕하세요 |'js|'입니다') 마우스를 사용할 수 없는 환경에 대한 고려를 해야한다.(키보드 접근성 준수) 7. 변수 변수란 무엇일까?하나의 공간에 하나의 데이터만 저장하는 공간(메모리)이다 만약 하나의 공간에 다른 데이터를 추가적으로 넣게되다면?새로운 데이터가 들어올 시 기존 데이터에 덮어쓰여지게 된다. 저번시간에 꼭 기억해야하는 한 문장이 있다고 했다바로 모든 프로그램은 주기억장치에서만 실행된다! 변수의 종류는 크게 아래와 같다 문자형데이터(String) : 문자 또는 숫자를 (“”)(‘’)표현한 데이터. 만약 document.write(‘100’+200+300)이라면 출력값은 어떻게 될까? 100500이라고 답했다면 땡! 정답은 100200300이다. 숫자형(Number) : 변수에 숫자만 저장되는 데이터. 논리형(Boolean) Null : 비워진 데이터 값 변수를 사용하기 위해서는 아래와 같이 세 가지의 동작이 필요하다 변수를 선언 변수를 초기화 변수를 사용 다만 경우에 따라서는 1번 선언과 2번 초기화를 같이 진행할 수도 있다. - 변수 선언만 한 경우 : var 변수명; - 선언과 초기화 같이 하는 경우 : var 변수명 = 값; 8. 변수 선언 후 초기화를 안한다면?아래를 출력하면 언디파인드가 뜨는데 consol창에는 아무메세지도 나타나지않는다즉 에러가 아니다 123456let tmpdocument.write(tmp);//출력값은undefined 왜 이런 현상이 일어날까? 메모리가 할당된 tem안에 값이 없기때문에? 땡!tem안에 값이 있는지 없는지 모르기때문에! 이게 무슨 양자역학같은 소리냐면… 메모리는 유한하다. 8기가나 16기가 등등.컴퓨터는 여러 작업을 하면서 한정된 메모리안에서 데이터를 썼다가 지웠다가를 반복한다.재사용된 메모리위치에 아직 쓰레기값이 들어있을 수도 있다.내가 대입하지 않았더라도 어떤 쓰레기값이 들어가 있을수있기때문에 undefined가 나온 것이다.따라서 변수선언 후에는 항상 초기화를 해줘야된다. 9. 객체타입var타입은 객체타입이라고 한다. 모든 타입을 저장할 수 있다.비교하자면, java의 변수선언은 정수인 경우 int num = 1이라고 하지만 js는 데이터타입을 정의하지않고 변수를 선언할 수 있다.","link":"/2020/06/01/200601jspi/"},{"title":"[패스트캠퍼스python] 상속, 다중상속","text":"파이썬 인강 : 상속, 다중상속파이썬 클래스 상세 이해 : 상속, 다중상속상속은 모부한테서 물려받는 것을 뜻한다자식이 모부의 속성과 매서드를 사용할 수 있는 것이다 1. 상속 기본슈퍼클래스(Parent Class) 및 서브클래스(자식 Class) -&gt; 모든 속성, 메소드 사용 가능 12345678910111213141516171819class Car: \"\"\"Parent Class\"\"\" def __init__(self, tp, color): self.type = tp self.color = color def show(self): # print('Car Class \"Show\" Method!') return 'Car Class \"Show\" Method!'class BmwCar(Car): # 괄호안에 Parent클래스명을 넣어주면 상속이 됨 \"\"\"Sub Class\"\"\" def __init__(self, car_name, tp, color): super().__init__(tp, color) # super()가 바로 Parent class이다. 상속받아야할 tp와 color를 가져와야한다 self.car_name = car_name def show_model(self) -&gt; None: return 'Your Car Name : %s' % self.car_name 2. 상속의 일반적인 사용아래처럼 인스턴스를 먼저 생성한 후 print해보자 12345678910111213141516model1 = BmwCar('520d', 'sedan', 'red')print(model1.color) # 컬러는 sub클래스에 없고 Super클래스에 있다print(model1.type) # Superprint(model1.car_name) # Subprint(model1.show()) # Super : Super클래스의 매서드도 사용가능print(model1.show_model()) # Subprint(model1.__dict__)# 출력값은redsedan520dCar Class \"Show\" Method!Your Car Name : 520d{'type': 'sedan', 'color': 'red', 'car_name': '520d'} Method Overriding다른 sub클래스를 만들어보자이번에는 sub클래스에 show()라는 매서드를 만들어서 super클래스의 show()매서드와 중복되면 뭐가 실행될지 확인해보자 12345678910111213class BenzCar(Car): \"\"\"Sub Class\"\"\" def __init__(self, car_name, tp, color): super().__init__(tp, color) self.car_name = car_name def show(self): super().show() # super클래스의 매서드도 같이 불러온다 return 'Car Info : %s %s %s' % (self.car_name, self.color,self.type) def show_model(self) -&gt; None: return 'Your Car Name : %s' % self.car_name sub클래스를 만들었으니 인스턴트 생성 후 print해보자 123456print()model2 = BenzCar(\"220d\", 'suv', 'black')print(model2.show())# 출력값은Car Info : 220d black suv 출력값에서도 알수있듯이 super클래스의 모든 것을 사용하는 것이 아니라 sub클래스 입맛에 맞게 기능을 개선하거나 추가 등이 가능하다.이렇게 코드를 재활용이 가능하다 Parent Method Call 12345model3 = BenzCar(\"350s\", 'sedan', 'silver')print(model3.show())# 출력값은Car Info : 350s silver sedan Inheritance Info상속정보를 리스트형태로 나타내주는 매서드이다상속정보 확인할때 자주 사용한다 123456print('Inheritance Info : ', BmwCar.mro())print('Inheritance Info : ', BenzCar.mro())# 출력값은Inheritance Info : [&lt;class '__main__.BmwCar'&gt;, &lt;class '__main__.Car'&gt;, &lt;class 'object'&gt;]Inheritance Info : [&lt;class '__main__.BenzCar'&gt;, &lt;class '__main__.Car'&gt;, &lt;class 'object'&gt;] 3. 다중 상속보통 두 번 정도 상속을 한다. 깊은 상속은 오히려 가독성이 떨어진다. 123456789101112131415161718192021print()class X(): passclass Y(): passclass Z(): passclass A(X, Y): #클래스A는 클래스X,Y를 상속받겠다 passclass B(Y, Z): passclass M(B, A, Z): # 위의 모든 클래스를 상속받음 passprint(M.mro())print(A.mro()) 출력값은 아래 이미지와 같다.M의 경우 모든 클래스에 접근이 가능한 것을 볼 수 있다","link":"/2020/06/02/200602python/"},{"title":"ITWILL : JAVA SE&#x2F;EE&#x2F;ME 차이점, JAVA EE 설정. Tomcat 설치및설정, 이클립스 단축키","text":"ITWILL학원 : 4강 JS기초 BY 정규태강사1. 삼항 조건 연산자기존 if문보다 데이터처리속도가 빠르다 1조건식? 실행문1(참):실행문2(거짓) 2. JAVA 종류 3가지자바 종류 3가지이다 SE 자바 스탠다드 에디션 : 순수 자바만 쓸수있는 목적 EE 엔터프라이즈 에디션 : 자바에 + 서블릿, JSP추가한 것 ME 마이크로 에디션 : 자바를 줄여놓은 형태 주로 스마트폰 OS에서 사용 jsp를 하기 위해서는 EE를 다운받아야한다. 3. JAVA EE 설정 이클립스 패키지 네온3 EE 다운로드 링크 위의 사이트에 접속하여서 아래 그림처럼 버전 확인 후 컴퓨터 비트에 맞게 다운로드하면된다 보통 컴퓨터는 64비트이므로 64비트로 다운로드하면 된다 다운로드 완료하였으면 이클립스를 연 뒤 아래의 이미지처럼 JAVA EE설정해준다. 한글 UTF-8 설정DefauLt(MS949)기본적으로 더 많은 한글을 지원해주기위해 utf-8로 지정해야한다window &gt; preferences 에서 아래 3곳을 찾아서 UTF-8로 설정을 해준다 General &gt; workspace web &gt; css web &gt; html JAVA 컴파일러 버전 확인현재까지 자바 1.13버전이 나왔지만 실무에선 1.8버전이하를 사용한다.무조건 최신버전을 사용하지 않을까 싶지만은 최신버전보다는 안저자바 1.6버전이후부터 다양한 기능들과 함께 안정화되어 있어서 1.6이나 1.8버전을 주로 사용한다.물론 최신버전이 다양한 기능들이 더 많다.예로 기가지니의 자바버전은 1.3버전이 깔려있다 위처럼 1.8버전으로 셋팅이 잘되어있는 지 체크할 것! 4. New project 생성먼저 아래 사진처럼New &gt; New project &gt; Dynamic Web Project 선택 후 next 두번 잠시 멈춰서 아래 사진처럼 Generate web.xml 체크 후에 finish finish후에 아래처럼 여러 파일들이 자동 생성되는데아래 사진처럼 Web conContent안에 파일을 생성하고 테스팅을 해보자 이제 테스트코드를 입력한 뒤 run(단축키 : ctrl+F11)을 해보자 현재 서버가 없어서 작동하지 않는다띠용! 서버이용을 위해 tomcat을 먼저 다운받아야한다tomcat을 다운받으면 현재 컴퓨터를 서버로 사용한다는 의미이다 5. Tomcat 설치 톰캣 여러버전 중 8버전을 쓰는 이유는 학원강사마음…?!?!? 아래의 사진처럼 접속한 뒤 32-bit/64-bit Windows Service installer를 설치한다 설치 완료 후 실행해주면 아래 이미지대로 설정한다 서버셧다운포트 : -1을 그대로 실행하면 에러발생 -&gt; 8003을 입력 HTTP/1.1커넥터포트 : 8080을 지우고 -&gt; 8088로 입력 포트란 입구와 출구가 하나로 된 곳으라고 생각하면 된다. 단어 그대로 항구다.8088포트로 정보요청하면 8088로 정보를 받아야 함 만약 HTTP커넥터포트를 8080으로 진행하면 오라클의 포트와 충돌하여 에러발생할 수 있다.5000이전의 포트에는 프로그램마다 고유한 포트번호가 있었으나 5000이후의 포트는 없어지고 있다하지만 오라클은 8080 포트를 사용한다 톰캣 다큐먼트 드디어 톰캣 다운로드 마지막페이지이다 둘 다 체크해제를 해주고 finish를 눌러준다 톰캣이 잘 설치되었는지 확인하기 위해 아래 사진의 주소에 접속한다 Tomcat8w 실행파일을 누르면 서비스 스테이터스를 stopped가 정상이다start를 누르면 서버가 실행할 수 있다. 보통 컴퓨터는 서버를 1개만 사용할수있다.우리는 톰캣을 이클립스와 연결해서 사용할 예정이다따라서 start해놨던 톰캣을 stop하고 이클립스에서 다시 톰캣을 서버를 연결하면된다. run on server를 설정한다 browse를 눌리고 Tomcat설치한 C드라이브로 가서 연결해주고 확인 눌러준다그리고 미리 다운로드했던 jdk를 아래 사진처럼 연결해준뒤 finish를 클릭한다 만약 jdk를 한가지버전만 다운로드했다면 defalut값을 써도 상관없지만 여러버전을 다운로드했다면 원하는 버전을 선택해 연결해주면 된다 위의 사진처럼 엑세스 허용이 2번뜨는데 둘다 허용누르면 된다 이클립스 내부브라우저에서 테스트 결과값이 출력된다내부브라우저는 한계가 있으므로 크롬과 이클립스를 연결해야한다아래 사진처럼 선택 후 그리고 아래 사진처럼 chrome을 체크해주면 끝! 앞으로 ctrl+F11 누르면 크롬 새창으로 연결되어 출력된다 서버에서 사용하는 localhost는 자신의 IP주소이다localhost 대신 자신의 고유IP주소 또는 로컬호스트(127.0.0.1)를 써도 동일하게 출력된다\\ 내 IP주소는 cmd에서 ipconfig 명령어를 통해 IP주소를 쉽게 확인할 수 있다 6. 이클립스 단축키 ctrl + shift + c : 자동 주석(한 번 더 누르면 해지까지도 가능) ctrl + shift + / : 자동 주석(해지불가능) ctrl + d : 코드라인 한 줄 삭제 ctrl + shift + F : 코드 정렬 (HTML코드에서는 이상하게 정렬될 수 있음) tab : 오른쪽으로 이동 shift + tab : 왼쪽으로 이동 ctrl + F11 : run 실행 ctrl + space : 자동완성 (js는 안됨) -&gt; 자동완성 기능 추가하면 됨 7. 제어문프로그램의 흐름을 제어하는 실행문 조건문 : if~else 선택문 : switch~case 반복문 : for, while","link":"/2020/06/03/200603jspi/"},{"title":"[패스트캠퍼스python] 모듈과 패키지","text":"파이썬 인강 : 모듈과 패키지우리가 알게 모르게 사용하고 있었던 모듈에 대해 배워보자 가장 중요한 점은 왜 패키지로 개발/배포/사용해야하는지 그 이유를 명확히 알아야 한다는 점이다. 모듈 : 파일 하나하나가 모듈. 독립적인 파일 패키지 : 모듈들을 파일형태로 관리하는 것을 패키지리고 한다 참고로 .. : 부모 디렉토리 이동 . : 현재 디렉토리 이동 아래 두가지 파일을 이용해서 모듈과 패키지에 대해 공부해보자fibonacci.py는 피보나치수열 만드는 파일이다. calculations.py는 아래와같은 세가지의 함수를 가지고 있다 1. 클래스를 가져와서 사용하는 방법클래스를 가져올 수 있다 일반적인 방법 1234567891011from pkg.fibonacci import Fibonacci #클래스명(fibonacci)Fibonacci.fib(10)print(\"ex1 : \", Fibonacci.fib2(20))print(\"ex1 : \", Fibonacci().title) #인스턴스화# 출력값은0 1 1 2 3 5 8 ex1 : [0, 1, 1, 2, 3, 5, 8, 13]ex1 : fibonacci 피보나치수열이 잘 출력되었음을 알수있다. *을 사용한 방법메모리를 많이 사용하기때문에 권장하지 않는 방법이지만 알아둬야한다 *는 모든 리소스를 다 가져오는 것을 뜻한다.터미널을 보면 피보나치 수열이 잘 나타남을 확인할 수 있다 as 사용하는 방법권장하는 방법으로 계속 class fullname을 사용하는 것보다 가독성이 높기때문이다.as는 Alias(엘리아스)의 약자로 별칭이란 뜻이다. 1234567891011from pkg.fibonacci import Fibonacci as fbfb.fib(50)print(\"ex3 : \", fb.fib2(60))print(\"ex3 : \", fb().title)# 출력값0 1 1 2 3 5 8 13 21 34ex3 : [0, 1, 1, 2, 3, 5, 8, 13, 21, 34, 55]ex3 : fibonacci 2. 함수를 가져와서 사용하는 방법 import + as 조합이번에는 클래스말고 함수를 가져와 사용해보자. 클래스를 가져왔던 것과 from + import + as 조합권장하는 방법으로 모듈의 많은 함수들 중에서 필요한 함수만 가져와서 쓸수있다어떠한 언어를 다루던 리소스를 낭비하지 않도록 명확히 코딩하는 것이 좋다 123456from pkg.calculations import div as dprint(\"ex5 : \", int(d(100,10)))# 출력값은ex5 : 10 3. builtins(빌트인)123import builtinsprint(dir(builtins)) 출력값이 너무 길어서 이미지파일로 준비했다 우리가 빌트인인지 모르고 사용했던 list함수, type함수등이 들어가 있는 것을 확인할 수 있다 4. __init__.py의 필요성용도 : 해당 디렉토리가 패키지임을 선언할 때 사용한다.Python 2.x대를 사용하고 있다면 __init__.py가 필수이다Python3.x : 파일이 없어도 패키지 인식하지만 3.x보다 하위 버전 호환 위해서 생성하는 것이 안전 5. 단위테스트독립적으로 만든 파일이 독립적으로 잘 실행되는지는 확인하기 위해서 아래 if name문을 써준다아래 형태로 쓰도록 딱 정해놓았다.만든함수()부분에 만들었던 함수들을 넣어 독립적으로 실행되는지 체크할 수 있다if문이기때문에 import으로 가져온 파일에서는 출력이 안된다 GOOD! 12345# 단위 실행(독립적으로 파일 실행)if __name__ == \"__main__\": print(\"This is\", dir()) 만든함수() 만든함수()","link":"/2020/06/03/200603python/"},{"title":"[ITWILL : JAVA]자바접근자 public과 private, 자바 데이터 형태, 모든 연산자들, A++과 ++A의 차이, (조건)? TRUE:FALSE","text":"ITWILL학원 : 2강 JAVA BY 윤미영강사1. 자바접근자 public와 private public Class A {} private Class A {} 참고링크 : 자바접근자 public과 private차이 private Class는 다른 프로젝트에서 불러오지 못하고 심지어 같은 프로세스안에서도 불러오지 못한다.이런 private를 왜 쓰는걸까? 실생활예를 들자면, 무인경비시스템의 문을 열고 닫는 시스템이 있다고 생각해보자.다른 곳에서 해당 프로그램을 불러와서 수정할 수 있다면 에러가 발생해 무인경비 오작동이 일어날지도 모른다따라서 중요한 파일들을 다른 곳에서 수정할 수 없도록 public이 아닌 private를 쓴다. 2. 자바 데이터 형태기본데이터형과 참조데이터형은 여러 다른점이있지만 메모리에서도 차이점이 있다기본데이터형은 실제값을 가지고 참조데이터형은 실제데이터의 주소값을 가진다. 기본 데이터형 기본데이터형의 메모리는 실제값을 가진다 정수형 int(32비트), long(64비트), short(16비트), byte(8비트 : -128 ~ 127까지 표현가능) 실수형 double(64비트), flote(32비트) : 10.1, 0.0f 12345678910111213141516//소수점을 편하게 나타낼수있다.double d1 = 3.14e-2; System.out.println(d1); //0.0314//10승을 편하게 나타낼 수 있다double d2 = 3.14e2; System.out.println(d1); //314.0//float와 double을 비교해보자float f1 = 0.123456789123456f;double d3 = 0.123456789123456;System.out.println(f1); //0.12345679System.out.println(d3; //0.123456789123456 문자형 char(16비트) : ‘’ char는 문자인데 컴퓨터가 아는건 이진법밖에 없는데 어떻게 이진법으로 나타낼까? 바로 유니코드의 문자를 변환해서 나타낸다. 원래는 아스키문자표 ex)a는 97, A는 65 아스키문자표는 영문만 해당되기때문에 영문이 아닌 다른 전세계 언어는 유니코드로 사용한다 참고링크1 : 아스키코드와 유니코드의 차이 참고링크2 : 한글유니코드1 참고링크3 : 한글유니코드2 1234567// char로 작은따옴표 하나를 나타내고싶다 -&gt; 역슬러시이용char c1 = ''' // 에러 Invalid character constantchar c2 = '\\'' // 'char c3 = '\\\\ // \\ 논리형 boolean형태(각각 8비트) true, false 참조 데이터형 = Class형 = 클래스형기본데이터형이 아닌 나머지 데이터형태를 다 참조데이터형, 또 다른 말로는 클래스형이라고 한다.참도데이터형의 메모리는 실제 데이터의 주소값을 가진다. 예시 문자열 String : “” Scanner 3. 데이터형변환형변환은 크게 두가지로 나눌 수 있다 자동형변환(암시적형변환) 따로 설정하지않아도 컴파일러가 자동으로 형을 변환해준다. 할당된 byte가 작은 데이터타입에서 큰 데이터타입으로 변경된다. 반대는 안될것같지만 되는 것들이 있음. ex) char형 -&gt; int형 (유니코드사용 자동형변환), double형 -&gt; int형(값이 손실되더라도 자동형변환) 명시적형변환 Casting 캐스트연산자를 이용해서 변환 ex) (double)int -&gt; double , (String)int -&gt; String 1234567int count = 128;byte b = (byte)count; System.out.println(b); // -128 count = 130;b = (byte)count; System.out.println(b); // -126 형변환을 했는데 128이 아닌 -128이 나오고 130이 아닌 -126이 출력되었다왜그럴까?명시적형변환의 경우 오류가 발생할 수 있기때문이다 4. 산술연산자 덧셈 뺄셈 나눗셈 곱셈 이 중에서 나눗셈에 주의해야한다. 왜냐하면 예외발생 또는 형변환에 걸릴 수 있기때문에 123456789101112// 1. 예외발생 ( arithmetic exception )System.out.println(3/0);//출력값 : Exception in thread \"main\" java.lang.ArithmeticException: / by zero// 2. 형변환문제int a = 100;int b = 200;int result = a/b System.out.println(result) //출력값 : 0System.out.println((double)result) //출력값 : 0.0 답은 0.5가 나와야하는데 int라는 정수형데이터때문에 0만 출력된다형변환을 한다고해도 이미 result가 0이기때문에 0을 double하니까 0.0이 된다 해결방법은 변수선언을 double로 해주면 끝! 1234567double result = a/(double)bSystem.out.println(result) //출력값 : 0.5double result = (double)a/bSystem.out.println(result) //출력값 : 0.5 5. 대입연산자 = += =+ *= /= 예를들어a+=b 의 의미는 a = a+ba/=b 의 의미는 a = a/b 6. 논리연산자 &amp; : and연산자 | : or연산자 ! : not연산자. 반대의 개념 ex)!false =&gt; true ex)!true =&gt; false ^ : nor연산자. 비트연산자 두개의 값이 같으면 false고 다르면 true. 주로 전자제품할때 사용하고 응용sw에서는 사용할일이 적다 ex) true ^ false =&gt; true ex) true ^ true =&gt; false 7. 증감연산자변수의 앞, 뒤에서 사용하며 값을 1증가 또는 1감소 ++A 또는 –A (전위연산) : 변수의 값을 사용할때 1증가 또는 1감소 실행 A++ 또는 A– (후위연산) : 변수의 값을 먼저 사용하고 나서 1증가 또는 1감소 실행 세미콜론의 위치때문에 1번과 2번의 값이 차이가 생겼다++A는 A의 값을 변화시키지 않고 콘솔을 찍었고A++은 A의 값을 1씩 더한 뒤(세미콜론찍고) 콘솔을 찍었다.즉 변수의 값을 변하시키는 건 A++후위연산이다. 8. 삼항연산자실무에선 잘 사용하지 않지만 정말 간단한 조건식이 필요할때 사용한다. 1조건? 값1:값2 풀어서 설명하자면 조건이 true이면 값1이 출력되고 false면 값2가 출력된다 123456789101112int a = 1int b = 2;int c = 4;//첫번째방법int max = a&gt;b? a:b;max = max&gt;c? max:c;System.out.println(max); //4//두번째방법double max2 = (a&gt;b&amp;a&gt;c)? a:(b&gt;c)? b:c ;System.out.println(max2) //4.0 두번째방법을 쓸 수는 있으나 가독성이 떨어지므로 첫번째방법을 쓰는 것을 추천한다","link":"/2020/06/03/200603javai/"},{"title":"ITWILL : JS를 문서에 나타내는 3가지방법, undefined VS null, 백의자리 Math.floor(), 복합대입연산자로table생성, A++과 ++A차이점, &#x3D;&#x3D;과&#x3D;&#x3D;&#x3D;차이점, 논리표","text":"ITWILL학원 : 3강 JS기초 BY 정규태강사1. 문서에 js를 나타내는 3가지 방법 document.write(); console.log(); alert(); 1234567891011121314let a = 100;// 1번 방법document.write(a);// 2번 방법console.log(a);// 3번 방법alert(a)// 출력값은셋 다 동일하게 100이 출력된다.표시되는 곳이 다를 뿐. 2. undefined VS null undefined : 변수에 아무런 값도 등록되어 있지 않은 경우 var value; null : 아무것도 없음을 표현하는 값 따라서 주로 변수를 초기화할때 사용함. var value = null; 객체를 생성하고 사용할 수 있게 하기 위해 null로 초기화한다 3. 변수명 작성 변수명은 영문자로 작성 (첫번째 글자에 $, _ 사용가능) 예약어는 변수명으로 사용할 수없다 ex) False, typeof 변수명은 가능하면 의미를 가지고 생성 대소문자 구분 필수 4. 산술 연산자예제문제를 푸는데 나는 두가지 방법이 떠올라서 두가지방법으로 풀어보았다 예제문제Math.floor를 사용하여 세자리 숫자를 연산하면 100의 단위로만 나타내세요input 456output 400 1234let num3 = 778; console.log('첫번째방법은 ' + (num3 - num3%100)); console.log('두번째방법은 ' + (Math.floor(num3*0.01))*100); 5. 대입 연산자변수에 데이터(값)을 저장하는 연산자ex) A = B ; 연산의 방향이 오른쪽에서 왼쪽이다 복합대입연산자는 산술연산자에 복합연산자를 함께 사용하는 것으로 그 예에는 +=, -=, *=, /=, %=가 있다ex) A += B; &lt;=&gt; A = A + B;ex) A -= B; &lt;=&gt; A = A - B;ex) A *= B; &lt;=&gt; A = A * B; 복합대입연산자를 활용해 테이플을 편하게 만들 수 있다 1234567891011121314let name = \"곽두팔\";let age = 77;let addr = '제주'; let tableTag;tableTag = '&lt;table border=\"1\"&gt;';tableTag += '&lt;tr&gt;';tableTag += '&lt;td&gt;'+name+'&lt;/td&gt;';tableTag += '&lt;td&gt;'+age+'&lt;/td&gt;';tableTag += '&lt;td&gt;'+addr+'&lt;/td&gt;';tableTag += '&lt;/tr&gt;';tableTag += '&lt;/table&gt;'; document.write(tableTag) 물론 HTML로 만드는 것이 훨씬 편하지만…ㅋㅋㅋ 6. 증감 연산자(단항연산자)변수의 앞, 뒤에서 사용하며 값을 1증가 또는 1감소 ++A 또는 –A (전위연산) : 변수의 값을 사용할때 1증가 또는 1감소 실행 A++ 또는 A– (후위연산) : 변수의 값을 먼저 사용하고 나서 1증가 또는 1감소 실행 12345678910111213141516171819202122let A = 100; //1차 비교++A;console.log(A); // 101A++;console.log(A); // 102//2차 비교console.log('++A : ' + (++A) + ' ' + A); // 101console.log(A); //101console.log('A++ : ' + (A++) + ' ' + A); // 101console.log(A); //102//3차 비교let temp = ++A;console.log(temp) // 103console.log(A) //103temp = A++console.log(temp) // 103console.log(A) // 104 세미콜론의 위치때문에 1번과 2번의 값이 차이가 생겼다++A는 A의 값을 변화시키지 않고 콘솔을 찍었고A++은 A의 값을 1씩 더한 뒤(세미콜론찍고) 콘솔을 찍었다.즉 변수의 값을 변하시키는 건 A++후위연산이다. 7. 비교연산자데이터를 비교하는 연산자.연산의 결과는 boolean 으로 나온다.&lt;, &gt;, &lt;=, &gt;=, ==, !=, ===, !== 12345678num1 = 10;num2 = '10';console.log(num1 === num2) // falseconsole.log(num1 == num2) // trueconsole.log(num1 !== num2) // trueconsole.log(num1 != num2) // false 왜 서로 값이 다르게 나올까? == : 데이터의 값만 서용해서 비교 === : 데이터의 값 + 데이터의 타입을 모두 비교 (높은 정확도) 참고로 위의 개념은 js에만 해당됨 8. 논리연산자총 3가지의 연산자가 있다 &amp;&amp; AND 두개 넣어서 AND연산자 || 버티컬바 두개 넣어서 OR연산 ! 느낌표 넣어서 NOT연산 논리연산자진리표를 꼭 기억해야한다.","link":"/2020/06/02/200602jspi/"},{"title":"[패스트캠퍼스python] 파일 읽기","text":"파이썬 인강 : 파일 읽기txt파일로 읽거나 쓸 줄 알아야 어플리케이션을 만들었을때 중요한 데이터(결과값)을 저장해놓을 수 있다 읽기 모드 r 쓰기 모드 w : 기존 파일 삭제 추가 모드 a : 파일 생성 또는 추가 상대 경로(‘../‘, ‘./‘) 절대 경로 확인(‘C:...’) 참고 링크 중요한 데이터.txt 파일을을 어떻게 읽을 수 있을까? 1. open()과 close() 방법파일을 열때는 open()을 사용하고 읽어올 것이기때문에 r을 쓰면 된다open()했으면 반드시 close 리소스 반환해줘야한다. 즉 close()로 꼭 문 닫아줘야한다.한 번 사용한 리소스를 꼭 닫아줘야한다. 12345f = open('./resource/중요데이터.txt', 'r')contents = f.read()print(contents)f.close() 2. with open()방법파이썬에서는 open()해놓고 close()는 하지않아도 되는 방법이 있다바로 with문! 12345with open('./resource/중요한데이터.txt', 'r') as f: c = f.read() print(iter(c)) #iterator함수로 변환하여 for문에서 사용가능 print(list(c)) #리스트형변환가능 print(c) read는 전체 내용 읽어준다 ex) read(10) : 10글자 읽기 3. with문과 for문 활용123with open('./resource/중요한데이터.txt', 'r') as f: for c in f: print(c) 출력값을 보면 한 줄씩(line단위) 출력해준다한줄씩 뛰어쓰기되어 나오는 것은 끝에 |n이 들어가있기때문이다제거해주려면 어떻게 하면 될까? 123with open('./resource/중요한데이터.txt', 'r') as f: for c in f: print(c.strip()) |n을 strip()으로 제거해주면 가독성 좋게 출력된다위의 출력이미지와 아래의 출력이미지를 보면 가독성이 좋아진 것을 알 수 있다 4. read VS readline VS readline(문자수) VS readlines read : 처음글자부터 끝까지 전체를 다 읽기. read()가 끝나고 나면 커서가 맨 마지막 글자에 있기때문에 한번 출력 후 read()를 또 출력하면 빈 내용이 출력된다 readline : 한 줄씩 읽기 readline(문자수) : 문자수 읽기 readlines : 전체 읽은 후 라인 단위 리스트 저장 응용한 예시를 함께보자아래 이미지파일과 같은 score.txt파일이 있고 안의 내용의 평균을 for line in으로 구해보자 1234567891011with open('./resource/score.txt', 'r') as f: score = [] for line in f: score.append(int(line)) print(score) print('Average : {:6.3f}'.format(sum(score) / len(score))) #{6자리고 소수셋째자리까지라는 의미}# 출력값[95, 78, 92, 89, 100, 66]Average : 86.7 5. 파일 쓰기 빌트인패키지인 random을 이용해서 파일을 써보자로또번호와 비슷하게 6개 랜덤번호를 출력하는 예제이다. 1234567from random import randint#랜덤파일로부터 randint함수를 가져와라는 뜻with open('test2.txt', 'w') as f: for cnt in range(6): # range(6)은 0~5까지임. f.write(str(randint(1, 50))) # 1부터50까지 f.write('\\n') writelines : 리스트 -&gt; 파일로 저장 123with open('test3.txt', 'w') as f: list = ['Kim\\n', 'Park\\n', 'Lee\\n'] f.writelines(list) print로 바로 저장하는 예제이다 123with open('./resource/test3.txt', 'w') as f: print('Test Contents!', file=f) print('Test Contents!!', file=f)","link":"/2020/06/04/200604python/"},{"title":"[ITWILL : WEB]HTML 목록 태그, 정의태그, 글자관련태그","text":"ITWILL학원 : 2강 WEB(HTML, CSS) BY 김영희1. 목록 태그 HTML 목록 종류 3가지 -&lt;ol&gt;태그 : Ordered List 순서 있는 목록-&lt;ul&gt;태그 : Unordered List 순서 없는 목록-&lt;li&gt;태그 : 정의 목록 목록을 &lt;ol&gt;태그로 만들든 &lt;ul&gt;태그만들든간에 &lt;li&gt;태그는 항목을 나타내므로 모든 곳에 필수로 들어가야한다 123456789101112&lt;ol&gt; &lt;li&gt;배&lt;/li&gt; &lt;li&gt;부&lt;/li&gt; &lt;li&gt;르&lt;/li&gt; &lt;li&gt;니&lt;/li&gt;&lt;/ol&gt;&lt;ul&gt; &lt;li&gt;잠&lt;/li&gt; &lt;li&gt;이&lt;/li&gt; &lt;li&gt;온&lt;/li&gt; &lt;li&gt;다&lt;/li&gt;&lt;/ul&gt; 목록태그 앞의 모양 바꾸기 ol태그 : 1/a/A/i/I ul태그 : disc/circle/square/non 2. 정의 태그&lt;dl&gt;태그는 &lt;dt&gt;태그 &lt;dd&gt;태그가 세트이다 &lt;dt&gt;태그 는 정의내리는 대상&lt;dd&gt;태그 는 정의 내용 사실 잘 사용하지 않는 태그지만 기억해두면 필요할때 요긴하게 쓸 수 있다. 1234567891011121314151617181920&lt;h2&gt; 자신을 4가지 관점으로 정의&lt;/h2&gt;&lt;dl&gt; &lt;dt&gt;E&lt;/dt&gt; &lt;dd&gt;외향적 : 에너지가 밖으로 흐르며 사람을 만나는 것을 좋아하고 사람을 만남으로써 에너지를 얻는다.&lt;br&gt; 반대성향으로는 I 내향적이 있다. &lt;/dd&gt; &lt;dt&gt;N&lt;/dt&gt; &lt;dd&gt;직관적 : 숲을 보려는 경향이 있고 아이디어나 육감에 의존하며 주의 초점은 미래와 가능성이다. 따라서 미래지향적으로 새로운 시도를 하는 것을 좋아하며 가능성과 의미를 추구하고 변화와 다양성을 좋아한다&lt;br&gt; 반대성향으로는 S 감각형이 있다. 이는 나무를 보려는 경향으로 실재의 경험, 오감에 주의초점이 있어 현실 수용과 관례를 따르는 결향이 있다. &lt;/dd&gt; &lt;dt&gt;F&lt;/dt&gt; &lt;dd&gt;감정형 : 주관적 판단에 의존하며 주된 관심주제는 사람, 관계이다&lt;br&gt; 반대성향은 T 사고형이있으며 객관적 판단에 의존하고 주된 관심주제는 사실과 진실이다. &lt;/dd&gt; &lt;dt&gt;J&lt;/dt&gt; &lt;dd&gt;판단형 : 정리정돈과 계획성이 있다 뚜렷한 기준과 자기의사가 있으며 신속한 결론을 내리고 분명한 목적의식이 있다.&lt;br&gt; 반대성향으로는 P 인식형이 있고 상황에 맞추는 개방성과 목적과 방향의 변화가 상대적으로 쉽다. &lt;/dd&gt;&lt;/dl&gt;&lt;/dl&gt; 3. 글자 관련 태그12345678small tag : &lt;small&gt;Make font size smaller &lt;/small&gt;sup tag : &lt;sup&gt;supppp 윗첨자&lt;/sup&gt;(ex)300m&lt;sup&gt;2&lt;/sup&gt;의 땅이 있었으면 좋겠다sub tag : &lt;sub&gt;subbbb 아래첨자&lt;/sub&gt;(ex)내가 아는 원소기호는 H&lt;sub&gt;2&lt;/sub&gt;Omark tag : &lt;mark&gt;형광펜효과&lt;/mark&gt;","link":"/2020/06/05/200605webi/"},{"title":"[패스트캠퍼스python] 예외처리","text":"파이썬 인강 : 예외처리완벽한 코딩은 없다. 여러 사람이 함께 작업한다한들 예외는 언제든지 나타날수있다만약 미세한 코딩으로인해 수백명이 결제하는 회사 시스템에 예외가 발생해버린다면 그 손해는 막심할 것이다. 1. 예외 종류 SyntaxError TypeError NameError IndexError ValueError KeyError.. 등등 요즘은 문법적으로 에러는 없지만 코드 실행(런타임) 프로세스에서 발생하는 예외 처리가 중요하다에디터에서 linter가 문법적인 에러를 잡아주기때문에 걱정없지만 런타임에서 발생하는 에러에 주의해야한다 항상 예외가 발생하지 않을 것으로 가정하고 먼저 코딩그 후 런타임 예외 발생 시 예외처리 권장(EAFP 코딩 스타일) 1. SyntaxError : 잘못된 문법문법적인 에러는 보통 linter가 잡아준다 12345print('test) # ' 누락if True # : 누락 passx =&gt; y # 작거나 같다는 &gt;=로 해야함 2. NameError : 참조 변수 없음123a = 10b = 15print(c) # 예외 발생 3. ZeroDivisionError : 0 나누기 에러모든 언어에 있는 에러이고 런타임에서 발생하는 에러이기에 중요하다 1print(10 / 0) 4. IndexError : 인덱스 범위 오버자주 발생하는 에러 123456789x = [10, 20, 30]print(x[1])print(x[3]) # 예외 발생print(x.pop())print(x.pop())print(x.pop())print(x.pop()) # 예외 발생print(x.pop(50)) # 예외 발생 5. KeyError주로 딕셔너리에서 나오는 에러이다 123dic = {'name': 'Kim', 'Age': 33, 'City': 'Seoul'}print(dic['hobby']) # 키가 존재하지 않으면 예외 이런 에러를 방지하기 위해 get매서드를 사용하면 좋다 1print(dic.get('hobby')) # 안전 6. AttributeError : 모듈, 클래스에 있는 잘못된 속성 사용시에 예외1234x = [1, 2, 3]print(x.append(4))print(x)print(x.add(10)) 출력값은 list는 add가 없기에 AttributeError발생한다 7. ValueError : 참조 값이 없을 때 예외1234t = (10, 100, 1000)print(t.index(100))print(t.index(7)) # 예외 발생 8. FileNotFoundError외부파일을 불러와서 처리할때 자주 발생 터미널에 보면 디렉토리 내에 찾을 수 없다고 나온다 9. TypeError : 자료형에 맞지 않는 연산을 수행 할 경우123456x = [1, 2]y = (1, 2)z = 'test'print(x + y) # 예외 발생(튜플과 리스트를 결합할수없다 -&gt; 그래서 형변환이 중요)print(sum([1,2,3],10,1)) # 예외 발생(자료형불일치) 2. 예외 처리 기본아래 예외 처리는 기본중의 기본이므로 꼭 알아둬야한다. 123456try 에러가 발생 할 가능성이 있는 코드 실행 except 에러명1: 에러가 발생하면 여기서 처리(여러 개 가능) except 에러명2: except 에러명3: else: try 블록의 에러가 없을 경우 실행 finally: 항상 실행 이를 활용한 예시 12345678try: z = 'Kim' # 'Cho' 예외 발생 x = name.index(z) print('{} Found it! {} in name'.format(z, x + 1))except: # 모든 에러를 처리(Exception) print('Not found it! - Occurred ValueError!')else: print('ok! else!')","link":"/2020/06/05/200605python/"},{"title":"ITWILL : 아이디와 비번입력, 새로고침location.reload(), 주석한번에 단축키, switch문 출력문 한줄리팩토링","text":"ITWILL학원 : 5강 JS기초 BY 정규태강사1.아이디와 비번체크location.reload()는 새로고침의 역할을 한다 아이디와 비번을 존재유무 동시에 체크 12345678910111213141516const id = \"itwill001\"const pw = \"it8030909\"let inputId = prompt(\"아이디를 입력하세요\", \"\")let inputPw = prompt(\"비밀번호를 입력하세요\", \"\")if(id === inputId){ if(pw === inputPw){ alert(inputId+\"님 환영합니다\") }else{ alert(\"비밀번호가 일치하지 않습니다\") location.reload(); }}else{ alert(\"존재하지 않는 회원입니다.\") location.reload();} 아이디 존재유무 먼저 체크후 비번 체크 12345678910111213141516const id = \"itwill001\"const pw = \"it8030909\"let inputId = prompt(\"아이디를 입력하세요\", \"\")if(id === inputId){ if(pw === inputPw){ alert(inputId+\"님 환영합니다\") let inputPw = prompt(\"비밀번호를 입력하세요\", \"\") }else{ alert(\"비밀번호가 일치하지 않습니다\") location.reload(); }}else{ alert(\"존재하지 않는 회원입니다.\") location.reload();} DB를 쓰면 알게되겠지만 2번방법은 아이디한번 비번한번 두번을 가져와야해서 비효율적이다1번을 사용하는 것을 권장한다 html내에서 id로 가져와서 로그인페이지 완성내가 궁금해져서 네이버처럼 로그인페이지를 만들어봤다 1234567891011121314151617181920212223242526272829&lt;img src=\"https://lh3.googleusercontent.com/proxy/kn4y-1fat85W8voylUnkZF1DBTCAwtNwaTwxKJZ-GYiWk83N6rAd2fKqIzdaPSSZKupHKxA-xyZttfXhyO6EQHKxEQ2NTEeByNqAEZaCdJScbyZcUB3nak6TlxWlKv_lRgwfZtY8gWCwjusDnUmRThBUCTYf7ElOwOvnnj772zC02yDGOB5uI-B4rkSeKZjcw0i6FpG3xsATsSvDIw4A28QN\" width=100%, height=100%&gt;&lt;input id=\"id\" type=\"text\" size=\"40px\" placeholder=\"아이디를 입력하세요\"&gt;&lt;p&gt;&lt;input id=\"pw\"type=\"text\" size=\"40px\" placeholder=\"비밀번호를 입력하세요\"&gt;&lt;p&gt;&lt;button id=\"login\"&gt; 로그인 &lt;/button&gt;&lt;p&gt;&lt;input type=\"checkbox\" checked&gt;항상 아이디 기억하기&lt;script type=\"text/javascript\"&gt;let id = document.querySelector('#id');let id = document.querySelector('#id');let loginbtn = document.querySelector('login')loginbtn.addEventListener('click', ()=&gt;{ console.log(id, pw) if( id === \"it\"){ if(pw === \"321\"){ alert(id1 + \"님, 반갑습니다\") }else{ alert(\"비밀번호가 일치하지 않습니다\") location.reload(); } }else{ alert(\"존재하지 않는 회원입니다.\") location.reload(); } }) querySelector로 input태그 ID와 PW를 가져오려고 했으나 “존재하지 않는 회원입니다”라는 에러만 겁나 났다 querySelector가 안되는 이유는 Jquery태그를 추가해야한다고했다 그래서 다른 방법인 getElementById()로 진행해봤다. getElementById(‘id’)만 가지고 왔는데도 전혀 입력값을 가져오지못했고 “존재하지 않는 회원입니다”라는 에러 getElementById(‘id’).value : 그래서 value를 끝에 추가했지만 그래도 가져오지 못했다왜지…. 알고보니 결국 스코프 문제였다 addEventListener안에 넣었더니 정상적으로 실행되었다 뿌듯! 12345678910111213141516171819202122232425262728&lt;img src=\"https://lh3.googleusercontent.com/proxy/kn4y-1fat85W8voylUnkZF1DBTCAwtNwaTwxKJZ-GYiWk83N6rAd2fKqIzdaPSSZKupHKxA-xyZttfXhyO6EQHKxEQ2NTEeByNqAEZaCdJScbyZcUB3nak6TlxWlKv_lRgwfZtY8gWCwjusDnUmRThBUCTYf7ElOwOvnnj772zC02yDGOB5uI-B4rkSeKZjcw0i6FpG3xsATsSvDIw4A28QN\" width=100%, height=100%&gt;&lt;input id=\"id\" type=\"text\" size=\"40px\" placeholder=\"아이디를 입력하세요\"&gt;&lt;p&gt;&lt;input id=\"pw\"type=\"text\" size=\"40px\" placeholder=\"비밀번호를 입력하세요\"&gt;&lt;p&gt;&lt;button id=\"login\"&gt; 로그인 &lt;/button&gt;&lt;p&gt;&lt;input type=\"checkbox\" checked&gt;항상 아이디 기억하기&lt;script type=\"text/javascript\"&gt;let loginbtn = document.getElementById('login')loginbtn.addEventListener('click', ()=&gt;{ let id = document.getElementById('id').value; let pw = document.getElementById('pw').value; console.log(id, pw) if( id === \"it\"){ if(pw === \"321\"){ alert(id1 + \"님, 반갑습니다\") }else{ alert(\"비밀번호가 일치하지 않습니다\") location.reload(); } }else{ alert(\"존재하지 않는 회원입니다.\") location.reload(); } }) 2. JS주석 한번에 단축키 ctrl + shift + / : 한번에 주석설정 ctrl + shift +\\ : 한번에 주석제거 3. switch문 출력문 한줄 리팩토링입력받은 정보를 가지고 학점을 나타내는 switch문을 만들어보자 1234567891011121314151617181920212223242526let score = prompt('점수를 입력하시면 학점이 계산됩니다')switch (Math.floor(score/10)){case 10 :case 9 : document.write(\"A학점\") break;case 8 : document.write(\"B학점\") break;case 7 : document.write(\"C학점\") break;case 6 : document.write(\"D학점\") break;case 5:case 4:case 3:case 2:case 1:case 0: document.write(\"F학점이라니\") break;default : document.write(\"0~100사이의 점수를 입력하세요\")} 자세히보면 반복되는 출력문이 보인다이걸 리팩토링해보자아주 간단하다! 변수만 만들어주면 된다! 123456789101112131415161718192021222324252627282930//switch case 출력문 한번쓰기document.write('&lt;hr&gt;')let score = prompt('점수를 입력하시면 학점이 계산됩니다')let grade = \"\"; //변수만들기switch (Math.floor(score/10)){case 10 :case 9 : grade =\"A\" break;case 8 : grade =\"B\" break;case 7 : grade =\"C\" break;case 6 : grade =\"D\" break;case 5:case 4:case 3:case 2:case 1:case 0: grade =\"F\" break;default : document.write(\"0~100사이의 점수를 입력하세요\")}document.write(grade + \"학점\")","link":"/2020/06/04/200604jspi/"},{"title":"[패스트캠퍼스python] 외부파일 CSV, 엑셀 읽기 및 쓰기","text":"파이썬 인강 : 외부파일 CSV, 엑셀 읽기 및 쓰기1. CSV 읽기, 쓰기 위의 예제를 차근차근 보자with open(작성한 파일을 저장할장소/저장할 파일명, ‘w’(작성한다는는 의미), newline=’’) as f: newline=’’이 의미는 이 부분이 없으면 한 줄씩 띄어쓰기로 for문을 순회하면서 데이터가 자동저장된다하지만 데이터 양이 많을수록 용량도 커지고 쓸데없이 불편할 수 있다.12345678910111,2,34,5,67,8,9,10,11,1213,14,1516,17,18 그래서 ‘’빈칸을 넣어서 띄어쓰기를 없애는 것이다newline=’’을 적용하면 아래와 같이 결과값이 출력된다 writerow()와 writerows()의 차이점 writerow()는 한줄씩 띄어쓰기하여 입력된다 -&gt; for문을 썼기에 순회하면서 전체 내용이 출력되었다. writerows() 한줄씩이 아닌 전체데이터가 입력된다.(for문 반복없이 한번에 입력) 한줄씩 순회하면서 입력 방법(writerow)와 한꺼번에 전체데이터를 입력하는 방법(writerows)은 각각의 장점이 있다예시로 회원가입목록에서 1950년생이하는 빼고 데이터를 출력하고싶을때 if조건문으로 필터링을 걸어줘서 writerow이 유용하게 쓰인다 2. 엑셀 쓰기 읽기엑셀을 처리하는 오픈소스 : openpyxl, xlsxwriter, xlrd, xlwt, xlutils여러가지 방법이 있지만 pandas를 가장 많이 사용한다그 이유는 pandas는 최다사용오픈소스인 openpyxl, 랭킹 1위인 xlrd를 내부적으로 만능으로 사용할 수 있기때문이다 pandas를 이용하기 위해서는 아래 3가지를 다운로드해줘야한다 1. pip install xlrd 2. pip install openpyxl 3. pip install pandas 파이썬 인강 : 데이터베이스 연동(SQLite)SQLite는 기본적으로 설치가 되어있다. 따라서 따로 설치할 필요없이 바로 import하면 된다 1. 테이블 생성 및 삽입import datetimeimport sqlite3 2. 삽입 날짜 생성많이 쓰니까 꼭 알기 12now = datetime.datetime.now()print('now', now) 보기 불편하니까 포맷을 만들면 익숙한 시간형식으로 나타낼수있다 12nowDatetime = now.strftime('%Y-%m-%d %H:%M:%S')print('nowDatetime', nowDatetime) 3. DB생성 &amp; Autocommit 그리고 커밋본인 DB 파일 경로로 설정해주면된다isolation_level=None 을 넣었을 경우 자동으로 커밋 반영(Auto Commit)해준다.설정하지 않았다면 수정 후 conn.commit() 명령어를 입력해야지만 반영된다 1conn = sqlite3.connect('본인DB파일경로/database.db', isolation_level=None) 4. Cursor연결12c = conn.cursor()print('Cursor Type : ', type(c)) 5. 테이블 생성데이블에서 쓰일 수 있는 Datatype에는 총 5가지가 있다 TEXT NUMERIC INTEGER REAL BLOB 123c.execute( \"CREATE TABLE IF NOT EXISTS users(id INTEGER PRIMARY KEY, username text, email text, phone text, website text, regdate text)\") #AUTOINCREMENT 6. 데이터 삽입삽입에는 크게 두가지 방식이 있다 첫번째방법? 를 넣는 이유는 위에서 만들었던 데이터(“nowDatetime,”)를 넣게되면 스트링형식으로 들어가기때문에 ?를 주고 뒤에 매개변수로 튜플형태로 입력한다 1c.execute(\"INSERT INTO users VALUES (1 ,'Kim','Kim@naver.com', '010-0000-0000', 'Kim.com', ?)\", (nowDatetime,)) 두번째 방법?의 갯수와 삽입할데이터의 갯수를 순서대로 일치시켜줘주면된다 1c.execute(\"INSERT INTO users(id, username, email, phone, website, regdate) VALUES (?, ?, ?, ?, ?, ?)\", (2, 'Park', 'Park@naver.com', '010-1111-1111', 'Park.com', nowDatetime)) 7. Many 삽입(튜플, 리스트형태를 삽입가능)가장 중요한 부분이다!Many는 이름 그대로 대용량 데이터를 삽입하는 방법으로 튜플이나 리스트형태를 삽입가능하다 1234567userList = ( (3, 'Lee', 'Lee@naver.com', '010-2222-2222', 'Lee.com', nowDatetime), (4, 'Cho', 'Cho@naver.com', '010-3333-3333', 'Cho.com', nowDatetime), (5, 'Yoo', 'Yoo@naver.com', '010-4444-4444', 'Yoo.com', nowDatetime))c.executemany(\"INSERT INTO users(id, username, email, phone, website, regdate) VALUES (?, ?, ?, ?, ?, ?)\", userList) 웹상에서 입력받은 데이터를 sqlite를 통해서 장고의 경우, orm을 통해서 대용량데이터를 입력할 수 있다 8.테이블 데이터 삭제지우는 명령어는 conn.execute(“delete from users”)지만 몇개의 행을 지웠는지까지 확인할 수 있는 아래 명령어를 쓰는 것이 더 좋다 1print(\"users db deleted : \", conn.execute(\"delete from users\").rowcount, \"rows\") 9. 롤백되돌리기를 뜻하며 커밋한 걸 되돌리는 것이다. 1conn.rollback() 10. 접속 해제DB를 다 사용했을때는 꼭 접속 해제 명령어를 입력해줘야한다. 1conn.close()","link":"/2020/06/06/200606python/"},{"title":"[ITWILL : DB]SQL 명령어","text":"ITWILL학원 : 3강 Database BY 정지윤강사1. SQL 명령어관계형 데이터베이스 작동을 위해 사용하는 표준언어이고 모든 프로그램 및 유저가 데이터베이스의 데이터를 엑세스학 위해 사용하는 일련의 명령문이다. SQL 대표적인 명령어DDL(Data Definition Language) = 데이터 정의어DML(Data Mainpulation Language) = 데이터 조작어DCL(Data Control Language) = 데이터 제어어 아래는 대표적인 SQL 명령어 2가지이다 SELECT : 데이터를 검색하는 명령어 DESCRIBE 테이블명 (약어 desc 테이블명) : 파일을 확인하고 not null 제약조건이 있는지 확인할 수 있는 명령어 sql 쿼리구문에서는 대소문자구분이 없다 오타수정하기마지막 쿼리작업은 버퍼에 남아있다이를 이용해 마지막 쿼리작업의 수정이 가능하다. 마지막이 아닌 쿼리는 수정작업 불가 ed(edit의 약자) i 클릭 -&gt; insert모드로 바뀌면서 오타등의 수정이 가능하다 (마우스안됨. 키보드만 가능) 버퍼안에서는 절대 ; (세미콜론) 입력하면 안됨 -&gt; 버터에 세미콜론찍고 나가면 오류 계속 발생함. esc -&gt; 편집모드 insert모드를 빠져나와서 읽기모드로 가면됨 :(콜론) + w + q : 을 찍고 나오면 버퍼에서 빠져나오게 됨 / + enter : 딱 나오게 된다 dept라는 테이블을 만드는 예시를 보자 create table dept : 그 뒤의 2~5번째줄은 테이블에 들어갈 데이터들이다 describe dept : 만든 테이블을 확인할 수 있는 명령어 ed : 가장 마지막 쿼리작업만 수정가능 버터 안 : 초기값은 읽기모드이므로 i 입력(쓰기모드) -&gt; 테이블 이름을 dept -&gt; dept5252로 변경 버퍼 안 : esc : 쓰기모드에서 읽기모드로 전환 :(콜론) + w + q : 버퍼종료 / + enter : 다시 sql 터미널로 돌아오게된다.","link":"/2020/06/05/200605dbi/"},{"title":"[패스트캠퍼스python] 데이터베이스 연동(SQLite)","text":"파이썬 인강 : 데이터베이스 연동(SQLite)1. 커서의 위치데이터베이스는 커서의 위치가 중요하다데이터를 불러오고 난 다음에 커서는 해당 데이터 뒤에 위치하기때문이다 12345678# 1개 로우 선택print('One -&gt; \\n', c.fetchone())# 지정 로우 선택 : size위의 숫자로 로우 갯수를 선택print('Three -&gt; \\n', c.fetchmany(size=3))# 전체 로우 선택print('All -&gt; \\n', c.fetchall()) 위의 명령어를 활용한 예시는 아래 이미지와 같다 터미널에서 볼 수 있듯이 1개 로우 명령어 뒤라서 커서는 1번 로우를 지난 2번로우 앞에 있다그리고 size=3인 로우를 출력하니 2,3,4번 로우가 터미널에 출력되었음을 알 수 있다 위의 상태에서 전체 로우 print(‘All -&gt; \\n’, c.fetchall()) 명령어를 입력하면 어떻게 될까?커서는 지금 4번로우 뒤에 위치해있기때문에 마지막 로우인 5번 데이터만 출력된다 만약 위의 상태에서 print(‘All -&gt; \\n’, c.fetchall())를 한번 더 호출하면 어떻게 될까?커서의 위치는 마지막 로우인 5번 뒤에 있다. 따라서 호출해도 [] 빈리스트만 터미널에 출력된다. 그렇다면 처음 1번 로우를 호출하고 싶을때는 어떻게 할 수 있을까?바로 순회하면 된다 2. 순회순회에는 3가지방법이 있다. 순회 : 변수선언 후 for in 반복문 사용데이터조회 명령어 c.execute(‘SELECT * FROM users’) 뒤에 실행해야 출력된다 123rows = c.fetchall()for row in rows: print('retrieve1 &gt;', row) # 조회 없음 순회 : 변수선언 없이 for in 반복문 바로 사용데이터조회 명령어 c.execute(‘SELECT * FROM users’) 뒤에 실행해야 출력된다간편하기때문에 제일많이 사용된다 12for row in c.fetchall(): print('retrieve2 &gt;', row) # 조회 없음 순회execute(“SELECT * FROM users)는 users에 있는 전체 데이터를 조회하는 명령어이다 따라서 fetchall() 명령어와 동일한 결과값을 가진다.데이터조회 명령어 c.execute(‘SELECT * FROM users’) 까지 포함된 명령어로 데이터조회명령어가 따로 필요없다코드가 길어져서 가독성이 떨어지는 지는 단점이 있다.“ORDER BY id desc” 명령어를 넣어주면 역순출력이 된다 12for row in c.execute(\"SELECT * FROM users ORDER BY id desc\"): print('retrieve3 &gt; ', row) 순회1번과 순회2번은 함께 쓰일수없기때문에순회2번과 순회3번의 출력값을 아래 이미지와 같다 3. WHERE Retrieve6가지 방법이 있고 핵심이므로 꼭 다 알고 있어야한다. WHERE Retrieve1튜플형태로 3번로우인 Lee를 출력fetchone()에서 3번 로우 하나만 불러왔기때문에 그 다음 명령어로 fetchall()로 전체를 불러와도 [] 빈 리스트만 출력된다 1234param1 = (3,) c.execute('SELECT * FROM users WHERE id=?', param1)print('param1', c.fetchone())print('param1', c.fetchall()) WHERE Retrieve2튜플형태로 1번로우인 Kim을 출력%s :문자열형, %d:정수형, %f: 실수형fetchone()에서 1번 로우 하나만 불러왔기때문에 그 다음 명령어로 fetchall()로 전체를 불러와도 [] 빈 리스트만 출력된다 1234param2 = 1c.execute(\"SELECT * FROM users WHERE id='%s'\" % param2) print('param2', c.fetchone())print('param2', c.fetchall()) WHERE Retrieve3이번엔 딕셔너리형태로 1번 로우출력id= 뒤에 :Id를 넣어준뒤 컴마찍고 딕셔너리형태로 {“Id”: 1} 첫번째로우를 호출하면 된다 123c.execute(\"SELECT * FROM users WHERE id= :Id\", {\"Id\": 1})print('param3', c.fetchone())print('param3', c.fetchall()) WHERE Retrieve4리스트형태로 파라미터 2개를 받아서 1번로우와 4번로우 출력파라미터 여러가지를 가져오려면 IN(?,?)로 넣으면 된다이젠 한개가 아니니까 fetchone()은 쓸 수 없고 fetchall()로 출력하면 된다 123param4 = (1, 4)c.execute('SELECT * FROM users WHERE id IN(?,?)', param4)print('param4', c.fetchall()) WHERE Retrieve5위와 똑같은 결과값이지만 다르게 표현할 수 있다 물음표대신 정수값($d)을 넣어주면 된다간단하기때문에 많이 사용한다 12c.execute(\"SELECT * FROM users WHERE id In('%d','%d')\" % (1, 4))print('param5', c.fetchall()) WHERE Retrieve6딕셔너리형태로 1번과 4번로우 출력OR 사용 12c.execute(\"SELECT * FROM users WHERE id= :id1 OR id= :id2\", {\"id1\": 1, \"id2\": 4})print('param6', c.fetchall()) 지금까지 id를 이용했지만 username, date등을 이용해서도 출력할수있다 4. Dump 출력데이터베이스 백업 시 중요하다아래 명령어를 실행하면 새로운 dump.sql이라는 파일이 형성되고 그 안에 작성한 데이터테이블이 백업된다.이를 활용하여 sql에 붙여넣으면 다른 컴퓨터나 환경에서도 데이터사용가능하다실무에서 흔히 ‘덤프떠와’ 라고 말한다. with문을 사용하면 자동으로 close()를 해줘서 편리하다 with open() as f: 를 실행했으므로 f.close()가 자동으로 되었고 with conn: 을 실행했으므로 conn.close()가 자동으로 되었다 12345with conn: with open('본인이 원하는 경로/dump.sql', 'w') as f: for line in conn.iterdump(): f.write('%s\\n' % line) print('Dump Print Complete.') 위의 코드를 실행시키면 출력값은 아래 이미지와 같다.","link":"/2020/06/07/200607python/"},{"title":"[ITWILL : JAVA]Method, 변수와 상수, 배열 Array, new키워드","text":"ITWILL학원 : 4강 JAVA BY 윤미영강사1. Method괄호가 있으면 다 메서드라고 부른다매서드는 항상 Class라는 주인이 있어야 한다. 다른 사람이 만들어 놓은 매서드를 사용할 수 있다. = 라이브러리라고 부른다 예시 main() : 메인매서드 println() : OutputStream이라는 라이브러리안에 정의되어있는 매서드 Scanner sc = new Scanner(System.in) sc.next(); InputStream 라이브러리에 정의되어 있는 next()매서드 2. 변수와 상수 변수변하는 값.값을 저장할 수 있는 메모리 위치.변수를 사용하기위해서는 항상 변수선언을 데이터타입과 함께 먼저 해줘야한다. 상수변하지 않는 하나의 값앞에 final이 붙는다 예시 PI : 3.141592… 사용법 : final double PI = 3.141592; 3. 배열 Array배열이란 쉽게말해 여러개의 변수를 한꺼번에 선언하는 것이다변수를 선언한다는 것은 메모리에 a변수가 생성이 된다는 의미이다.배열에서는 변수갯수를 선언할 수 있다 -&gt; int [] ar = new int[10]는 메모리에 10개의 정수 변수 생성된다는 의미이다 여기서 주의할 점은 ar1의 데이터타입은 int가 아님을 명심하자!int[]의미는 int를 관리한느 배열타입이지 int타입이 아니다.ar1의 데이터타입은 기본형에 포함되지않는 참조형의 데이터타입이다. 배열객체를 생성하기 위해서는 new키워드와 함께 어떤 데이터를 몇개나 저장할지에 대한 정보가 필요하다.그렇다면 new키워드란 무엇일까?아래 잘 설명한 블로그가 있어서 가져왔다.참고링크 : 자바 변수들의 메모리 구조,new 키워드 배열변수선언에는 두가지 방법이 있다 3-1. 첫번째 배열선언 방법배열생성과 배열갯수만 선언하는 방법이다int [] ar1 = new int[3]로 배열과 배열갯수를 한꺼번에 선언. 초기화는 안됨! 12345678910111213int [] ar1; //배열생성 : 메모리에 a변수 생성ar1 = new int[3]; //배열갯수선언. 메모리에 3개의 정수 변수 생성. 값을 넣어주지않기때문에 초기화는 아니다// 1번과 2번을 합쳐서 한줄로 많이 쓴다int [] ar1 = new int[3]; // 초기화하지 않은 배열은 기본적으로 0의 값을 가진다 ar1[0] = 0; ar1[1] = 0; ar1[2] = 0; for(int i=0; i&lt;ar1.length; i++){ System.out.print(ar1[i]);} //000 데이터형마다 기본값이 다르다기본데이터형이 아닌 참조데이터형인 경우 기본값이 다르다 기본데이터형의 기본값은 데이터형에 따라 다르다 int 는 0 double은 0 char는 ‘’(빈칸) 1234char [] chs = new char[2]; for (int i=0; i&lt;chs.length; i++){ System.out.println(chs[i]); } //00 - 유니코드 -&gt; ''''(빈칸2개) 참조데이터형의 기본값은 null (자바언어의 예약어이고 실제 값이 없다는 의미이다) string은 null String형 1234String [] str = new String[3];for (int i=0; i&lt;str.length; i++){ System.out.print(str[i]);} // nullnullnull 참조형기본적으로 같은 타입을 한 배열에 넣을 수 있다. 12345Person[] p = {new Person, new Person};SpiderMan[] sp = {new SpiderMan, new SpiderMan};AquaMan[] aq = {new AquaMan, new AquaMan}; 타입이 다른 참조형데이터를 하나의 배열에 넣을 순 없을까?다형성을 이용하면 가능하다.상속관계인 경우에만 타입이 다른 참조형데이터를 하나의 배열에 묶을 수 있다. 123456Person[] p = {new Person. new Person}Dobject d = new Dobject[3];d[0] = new Line();d[1] = new Circle();d[2] = new Reat(); 3-2. 두번째 배열선언 방법배열생성과 초기화를 한꺼번에 선언하는 방법이다 int [] ar2 = {10, 20, 30} 여기서는 new int[5]를 하지않아도 된다 왜냐면 위의 코드 자체에 변수갯수선언이 포함되어있다이 방법은 테스트용으로 주로 사용할뿐 실무는 new int[]형태로 사용한다 12345int [] ar2 = {10, 20, 30}; //배열생성과 초기화 한꺼번에!for(int j=0; j&lt;ar2.length; j++){ System.out.println(ar2[j]);} 위의 두 방법의 차이점일반적으로는 new int[]형태를 더 많이 쓰인다왜냐하면 보통 다른 파일이나 데이터베이스의 내용을 가져오기 때문에 변수갯수가 정해져있다.배열을 사용하려면 항상 크기를 미리 알아야한다.만약 배열의 크기를 모른다면 쓸 수 있는 가장 큰 수를 적어주면되지만 대신 메모리를 많이 잡아먹는다.그래서 사용하는 것이 Collection(컬렉션)이다 Collection 컬렉션 : 참조형데이터형태 배열과 같은 역할을 하지만 크기를 모를때 사용 정적 메모리 할당이 아닌 동적 메모리 할당이 되어서 필요한 만큼 공간을 계속 추가할수있다 컬렉션참고링크","link":"/2020/06/08/200608javai/"},{"title":"[ITWILL : DB]select as from where, order by, 동일유저 동시접속 가능, 트랜잭션 commit과 rollback","text":"ITWILL학원 : 5강 Database BY 정지윤강사1. SQL select as from where1234select 컬럼명, 컬럼명, 컬럼명from 컬럼이 있는 테이블명where 좌변 = 우변 (컬럼명) (리터럴값) 예를 들면 아래와 같다employees 테이블의 연봉 3000이하의 사원명을 출력하고싶다 123select last_name, salaryfrom employeeswhere salary &lt;= 3000; 또 as를 사용하면 원하는 컬럼명으로 임시적으로 바꾸어 출력이 가능하다아래 예시는 위의 예시에서 as how_much만 추가해준것이다 123select last_name, salary as how_muchfrom employeeswhere salary &lt;= 3000; 2. 동일유저 동시접속 가능회사마다 다르지만 개발자마다 각각 유저를 쓸수있고 한 유저를 다 같이 사용할 수 있다그 이유는 한 유저아이디를 가지고 동시접속이 가능하기때문이다 그렇다면 동시접속했는데 동일한 데이터를 동시에 commit을 날리면 그 데이터는 어떻게 되는가?같은 행에 대해서는 동시작업이 안된다. 커밋,업데이트, 딜리트를 날려도 아예 실행이 안된다.예시로 두사람이 employee_id =100을 접속했다. 그리고 한 사람이 데이터 수정후 커밋을 날려도 커밋이 아예 실행되지 않는다반면, 한사람은 employee_id =100을 그리고 다른 한사람은 employee_id =101을 접속했으면 각자 수정이 가능하다 아래 이미지처럼 1번이 먼저 데이터를 수정한 터미널창이다.2번은 동일 유저로 접속한 터미널창이다. 2번 터미널창에서는 데이터 중 department_id의 전체 데이터가 ####으로 나타나서 아예 읽기조차 되지않는다 3. 트랜잭션 commit과 rollbackDML 명령어 후에는 임시값으로 보여진다.이를 커밋하거나 롤백을 해서 임시값을 저장할지 안할지 결정해야한다. COMMIT은 임시저장값을 저장한다. COMMIT후에는 낙장불입, 다시 되돌릴수없다 ROLLBACK은 임시저장값을 이전의 원래 값으로 되돌아간다. 4. system 권한 부여 session : 데이터 베이스를 연결할 수 있는 권한 다른 권한을 다 주고 이 권한만 revoke한다면 결국 모든 데이터를 사용하지못하게된다. 시스템권한 링크","link":"/2020/06/10/200610dbi/"},{"title":"[패스트캠퍼스python] 테이블 데이터의 수정 및 삭제","text":"파이썬 인강 : 테이블 데이터의 수정 및 삭제 데이터베이스 다루기의 기본 명령어 CRUD를 알아야한다 C : Create R : Retrieve 조회 U : Update 수정 D : Delete 1. 데이터베이스 사용 기본 3가지 명령어데이터베이스를 사용할때 기본이 되는 3가지 명령어가 있다 12345678# 1. SQLITE 불러오기import sqlite3# 2. DB생성(파일)conn = sqlite3.connect('C:/Users/ratia/Documents/코딩/Fastcampus Python/Python/db/database.db')# 3. Cursor연결c = conn.cursor() 무엇을 하든지 위의 3가지는 기본으로 깔고 시작해야한다 2. 데이터 수정데이터 수정 명령어에는 크게 3가지가 있다다양한 방법으로 1번로우의 username을 kim에서 seo로 바꾸어보자 1234567891011# 1. 데이터 수정1c.execute(\"UPDATE users SET username = ? WHERE id = ?\", ('seo', 1))conn.commit()# 2. 데이터 수정2 : 딕셔너리형태로 수정c.execute(\"UPDATE users SET username = :name WHERE id = :id\", {\"name\": 'seo', 'id': 1})conn.commit()# 3. 데이터 수정3 : 스트링포맷로 수정c.execute(\"UPDATE users SET username = '%s' WHERE id = '%s'\" % ('seo', 1))conn.commit() 3. DB Browser for SQLite를 이용한 데이터 수정DB Browser for SQLite를 이용해서 손쉽게 데이터를 수정할수도있다아래 이미지에서 1번 로우의 username을 seo에서 so로 바꾸어보자 먼저 데이터보기탭에서 username을 더블클릭한 뒤 오른편 인풋창에 so로 바꿔준 후 적용을 클릭한다 까먹지말고 꼭 SQL실행탭에서 commit을 입력 후 run버튼을 누른다 아래 터미널에 질의가 성공적으로 실행되었다는 안내메세지가 나타나면 끝! 수정이 잘되었는지 확인을 위해 아래 명령어를 출력하면 수정이 잘되었음을 확인할 수 있다 1234567# 1. 수정한 로우만 확인c.execute(\"SELECT * FROM users WHERE id= :Id\", {\"Id\": 1})print('수정 잘 되었는 감?', c.fetchone())# 2. 수정한 로우포함 전체 데이터확인for user in c.execute('SELECT * FROM users'): print(user) 4. 데이터 삭제데이터 삭제에도 다양한 방법이 있다 한 줄 데이터삭제 방법먼저 한줄데이터를 삭제해보자다음 세가지는 2번째 줄 전체를 삭제하는 명령어이다 1234567891011# 1. Row Delete1 #튜플형식c.execute(\"DELETE FROM users WHERE id = ?\", (2,))conn.commit()# 2. Row Delete2 #딕셔너리형식c.execute(\"DELETE FROM users WHERE id = :id\", {'id': 2})conn.commit()# 3. Row Delete3 #스트링포맷c.execute(\"DELETE FROM users WHERE id = '%s'\" % 2)conn.commit() 테이블 전체 데이터 삭제이번에는 테이블 전체를 삭제해보자간단한 명령어지만 위험하니… 신중히 사용하자 ㅋㅋㅋㅋㅋ 1print(\"users db deleted : \", conn.execute(\"delete from users\").rowcount, \"rows\")","link":"/2020/06/08/200608python/"},{"title":"ITWILL : 반복문 for 순서 자세히, 개발자 도구로 디버깅, 기본 반복문암기, for문과 if문의 자리바꿈에 따른 변화, 반복문의 전위연산 VS 후위연산, do while문","text":"ITWILL학원 : 6강 JS기초 BY 정규태강사1. 반복문 : for반복문의 기본식은 아래와 같다 123for(초기식; 조건식; 증감식){ 반복문장} if나 for 문은 중괄호{} 없이도 반복이 된다. 하지만 세미콜론;전까지의 한줄만 반복한다 1. 반복문의 순서는 초기식 조건식 반복문장 증감식 조건식 반복문장 증감식 위의 3가지 반복 조건식 (조건이 충족된 경우) 반복문 종료 2. 개발자 도구를 이용하여 간단한 디버깅을 할 수 있다 Sources탭에서 디버깅원하는 소스코드파일을 클릭 후 디버깅원한느 코드의 줄번호 앞부분 클릭 -&gt; 빨간 점으로 표시됨 Block기준으로 변수의 값이 변화 확인 가능 4번에 보이는 회색점을 클릭하면 빨간색점으로 변경됨 -&gt; 점마다 break point가 걸려 순서를 세세하게 볼 수 있음 옅은 파란 블럭이 이동하면서 코드 실행순서를 가시적으롭 보여줌 디버깅이 끝났으면 꼭 줄번호 옆의 빨간색점을 체크해제해줘야 디버깅 모드가 중단된다 3. 기본 반복문암기기본적인 반복문은 암기해서 바로바로 쓰는 것이 좋다 몇씩 증감하는 반복문 1~10까지 짝수만 출력하는 반복문을 생각하자마자 나는 if조건이 들어간 for문을 생각했다 12345for(let i=0; i&lt;=10; i++){ if(i%2 !==0){ document.write(' '+i); }} // 1 3 5 7 9 강사님이 보더니만 결과값은 일치하지만 효율을 위해서 간단한건 조건문이 안들어간 반복문으로 나타내는 것이 좋다고했다. 음 그렇군! 오케이 접수! 123for(let i=1; i&lt;=10; i+=2){ document.write(' '+i)} // 1 3 5 7 9 for문안의 증감식을 변경하여 몇씩 증감한다고 하면 주로 위의 코드를 이용하면 된다! 누적합 정말 많이봐서 이제 익숙하다 12345let sum = 0for(let i=0; i&lt;=10; i++){ sum+=i} document.write(sum) //55 카운트 횟수를 셀 때 자주 사용한다 12345let count = 0;for(let i=1; i&lt;=10; i++){ count+=1;}document.write(count); //10 2. for문과 if문의 자리바꿈에 따른 변화사용자가 입력하는 숫자의 구구단을 출력하는 예시를 보자 12345678910let num = prompt('구구단 숫자를 입력하세요'); for(let i=1; i&lt;=9; i++){ if(num &gt; 0){ document.write(num + ' * '+ i +' = '+ (num*i)+ '&lt;br&gt;') }else{ alert('잘못입력했습니다 1~9까지 숫자중에 입력하세요') break; }} 위에서 num을 0이하로 입력했다면 alert창 띄우고 다시 숫자를 입력하도록 하게 하고싶었다. 근데 이 로직으로는 감이 잡히지않았다.고민하다가 if와 for문의 자리를 바꿨다.자리만 바꿨을 뿐인데 reload가 가능해서 굳이 새로고침하지않아도 다시 num을 입력할 수 있어 편하다 12345678910let num = prompt('구구단 숫자를 입력하세요'); if(num&gt;0){ for(let i=0; i&lt;=9; i++){ document.write(num + ' * '+ i +' = '+ (num*i)+ '&lt;br&gt;') }}else{ alert('잘못입력했습니다 1~9까지 숫자중에 입력하세요') location.reload();} 3. 반복문 : While반복문 while의 기본식은 아래와 같다 12345초기식;while(조건식){ 반복할문장; 증감식;} 증감식을 꼭 적어줘야 무한실행이 되지 않는다! 1. 전위연산 VS 후위연산전위연산과 후위연산은 잘 비교해야한다 전위연산1234let i=1;while(i++ &lt;=4){ document.write(i+\", \")} // 2, 3, 4, 5 i = 1 -&gt; 조건식 : 참 -&gt; i++ -&gt; write : 2 i = 2 -&gt; 조건식 : 참 -&gt; i++ -&gt; write : 3 i = 3 -&gt; 조건식 : 참 -&gt; i++ -&gt; write : 4 i = 4 -&gt; 조건식 : 참 -&gt; i++ -&gt; write : 5 i = 5 -&gt; 조건식 : 거짓 -&gt; 종료 후위연산1234let i=1;while(++i &lt;=4){ document.write(i+\", \")} // 2, 3, 4, i = 1 -&gt; ++1 라서 2 -&gt; 조건식 : 참 -&gt; write : 2 i = 2 -&gt; ++1 라서 3 -&gt; 조건식 : 참 -&gt; write : 3 i = 3 -&gt; ++1 라서 4 -&gt; 조건식 : 참 -&gt; write : 4 i = 4 -&gt; ++1 라서 5 -&gt; 조건식 : 거짓 -&gt; 종료 2. do-while()문조건 비교하기 전에 한 번 실행후 조건을 비교한다 기본형태이다 12345초기식;do{ 반복문장; 증감식;}while(조건식) 초기식과 증감식 없더라도 확인가능하다아래는 예시이다 123456let i = 1;do{ document.write(i+\" \"); i++;}while(i&lt;=10);// 1 2 3 4 5 6 7 8 9 10 3. 구구단 세로로 나타내기구구단을 가로가 아닌 세로로 나타내보자세로로 만들려면 일단 가로로 먼저 만들수있어야한다 구구단 가로출력123456for(let dan=2; dan&lt;=9; dan++){ document.write('&lt;br&gt;') for(let num=1; num&lt;=9; num++){ document.write(dan+'*'+num+'='+(dan*num)+' ') }} 가로출력의 첫번째 반복은 dan이 고정이고 num이 1부터 9까지 변화한다세로출력의 첫번째 반복은 num이 고정이고 dan이 2부터 9까지 변화한다 이 두 사실을 가지고 변수와 숫자를 적절히 바꾸어주면 된다 구구단 세로출력 for문과 이중for문으로 만든 코드이다 12345678910for(let i=2; i&lt;=9; i++){ document.write(' &lt;' + i +'단&gt; ')}for(let dan=1; dan&lt;=9; dan++){ document.write('&lt;br&gt;') for(let num=2; num&lt;=9; num++){ document.write(num+'*'+dan+'= '+(dan*num)+', ') }} 아래 이미지파일을 보면 왼쪽이 출력값이고 오른쪽이 소스코드이다 이중for문 하나로 만들 순 없을까? 당연히 만들수있다! if를 이용하면 된다! 1234567891011for(let num=0; num&lt;=9; num++){ for(let dan=2; dan&lt;=9; dan++){ if(num == 0){ document.write(' &lt;' + dan +'단&gt; ') }else{ document.write(dan+'*'+num+'= '+(dan*num)+', ') } } document.write('&lt;br&gt;') } 4. 반복문으로 테이블만들기테이블만드는 방법도 다양하다 테이블은 행x열(4x3)이고 각 칸안에는 1~12까지의 수를 넣은 테이블을 만들어보자 이중 for문 사용 12345678910111213let tageOpen=\"&lt;table border='1'&gt;\"let tageClose=\"&lt;/table&gt;\"document.write(tageOpen)let count = 0;for(let tr=1; tr&lt;=4; tr++){ document.write('&lt;tr&gt;') for(let td=1; td&lt;=3; td++){ document.write('&lt;td&gt;' + (count+=1) + \"&lt;/td&gt;\") } document.write('&lt;/tr&gt;')}document.write(tageClose) tag로 테이블만들기 12345678910111213let tageOpen=\"&lt;table border='1'&gt;\"let tageClose=\"&lt;/table&gt;\"let trtdtag;let count1 = 0; for (let i=1; i&lt;=4; i++){ trtdtag += \"&lt;tr&gt;\"; trtdtag += \"&lt;td&gt;\" + (count1+=1) + \"&lt;/td&gt;\"; trtdtag += \"&lt;td&gt;\" + (count1+=1) + \"&lt;/td&gt;\"; trtdtag += \"&lt;td&gt;\" + (count1+=1) + \"&lt;/td&gt;\"; trtdtag += \"&lt;/tr&gt;\" }document.write(tageOpen + trtdtag + tageClose ) 아래와 동일 테이블이 만들어진다. 1 2 3 4 5 6 7 8 9 10 11 12","link":"/2020/06/09/200609jspi/"},{"title":"[패스트캠퍼스python] Web 기초 (클라이언트 VS 서버, 웹프로그래밍, HTTP, 크롬 개발자도구)","text":"파이썬 인강 : Web 기초 (클라이언트 VS 서버, 웹프로그래밍, HTTP, 크롬 개발자도구)15회차까지는 파이썬 기초를 배웠다.이번에는 web기초를 후루룩 배워보자자주 접했지만 아직 암기까진 못한 웹기초!이번엔 기초를 탄탄히 쌓아서 다시 보는 일이 없었으면 좋겠다 ㅋㅋㅋㅋㅋ 1. 클라이언트 (client) VS 서버 (server)클라이언트와 서버, 이 둘은 절대적인 개념이 아니라 상대적인 개념이다.웹 브라우저가 설치된 컴퓨터에서 다른 컴퓨터에 요청을 하는 클라이언트이면서도 또다른 웹 브라우저에 요청을 받는 서버컴퓨터일 수 도 있다. 클라이언트 : 요청을 보내는 주체 크롬, 사파리, 엣지 파이어폭스 등과 같은 웹브라우저 데스크톱 앱 혹은 모바일 앱 다른 서버에 요청을 보내는 서버 개발자가 개발한 별도의 소프트웨어 등등등 서버 : 네트워크를 통해 클라이언트에 정보 혹은 제공하는 프로그램 또는 컴퓨터 웹 페이지, 웹 사이트, 앱 등을 저장한 컴퓨터 웹 서버 애플리케이션을 통해 만들어진 애플리케이션 등등등 이번 강의에서 배울 파이썬기반의 프레임워크인 Flask와 Django로 만들어진 어플리케이션이 서버역할을 수행할 수 도 있다.이처럼 요즘에는 웹 프레임워크를 이용하여 웹 서버를 개발한다. 2. 웹프로그래밍 (Web Programming)웹 프로그래밍이란 HTTP로 통신하는 클라이언트와 서버를 개발하는 것을 말한다. 클라이언트와 서버는 앞에서 배웠는데 HTTP 프로토콜은 무엇일까? 3. HTTP (HyperText Transfer Protocol)HTTP(HyperText Transfer Protocol)란 웹서버와 클라이언트 즉, 브라우저가 인터넷에서 서로 테이터를 주고 받기 위한 약속체계이다. 그럼 실질적으로 HTTP 요청과 HTTP 응답에 대해 자세히 알아보자 HTTP 요청 매서드 Method 실제 서버가 수행해야하는 동작들이다. get : 정보를 가져오기 post : 정보를 올리기 delete : 삭제하기 URL주소 헤더 Header 브라우저 정보 언어 등등 여러정보가 포함된다. 본문 body 있을 수도 있고 없을 수도 있다. 페이스북으로 예를 들자면, 아이디나 패스워드 입력창이나 새글내용등이 본문에 해당된다. HTTP 응답 상태코드 요청의 성공여부가 가장 먼저 표시된다. 예시 200은 성공했다는 의미이다. 404 Not Found …는 실패했다는 의미이다. 헤더 Header 본문 body HTML(Hypertext Markup Language)코드등의 파일 에러가 났다면 생략될 수 있다. 4. 크롬 개발자도구 (chrome developer tools) 위의 이미지에서 볼수있듯이 크롬 개발자도구로 많은 것들을 할 수 있다 Elements엘리먼트탭에서는 각 요소에 대해 알수있으며, 속성값을 다르게 입력하는 등 간단하게 일시수정도 가능하다.일시수정이라서 영영 저장되거나 보존되는 것이 아닌 그냥 임시적으로 수정가능하다. Console콘솔탭에서는 자바스크립트 (javascript)를 다룰 수 있다. Sources소스탭에서는 현재 웹페이지가 가지는 모든 소스코드들중 공개된 코드들을 마음껏 볼 수 있다. Network네트워크탭은 페이지를 로딩하는데 필요한 네트워크작업에 대한 결과를 시간순으로 표시해준다.이를 통해서 웹서버와 주고받는 실제 데이터 모습을 볼 수 있다. 위의 이미지 오른쪽 하단부분에 Method를 확인 할수있다. 위에서 배웠던 get과 post매서드를 확인할 수 있다. 위에서 status를 확인할 수 있다 200으로 성공이 되었음을 의미한다. type에서도 해당 웹사이트가 불러온 데이터의 타입이 gif 이미지파일인지, script파일인지 아니면 text/html파일인지 등등을 확인할 수 있다.","link":"/2020/06/09/200609python/"},{"title":"[ITWILL : JAVA]기본 반복문암기, String인지 체크(typeof), N개의 양수를 받아 최대값 출력, char와 String의 차이점 산술연산자","text":"ITWILL학원 : 5강 JAVA BY 윤미영강사1. 기본 반복문암기 1~10까지 나열하기 123for(int i=1; i&lt;=10; i++){ System.out.print(i);} //12345678910 누적합구하기 12345int sum = 0;for(int i=0; i&lt;=10; i++){ sum+=i} System.out.println(sum) //55 카운트세기자주 사용하는 카운트 세기 반복문 12345int count = 0;for(int i=1; i&lt;=10; i++){ count+=1;}System.out.println(count); //10 2. 자바에서의 String인지 체크(typeof)자바에서는 typeof는 없고 각 데이터별로 체크할 수 있는 방법이 있다 12345678910111213141516// 1. 사용자로부터 입력받아오자String [] str = new String[3];Scanner sc = new Scanner(System.in);for(int i=0; i&lt;str.length; i++){ str[i] = sc.next();}// 2. 사용자가 입력한 데이터가 string인지 체크String s = Arrays.toString(str);if( s instanceof String) { System.out.println('참');}else{ System.out.println(\"거짓\");} 3. N개의 양수를 받아 최대값 출력scanner로 사용자로부터 양수 n개를 받아 그 중 최대값을 화면에 출력해보자기본적으로 양수 n개를 받는 코드를 작성하면 아래와 같다 123456789101112131415Scanner sc = new Scanner(System.in);System.out.println(\"양수 5개를 입력하세요\");int [] num = new int[5];for(int i=0; i&lt;num.length; i++){ //1. 숫자 5개 입력받기 num[i] = sc.nextInt();}for(int i=0; i&lt;num.length; i++){ //2. 양수인지 체크(정수전체에서 max를 구하고싶다면 이부분을 없애면된다) if( num[i] &gt; 0){ System.out.print(num[i]+ \" \"); }else{ System.out.print(\"양수아님 \"); } }System.out.println(); 이제 두가지 방법으로 최대값을 구해보자 첫번째 방법 : 삼항연산자 사용 1234567int max = num[0];for( int i = 1; i &lt; num.length; i++) { //최대값구하기 max = num[i] &gt; max ? num[i] : max;} System.out.println(\"최대값은 : \"+ max); 두번재 방법 : if문 사용12345678910int max = num[0];for(int i=1; i&lt;num.length; i++){ if(max &gt; num[i]){ max = max; }else{ max = num[i]; }}System.out.println(\"최대값은 : \"+ max); 위의 코드를 자세히보자. 리팩토링할 부분이 보인다.max가 가장 큰 수 인 경우 굳이 동일값(max = max;)을 대입할 필요가 없다 123456789101112131415161718int max = num[0];for(int i=1; i&lt;num.length; i++){ if(max &lt; num[i]){ max = num[i]; }}System.out.println(\"최대값은 : \"+ max);// 위의 식을 간단하게 {} 중괄호를 생략할 수 있다// 중괄호생략은 블록안의 내용이 한줄일때 생략가능하다for(int i=1; i&lt;num.length; i++){ if(max &lt; num[i]) max = num[i];}System.out.println(\"최대값은 : \"+ max); 중괄호를 생략하니 세상 간단간단해보인다 4. char와 String의 차이점 산술연산자char는 연결연산자가 사용이 안된다.String이 어느 한 변수 이상에 있는 경우에는 연결연산자가 사용이 된다.캐릭터에서 연결연산자를 사용하고싶으면 변수들 사이에 “”를 입력해줘야한다. 123456char c1= 'a', c2= 'b';System.out.println(a + b); //195String c1= 'a', c2= 'b';System.out.println(a + b); //ab 만약 char를 ab로 나타내고 싶다면 변수들 사이에 “”해주면 된다 12char c1= 'a', c2= 'b';System.out.println(a +\"\"+ b); //ab","link":"/2020/06/10/200610javai/"},{"title":"[패스트캠퍼스python] Web 기초 (프론트엔드 VS 백엔드, Codepen, MDN, devdocs, 크롬검색꿀팁)","text":"파이썬 인강 : Web 기초 (프론트엔드 VS 백엔드, Codepen, MDN, devdocs, 크롬검색꿀팁)1. 프론트엔드 (Front‑end) VS 백엔드 (Back-end)가장 많이 들었던 프론트엔드와 백엔드 그 차이점은 무엇일까? 간단한 도식표로 쉽게 확인할 수 있다. 프론트엔드 (Front‑end)파란색영역으로 HTML, CSS, Javascript를 주로 다룬다.사용자와 웹브라우저사이에서 입력과 출력을 주로 담당하며 가독성이나 사용성을 높여 사용자가 편리하게 이용할 수 있도록 해야한다. 백엔드 (Back-end)주황색영역으로 웹브라우저요청에 웹서버와 데이터베이스를 통해서 응답해준다. OS(operating system 운영체제) : windows, linux, unix, mac, ios, android 등등 DB(DataBase 데이터베이스) : oracle, mysql, mongoDB, mssql 등등 Framework(프레임워크) : spring, flast/Django 등등 프로그래밍 언어 : java, php, python 등등 풀스택 (Full-stack)하지만 요즘은 점점 경계가 모호해지고 있는 추세이다.따라서 프론트엔드와 백엔드를 모두 포함하여 풀스택 (Full-stack)이라고 부르기도 한다. 실습을 하기 앞서 강사님이 여러 좋은 사이트를 알려주었다 2. Codepen 코드펜프론트엔드를 위해 굳이 에디터를 다운로드하지않아도 웹상에서도 쉽게 다룰 수 있다.바로 codepen에서 HTML과 CSS, Javascript가 가능하다.가입하지 않아도 바로 쓸 수 있는 장점이 있다. 원래 알고있던 사이트이다.다른 개발자들이 만들어 놓은 멋진 그리고 화려한 코드를 볼 수만 있는 줄 알았다.그런데 인강에서 코드 수정도 가능하다길래 직접 들어가보니 완전 신세계!!!코드를 수정할 수 있다는 것을 처음 알았다. 좋은 프론트엔드 공부자료가 될 것이다. Codepen Topics 특히 codepen에 topic에는 Vue나 React를 이용해서 만든 멋진 코드들도 볼 수 있다.보는 재미가 쏠쏠해서 시간가는 줄도 몰랐다.특히 슉슉 날아다니는 디자인을 보면 감탄밖에 나오지 않았다.정말 멋있다 사람들……나도 언젠가 그러한 코드를 공유할 수 있는 실력있는 개발자가 되고싶다. 3. MDN(the Mozilla Developer Network)개발자들의 교과서라고 불리는 MDN이다MDN은 FIREFOX를 운영하는 회사에서 만들었다고 한다.사이트에 접속해서 technologies를 클릭하면 다양한 언어들이 있다.이 중에 관심있는 언어를 클릭하고 궁금한 내용을 검색하면 쫘라락- 관련정보들이 엄청난 양으로 쏟아져나온다.차근차근 주워먹기만 하면 끝!물론 주워먹는 일이 힘들지만….. 4. Devdocs데브독스는 위의 MDN을 가독성있게, 즉 보기쉽고 빠르게 찾을 수 있다.UI가 MDN보다 훨씬 깔끔하고 쉬워서 깜짝 놀랬다.이렇게 좋은 사이트가 있었다니!!! 왜 다들 MDN만 추천해줬던 것인가…이젠 MDN보단 DEVDOCS를 더 잘 이용할 것같다. 데드독스의 또 한가지 장점은 원하는 언어만을 설정해서 검색할 수 있다는 점이다.데브독스의 검색창 옆에 점3개아이콘을 클릭하면 Preferences가 나온다여기에 수많은 언어들과 툴들이 있고 이 중 관심있는 것들만 틱해주고 저장해주면 앞으로 검색시에 내가 원하는 정보만 쏙쏙 쉽게 찾을 수 있다. 위의 이미지처럼 체크박스에 체크를 해주면 된다. 완전 꿀팁!!이렇게 수많은 언어들이 있다니 세상 놀람다. 5. Can I use _?Can I use는 사용하고자 하는 기술이 어떤 운영체제나 기반에서 제대로 작동하는 지를 알려주는 사이트이다.이 사이트가 중요한 이유는 프로그램을 만들고 배포하기 전에 상용이 가능한 지를 확인해야하기때문에 꼭 알아야한다.열심히 만든 프로그램이 제대로 작동 안하면 얼마나 속상할지… 절레절레 위의 예시처럼 sticky라는 기술은 구글에서 검색한 모습이다붉은 색이 많을수록 지원 안되는 곳이 많으니 대체가능한 기술이 있는지 체크해야한다. 처음 본 사이트인 줄 알고 즐겨찾기 추가 버튼을 눌렀는데…아니 이미 저장되어 있는 사이트였다.띠용?!?!?!?!?! 그말인 즉슨 좋은 사이트라서 즐겨찾기해놓고 한 번도 안 들어갔나보다…허허;; 6.크롬 검색 꿀팁덤으로 크롬검색꿀팁을 알게되었다 크롬에서 settings에 들어가서 search를 검색하여 Manage search engines을 클릭한다default값으로는 google을 해놓으면 되고 Other search engines에 위의 세 사이트를 추가한다 크롬 검색창에 추가한 키워드를 입력후 tab을 치면 해당사이트내에서 검색결과를 바로 확인할 수 있다. 와… 대박!","link":"/2020/06/10/200610python/"},{"title":"ITWILL : Object객체 전체개념, tv채널객체함수, new를 쓰고 안쓰고의 차이","text":"ITWILL학원 : 8강 JS기초 BY 정규태강사1.객체 Object 정의 자바스크립트는 객체기반의 언어객체는 기능, 속성을 포함하고 있는 것추상화된 객체를 사용할때 속성은 변수를 사용해서 표현하고 기능은 함수(매서드)를 사용해서 표현한다자바스트립트에서는 객체를 직접 만들어쓰지않고 만들어진 객체를 활용한다하지만 자바는 자주 직접 만들어서 사용한다 123let phone = new Object(); //여기서 phone은 참조변수phone.모델명 = \"아이폰\"phone.on(); //전원켜는 기능 실행 위의 phone을 참조변수라고 한다 객체종류 내장객체 자바스크립트엔진에 포함되어있는 객체 String : 문자를 처리하는 객체 Date : 날짜를 처리하는 객체 Array : 배열을 처리하는 객체 Math : 수학을 처리하는 객체 등등 브라우저 객체모델(BOM : Browser Object Model) 브라우저에 계층적으로 내장되어 있는 객체 즉 단계가 있는 객체 window screen location history navigator document 등등 문서 객체 모델(DOM : Document Object Model) HTML 테그의 문서구조 + CSS IE8이하의 버전에서 호환성이 떨어지기에 잘 안쓰게 된다 -&gt; 대신 jQuery문서객체모델을 사용 2. 내장객체1let 참조변수 = new 생성변수(); new : 객체(instance)를 생성하는 연산자이다 -&gt; 메모리에 올려서 사용할 수 있도록 준비 3. tv 채널up/down 함수만들기tv 채널 up과 down이 되는 함수를 만들어보자채널은 1부터 500까지 있다. 1234567891011121314function chUp(){ if(tv.ch &gt;= 1 &amp;&amp; tv.ch &lt; 500){ tv.ch ++; document.write(\"현재 채널 번호는 \" + tv.ch + \"번 입니다 &lt;br&gt;\") }else if(tv.ch == 500){ tv.ch = 1; document.write(\"현재 채널 번호는 \" + tv.ch + \"번 입니다 &lt;br&gt;\") }else{ tv.ch += 1; document.write(\"현재 채널 번호는 \" + tv.ch + \"번 입니다 &lt;br&gt;\") }}} 실행시마다 채널이 다운되는 함수는 아래와 같다 123456789101112function chDown(){ if(tv.ch == 0){ tv.ch = 500; document.write(\"현재 채널 번호는 \" + tv.ch + \"번 입니다 &lt;br&gt;\") }else if(tv.ch == 1){ tv.ch = 500 document.write(\"현재 채널 번호는 \" + tv.ch + \"번 입니다 &lt;br&gt;\") }else{ tv.ch -= 1; document.write(\"현재 채널 번호는 \" + tv.ch + \"번 입니다 &lt;br&gt;\") }} tv.ch가 499일때 두 함수를 호출해보면 1234567chUp() // 499 -up-&gt; 500chUp() //500 -up-&gt;501 -&gt;1chUp() //1 -up-&gt;2chDown() // 2 -down-&gt;1chDown() // 1 -down-&gt;500chDown() // 500 -down-&gt;499chDown() // 500 -down-&gt;499 4. new 를 쓰고 안쓰고의 차이new 연산자는 생성자함수이다.생성자란 객체를 생성할때 초기화하는 것이다. new를 쓰고 안쓰고의 차이가 뭘까? =&gt; 사용법의 차이가 있다(변수에 담아서 사용유무) 객체를 생성할때 new 연산(생성자함수)를 해야하는 객체 날짜객체 : Date() 변수를 생성해서 객체를 담아서 사용123let day = new Date(); //변수에 담아서 사용day.속성 //이렇게 사용해야함 new연산 없이 사용가능한 객체 수학 : Math 객체 =&gt; Math.floor(버림), Math.round(반올림), Math.ceil(올림), Math.max(여러값비교해서 최대값), Math.min(여러값비교해서 최소값), Math.abs(절대값), Math.random(0부터 1사이에 있는 실수를 랜덤하게 출력) 가장 자주 사용하는 것은 random이다 Math.floor(Math.random() *10)로 0부터 10까지의 랜덤양수를 출력한다 숫자 : Number 객체 문자 : String 객체 배열 : Array 객체 바로 사용가능 1Math.floor(); //변수에 담지않아도 바로 사용가능","link":"/2020/06/12/200612jspi/"},{"title":"ITWILL : 무한반복문, 보조제어(break와continue)문, 익명함수, 재귀함수, 지역변수를 전역에서 사용하는 방법, 내장함수","text":"ITWILL학원 : 7강 JS기초 BY 정규태강사1. 무한반복문반복문이 무한으로 실행되는 반복문.문제의 해결이 언제 끝날지 모르는 경우에 주로 사용. 예를 들어,사용자가 정답을 맞출때까지 실행하는 퀴즈프로그램을 만들었다고 생각해보자-&gt; 사용자가 언제 정답을 맞출수있을지 알수있을까?-&gt; 모른다. 따라서 계속해서 실행을 하고 있어야한다-&gt; 이때 무한반복문 사용-&gt; 답을 맞추면 끝나야하기때문에 보조제어문이 필요하다 실제예시 : 스마트폰의 지문인식 1234567891011for(;;){ console.log(\"무한반복\")};for(;true;){};for(let i=1;;i++){};while(true){};do {} while(true); 2. 보조제어문 break문 : 가장 가까운 반복문 하나를 탈출하는 코드다 즉 이중for문이면 둘 다 탈출하는 것이 아니라 가장 가까운 for문만 탈출하는 것이다 break;의 순서에 따라 결과값이 달라지므로 위치가 중요하다 예를 들어 : ~까지만 해라 123456789101112for(let i=1; i&lt;=10; i++){ document.write(i+\" \"); if(i%4 === 0) break;} //1 2 3 4// break문은 순서가 중요하다// 순서에 따라 값이 다르게 나오기 때문이다for(let i=1; i&lt;=10; i++){ if(i%4 === 0) break; document.write(i+\" \");} //1 2 3 아래는 for문의 조건식으 true인 무한반복문이다무한반복문과 함께 쓰이는 경우는 아래와 같다 1234for(let i=1;true;i++){ if(i === 10) break; document.write(i+\" \")} continue문 : 해당 경우를 실행하지않고 다음 경우를 실행하는 동작 continue조건은 빼고 반복문을 실행하는 동작. 예를 들어 : ~를 빼고 진행해라!할때 사용 123456789101112131415let sum=0,i=0while(i&lt;5){ i++ if(i==3) continue; sum=sum+i document.write(\"i값은 \" + i + \" sum값은 \" + sum + \"&lt;br&gt;\") }/* i값은 1 sum값은 1i값은 2 sum값은 3i값은 4 sum값은 7i값은 5 sum값은 12 */document.write(\"while문의 결과값 : \"+sum) // 12 위의 두가지를 활용한 숫자퀴즈를 만들어보자 특정숫자 미리 지정 (1부터 100까지 중에서) 사용자로부터 입력 -&gt; 미리 지정한 숫자와 큰지, 작은지 같은 지를 비교 큰 경우 -&gt; “입력된 값이 큽니다” 출력 같은경우 -&gt; “정답입니다 도전횟수는 땡땡입니다” 출력 작은 경우 -&gt; “입력된 값이 작습니다” 출력 1234567891011121314151617let quiz = Math.floor(Math.random()*100); //랜덤숫자만들기console.log(\"랜덤숫자 정답은? \"+ quiz)let input = prompt('텔레파시를 보냈습니다~ 숫자를 입력하세요');for(let count=1; true; count++){ if(quiz &gt; input){ input = prompt(\"텔레파시숫자보다 작습니다. 숫자를 다시 입력해주세요\"); }else if(quiz &lt; input){ input = prompt(\"텔레파시숫자보다 큽니다. 숫자를 다시 입력해주세요\"); }else if(quiz == input){ alert(\"정답은 \" + quiz + \", \" + count + \"회 시도만에 정답!\") document.write(\"정답은 \" + quiz + \", \" + count + \"회 시도만에 정답!\") break; }else{ input = prompt(\"잘못입력하였습니다. 숫자를 다시 입력해주세요\"); }} 강사님 코드는 아래와 같다굳이 input을 for문 밖에 두는 것이 아니라 안에 두기만 하면 되는 거였다괜히 일일히 input = prompt를 적었다… 띠용 123456789101112131415161718let quiz = Math.floor(Math.random()*100);console.log(\"랜덤숫자 정답은? \"+ quiz)for(let count=1; true; count++){ let input = prompt('텔레파시를 보냈습니다~ 숫자를 입력하세요'); if(quiz &gt; input){ alert(\"텔레파시숫자보다 작습니다. 숫자를 다시 입력해주세요. 시도횟수 \" + count +\"회\"); }else if(quiz &lt; input){ alert(\"텔레파시숫자보다 큽니다. 숫자를 다시 입력해주세요. 시도횟수 \" + count +\"회\"); }else if(quiz == input){ alert(\"정답은 \" + quiz + \", \" + count + \"회 시도만에 정답!\") document.write(\"정답은 \" + quiz + \", \" + count + \"회 시도만에 정답!\") break; }else{ alert(\"잘못입력하였습니다. 숫자를 다시 입력해주세요\"); }} 3. Function 함수 : 일반, 익명함수는 절차지향언어에서 사용되고 매서드는 객체지향언어에서 사용된다.엄밀히 따지면 다른 개념이지만 크게 보면 동일하게 사용되기도 한다.익명함수는 보통 변수에 넣어서 사용한다 변수 : 데이터를 저장해서 사용하는 곳 함수 : 실행문을 저장해서 사용하는 곳 일반함수일반적으로 함수는 아래와 같이 선언과 사용한다. 1234567//1. 일반함수 선언fuction 함수명(매개변수){ 실행코드}//2. 일반함수 호출함수명(); 익명함수익명함수의 선언과 사용은 아래와 같다.익명함수는 함수명이 없기때문에 변수이름으로 호출하면 된다.보통 익명함수는 1회성으로 주로 사용한다 1234567891011121314//1. 익명함수 선언 변수 = fuction (매개변수){ 실행코드}//2. 익명함수 호출변수명();//3.예시let fun1 = function (){ document.write(\"하이\")}fun1() //하이 4. 재귀함수재귀함수란 다시 자기자신을 호출하는 함수이다.재귀함수는 반복문없이 계속 반복된다 따라서 사용범위를 주의해서 사용해야한다재귀함수는 일정크기만큼만 실행되고 자동적으로 멈춘다. return을 이용해 함수를 탈출할수있다 12345678//1. 재귀함수 선언fuction 함수명(매개변수){ 실행코드; 함수명(); //자신의 이름 또 호출}//2. 재귀함수 호출함수명(); 재귀함수를 활용하여 1~10까지 숫자를 나타내는 함수예제를 보자 1234567891011let num=0;function testFun(){ if(num &lt; 10){ num++; document.write(num + \" \") testFun(); }else{ return; }}// 1 2 3 4 5 6 7 8 9 10 강사님은 더 짧은 코드를 썼다나는 왜 이 코드를 못했을까? 뭔가 더 간단해보인다.무슨 코드가 더 좋은 코드일까? 가독성이 좋지만 긴 코드 vs 가독성이 조금 떨어지지만 짧은 코드 아직 잘 모르겠다. 아마 회사 분위기에 따라 다르지 않을까? 12345678910let num1 = 0;function testFun2(){ num1++; document.write(num1 + \" \") if(num1 === 10){ return; } testFun2();}// 1 2 3 4 5 6 7 8 9 10 5. 지역변수를 전역범위에서 쓰는 방법지역변수를 전역변수처럼 쓸 수 있을까?정답은 예스!return을 이용한 예시를 보자 123456789let number = 200;function fun() { var number = 300; return number;}number = fun();document.write(number) //300 number의 값은 200이 아니라 300이 나온다.지역변수를 함수로 만들고 그 값을 전역변수 안에 넣었기 때문이다. 6. 내장함수자바스크립트엔진에는 내장되어있는 함수들이 있다. 예시 String(1) Number(“1”) =&gt; number는 정수와 실수를 합친 것으로 표현됨 Boolean(0) =&gt; alert(“경고창”) prompt(“질문”, “기본값”) confirm() =&gt; yes, no 결정 parseInt() =&gt; 문자데이터를 정수데이터로 변경 parseFloat() =&gt; 문자데이터를 실수데이터로 변경","link":"/2020/06/11/200611jspi/"},{"title":"[패스트캠퍼스python] HTML 정의태그 dl, dt, dd 태그, code 태그, block VS inline VS inline-block","text":"파이썬 인강 자기계발 챌린지 18회차 미션HTML은 자주 공부했기때문에 약간 지루했지만…. 여전히 내가 몰랐던 내용이 있어서 해당 부분을 정리하고자한다.알고있는 내용들은 이번 기회에 아예 외워버려야겠다. 1. 정의태그 dl, dt, dd 태그어떠한 정의를 내리고 싶을 때 dl, dt, dd 태그를 사용한다.자동으로 들여쓰기가 40px이 되어있다. 이때문에 들여쓰기의 거리를 조절하고 싶으면 text-indent나 margin-left, padding-left 속성값을 변경하면 된다. dl : definition list의 약자이다. 내부에 2개의 태그(dt, dd)를 포함하며 dt는 생략가능하지만 dd는 꼭 포함되어야한다. dt : definition term의 약자이며 정의하고싶은 용어의 제목을 나타낸다 dd : definition description의 약자이며 용어의 내용을 나타내며 dl안에 필수로 들어가야한다. 1234&lt;dl&gt; &lt;dt&gt;정의하고싶은 용어의 제목&lt;/dt&gt; &lt;dd&gt;정의할 내용&lt;/dd&gt;&lt;/dl&gt; 아래 이미지는 왼쪽은 코드, 오른쪽은 그 코드출력값을 나타낸다.1번 부분처럼 dl dt, dd를 단순하게 활용할 수 있다. 실제 포털사이트에서 이용하는 예시도 아래 링크에서 찾을 수 있다.스크린리더이용자를 위해 dl dt dd태그를 남용해서는 안되겠다.모두에게 공정한 정보를 제공할 수 있는 사이트를 만들고싶다. 참고링크 : dl dt dd 태그예시와 dl dt dd 태그를 남용하지마세요 2. code 태그코드태그는 컴퓨터 코드(code)의 일부분을 나타내주는 코드이다. 그래서 컴퓨터나 프로그래밍코드일부를 그대로 표시하고자할때 유용하다. 12&lt;p&gt;다음은 자바 코드의 일부분입니다. &lt;/p&gt;&lt;code&gt;System.out.println(\"헬로자바\"); &lt;/code&gt; 위의 이미지에서 2번부분을 보면 code태그안에서 html태그를 표현하고싶을때, 여전히 꺽쇠는 표현이 되지 않는다. 그래서 왼쪽꺽쇠(&lt;)의 유니코드인 &amp;lt;를 사용했고오른쪽꺽쇠인(&gt;)의 유니코드인 &amp;gt;를 사용했다. 나는 마크다운으로 블로그를 작성하는데 항상 code표현을 백틱으로 이용해왔다. code태그 알아두면 html에서 유용하게 쓸 수 있다. 3. block요소와 inline요소 그리고 inline-block요소의 차이 block 요소 줄바꿈이 이루어진다. 기본적으로 가로폭 전체의 넓이를 가지는 직사각형 형태가 된다. width, height, padding, margin 등을 적용 가능. text-align이 적용 불가능. vertical-align이 적용 불가능. 예시 : article, dd, div, dl, figure, footer, form, h1, h2, h3, h4, h5, h6, header, hr, noscript, ol, p, pre, section, table, ul 등등 123div {display : inline} inline 요소 줄바꿈이 이루어지지않는다. 기본적으로 콘텐츠가 끝나는 지점까지의 길이를 가진다. width, height, margin, padding-top, padding-bottom 적용 불가능. height 대신 line-height로 높이조절가능. 대신 span태그에서는 불가능. text-align 사용 가능 예시 : a, b, br, button, code, em, i, img, input, kbd, label, map, object, q, samp, small, script, select, span, strong, sub, sup, textarea, tt, var 123div {display : inline} inline-block위의 블럭과 인라인을 합친 것이라고 생각하면 되지만 그 특징이 조금 차이난다 width, height 적용 가능 margin, padding-top, padding-bottom 적용 가능 line-height 적용 가능 inline-block 끼리 공백 생성됨 -&gt; 상위 div에 { font-size: 0; } 를 적용하면 해결가능. inline-block 끼리 높이 불일치될수있음 -&gt; vertical-align 값 적용하면 해결가능.","link":"/2020/06/11/200611python/"},{"title":"[ITWILL : WEB]테이블 칸 합치기","text":"ITWILL학원 : 3강 WEB(HTML, CSS) BY 김영희테이블 칸 합치기 colspan = “n” : 세로방향으로 합치는 속성 rowspan = “n” : 가로방향으로 합치는 속성 칸합치는 속성은 항상 th나 td에서 이루어지지 tr에서는 절대 사용하지않는다! rowspan을 생각할때는 빨래줄(tr)에 빨래(td나th)가 걸려있다고 생각하면 편하다기준을 몇번째 tr인지 확인한 뒤 빨래줄에 빨래를 걸면 아래로 내려오듯이 td가 내려와있다고 생각하면 된다. 칸 합치는 속성 가로방향 세로방향 colspan=\"n\" rowspan=\"n\" n개의 칸을 하나로 합치는 속성 12345678910111213141516&lt;table&gt; &lt;tr&gt; &lt;th colspan=&quot;2&quot;&gt;칸 합치는 속성&lt;/th&gt; &lt;/tr&gt; &lt;tr&gt; &lt;th&gt;가로방향&lt;/th&gt; &lt;th&gt;세로방향&lt;/th&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td&gt;colspan=&quot;n&quot;&lt;/td&gt; &lt;td&gt;rowspan=&quot;n&quot;&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td colspan=&quot;2&quot;&gt;n개의 칸을 하나로 합치는 속성&lt;/td&gt; &lt;/tr&gt;&lt;/table&gt; 가로방향 합치기와 세로방향합치기가 동시에 나오는 예시는 아래와 같다rowspan을 위에서 말했던 빨래감예시를 들어 설명해보면, 첫 번째 tr의 빨래줄의 마지막 td에 아래 빨래감이 3개가 걸려야한다.(즉 3칸을 합친다)따라서 첫번째 tr의 두번째 td에 rowspan=”3”를 해준다 12345678910111213141516&lt;table&gt; &lt;tr&gt; &lt;td colspan=&quot;2&quot;&gt;a&lt;/td&gt; &lt;td rowspan=&quot;3&quot;&gt;b&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td&gt;c&lt;/td&gt; &lt;td rowspan=&quot;2&quot;&gt;d&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td&gt;e&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td colspan=&quot;3&quot;&gt;f&lt;/td&gt; &lt;/tr&gt;&lt;/table&gt;","link":"/2020/06/12/200612webi/"},{"title":"[패스트캠퍼스python] font-size, font-family, font color","text":"파이썬 인강 자기계발 챌린지 19회차 미션1. font-size폰트 사이즈를 지정하는데 크게 가지방식이 있다.직접 수치를 입력하는 방식과 상위요소 기준 상대적수치를 적용하는 방식 그리고 상속값을 적용하는 방식이다. 12345{font-size : 15px; //직접 입력.font-size : 1.5rem; //상위요소 기준 상대적 수치.font-size : inherit; //상속값 위의 태그의 폰트사이즈를 그대로 받는다.} em과 rem의 차이?css다루다보면 em과 rem을 접하게 된다.나는 항상 px이나 %단위로 직접 수치를 입력하여 지정하였는데 em, rem을 사용하면 상대적인 수치가 자동적으로 정해져서 훨씬 디자인이 깔끔하고 통일성있어보이기도 한다.그렇다면 em과 rem의 차이는 무엇일까?둘 다 수치를 직접적으로 입력하는 방식이 아니다. em : 상위요소의 크기에 비례. rem : 최상위 요소의 크기 즉, html 요소 크기에 비례. 참고로 html 요소 크기의 기본값은 웹브라우저 설정에서 정한 크기이며 보통 16px이다. 결국 둘의 차이점은 최상위요소의 크기인지 상위요소의 크기인지의 차이다.언뜻 읽으면 큰 차이가 없을 것 같지만 만약 em의 상위요소가 또 다른 상위요소에 상속을 받았다면 원하는 크기로 지정이 어려울 수 있다. 왜냐면 em은 상속의 영향을 받기 때문이다. 따라서 rem을 쓰는 것을 더 추천한다. 다만 rem을 쓰면 사용자가 커스터마이징해놓은 사이즈를 무시해버려서 사용자의 가독성을 오히려 떨어뜨릴수있다. 따라서 적절한 곳에 em과 rem을 쓰는 것이 좋다 그럼 언제 rem과 em을 써야할까? 참고링크 : 종합 안내: Rem 그리고 Em, 언제 써야 할까 em 단위는 최상위 요소에 지정된 폰트 크기 말고, 다른 특정 요소의 폰트 크기에 따라 그 크기가 변해야 하는 곳에 사용하십시오. rem 단위는 em 단위를 쓸 필요가 없고, 또 브라우저의 폰트 크기 설정에 따라 그 크기가 변해야 하는 곳에 사용하십시오. 폰트 크기 지정을 비롯해서 꼭 em 단위를 써야 하는 곳이 아니라면 rem 단위를 사용하십시오. media queries에도 rem 단위를 쓰세요. 다중 칼럼 레이아웃의 너비에는 em 혹은 rem을 쓰진 마십시오 - 대신 %를 쓰세요. 만약에 크기가 변할 경우 해당 요소의 레이아웃이 깨지는 걸 막을 수 없다면 em과 rem 모두 쓰지 마세요. 2. font-family폰트패밀리는 글꼴집합이다.만약에 폰트를 하나를 지정했다고 생각해보자.이용자가 해당 폰트가 없으면 폰트를 기본값으로 표시되어진다. serif는 바탕체계열 Sans-serif는 고딕체계열 Cursive는 필기체계열 monospace는 가로 폭이 동일한 글꼴 아래는 폰트패밀리예시이다 123{font-family : Arial, Georgia, Times, \"Times New Roman\", serif} 위에서 말했듯이 이용자의 컴퓨터에 지정한 폰트가 설정되어 있지 않으면 기본값으로 표시된다.이러한 경우에는 아예 웹 폰트를 사용하면, 이용자의 컴퓨터에 설치되지 않은 글꼴을 사용할 수 있다. 웹폰트 사용 방법은 html에서 link태그로 삽입하면된다. 12345678910&lt;link href=\"https://fonts.googleapis.com/css?family=Indie+Flower|Londrina+Outline|Open+Sans+Condensed:300\" rel=\"stylesheet\"&gt;&lt;style&gt; #font1{ font-family: 'Open Sans Condensed', sans-serif; } #font2{ font-family: 'Indie Flower', cursive; }&lt;/style&gt; 참고링크 : 웹폰트 생활코딩 3. font 한꺼번에 적용위에서 사용했던 폰트스타일이외에도 다양한 폰트스타일을 한 줄 코드로 작성할 수 있다중요한 점은 아래 순서대로 작성해야 제대로 적용이 된다 1font : 폰트스타일 폰트웨이트 폰트사이즈 폰트패밀리 적용된 예시는 아래와 같다표시를 한 순서대로 1번에는 폰트스타일 2번에는 폰트웨이트 3번에는 폰트사이즈 4번에는 폰트패밀리 4. font color폰트 컬러지정은 그냥 color적어주면 된다 rgba(0,0,0) : 숫자가 작을수록 어두운 색을 띈다 = 검정색 = #000000 rgba(255,255,255) : 숫자가 높을수록 밝은 색을 띈다 = 흰색 = #ffffff 폰트의 투명도도 조절할 수 있다.rgba색상코드에서 마지막에 0에서 1사이의 숫자를 정해주면 된다 0 : 완전투명 0.5 : 절반만 투명 1 : 불투명 12color : rgba(0,0,0, 0.5)// 검정색컬러에 절반만 투명","link":"/2020/06/12/200612python/"},{"title":"[패스트캠퍼스python] float, position, css선택자 우선순위","text":"파이썬 인강 자기계발 챌린지 20회차 미션nomal flow에서 벗어나 복잡한 방식의 레이아웃을 하는 방법에 대해 알아보자.크게 두가지 속성으로 사용할 수 있다. float position 1. floatfloat로는 정교한 레이아웃을 작성할 수 있다.float는 이름그대로 띄우는, 뭔가 떠있는 배치이다. 먼저 비교를 위해 아무것도 적용안된 레이아웃을 보자.일반적인 단락을 나눈 줄글의 형태이다.가로로 나눠진 단락을 세로로 나누고싶을때 float가 유용하다. 이제 float는 left와 right로 줄 수 있는데 아래 이미지는 float : left;로 적용한 모습이다.아래 이미지에서 알 수 있듯이 해당 태그가 왼쪽으로 띄어지고 밑에 배치되었던 줄글이 태그옆으로 옮겨지면서 자연스럽게 흘러내려가는 형태를 취하고 있다 여기서 footer가 조금 아쉽다.column 3개에만 float : 30%;씩 적용해주었는데 10%가 남다보니 footer의 위치가 어색하게 되어버렸다.따라서 column들만 float left로 주고 footer는 하단에 배치하고싶다면 아래와 같이 clear : both; 속성을 넣어주면 된다. clear는 left, right, both 의 값을 선택할 수 있고 해당 사이드에 float정렬을 취소한다.따라서 현재상황에서는 clear : left; 또는 clear : both; 로 같은 결과값을 출력할 수 있다. 짜잔- 세상 깔끔하다! 2. position static postion 속성의 default 값이다.HTML 태그 순서에 따라 화면에 출력된다. relative 원래 위치를 기준으로 상대적인 위치를 지정해줄 수 있다. position : relative;로는 어떠한 값도 바꿀 수 없다.그 밑에 꼭 top, bottom, left, right의 값을 통해 어디를 얼만큼 이동할 것인지 정할 수 있다.여기서 중요한 점은 태그의 원래 위치는 변하지 않는다는 것이다. 없어지지 않고 기억되어져 있다. 하트의 위치에서 top과 left에 100씩 값을 주어서 하트가 글 위로 오게되었다.여기서 쉽게 헷갈릴 수 있는 점이 있다.바로 하트가 top과 left로 100씩 움직이는 것이 아니라, top과 left에 100씩 빈 공간을 준다고 생각하면 된다.빈 공간만큼 원래 태그는 밀려나게된다. absolute relative와 비슷하지만 차이점이 있다면 relative는 원래 태그자리를 빈공간으로 유지하는데 반해, absolute 원래 태그자리를 없애버리고 상대적인 위치에 위치한다.absolute는 상위태그를 기준으로 상대적인 위치를 정한다. fixed absolute와 상대적인 위치를 가진다는 것은 비슷하지만 상위태그기준이 아닌 veiwport(웹페이지가 보이는 화면)을 기준으로 뷰포인트의 특정 위치에 태그를 고정한다. 따라서 스크롤을 내려도 태그는 같은 위치에 고정되어있다. 3. css선택자 우선순위선택자는 총 3종류가 있다. id선택자 &gt; class선택자 &gt; tag선택자 만약 id와 tag에 둘다 css값이 적용되어 있으면 id클래스가 우선이므로 tag값에 덮어씌어져서 id 클래스값이 출력되게 된다.","link":"/2020/06/13/200613python/"},{"title":"[패스트캠퍼스python] Reset보단 normalize, 기본 box-sizing, 홈페이지 기본 레이아웃(hero-section), 가상클래스 (hover, active, focus 등)","text":"파이썬 인강 자기계발 챌린지 21회차 미션1. Reset보단 normalize기본값으로 설정된 css가 레이아웃을 잡을때 불편함을 초래하기도 한다.이에 reset을 시켜주는 코드들이 생겨났다.하지만 reset코드들은 오래된 것들이 많아 요즘 유용하게 쓰이는 기본값까지 초기화시켜버리기떼문에 효율적이지 못하다. 따라서 최근에는 normalize를 더 많이 사용한다. Normalize.css 파일에 들어가서 다운로드를 누르면 css 파일이 나오고 해당 파일 코드를 전체복사하여 내 프로젝트에 normalize.css로 새로운 파일을 만들어 전체붙여넣기해준다.normalize.css안에는 주석으로 해당 코드들이 어떤 역할을 하는지 자세하게 알려주어 필요한 코드만 사용할 수 있고 필요하지 않는 코드들은 삭제하기만 하면 된다. 2. 기본 box-sizing 잡기레이아웃의 에러를 최소화하기 위해서는 box-sizing을 border-box로 하는 것이 좋다.여기서 *는 모든 영역에 적용한다는 뜻이다.*::before와 *::atfer는 숨은 영역을 뜻한다. 123456*, *::before,*::atfer { box-sizing : border-box;} box-sizing을 border-box 3. 레이아웃짜기 hero-section웹페이지를 구성할 레이아웃을 짜본적이 없어서 혼자서 웹페이지를 만들때 수정을 엄청 많이 하게 된다.그래서 다른 사람은 어떻게 짜는 지 궁금했는데 강사가 자신이 왜 이렇게 레이아웃을 짜게 되었는지 설명을 해줘서 좋았다. hero-section을 처음 듣게되었는데 이는 해당 웹페이지가 중요시하는 콘텐츠를 먼저 배치하고 링크를 걸어두는 것이다. 아래 이미지는 강사님이 장고사이트의 레이아웃을 분석한 것이다. 4. Pseudo-class 가상클래스 (hover, active, focus 등 )가상클래스를 사용하여 마우스가 올라가있거나, 활성화되어있거나, 키보드로 선택되었을 때 css요소를 적용할 수 있다.예를 들면 아래 태그는 a태그에 마우스가 올라가있거나, 활성화되어있거나, 키보드로 선택되었을때 배경색상 변경하는 코드이다. hover : 마우스가 올라가 있는 경우 active : 활성화되어 있는 경우 focus : 키보드로 선택되어있는 경우 123456a : hover,a : active, a : focus {/* a 요소에 background-color : orange;} 5. Pseudo Element 가상요소없는 태그를 css로 넣어줄수도 있다.아래는 h2태그에 가상의 태그인 &gt;를 넣는 태그이다.가상태그는 html에서 드래그를 하려고해도 드래그가 되지 않는다.말그대로 가상태그이기 때문이다. 123h2 ::before{ content : \" &gt; \"} 아래 이미지는 h2태그에 가상의 태그인 손가락이모티콘을 표현했다. 6. Cascading 캐스캐이딩캐스캐이딩은 폭포라는 의미를 가지고 있다.웹페이지의 디자인이 아래 3가지 디자인과 결합할 수 있기때문에 그 결과값이 내가 예상한대로 나오지 않을 수 있다. 웹브라우저의 기본 디자인 브라우저 사용자의 디자인 그리고 웹페이지 저자의 디자인 따라서 선택자 구체성 점수를 매겨서 우선순위를 잘 파악하고 있어야한다. 7. 선택자 구체성 점수선택자와 요소에 따라 아래와 같이 다른 값을 매기고 이를 더해주면 어느 것이 더 우선순위인지 확인 할 수 있다. HTML태그의 style속성 사용 : 1000점 ID선택자 : 100점 CLASS선택자와 가상클래스 : 10점 TAG선택자와 가상요소 : 1점 사용한 태그가 위의 4분류중 어디에 속하는 지 잘 모르겠는 경우에는 구체성 계산기에 접속하여 궁금한 태그를 복사 붙여넣기하면 된다.계산기가 자동적으로 사용된 아래 세가지 ID선택자 갯수 CLASS선택자와 가상클래스 갯수 TAG선택자와 가상요소 갯수 를 알려준다 그걸 기준으로 위의 점수표와 함께 계산하면 된다.","link":"/2020/06/14/200614python/"},{"title":"[ITWILL : JAVA]리터럴(literal), byte + byte가 왜 에러날까, int VS Integer,  void와 int차이","text":"ITWILL학원 : 6강 JAVA BY 윤미영강사1. 리터럴(literal)실제 값.변수의 값이 변하지 않는 데이터(메모리 위치안의 값)이다. 참고링크 : 상수와 리터럴차이 2. byte + byte가 왜 에러날까b1과 b2는 연산결과는 잘 나오지만 b3의 연산결과는 에러가 난다. 1234567byte b1 = 10;byte b2 = 20;System.out.println(b1+b2); //30byte b3 = b1+b2;System.out.println(b3); //Type mismatch: cannot convert from int to byte 산술연산자는 기본적으로 int형이다. 그래서 type mismatch가 나타난다int형으로 산술하면 잘~출력된다 1234int i1 = 100;int i2 = 200;int i3 = i1+i2;System.out.println(i3); //300 3. int VS Integer아래 데이터형의 차이점이 뭘까? int a; 기본데이터형 Integer i; 참조데이터형 라이브러리 매서드사용가능 123456int a1 = 100;Integer a2 = 100;System.out.println(a2.toString()); //100System.out.println(Integer.MAX_VALUE); //2147483647System.out.println(Integer.MIN_VALUE); //-2147483648 4. void와 int차이void와 int 매서드의 차이를 알아보자public static 뒤에 void가 오기도하고 int등 다른 데이터타입이 올 수 있다. void의 의미 : myPrint가 가지고 있는 값이 없을때, 돌려줄값이 없을때 return이 없을때 사용. int의 의미 : 반대로 가지고있는 값이 있을때, 돌려줄값이 있을때. return과 함께 사용 1234567public static void 매서드이름(매개변수){ //void 매서드 정의하기 System.out.println(\"void 매서드\")}public static int 매서드이름(int 변수명1, int 변수명2){ //int 매서드 정의하기 return 변수명1 + 변수명2;}","link":"/2020/06/11/200611javai/"},{"title":"ITWILL : Date객체 자세히, 디데이구하는 함수","text":"ITWILL학원 : 8강 JS기초 BY 정규태강사1. Date객체Date 객체의 특징 년,월,일 지정해서 객체를 사용 0부터 11까지를 1월부터 12월로 나타낸다. 1234567891011121314151617181920212223242526//참고로 today는 2020년 6월 12일이다.let today = new Date();document.write(today+\"&lt;br&gt;\")let day = new Date(2020,0,1); //month숫자를 0에서부터 세기때문에 1월1일은 0,1이 되어야함 document.write(day+\"&lt;br&gt;\")let day1 = new Date(2020,1,1); //2월1일document.write(day1+\"&lt;br&gt;\")let day2 = new Date(2020,0,1,11,30,5); //년,월,일,시,분,초 지정해서 객체사용가능document.write(day2+\"&lt;br&gt;\")let day3 = new Date(2020,0,1,11,61,5); //분에 61분을 적으면 자동으로 1시간이 올라감document.write(day3+\"&lt;br&gt;\")let day4 = new Date(\"2020/1/1\") //년,월,일만 가능. 시분초불가. 월을 나타낼때 0부터가 아니라 1부터 시작document.write(day4+\"&lt;br&gt;\") // 출력값 순서대로Fri Jun 12 2020 11:14:44 GMT+0900 (대한민국 표준시)Wed Jan 01 2020 00:00:00 GMT+0900 (대한민국 표준시)Sat Feb 01 2020 00:00:00 GMT+0900 (대한민국 표준시)Wed Jan 01 2020 11:30:05 GMT+0900 (대한민국 표준시)Wed Jan 01 2020 12:01:05 GMT+0900 (대한민국 표준시)Wed Jan 01 2020 00:00:00 GMT+0900 (대한민국 표준시) 변수에 저장한 date객체를 가져와서 사용해보자요일출력하는 getDay()의 경우 0(일)부터 6(토)까지를 나타낸다. 123456789101112131415//참고로 today는 2020년 6월 12일이다.let today = new Date();document.write(today.getFullYear() +\"&lt;br&gt;\") //년출력 year말고 fullyear써야함document.write(today.getMonth() +\"&lt;br&gt;\") //월출력 (0부터 11까지)document.write((today.getMonth()+1) +\"&lt;br&gt;\") //알아보기쉽게 1을 추가해서 사용document.write(today.getDate() +\"&lt;br&gt;\") //일출력document.write(today.getDay() +\"&lt;br&gt;\") //요일출력// 출력값 순서대로202056125 숫자로 들어온 요일을 글자로는 어떻게 바꿀수있을까?여러가지 방법이 있다 Array의 index 활용요일이 숫자로만 출력되어 아쉬운 경우에는 변수에 넣어 index를 이용하여 아래처럼 금요일 이렇게 출력되게 할수있다 123let today = new Date();let week = new Array('일', '월', '화', '수', '목', '금', '토')document.write(week[today.getDay()] + \"요일 &lt;br&gt;\") 제어문사용 (if나 switch)if나 switch를 통해 일일히 조건을 걸어 나열할수있다if는 많이 써보았으니 switch를 써보자 123456789101112131415161718192021222324252627function getToDay(day) { switch (day){ case 0 : document.write('일요일') break; case 1 : document.write('월요일') break; case 2 : document.write('화요일') break; case 3 : document.write('수요일') break; case 4 : document.write('목요일') break; case 5 : document.write('금요일') break; case 6 : document.write('토요일') break; }}getToDay(today.getDay()) 2. 디데이 계산하는 함수 구하기Date()객체를 활용하여 디데이를 계산한느 함수를 구해보자Date()객체에서는 사칙연산이 적용되는데 단위가 밀리초로 출력된다 밀리초 = 1/1000초 1초 = 1000msc 1분 = 60 * 1000 1시간 = 60 * 60 * 1000 하루 = 24 * 60 * 60 * 1000 12345678910function calculator(year, month, day){ let today = new Date(); let lastday1 = new Date(year,(month-1),day) //컴터는 0월부터계산하니까 사용자입력값에서 1을 빼줌 console.log(lastday1) let result = (lastday1 - today) / (24 * 60 * 60 * 1000); document.write(Math.ceil(result) + \"일 남았습니다 &lt;br&gt;\")}calculator(2020,12,31); //202일 남았습니다calculator(2020,06,14); //2일 남았습니다","link":"/2020/06/12/200612jspi2/"},{"title":"ITWILL : Array객체 (for ~ in구문, join(), reverse(), sort())","text":"ITWILL학원 : 8강 JS기초 BY 정규태강사1. 배열객체(Array)내장객체 중에서 가장 활용도가 높은 것은 배열객체이다.연속된 공간에 여러개의 데이터를 저장하는 객체이다.배열에 들어있는 데이터를 요소(Element)라고 부른다.배열의 index는 0부터 시작한다. 그리고 마지막 index는 (배열의 크기 - 1)이다.배열의 요소는 변수처럼 사용가능 -&gt; 주로 반복문에 활용해서 사용한다.JS의 경우 모든 데이터타입을 한 배열안에 넣기 가능하다. 1let arr = [1,2,\"Hello\", true, 3]; 2. for ~ in 구문변수의 값을 0부터 배열 객체의 개수만큼 반복하는 구문.자동적으로 배열 객체의 길이를 계산한다. 1234for(let i in arr){ document.write( arr[i]+ \" \")}//출력값은 1 2 Hello true 2 JS 3. array.join();요소들을 출력할 때 사이에 입력하여 출력하는 방법은 join()을 쓰면 쉽게 해결된다 12document.write(arr.join(\" \"))//출력값은 1 2 Hello true 2 JS 위의 출력값과 아래의 출력값의 차이는 딱 하나이다.마지막 요소에 스페이스의 입력유무이다.join()의 경우 마지막요소에 입력되지 않으니 더욱 유용하다 12document.write(arr.join(\",\"))//출력값은 1,2,Hello,true,2,JS 4. array.reverse();배열안의 요소를 역순으로 출력하고 싶다면 반복문을 먼저 생각해볼수있다.반복문을 이용하면 임시값에 뒷요소부터 넣어서 반복할 수 있다.하지만 array에 좋은 내장함수가 있다.바로 reverse()이다reverse()는 배열의 순서를 반대로 처리한다. 1234arr1 = [1,2,\"hi\", \"a\", \"A\", \"가\", \"나\"];document.write(arr1.reverse())//출력값 나,가,A,a,hi,2,1 기본적으로 콤마(,)가 함께 출력된다.이 콤마를 없애고 싶다면 reverse후에 join을 하면 된다 12document.write(arr1.reverse().join(\" \"))//출력값 나 가 A a hi 2 1 5. array.sort();낮은 순자부터 높은 숫자로 오름차순으로 출력한다. 1234arr2 = [1,2,\"hi\", \"a\", \"A\", \"가\", \"나\"];document.write(arr2.sort())//출력값 1,2,A,a,hi,가,나","link":"/2020/06/15/200615jspi/"},{"title":"[패스트캠퍼스python] Django 홈페이지 실습: max-width와 min-width속성, margin과 padding의 단축속성","text":"파이썬 인강 자기계발 챌린지 22회차 미션이때까지 배운 HTML와 CSS를 가지고 Django 사이트를 만들어보는 실습을 해보자.참고링크 : Django 1. 전체 페이지 레이아웃잡고 마크업하기먼저 홈페이지를 보고 레이아웃을 잡고 미리 스케치하는 것이 좋다.그래야 안 헷갈리고 필요한 태그들만 사용하여 깔끔한 마크업이 가능하기때문이다. 지난 포스팅에서 Django홈페이지 전체를 스케치한 이미지이다. 전체 홈페이지를 가장 큰 세가지부분으로 나눈다 Header main footer 그 뒤로 안에 있는 요소들을 스케치한 뒤 그대로 마크업하면 된다!간단한 작업처럼 보이지만 깔끔하게 잘 만들기 여건 어려운 것이 아니다.나도 강사님처럼 척보면 척하고 짜임새있게 짜고 싶다. 2. Header 전체구상먼저 첫번째 큰 부분인 Header부분이다.안을 보면 logo와 navigator로 나눌 수 있다.logo안은 이미지태크와 링크를 넣어 이미지를 누를때마다 홈으로 돌아가게끔 구현할 것이다.navigator는 ul태그로 만들어서 li태그에 a태그를 넣어 li태그를 누를때 관련 페이지로 이동할 수 있도록 구현할 것이다. logo logo img + link to home navigator list li + link to overview page li + link to download page li + link to documentation page li + link to news page li + link to community page li + link to code page li + link to issues page li + link to about page 스케치를 보고 그대로 html를 작성해주면 좋다.위의 이미지처럼 class 이름까지 지정해서 하면 훨씬 편하고 빠르게 마크업할수있다. li태그와 a태그는 묶어서 총 8번 작성해야한다. 이때 효율적으로 코드를 작성할 수 있는 방법이 있다. 123456789101112 (li&gt;a)*8 // 출력값은&lt;li&gt;&lt;a href=\"\"&gt;&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href=\"\"&gt;&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href=\"\"&gt;&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href=\"\"&gt;&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href=\"\"&gt;&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href=\"\"&gt;&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href=\"\"&gt;&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href=\"\"&gt;&lt;/a&gt;&lt;/li&gt; li태그 안에 a태그를 만들고 전체를 곱하기 8번해서 총 8개의 태그를 만들게 된다.참~ 쉽죠? 3. max-width 속성과 min-width속성브라우저의 크기를 조절할때, 브라우저가 일정한 크기에 도달할 경우 더이상 콘텐츠의 크기도 같이 줄어들거나 늘어나지 않는다.이러한 속성을 max-width와 min-width라고 한다. 브라우저 전체 넓이가 1060px이 되면 더 이상 줄어들지 않도록 지정하고 1400px이 되면 더 이상 늘어나지않도록 지정해보자. 이를 위해서 먼저 생각해야할 것이 어느 부분에 max-width와 min-width를 적용시킬 것인 가이다. 브라우저 전체 넓이가 일정크기보다 작아지면 모든 요소들이 다 작아지다가 멈춰야하므로 body에 min-width를 주면 된다. 반면 브라우저 전체 넓이가 일정크기보다 커지면 header는 크기와 상관없이 양옆에 컬러가 계속 칠해져있어야하므로 container를 주어 container태그안에 max-width속성을 적용하여 디자인을 유지할 수 있다. 12345678body{ min-width: 1060px;}.container{ max-width: 1400px; margin: 0 auto 0 auto;} 4. margin과 padding의 단축속성margin과 padding값을 주는 데는 총 4가지 단축 방법이 있다. { margin: 0 auto 0 auto}이렇게 4개가 나열되어 있는 경우의 순서는 top right botton left순이다. { margin: 0 auto 10px }이렇게 3개 값이 나열되어 있는 경우에는 순서가 첫번째값은 top, 두번째 값은 left와 right 그리고 마지막 값은 bottom이다 즉 { margin: 0 auto 10px } 는 { margin: 0 auto 10px auto} 와 동일한 값을 가진다. { margin: 0 auto }이렇게 2개가 나열되어 있는 경우의 순서는 첫번째값은 top botton에 적용 두번째 값은 left와 right에 적용된다. 즉 { margin: 0 auto } 는 { margin: 0 auto 0 auto} 와 동일한 값을 가진다. { margin: 10px }이렇게 1개 값만 있는 경우는 어디에 값이 적용될까?정답은 모든 곳에 적용된다.다시말해 10px이 top right botton left에 각각 적용된다. 즉 { margin: 10px } 는 { margin: 10px 10px 10px 10px } 와 동일한 값을 가진다. 5. display: inline-block;display속성에 inline-block을 넣어보자. 1234567.nav{ text-align: right;}.list-items{ display: inline-block;} 아래 이미지를 순서대로 본다면 1번에는 적용되지 않은 순수한 모습에서위의 코드를 적용한 후 3번을 본다면 예쁘게 오른쪽으로 카테고리가 일렬로 배열되어 있는 것을 확인할 수 있다. 6. position: absolute; 와 relative; 적용가장 헷갈리는 position속성을 적용하기 전후를 비교해보자. position : relative;로는 어떠한 값도 바꿀 수 없다.그 밑에 꼭 top, bottom, left, right의 값을 통해 어디를 얼만큼 이동할 것인지 정할 수 있다. 12345678910111213.container{ max-width: 1400px; background-color: red; margin: 0 auto; padding: 0 20px; position: relative; //normal flow의 속성에 변화가 있는 것이 아니기때문에 화면에 출력될때 변화가 없다}.logo{ position: absolute; top: 0; left: 0; } 1번은 위의 태그를 적용하기 전의 모습이고 container클래스에 position: relative;를 적용하고 logo클래스에 position: absolute;를 적용을 하면 아래 이미지의 3번으로 화면에 출력된다.","link":"/2020/06/15/200615python/"},{"title":"ITWILL : 이벤트리스너와 이벤트핸들러, 브라우저객체모델, window객체전체","text":"ITWILL학원 : 8강 JS기초 BY 정규태강사1. 이벤트브라우저에서 사용자가 취하는 모든 행동을 이벤트라고 한다 이벤트 : - 브라우저에서 사용자가 취하는 모든 행동 - ex)button 이벤트리스너 : - 이벤트 발생정보를 체크해서 해당 핸들러로 전달 - ex) onclick 이벤트핸들러 : - 이벤트 발생시 특정 동작을 처리해주는 동작 - 자바스크립트 함수를 실행시켜서 작동한다 즉, js함수실행가능 - 태그의 스타일정보 변경가능 - ex) alert(‘버튼클릭’), open() 등등 보통을 keydown해서 keyup을 해야 즉, 키보드를 눌렀다가 떼면 데이터가 입력된다.따라서 키이벤트를 처리할때는 keyup일때 이벤트를 걸어줘야 keydown일때보다 정확한 처리가 가능하다 1234&lt;input type=\"button\" value=\"버튼\" onclick=\"alert('버튼클릭');\"&gt;&lt;br&gt;&lt;input type=\"button\" value=\"버튼2\" ondblclick=\"alert('버튼더블클릭');\"&gt;&lt;br&gt;&lt;input type=\"button\" value=\"버튼3\" onmouseover=\"alert('마우스오버');\"&gt;&lt;br&gt;&lt;input type=\"text\" name=\"txt\" onkeyup=\"alert('키업!');\"&gt;&lt;br&gt; 참고링크 : onmouseleave와 onmouseout의 차이점 2. 브라우저객체모델(BOM : Browser Object Model)우리가 사용하는 인터넷브라우저안에 내장되어있는/포함되어있는 객체를 말한다.특징 계층적구조 : 단계별로 표시할 수 있다. 최상위레벨 : window객체 그 아래레벨 : document객체, screen객체, location객체, history객체, navigator객체 정확한 구조를 표현한 문장인 window.document.write() 사용해야하지만 최상위 객체는 생략해서 document.write()로 사용한다. 3. window객체브라우저 객체이 최상위 객체.객체이기때문에 당연히 속성과 함수들을 가지고 있다. window.open(“url주소 “, “창이름(title태그와 동일한 기능)”, “옵션”); 새창열기 window.location.href=’url주소’; 현재페이지에서 열기 window.close(); 현재 창 닫기 window.alert(); 알림 팝업창 열기 window.confirm() : 팝업창을 열어서 확인/취소 버튼으로 Boolean 데이터를 받는 함수 window.prompt(); 팝업으로 input창 열기 window.setInterval(“자바스크립트실행문”,밀리초시간); 일정시간동안에 자바스크립트실행문을 실행하는 함수 window는 최상위객체이기때문에 window를 생략하고 사용할 수 있다. 예시1 : window.open(), window.close(), window.location 12&lt;input type=\"button\" value=\"새창열기\" onclick=\"window.open('http://www.naver.com')\"&gt;&lt;input type=\"button\" value=\"현재페이지열기\" onclick=\"location.href='http://www.naver.com'\"&gt; 이렇게 input태그에 많은 내용이 들어가면 보안상의 위험이 있으므로 js에 넣어서 사용한다.참고로 아래 코드에서 점점(..)은 상위폴더로 이동을 의미한다. 12345678function winOpen(){ open(\"http://www.naver.com\") //window생략가능}&lt;input type=\"button\" value=\"새창열기\" onclick=\"winOpen();\"&gt;function pageOpen2(){ open(\"../JS2/Test5.html\") //점점(..)은 상위폴더로 이동을 의미한다.} 예시2 : setInterval(()=&gt;{js실행문}, 밀리초) 3초에 한번씩 숫자를 찍는 함수를 아래코드와 같이 만들수있다.java에서 스래드와 비슷한 개념이다. 123456let i=0;let inter = setInterval(() =&gt; { console.log(i++)}, 3000); //3초에 한번씩 숫자찍기clearInterval(inter); //변수에 담은 interval데이터를 clearInterval()함수로 멈출수있다.","link":"/2020/06/15/200615jspi3/"},{"title":"ITWILL : 브라우저객체모델안의 Document객체 (bgColor와 fgColor사용,  img태그에 접근하여 속성 사용, 랜덤 img 출력하기)","text":"ITWILL학원 : 9강 JS기초 BY 정규태강사1. Document 객체해당 html문서를 객체로 표시한 것(객체화)이 여기서 말하는 document이다. 2. Document 객체 : bgColor와 fgColor사용 document.bgColor=”” ; 배경색상을 변경함 document.fgColor=”” ; 글자색상을 변경함 위를 활용하여 체크박스를 틱하고 틱을 해제함으로써 배경색과 글자색이 바뀌는 함수를 만들어보자. 1234567891011&lt;input type=\"checkbox\" onclick=\"checkf1(this);\"&gt; 체크박스 온오프로 핑크테마&lt;br&gt;function checkf1(obj){ if(obj.checked){ document.bgColor= '#ffbdbd'; document.fgColor= 'white'; }else{ document.bgColor= 'white'; document.fgColor= 'black'; }} 3. Document 객체 : img태그에 접근하여 속성 사용img태그에 접속하여 속성을 이용해보자 document.images[0].name : 이미지태그 네임을 모를 경우 인덱스활용해서 name불러옥; document.img1.name : 이미지태그 네임을 알경우 name불러오기 document.img1.src : 이미지태그 네임을 알경우 먼저 이미지태그를 만들어보자 12&lt;img src=\"1.jpg\" name=\"img1\"&gt;&lt;input type=\"button\" value=\"이미지속성정보\" onclick=\"fun1()\"&gt;&lt;br&gt; 그리고 이 이미지태그의 속성을 알아보자위에서 만든 버튼태그를 눌릴때마다 속성을 알아보는 방법이다. 1234567891011function fun1(){ alert(\"너의 이름은? \"+document.images[0].name); alert(\"너의 이름은? \"+document.img1.name) alert(\"너의 주소는? \"+document.img1.src) }//출력값은img1img1file:///D:/workspace_jsp7/JavaScript/WebContent/JS3/2.jpg 4. Document 객체 : 랜덤 img 출력하기1부터 6까지 총 6개의 이미지를 랜덤하게 가져와서 이미지태그에 보더, 가로,세로 크기를 변경하는 함수를 만들어 보자 첫번째는 랜덤함수를 이용하는 방법이다 123456789101112131415161718192021&lt;img src=\"1.jpg\" name=\"img1\" onmouseover=\"changeImg()\" onmouseout=\"resetImg()\"&gt;&lt;br&gt;function changeImg(){ let randomNum = Math.floor(Math.random()*6 + 1); //1~6까지 document.img1.src = randomNum+\".jpg\" //1~6까지 console.log(randomNum) document.images[0].border = 2; document.images[0].width = 200; document.images[0].height = 150;}function resetImg(){ document.img1.src = \"1.jpg\" document.images[0].border = 0; document.images[0].width = 80; document.images[0].height = 60;} 두번째 방법은 배열이용하는 방법이다전자보다 더 많이 사용한다 위와의 차이점은 두가지이다. imgArr이라는 배열안에 이미지를 담았다 randomNum만들때 배열은 0부터 시작이고 이미지도 0부터 시작이므로 +1을 할 필요가 없다. 1234567891011121314151617181920212223&lt;img src=\"1.jpg\" name=\"img1\" onmouseover=\"changeImg()\" onmouseout=\"resetImg()\"&gt;&lt;br&gt;let imgArr = [\"1.jpg\", \"2.jpg\", \"3.jpg\", \"4.jpg\", \"5.jpg\", \"6.jpg\"] //0~5번까지밖에없다function changeImg(){ let randomNum = Math.floor(Math.random()*6)//0~5까지 document.img1.src = imgArr[randomNum] //0~5까지 console.log(randomNum) document.images[0].border = 2; document.images[0].width = 200; document.images[0].height = 150;}function resetImg(){ document.img1.src = \"1.jpg\" document.images[0].border = 0; document.images[0].width = 80; document.images[0].height = 60;}","link":"/2020/06/16/200616jspi/"},{"title":"[ITWILL : DB]virtualBox로 가상컴퓨터만들어서 리눅스Linux 설치하기","text":"ITWILL학원 : 6강 Database BY 정지윤강사응용SW기초기술활용제 1장 운영체제 기초 활용 1. virtualBox로 가상컴퓨터 만들기 새로만들기클릭 이름명:원하는대로(혹시 오류가 발생한다면 예약어가 있을수있으니 다양한 이름으로 시도해볼 것.), 종류 : Linux, 버전:Red hat 64bit 메모리크기 1024MB 하드디스크 : 지금 새 가상 하드 디스크만들기 틱 하드디스크 파일 종류 : VDI 물리적 하드 드라이브에 저장 : 동적할당 파일 위치 및 크기 : 30GB 2. 만들어진 가상컴퓨터 설정하기 Linux 설정 &gt; 시스템 &gt; 마더보드 : 하드웨어 시각을 UTC로 보고하기 틱해제 &gt; 프로세서 : 프로세서 개수 2개 설정 후 저장 Linux 설정 &gt; 시스템 &gt; 저장소 : 컨트롤러 아래 비어있음 클릭 &gt; 광학드라이브 옆 CD아이콘클릭 &gt; 가상 광 디스크파일 클릭 &gt; 받아놓은 .iso 파일 선택 후 열기클릭 Linux 설정 &gt; 시스템 &gt; 저장소 : 컨트롤러 SATA 클릭 &gt; 호스트 I/O캐시 사용하기 틱 &gt; 확인 3. 가상컴퓨터 실행하여 linux 설정하기 설치 설정하기 최소설치 : 서버컴퓨터인 경우 최소설치를 활용하여 보안을 높여줌 GNOME(그놈) 데스크탑 : 윈도우 환경과 가장 유사하여 초보자에게 적합한 GUI환경이다. 파티션 : 차후에도 설정가능. KDMUP : 시스템끼리 충돌시 데이터를 모아서 따로 저장을 함 -&gt; 메모리를 잡아먹고 성능저하의 원인이 되기때문에 활성화꺼짐으로 선택하는 것이 좋다 root암호 : 관리자권한으로 실행할때 필요한 암호 사용자생성 : 차후에도 설정가능. 설치 후 재부팅하기 재부팅 후 설정하기","link":"/2020/06/16/200616dbi/"},{"title":"정규식을 이용한 전화번호 형식변환","text":"숫자를 전화번호 형식으로 변환숫자를 받은 후 그 숫자를 전화번호형식으로 변화시키고 싶다.if else문을 사용해서 나타낼 수 있겠지만 엄청 길었다.검색해보니 정규식을 이용한 깔끔한 코드를 찾았다 123function phoneformat(num){ return num.replace(/(^02.{0}|^01.{1}|^[0-9]{3})([0-9]*)([0-9]{4})/, \"$1-$2-$3\");} 코드를 설명하자면 뒤에서 설명하는 게 편하다. “$1-$2-$3” 이 부분은 $1과 $2 그리고 $3를 하이픈(-)으로 연결했다.그렇다면 $1과 $2, $3는 뭘까?앞에 괄호와 연결된다 콤마(,)앞에 식을 자세히보면 (/()()()/,”$1-$2-$3”); 이렇게 볼 수 있다.괄호안의 연산된 값이 순서대로 $1, $2, $3에 대입된다고 보면 된다. ([0-9]{4}) 뒤의 괄호부터 차근차근 풀어보자0에서부터 9까지의 숫자중에 4개의 숫자를 가지겠다는 의미이다 ([0-9] * ) 0에서부터 9까지의 숫자중에 모든 남는 숫자를 가지겠다는 의미이다여기서 남는 숫자란, 총 11자리중에 앞에서 3자리, 뒤에서 4자리를 가져간다면 그 나머지숫자은 4개를 가져가겠다는 의미이다. (^02.{0}|^01.{1}|^[0-9]{3})^은 정규식을 시작한다는 의미이다. {0} 는 02로 시작할경우, .{0}는 문자하나를 출력하겠다는 의미이고 뒤에 오는 숫자를 쓰지않고 02만 출력된다|는 or연산자역할이다.^01.{1}는 01로 시작할경우, .{1}는 01 이후로 오는 1자리까지 숫자를 출력하겠다는 의미이고 여기서는 01x가 된다.[0-9]{3}는 0부터 9까지 숫자중에서 입력된 3가지 숫자를 가지겠다는 의미이다.","link":"/2020/06/15/200615me/"},{"title":"[ITWILL : JAVA]비트연산자, 이진수와 십진수 변환","text":"ITWILL학원 : 7강 JAVA BY 윤미영강사1. 비트연산자2진수 형태로 연산을 진행한다.따라서 2진수로 표현할 수 있는 정숨나이 피연산자가 될 수 있다.흔히 쓰는 건 아니고 임베디드개발환경이나 안드로이드개발환경에서 종종 사용하는 연산방법이다. a /= b의 의미는 a|b 연산값을 a에 할당한다는 의미이다. 참고링크 : 비트연산자 개념 및 예시 2. 이진수와 십진수 변환비트연산자를 잘 활용하려면 십진수와 이진수의 변환이 머리속에서 빨리 일어나야한다 ㅋㅋㅋㅋㅋㅋㅋㅋ이진수는 중학교때 배웠을 거같지만… 기억나지않으므로 다시 한번 더 보자.","link":"/2020/06/17/200617javai/"},{"title":"ITWILL : 브라우저객체모델안의 history객체, screen객체, navigator객체","text":"ITWILL학원 : 10강 JS기초 BY 정규태강사1. 히스토리 객체사용자가 방문한 기록을 가지고 페이지를 이동.ex) 페이지 앞으로 가기, 페이지 뒤로 가기. history.back(); 뒤로가기 history.forward(); 앞으로가기 history.go(+/-) : 양수는 앞으로 그 숫자만큼이동, 음수는 뒤로 그 숫자만큼이동 -ex)history.go(-2) : 뒤로 두번가기. -ex)history.go(-1) : history.back()이랗 같은 역할. 뒤로 한번가기. -ex)history.go(screenTop) : 탑으로이동 history.length; 몇번 왔다갔다했는지 길이로 알려준다. 등등 1234&lt;input type=\"button\" value=\"뒤로가기\" onclick=\"history.back();\"&gt;&lt;input type=\"button\" value=\"앞으로가기\" onclick=\"history.forward()\"&gt;&lt;input type=\"button\" value=\"탑으로\" onclick=\"history.go(screenTop)\"&gt;&lt;input type=\"button\" value=\"홈으로\" onclick=\"history.go(-1)\"&gt; &lt;!-- history.back();같은역할 --&gt; 2. 스크린객체사용자의 모니터 정보/속성을 제공해주는 객체이다. screen.width; : 모니터의 가로길이를 알려준다. 반응형웹에 주로 사용함. 등등 12document.write(\"&lt;hr&gt;\"+screen.width+\"&lt;br&gt;\");//출력값 1920 3 네비게이터객체현재 방문한 사람의 브라우저 정보, OS정보를 제공해준다. navigator.userAgent : 방문자의 브라우저 및 운영체제 정보를 확인할 수 있다. navigator.appCodeName : 방문자의 브라우저 코드명 정보 등등 1234567891011121314151617181920document.write(navigator.userAgent)document.write(navigator.appCodeName+\"&lt;br&gt;\")document.write(navigator.appName+\"&lt;br&gt;\")document.write(navigator.appVersion+\"&lt;br&gt;\")document.write(navigator.language+\"&lt;br&gt;\")document.write(navigator.product+\"&lt;br&gt;\")document.write(navigator.platform+\"&lt;br&gt;\") //출력값은Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/83.0.4103.97 Safari/537.36MozillaNetscape5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/83.0.4103.97 Safari/537.36ko-KRGeckoWin32","link":"/2020/06/17/200617jspi/"},{"title":"ITWILL : 문서 객체 모델안의 form태그, 페이지이동방식(get과 post), focus() vs blur() vs select()","text":"ITWILL학원 : 10강 JS기초 BY 정규태강사1. form 태그폼태그안에 있는 정보를 저장해서 원하는 페이지로 전달하는 방법을 설정할 수 있다. 원하는 페이지는 action=”” 여기에 적어준다 action페이지로 정보를 전달할때는 주소줄의 ?뒤에 전달할 정보를 담아서 이동한다. 이러한 정보전달방식을 get방식이라고 한다 form action=” 정보를가지고 이동할 url” method=”get” 이동할 url이 없다면 자신의 페이지를 호출 method=”get”는 기본속성이므로 굳이 적지않고 생략가능하다 하지만 post는 기본이 아니므로 꼭 적어줘야한다. 예시태그로 form태그 특징 설명예시태그를 가지고 form태그 특징 세가지를 설명할 수있다 123456&lt;form action=\"ex.html\" method=\"get\"&gt; 텍스트박스 : &lt;input type=\"text\" name=\"txt\"&gt; &lt;lable&gt;텍스트박스 : &lt;/lable&gt; &lt;input type=\"text\" name=\"txt\"&gt; &lt;input type=\"submit\" value=\"전달하기\" onclick=\"fun1()\"&gt; &lt;input type=\"reset\" value=\"원래값으로 초기화\"&gt;&lt;/form&gt; lable태그 기본적으로 &lt;lable&gt;텍스트박스 :&lt;/lable&gt; 는 lable 태그안에 input태그 내용을 적어줘야 css적용이 쉬워진다. 수업편의상 label태그를 생략하고 진행하지만 항상 label태그가 있다고 생각하면 된다 input type=”submit”속성form태그안에서만 input type=”submit”이 가능하다.form태그 없이는 input type=”submit”을 쓸 수 없으므로 input type=”button”으로 대체해줘야한다 onclick보단 onsunmit데이터의 정확한 처리를 위해서 위의 태그 &lt;input type=&quot;submit&quot; value=&quot;전달하기&quot; onclick=&quot;fun1();&quot;&gt; 보다는아래 태그 &lt;form action=&quot;a.jsp&quot; method=&quot;get&quot; name=&quot;myForm&quot; onsubmit=&quot;fun2();&quot;&gt;를 더 많이 사용한다 input태그에 onclick속성보단 form태그에 onsubmit속성을 입력해줘야 정확하게 실행된다고 할수있다.실무에서도 form태그에 onsubmit속성을 더 많이 사용한다. 123456&lt;form action=\"ex.html\" method=\"get\" onsubmit=\"fun1()\"&gt; 텍스트박스 : &lt;input type=\"text\" name=\"txt\"&gt; &lt;lable&gt;텍스트박스 : &lt;/lable&gt; &lt;input type=\"text\" name=\"txt\"&gt; &lt;input type=\"submit\" value=\"전달하기\"&gt; &lt;input type=\"reset\" value=\"원래값으로 초기화\"&gt;&lt;/form&gt; 2. 페이지 이동방식 두가지 : get방식과 post방식1. get 방식 get() : 겟매서드로도 표현한다. 전송할 데이터(파라미터)를 이동할 주소정보(URL)에 붙여서 같이 전송하는 방식 장점 : 빠른 전송속도, body의 정보가 필요없음 단점 : 전달되는 정보가 모두 주소줄에 오픈됨 =&gt; 보안에 취약. 개인정보를 사용할수없다. 따라서 사용자가 봐도 모르는 정보들에 주로 사용한다. 파라미터길이가 제한됨 (256byte까지) 예시 태그예시 : form action=” 정보를 가지고 이동할 url” method=”get” 주소창 예시 : itwill.com?파라미터이름=값 파라미터 2개이상 가지고 갈때 예시(&amp;로 이어줌):itwill.com?파라미터이름=값&amp;파라미터이름=값 파라미터를 무제한으로 가져갈 수 있느냐? NOPE 한계 : 256byte 길이 이상의 정보를 가져갈 수 없다. 즉, 가져갈 수 있는 파라미터의 개수가 지정되어있다. 제한된 길이 이상의 정보를 가져 갈 경우 데이터 손실이 잃어난다. 2. post 방식 post() : 포스트매서드로도 표현한다 전송할 데이터(파라미터)를 주소줄이 아니라 body에 담은 뒤 이동할 주소정보(URL)에 전송하는 방식 장점 : 외부에서 파라미터를 볼 수 없으므로 상대적으로 보안우수 파라미터길이 제한이 없으므로 많은 양의 파라미터를 전달 가능 단점 : 상대적으로 느린 전송속도 예시 태그예시 : form action=” 정보를 가지고 이동할 url” method=”post” 주소창 예시 : itwill.com 3. focus() vs blur() vs select() focus() : 사용자가 입력 실패시 해당 요소를 선택해서 보여준다. blur() : 포커스를 해제시키는 함수이다. select() : focus와 비슷하지만 select는 focus 후 value값을 드래그해놓는다는 점이 다르다. 1234document.폼태그네임.pw.value = \"123\";document.폼태그네임.pw.focus(); //form태그안의 pw이름을 가진 곳에 \"123\"을 넣고 focus를 줌document.폼태그네임.pw.blur(); //focus해제document.폼태그네임.pw.select(); //focus하고 그 값(\"123\")을 드래그해놓음","link":"/2020/06/17/200617jspi2/"},{"title":"[ITWILL : JAVA]자바포맷스트링, Random 숫자 뽑기, 상황별 반복문 추천(for, while, do~while)","text":"ITWILL학원 : 8강 JAVA BY 윤미영강사1. JAVA format string자바 format string은 System.out.printf(“”,)를 이용하여 나타낸다. 주요한 변환코드는 아래와 같다. 포맷스트링으로 자릿수도 표현할 수 있다. 2. Random 숫자 뽑기 Random 라이브러리 : 무작위 숫자를 생성하기 위해 Random 객체를 사용해야하기때문에 import해야한다. null : 아무 값이 없다. 예약어이고 실제 값은 맨 뒤에 위치해있다. 실무에선 null보단 “”로 String을 초기화시켜준다. 왜냐하면 보통 DB에서 데이터를 가져와서 사용하는 경우가 많은데 null로 초기화해버리면 생각하지 못한 에러가 발생할 수 있기때문이다. nextlnt(n); : 매서드로 0 ~ (n-1)사이의 무작위 정수를 생성한다. 아래 코드는 0부터 99중에 랜덤숫자를 뽑아서 50이상이면 큰수로 출력하고 그 이하면 작은수로 출력한다. 12345678910111213141516import java.util.Random;public static void main(String[] args) { String result = null; Random myRandom = new Random(); System.out.println(\"----- 큰수 작은수체크\"); int num1 = myRandom.nextInt(100); //0 &amp;#126; 99사이의 정수 if(num1 &gt;= 50){ result =\"큰 수\"; }else{ result =\"작은 수\"; } System.out.printf(\"%d는 %s이다.%n\", num1, result);} 2. 상황별 반복문 추천반복문은 크게 3가지 종류가 있다.for 문, while 문, do ~ while문! 상화별로 추천하는 반복문이 있다. for 문 : 반복해야하는 횟수가 지정될 경우 유리 ex) 10번 먹으세요 123for(초기화;조건식;증감식){ 조건식이 true일때 실행할 문장} while 문 : 반복횟수보다는 상황에 의한 반복을 정의할 경우 유리 ex) 다 먹으세요 1234while(조건식){ 조건식이 true일 경우 실행할 문장 증감식;} do ~ while문 : while작업 중 최소 한 번은 실행해야 할 작업이 있는 경우 유리 ex) 한 번 먹어보고 맛있으면 다 먹으세요, 홈페이지의 메뉴 (꼭 한번은 실행되어져야하기때문에) 12345초기화;do{ 조건식이 true일때 실행할 문장 증감식;} while(조건식);","link":"/2020/06/18/200618javai/"},{"title":"ITWILL : 문서 객체 모델안의 if문에 return;의 역할, radio태그, checkbox태그","text":"ITWILL학원 : 11강 JS기초 BY 정규태강사1. if문에 return;의 역할return : 문제발생시 다른 조건을 실행하지않는다. -&gt; 지금 문제를 먼저 해결예를들어 회원가입페이지의 필수항목인 아이디를 입력하지않았다면 그 다음 항목인 비밀번호는 아예 체크하지않겠다는 의미가 된다. 아래 태그는 if조건문이 연달아 있다.첫번째 if는 아이디를 입력했는지 체크하는 조건이고 두번째 if는 비밀번호를 입력했는지 체크하는 조건문이다. 여기서 return;의 역활에 집중해보자.아이디를 입력하지않았다면 비밀번호를 체크할 필요도 없다.따라서 첫번째 if문에서 아이디가 없을시 return;를 주어 뒤의 비밀번호를 아예 체크하지않고 function이 종료된다. 12345678910111213141516function check(){ if(inputId.length &gt; 0){ alert(\"사용자 ID : \" + inputId + \"\\n\" + userInfo.memo.value); }else{ // 아이디 입력값이 없을때 alert(\"사용자ID를 입력하세요\"); document.userInfo.id.focus(); return; } if(inputPw == \"\"){ //비밀번호 입력값이 없을 때 alert(\"비밀번호를 입력하세요\") document.userInfo.pw.focus(); }}check(); 2. 라디오 Radio 태그라디오버튼은 동일한 name을 써야 한 그룹으로 묶인다.value를 꼭 작성해주어여한다. checked=”checked” 또는 checked라고 속성을 주면 해당 속성에 틱 된 상태로 출력된다.만약 여러 태그를 다 checked한 경우, 제일 마지막 태그의 속성이 틱 된 상태로 출력된다. 아래 코드는 성별체크하는 라디오버튼이다. 12345678&lt;fieldset&gt; //테두리생성되는 태그 &lt;form action=\"#\" name=\"fr\" method=\"get\"&gt; &lt;label&gt; 성별 체크 : &lt;/label&gt; &lt;input type=\"radio\" name=\"gender\" value=\"여\"&gt; 여성 &lt;input type=\"radio\" name=\"gender\" value=\"남\"&gt; 남성 &lt;input type=\"button\" value=\"성별체크유무\" onclick=\"checkRa();\"&gt; &lt;/form&gt;&lt;/fieldset&gt; 여기서 성별을 틱하지않고 성별체크유무 버튼을 클릭하게되면성별을 선택하라는 알림 팝업이 뜨고 난 뒤 focus()를 주는 checkRa() 함수를 만들어보자. 123456789function checkRa(){ let womyn = document.fr.gender[0]; let men = document.fr.gender[1]; if(womyn.checked == false &amp;&amp; men.checked == false){ alert(\"성별을 선택하세요\") womyn.focus(); }} 알림창은 잘 뜨지만 focus()는 티가 나지않는다이럴때 enter를 눌러보면 여성라디오버튼에 굵은 검정테두리를 통해 focus가 됨을 알 수 있다. enter를 안누르고 티나게 하는 방법은 없을까?기존에는 보였으나 브라우저가 업데이트되면서 그런것같다는게 강사님의 의견.w3school에서도 동일한 현상이 나타나는 것을 보니 방법이 없나보다.. 3. 체크박스 checkbox 태그라디오버튼과 다른 점은 중복체크가 가능하다는 점이다.또한 체그해지도 가능하다 내 코드 1234567891011121314151617181920212223242526272829303132333435function checkRa(){ //라디오버튼체크유무 let womyn = document.fr.gender[0]; let men = document.fr.gender[1]; if(womyn.checked == false &amp;&amp; men.checked == false){ alert(\"성별을 선택하세요\")// womyn.focus(); //동일코드// document.forms[\"fr\"].elements[\"gender\"][0].focus(); //동일코드 document.getElementsByName('gender')[0].focus(); }else{ checkRa = true; }}function checkCh(){ //체크박스체크유무 if(document.fr.hobby[0].checked == false &amp;&amp; document.fr.hobby[1].checked == false &amp;&amp; document.fr.hobby[2].checked == false){ alert(\"취미를 한 개이상 선택하세요\") document.getElementsByName('hobby')[0].focus(); }else{ checkCh = true; }}function checkboth(){ //라디오버튼과 체크박스 둘다 체크했는지 확인 console.log(checkRa == true) console.log(checkCh == true) if(checkRa == true &amp;&amp; checkCh == true){ return true; }else{ return false; }} 강사님 코드 =&gt; 다음시간에 다시 123456789101112131415161718192021222324252627282930313233343536function checkRa(){ let womyn = document.fr.gender[0]; let men = document.fr.gender[1]; if(womyn.checked == false &amp;&amp; men.checked == false){ alert(\"성별을 선택하세요\") womyn.focus(); }else{ checkRa = true; }} function checkCh(){ //내코드 if(document.fr.hobby[0].checked == false &amp;&amp; document.fr.hobby[1].checked == false &amp;&amp; document.fr.hobby[2].checked == false){ alert(\"취미를 한 개이상 선택하세요\") document.getElementsByName('hobby')[0].focus(); }else{ checkCh = true; }}function checkCh(){ //강사님코드 if(document.fr.hobby[0].checked == false &amp;&amp; document.fr.hobby[1].checked == false &amp;&amp; document.fr.hobby[2].checked == false){ alert(\"취미를 한 개이상 선택하세요\") document.getElementsByName('hobby')[0].focus(); return; } checkRa(); document.fr.submit();}","link":"/2020/06/18/200618jspi/"},{"title":"ITWILL : 브라우저객체모델안의 location객체","text":"ITWILL학원 : 9강 JS기초 BY 정규태강사1. location객체브라우저의 url(주소창)에 대한 정보를 가지고 있는 객체 location.href : 페이지이동. 현재브라우저의 주소창의 정보url를 리턴 1location.href=\"Test2.html\" location.protocol : 프로토콜은 통신규약이다 어떤 방식으로 어떤 속도로 해당 통신을 할껀지 약속. 웹통신을 위한 프로토콜 http: http:// 보안이 더 강화됨 location.hostname location.host location.reload(); 페이지새로고침(F5번과 동일한 기능) location.replace(url); 입력한 url로 페이지 이동 123456789101112131415161718&lt;input type=\"button\" value=\"location속성\" onclick=\"fun1()\"&gt;function fun1(){ alert(\"href : \" +window.location.href + \" protocol : \" +window.location.protocol + \" hostname : \"+location.hostname + \" host : \"+location.host + \" port : \"+location.port + \" search : \" + location.search);}//출력값은href : http://localhost:8088/JavaScript/JS3/Test3.htmlprotocol : http: hostname : localhost host : localhost:8088 port : 8088 search :","link":"/2020/06/16/200616jspi2/"},{"title":"[ITWILL : DB]CUI환경 VS GUI환경, 리눅스명령어자세히, vi단축키","text":"ITWILL학원 : 7강 Database BY 정지윤강사응용SW기초기술활용제 1장 운영체제 기초 활용 1. CUI환경 VS GUI환경1. GUI(Graphic User Interface)문자가 아닌 그래픽 위주로 이루어진 방식을 말하며 현재의 우리가 쓰고있는 환경을 말한다.운영체제에서 작업할때 명령어 대신 아이콘을 더블클릭하여 사용하는 등 그래픽으로 데이터를 처리하는 환경이다. 2. CUI(Character User Interface)문자로 이루어진 화면을 말한다. Dos환경일때 그래픽이 아닌 명령어(문자)로 처리하는 환경이다. 그렇다면 CUI환경에서 문서를 어떻게 작성하고 저장할까?VI편집기(브이아이에디터)를 사용하면된다. 2. VI 에디터VI편집기는 다른 에디터와 다르게 모드형 편집기이고 총 3가지모드로 구성되어있다. 명령모드 입력모드 ex명령모드 명령모드에서 편집모드로 가기 - i편집모드종료 후 명령모드 esc편집모드에서 저장하기 :w편집모드에서 저장하고 나가기 - :wp편집모드에서 저장하지 않고 나가기 - :p! 3. 리눅스명령어 명령어 잘못 실행시켰을때 : ctrl+z를 누르면 stop이 된다. 폴더복사할때 : 다른 경로로 동일한파일명을 복사하고싶을때는 새로운 파일명을 점(.)을 찍어주면 원본과 동일한 이름으로 복사된다 1$] cp 복사하고싶은파일명.txt 복사할경로/. 이밖에도 리눅스 명령어는 아래 링크에 잘 정리되어있다. 리눅스 명령어","link":"/2020/06/19/200619dbi/"},{"title":"[패스트캠퍼스python] Django 홈페이지 실습: a태그를 버튼처럼 만들기, 수평선만들기, 다양한 form태그 종류와 사용법(HTTP메서드)","text":"파이썬 인강 자기계발 챌린지 24회차 미션1. a태그 버튼처럼 만들기a태그를 css를 이용하여 버튼처럼 보이게 만들 수 있다.또 가상클래스 hover를 이용하여 마우스를 올렸을때 색상변화를 주어 선택된 것처럼 보이게 만들어 더욱 버튼같은 느낌을 연출할수있다. 참고로 cta란 Call To Action의 약자로서 클릭유도라는 의미를 가진다.hero-section자체가 클릭유도를 하는 곳이기때문에 실무에서도 cta로 사용한다고 한다. 1234567891011121314.cta{ color: white; width: 300px; font-weight: 400; margin: 0 auto 60px; display: block; padding: 20px 50px; border-radius: 8px; background: #44b78b;}.cta:hover{ background: #51be95;} 아래 이미지는 위의 태그를 적용하여 a태그를 버튼처럼 보이게 만든 것이다. 2. 수평선만들기border를 이용해서 원하는 곳에 수평선이든 수직선이든 다 그릴 수 있다. 12345.hero-section{ padding: 50px 0; text-align: center; border-bottom: 1px solid #000000;} 아래 이미지는 위의 태그를 적용하여 수평선을 만든 모습이다 3. 메인콘텐츠마크업Django사이트의 메인콘텐츠를 어떻게 구성되어있는 지 확인하고 큰 스케치를 그려보자. Stay in loop의 경우 중요한 부분이므로 h2로 작업하고 바로 밑의 설명은 여백이 있는 p태그로 진행하면 된다. Using Django 와 Contributing to Django는 메일링 서비스이므로 중요한 영역이고 동일하게 float처리를 한 것으로 보인다.따라서 h3로 작성하고 이름에는 a태그를 주어 관련된 링크로 이동시킬 수 있도록해야한다. 제출하는 곳은 form태그를 사용한다. form태그 밑에는 설명영역을 한번 더 추가하면 끝! 설명영역은 구분될 수 있도록 여백이 있는 p태그를 이용하면 된다 4. 다양한 form태그 종류와 사용법form이란 사용자의 서버에 전송하는 방법이다. 보통 어디에 활용할까? 로그인 : 아이디/비밀번호를 입력시 회원가입 : 개인정보를 입력시 블로그나 게시판 : 글작성이나 파일전송시 그렇다면 form태그는 어떻게 생겼을까? 1234567891011121314151617181920212223&lt;form action=\"/url입력\" method=\"post\"&gt; &lt;div&gt; &lt;label for=\"next\"&gt;텍스트 필드&lt;/label&gt; &lt;input type=\"text\" id=\"text\"/&gt; &lt;/div&gt; &lt;div&gt; &lt;label for=\"checkbox\"&gt;체크박스&lt;/label&gt; &lt;input type=\"checkbox\" id=\"checkbox\"/&gt; &lt;/div&gt; &lt;div&gt; &lt;label for=\"radio\"&gt;라디오버튼&lt;/label&gt; &lt;input type=\"radio\" id=\"radio\"/&gt; &lt;/div&gt; &lt;div&gt; &lt;label for=\"search\"&gt;검색&lt;/label&gt; &lt;input type=\"search\" id=\"search\"/&gt; &lt;/div&gt; &lt;div&gt; &lt;label for=\"textarea\"&gt;텍스트 영역&lt;/label&gt; &lt;input name=\"textarea\" id=\"textarea\"/&gt; &lt;/div&gt; &lt;button&gt;전송버튼&lt;/button&gt;&lt;/form&gt; form의 action속성 : form태그로 입력받은 전체 내용을 어디에 보낼 것인지를 결정한다. 즉, 사용자가 입력한 데이터를 전송할 서버의 URL를 입력하면 된다. form의 method속성 : form태그로 입력받은 전체 내용을 어떻게 처리한 것인지를 결정한다 즉, 사용자가 입력한 데이터를 전송하는 방법으로 아래와 같은 방식이 있다. method는 기본적으로 get과 post방식을 지원한다. get : action에 입력한 URL에 파라미터의 형태로 전송. post : header의 body에 포함해서 전송.(보통 새로운 글등록할때 post방식사용) delete : 정보를 삭제함. put : 정보 전체를 수정 또는 정보 전체를 대체함. patch : 정보 일부 부분 수정함. 참고링크 : 제로초 HTTP 메서드 form태그 사이에는 텍스트 필드, 라디오 버튼, 체크 박스와 같은 컨트롤을 생성하는 태그들이 들어가줘야한다. label태그는 input태그가 무엇인지 설명해주는 태그로 lable태그를 사용하게 된다면 항상 세트로 lable태그와 input태그를 사용해야한다. 그리고 lable태그의 for속성에는 꼭 input태그의 id값과 동일한 값이 설정되어야한다. 이를 실습페이지에 적용해보자.input과 button태그를 아래 이미지와 같이 생성한다. placholder속성을 이용하면 사용자에게 어떤 걸 적어야하는 지 알려줄수있고 사용자가 입력하는 순간 사라지는 가이드라인이라고 생각하면 된다. 그리고 나면 아래 이미지와 같이 적용된 것을 확인할 수 있다.","link":"/2020/06/17/200617python/"},{"title":"[ITWILL : WEB]Form태그안의 input와 textarea와 button 태그, input버튼태그와 button태그의 차이점, 드롭다운리스트종류","text":"ITWILL학원 : 4강 WEB(HTML, CSS) BY 김영희1. form태그안의 input태그input type=&quot;&quot; 의 종류는 엄청 많다. 그중에서 아래 코드를 가지고 몇가지 속성과 함께 예시를 알아보자. 123456789&lt;form action=\"test.jsp\" method=\"POST\"&gt; &lt;label for=\"id\"&gt;ID &lt;input type=\"text\" id=\"id\" minlength=\"6\"&gt;&lt;br&gt;&lt;/label&gt; &lt;label for=\"pw\"&gt;Password &lt;input type=\"password\" id=\"pw\"&gt;&lt;br&gt;&lt;/label&gt; &lt;label for=\"idNumber\"&gt;Identification Number(without -)&lt;input type=\"password\" maxlength=\"13\" size=\"20\"&gt;&lt;br&gt;&lt;/label&gt; &lt;textarea name=\"memo\" id=\"\" cols=\"50\" rows=\"10\"&gt;&lt;/textarea&gt;&lt;hr&gt;&lt;input type=\"submit\" value=\"입력한대로 제출\"&gt;&lt;input type=\"reset\"&gt; &lt;/form&gt; label for=””와input id=””는 꼭 일치시켜준다 input type=”password” maxlength=”13” size=”20” type=”password”는 type=”text”랑 동일하나 외부에 암호화되어 보여진다. maxlength=”13”속성으로 전화번호나 주민등록번호등 최대길이가 지정되어있는 정보들을 데이터 입력길이 지정해줄수있다. size=”20” 는 input에 쓰여진 글자의 숫자를 새고 그만큼 size를 늘리는 방식이다. size속성의 경우 한글 및 영문, 폰트크기에 따라서 size가 달라지기 때문에 width값이 정확하지 않기때문에 잘 사용하지않는다. 보통 css로 크기작업을 해준다 input type=”submit” value속성을 적어주지 않으면 브라우저마다 기본 이름이 나온다 기본이름 크롬 : 제출 / 익스엑스 : 퀴리전송 기본이름을 바꾸고싶으면 value=”입력한대로 제출” 이렇게 바꿔주면 버튼안의 글자가 입력한 내용으로 바뀐다 input type=”reset” value속성을 적어주지 않으면 브라우저마다 기본 이름이 나온다 기본이름 크롬 : 초기화 / 익스엣지 : 초기화 기본이름을 바꾸고싶으면 value=”입력한 내용 초기화” 이렇게 바꿔주면 버튼안의 글자가 입력한 내용으로 바뀐다 위의 input type=&quot;submit&quot;와 input type=&quot;submit&quot;은 form태그안에 위치해있을때 사용가능하다! 12345678&lt;h1&gt;파일전송&lt;/h1&gt;&lt;label for=\"ph\"&gt;증명사진&lt;/label&gt; &lt;input type=\"file\" value=\"너의파일\" name=\"\" id=\"ph\"&gt;&lt;h1&gt;검색어 삭제&lt;/h1&gt;&lt;label for=\"\"&gt;&lt;/label&gt;&lt;input type=\"search\" name=\"\" id=\"\" value=\"검색어삭제\"&gt;&lt;h1&gt;히든&lt;/h1&gt; 숨은데이터전송&lt;label for=\"\"&gt;&lt;/label&gt; &lt;input type=\"hidden\" name=\"membership\" id=\"\" value=\"gold\"&gt; input type=”file” 로컬 컴퓨터의 파일을 선택하는 기능을 하는 파일전송버튼을 생성한다. 기본벨류값은 “파일전송”이고 value=”너의파일”이렇게 지정해줘도 보여지는 글이 바뀌지않는다. input type=”search” 검색창을 입력하는 기능은 하지 않고 입력된 검색어를 한꺼번에 삭제해주는 버튼을 만들어주는 기능을 한다. 유저에게 유용한 기능이다 input type=”hidden” hidden타입은 문서상에 출력되지않는다. 그럼 어디다 쓸까? DB를 다룰때 주로 사용된다. 2. form태그안의 textarea태그닫힘태그가 꼭 필요하다.속성들도 꾸미기이기때문에 최근에는 속성을 사용하는대신 css에서 크기를 조작한다. 속성 cols=”” : 가로길이 ex)cols=”10” : 10줄이 들어가는 크기의 길이 rows=”” : 세로길이 ex)rows=”5” : 5열이 들어가는 크기의 길이 1&lt;textarea name=\"textarea\" cols=\"50\" rows=\"10\"&gt;&lt;/textarea&gt; 3. form태그안의 button태그버튼태그의 타입에는 4가지 종류가 있다 type=”submit”type을 적지않아도 기본으로 적용되는 디폴트값이다 12&lt;button type&gt;제출&lt;/button&gt;&lt;button type=\"submit\"&gt;제출&lt;/button&gt; type=”button”그냥 일반 버튼이다. 따라서 onclick=””으로 function이나 url을 연결할수있다. 1&lt;button type=\"button\"&gt;그냥버튼&lt;/button&gt; type=”menu”타입을 메뉴라고 주게되면 minlength=””를 적용하였을때 안내메세지를 띄어주는 신통방통한 기능이다그런데 구글링해보니 많이 사용하지 않는 타입속성이었다.왜지?나는 좋은데… 아무튼 잘 사용하지 않는 속성인 것 같다. 1&lt;button type=\"menu\"&gt;메뉴&lt;/button&gt; type=”reset”입력했던 값을 초기화시키는 버튼이다. 1&lt;button type=\"reset\"&gt;리셋&lt;/button&gt; 4. input=&quot;button&quot;태그와 button태그의 차이점input=&quot;button&quot;태그와 button태그는 submit을 수행하기에 기능적으로 동일하다.그렇다면 왜 나눠져있을까? button태그를 사용하면버튼안에 이미지를 함께 넣거나 버튼글자의 형태(굵기,기울기등)를 바꾸거나 웹아이콘을 넣는 등의 활용도가 높다. 참고링크 : web icon 사용방법 참고링크 : web icon 종류 따라서 요즘에는 input=&quot;button&quot;보다는 button태그를 더 많이 사용한다. 참고링크 : input type=”submit” vs button 비교 5. 드롭다운리스트 Dropdown Listdropdown list는 항목이 많을때 선택할 수 있게끔 아래로 내려오는 목록형식으로 나타내는 태그이다.공간절약형 객관식이다. 드롭다운 리스트를 이미지로 먼저 만나보자. 위의 4가지 형태를 어떻게 html 태그로 만들수있을까? 1. 기본형1234567&lt;select name=\"과목\" id=\"\"&gt; &lt;option value=\"HTML\"&gt;HTML&lt;/option&gt; &lt;option value=\"CSS\"&gt;CSS&lt;/option&gt; &lt;option value=\"JSP\" selected&gt;JSP&lt;/option&gt; &lt;option value=\"JAVA\"&gt;JAVA&lt;/option&gt; &lt;option value=\"직업기초\"&gt;직업기초&lt;/option&gt;&lt;/select&gt; 기본적으로 적은 순서대로 출력된다selected 속성 : checked 속성처럼 selected를 주면 HTML이 아닌 JSP를 먼저 출력할 수 있다. 2. multiple 적용드롭다운리스트는 다중선택이 가능할까?예스예스예스! select태그에 multiple속성을 추가해주면 된다.사용할때는 ctrl를 누르고 다중선택을 하면 표시가 된다.선택된채로 출력되는 selected도 적용가능하다 1234567&lt;select name=\"과목\" multiple&gt; &lt;option value=\"HTML\"&gt;HTML&lt;/option&gt; &lt;option value=\"CSS\"&gt;CSS&lt;/option&gt; &lt;option value=\"JSP\" selected&gt;JSP&lt;/option&gt; &lt;option value=\"JAVA\"&gt;JAVA&lt;/option&gt; &lt;option value=\"직업기초\"&gt;직업기초&lt;/option&gt;&lt;/select&gt; 3. size 적용드롭다운리스트는 다중선택되진않지만 박스리스트형태로 출력하고싶다면?속성 size=&quot;n&quot;을 추가해주면 된다.항목 n개가 보이는 상자형으로 출력된다. 1234567&lt;select name=\"과목\" size=\"10\"&gt; &lt;option value=\"HTML\"&gt;HTML&lt;/option&gt; &lt;option value=\"CSS\"&gt;CSS&lt;/option&gt; &lt;option value=\"JSP\" selected&gt;JSP&lt;/option&gt; &lt;option value=\"JAVA\"&gt;JAVA&lt;/option&gt; &lt;option value=\"직업기초\"&gt;직업기초&lt;/option&gt;&lt;/select&gt; 4. optgroup label=”” 적용만약 optgroup마다 selected를 추가해주면 어떻게 될까? selected가 다 출력되는 것이 아니라 selected속성이 들어간 제일 마지막(순서가 제일 아래인)태그 하나만 선택된채로 출력된다. 1234567891011&lt;select name=\"과목\"&gt; &lt;optgroup label=\"오전수업선택\"&gt; &lt;option value=\"HTML\" selected&gt;HTML&lt;/option&gt; &lt;option value=\"CSS\"&gt;CSS&lt;/option&gt; &lt;/optgroup&gt; &lt;optgroup label=\"오후수업선택\"&gt; &lt;option value=\"JSP\" selected&gt;JSP&lt;/option&gt; &lt;option value=\"JAVA\"&gt;JAVA&lt;/option&gt; &lt;option value=\"직업기초\"&gt;직업기초&lt;/option&gt; &lt;/optgroup&gt;&lt;/select&gt;","link":"/2020/06/19/200619webi/"},{"title":"[패스트캠퍼스python] 설명글 보이지 않게 스타일링, 버튼태그를 input 태그안에 넣기, side content 레이아웃 스케치, 가상요소사용하여 화살표 만들기, nth-chird()","text":"파이썬 인강 자기계발 챌린지 25회차 미션1. 설명글 보이지 않게 스타일링 위의 이미지처럼 설명글을 보이지않게 처리하기위해서는 두가지방법이 있다. display: none; visibility: hidden; 1234.mailing-form &gt; lable{ display: none; visibility: hidden;} 적용시키면 아래 이미지와 같이 설명글은 보이지않게 된다. 이렇게해도 설명글은 보이지 않지만, 스크린리더와 같이 보조기기를 사용하는 사용자들을 위해 웹접근성을 고려한 스타일링을 할 수 있다. 12345678.mailing-form &gt; lable { position: absolute; width: 1px; height: 1px; overflow: hidden; /*크기에 넘치는 내용은 숨겨짐*/ margin: -1px;/*음수마진 가능*/ clip: rect(0,0,0,0);/*상하좌우를 자를 수 있음*/} overflow : hidden;의 경우 안에 있는 데이터가 흘러넘치는 경우 과감하게 넘치는 내용을 숨겨버리는 역할을 한다. margin : -1px; 마진은 음수로도 줄 수 있다. clip : rect(0,0,0,0); 앞으로도 사용될지 안될지 잘 모르는 속성이긴 하지만 현재로선 스크린리더 지원에 가장 적합한 속성이다. 상하좌우를 숫자만큼 남기고 자를수있다. 현재 아예 안보이게 만들고싶으므로 모든 숫자를 0으로 설정했다. 2. 버튼태그를 input 태그안에 넣기위에서 가져 온 이미지를 이번엔 input태그와 button태그에 초점을 맞추어 다시 한번 더 보자. 스타일링을 위해 버튼태그를 어떻게 하면 input태그안에 넣을 수 있을까?position속성으로 가능하다. 12345678910111213141516.input[type=\"email\"]{ width: 100%; border: 1px solid #44b78b; border-radius: 4px; height: 5rem;}.mailing-form-btn{ position: absolute; /*input속성안에 위치해야하기때문에 그렇다면 기준은? mailing-form-&gt;mailing form에서 relative*/ top: 0; right: 0;}.mailing-form{ position: relative;} .input[type=”email”]{}의 의미는 input태그중에 type속성을 email로 가지고 있는 모든 태그들을 선택하는 타입선택자이다. input태그에 width: 100%;를 주게되면 안에 들어오는 btn크기에 맞게 100%가 된다. 버튼태그를 input태그안으로 넣기위해선 position값을 주어야한다. bhn태그는 position : absolute;로 주고 버튼태그의 기준인 form태그로 잡고 form태그의 position : relative;를 준다. 위의 태그를 적용하면 아래 이미지처럼 input태그안에 button이 들어간 것을 확인할 수 있다.하지만 디자인으로서 아쉽다. 123456789.mailing-form-btn{ position: absolute; top: 30%; right: 10px; border: 0; background-color: white; color : #44b78b; cursor: pointer; /*닿으면 커서를 손가락모양 포인터로 변경시킴*/} top과 right를 input의 오른쪽중앙에 오도록 크기를 조절하면 된다 cursor는 button태그에 닿으면 커서가 화살표모양에서 손가락모양으로 변화하게끔 해주는 속성이다. progress; 로딩모양의 커서로 변한다. row-resize : 가로선 크기를 변화시켜주는 모양의 커서로 변한다. 등등 많다. 코드를 적용한 이미지이다.input태그안에 button태그가 조화롭게 잘 배치되어있고 커서모양도 submit위에 위치할때 손가락모양으로 변하는 것을 확인할 수 있다. 3. main의 side content 레이아웃 스케치 div.container-side-cta : 클릭을 유도하는 다운로드 요소가 배치되어있기에 a태그를 이용해서 버튼처럼 표현할 수 있다. 다운로드 밑에 more로 추가설명링크가 있으므로 이것또한 a태그로 마크업해주면 된다. 그리고 &gt; 부분은 가상요소를 이용하여 출력하면된다. 최근 뉴스가 나오는 부분은 그 부분 전체로 완결성을 가지고 있으므로 article태그로 작성하면된다. news의 날짜와 작성자가 출력되는 부분은 meta태그로 span, time 이용하여 작성하면된다. 위의 2번과 마찬가지이므로 class를 이용하여 같이 스타일링하고 다른 부분만 id를 이용하여 적용한다. 정의부분이기때문에 dl태그와 dt태그를 세트로 이용하면 된다. 4. 가상요소사용하여 “&gt;” 만들기아래 코드를 적용하면 바로 &gt; 가 추가됨을 확인할 수 있다. 123.more::after { content : \"&gt;\";} 5. nth-chird()nth-child()는 괄호안에 오는 숫자에 따라 선택되어지는 값이 다르다. nth-child(8) : 8번째 요소를 선택하게 된다. nth-child(n+6) : 6번째 이후의 모든 요소들을 선택하게 된다. 더 궁금한 사항은 아래 링크를 참고하면 비쥬얼적으로 잘 나타나있어 이해하기 쉽다. 참고링크 : nthmaster","link":"/2020/06/18/200618python/"},{"title":"[패스트캠퍼스python] 프레임워크 VS 라이브러리, Django의 세가지 계층, Django를 위한 패키지 설치, 가상환경실행하는 순서","text":"파이썬 인강 자기계발 챌린지 27회차 미션1. 프레임워크 VS 라이브러리 자주 사용되는 코드를 체계화하여 쉽게 사용할 수 있도록 도와주는 코드 집합이다.라이브러리와 혼동될 수 있지만 규모가 훨씬 크며 프레임워크는 프로젝트의 기반이 된다.건축에 비유를 해본다면 구조를 만드는 골조가 프레임워크고, 그 외 자재들이 라이브러리가 된다고 할 수 있다.웹 개발에 필요한 기본적인 구조와 코드(클래스, 함수등)가 만들어져있다. 기본적인 구조와 코드 예시 : URL파싱, 세션관리, 요청파싱, 응답 생성, 데이터베이스연동, 관리자페이지, 비즈니스로직, 데이터정의 등등 웹프레임워크가 위와 같이 다양한 일을 한다면 개발자는 무엇을 해야할까? 개발자는 비즈니스 로직과 데이터 정의를 중점으로 해야한다.필요한 것들만 중점적으로 하고 나머지는 프레임워크를 이용하면 된다. 2. Django란장고는 3가지의 계층을 이루고 있다. 모델 계층 뷰 계층 템플릿 계층 이는 MVC라고 하는 개발방법론(패턴)에 기반한 코드구조이다. 3. 모델 계층모델 계층은 앞에셔 얘기했던 프레임워크의 다양한 기능(URL파싱, 세션관리, 요청파싱, 응답 생성, 데이터베이스연동, 관리자페이지, 비즈니스로직, 데이터정의)중에 데이터베이스와 연동되는 기능을 담당한다. 기본적으로 데이터베이스를 사용하려면 SQL이라는 별도의 문법을 사용해야한다.하지만 Django에서는 모델 계층의 클래스를 연결만해주면 함수를 사용해서 SQL을 생성할 수 있다.간략하게 클래스를 생성하면 SQL문법으로 자동으로 table을 생성해준다. 세상-편하다! 4. 뷰 계층앞에서 얘기했던 프레임워크의 다양한 기능(URL파싱, 세션관리, 요청파싱, 응답 생성, 데이터베이스연동, 관리자페이지, 비즈니스로직, 데이터정의)중에 비즈니스 로직에 해당된다.이 비즈니스 로직은 개발영역으로 개발자가 역량을 쏟아야하는 부분이다. 뷰 계층에서 개발자가 비즈니스 로직을 작성하면 프레임워크가 URL파싱, 요청파싱, 응답관리등을 해준다. 위의 이미지처럼 한줄코드만 작성해주면, path뒤의 url로 변수등을 이용하여 요청사항을 쉽게 입력할 수 있다. 5. 템플릿 계층디자이너에게 친숙한 문법을 제공한다.HTML을 기반으로 HTML코드안에서 반복문등을 사용할 수 있는 계층이다. 6. Django를 위한 패키지 설치장고를 가상환경에서 설치하고 실행하고자한다. 1. virtualenv 설치하기 : pip3 install virtualenv사용하는 에디터에서 터미널을 열고 pip3 install virtualenv 명령어를 입력해준다.pc 한대에서 여러 프로젝트를 진행할때 버전이 다른 프로그램들을 사용하면 프로젝트왔다갔다할때마다 패키지를 재설치해줘야하는 번거로움이 있다. 따라서 프로젝트별로 패키지를 관리하는 공간이 분리되어야한다.그러한 환경을 제공해주는 것이 가상환경이다. 가상환경을 제공해주는 패키지는 다양하지만 virtualenv로 진행 할 예정이다. 2. 가상환경 폴더만들기 : virtualenv 새로운파일명패키지를 설치하면 새로운 명령어인 virtualenv를 사용할 수 있다.virtualenv 새로운 파일명명령어로 새로운 프로젝트를 생성해준다.vs code의 익스플로러에 자동으로 프로젝트가 생성된 것을 확인할 수 있다. 3. Django설치 : pip3 install django 가상환경안에 들어가기장고를 설치하기전 가상환경안에 들어가야한다.가상환경안에서 설치해야 패키지관리가 가능하다. 터미널에서 cd 가상환경을 설치한파일경로\\Scripts\\activate명령어를 입력한다.내 경우 cd Fastcampus Python\\Django\\fcdjango_venv\\Scripts&gt;activate 로 입력했는데 vs code에서는 activate 명령이 현재 위치에 있지만 이 명령을 찾을 수 없습니다.라는 명령어가 반복적으로 떠서 그냥 명령프롬프트 cmd에서 진행했다. 참고로 cmd키는 방법 : window key + r로 실행창을 띄운 뒤 cmd검색하면 끝! 가상환경에 들어가게되면 line 제일 앞부분에 (fcdjango_venv)가 적히고 그 뒤에 주소가 적힌다. 꼭 (fcdjango_venv)를 확인하고 Django를 설치하자. 장고설치하기가상환경안이란걸 확인 후 pip3 install django명령어를 입력해주면 Django가 Successfully installed asgiref-3.2.9 django-3.0.7 pytz-2020.1 sqlparse-0.3.1 성공적으로 설치된다. 7. 가상환경들어가는 순서 cmd에서 code라고 명령어를 입력하면 vs code가 오픈된다. 그냥 vs code를 더블클릭해서 오픈됨. vs code의 terminal에서 가상환경을 설치한 폴더로 이동한다.","link":"/2020/06/20/200620python/"},{"title":"[패스트캠퍼스python] git 버전관리","text":"파이썬 인강 자기계발 챌린지 26회차 미션1. git 버전관리버전관리는 필수이다.버전관리를 이용하면 아래 두가지 장점이 있다.표준처럼 사용되고 있는 버전관리 프로그램에는 git이 있다. 어떤 부분이 변경되었는지 변경전후의 소스코드를 비교하여 볼 수 있다. 시간의 순서대로 변경한 내용을 확인할 수 있다. 특정코드를 누가 수정했는지 사용자가 적혀있어서 바로 확인할 수 있다 2. git관리영역 세가지 작업디렉토리 Working directory : 현재 편집중인 파일이 저장되는 영역. 임시구역 Staging area : 저장소에 저장할 변경사항을 임시적으로 보관하는 영역. 저장소 Repository : 지금까지의 모든 변경된 작업내역이 영구히 저장되는 영역. 저장되는 순서는 소스코드를 편집 후 git add ‘경로’ 명령어로 임시구역에 보관한 뒤 git commit 명령어로 repository에 저장한다. 3. vs code로 git commit하는 방법 소스코드를 저장한다. git init 명령어 또는 vs code의 source control에서 저장한 소스코드를 불러와서 git과 소스코드를 연결한다. changes 아래에 변경된 소스코드가 보이지않는 경우 소스코드파일명을 검색해서 연결하면 된다. stage change 혹은 +버튼을 눌러서 임시구역에 보관한다. ctrl+enter로 repository에 저장한다. 즉, 소스코드를 변경한 뒤 commit을 하고 싶다면일단 소스코드를 변경한 뒤 저장을 누른다. -&gt; vs code의 stage change 혹은 +버튼을 누른다. -&gt; 커밋메모를 입력한 뒤 ctrl + enter를 누른다.위의 세단계가 기본중의 기본이다. 여기서 commit이란 두가지의 의미가 있다. 스테이징영역의 변경사항을 레포지토리에 저장하는 행위 변경사항을 묶어주는 단위 : commit을 변경사항이 있을때마다 할 수 있고 또는 모든 변경사항을 다 해준뒤 한번에 commit할수도있다. 4. vs code의 확장프로그램extensions 다운효율적인 git버전관리를 위해서 vs code의 익스텐션에서 아래 두가지익스텐션을 다운로드한다. GitLens : 소스코드옆에 바로 누가 언제 변경했는 지 알려주는 프로그램 Git History : 지금까지 commit된 히스토리를 보여주면서 언제 누가 고쳤는 지 알려주는 프로그램 5. Git History extension 사용방법vs code의 Source Control에서 ctrl + shift + p 를 누른 뒤 git view history를 검색한다. commit의 history가 최신순으로 나타나게된다 확인하고싶은 commit을 누른뒤 Compare against previous version을 클릭하면 commit전의 소스코드와 commit후의 소스코드를 비교하여 보기편하게 알려준다. 6. 위의 사항을 git bash로 하기 먼저 git bash를 열어주고 소스코드가 있는 주소로 이동한다. git status : commit이 되지 않은 변경사항을 확인한다 git add 소스코드파일명 : 변경한 소스코드파일명을 add해준다. 이 명령어로는 잘 진행되었는지 진행사항체크하기가 어렵기때문에 다시 스테이터스를 확인해줘야한다. git status : commit이 완료되었는지 확인한다. git commit -m “메모내용입력” : commit명령어를 통해 스테이징영역에 보관해둔 소스코드를 레포지토리에 저장한다. -m “메모내용입력”은 생략가능하나 앞으로의 history관리를 위해 간단한 변경사항내용을 적어주면 좋다. 7. git 원격 자동저장설정하기 vs code의 Source Control에서 ctrl + shift + p 를 누른 뒤 git add remote를 클릭한다 원격저장할 레포지토리 주소를 붙여넣는다. 이름은 origin입력한다. 점점점(…)을 클릭하여 push를 해준다 참고로, 역으로 웹 레포지토리에서 수정한 내용을 vs code로 받아보고싶을때는 ctrl + shift + p를 누른뒤 git pull을 입력하면 된다","link":"/2020/06/19/200619python/"},{"title":"ITWILL : js로 간단한 회원가입페이지 작성하기","text":"ITWILL학원 : 12강 JS기초 BY 정규태강사이때까지 배웠던 내용을 가지고 회원가입페이지를 작성해보자 회원가입페이지에서 구현해볼 기능. 1. 모든정보입력시 회원가입가능 2. 각항목의 입력값이 없을 경우 해당 요소의 알림과 함께 포커싱 3. id는 최소 4자리에서 최대10자리만 허용 4. 비밀번호확인시 두개의 값이 같은 경우 회원가입가능, 다른경우 비밀번호 확인창에 포커싱 후 경고창띄우기 5. 주민번호를 입력받으면 성별자동체크 6. 취미 선택안된경우 1번 옵션 선택 7. 과목 선택안된경우 경고창 123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960&lt;form action=\"itwill.com\" name=\"fr\" method=\"get\" onsubmit=\"return checkall();\"&gt; &lt;table border=\"1\"&gt; &lt;tr&gt; &lt;td&gt;아이디&lt;/td&gt; &lt;td&gt;&lt;input type=\"text\" name=\"id\" minlength=\"4\" maxlength=\"10\"&gt;&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td&gt;비밀번호&lt;/td&gt; &lt;td&gt;&lt;input type=\"password\" name=\"pw\"&gt;&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td&gt;비밀번호 확인&lt;/td&gt; &lt;td&gt;&lt;input type=\"password\" name=\"repw\"&gt;&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td&gt;이름&lt;/td&gt; &lt;td&gt;&lt;input type=\"text\" name=\"name\"&gt;&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td&gt;주민번호&lt;/td&gt; &lt;td&gt;&lt;input type=\"text\" name=\"idnum1\" maxlength=\"6\"&gt; - &lt;input type=\"password\" name=\"idnum2\" maxlength=\"7\"&gt;&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td&gt;성별&lt;/td&gt; &lt;td&gt; &lt;input type=\"radio\" name=\"gender\" value=\"여\"&gt;여 &lt;input type=\"radio\" name=\"gender\" value=\"남\"&gt;남 &lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td&gt;취미&lt;/td&gt; &lt;td&gt; &lt;input type=\"checkbox\" name=\"hobby\" value=\"reading\"&gt;독서 &lt;input type=\"checkbox\" name=\"hobby\" value=\"swmming\"&gt;수영 &lt;input type=\"checkbox\" name=\"hobby\" value=\"breathing\"&gt;침대에서숨쉬기 &lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td&gt;좋아하는 과목&lt;/td&gt; &lt;td&gt; &lt;select name=\"sel\"&gt; &lt;option value=\"\"&gt;선택&lt;/option&gt; &lt;option value=\"자바\"&gt;JAVA&lt;/option&gt; &lt;option value=\"js\"&gt;JavaScript&lt;/option&gt; &lt;option value=\"db\"&gt;DataBase&lt;/option&gt; &lt;/select&gt; &lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td&gt;하고싶은 말&lt;/td&gt; &lt;td&gt;&lt;textarea rows=\"5\" cols=\"30\" placeholder =\"자유롭게 입력하세요\" name=\"txt\"&gt;&lt;/textarea&gt;&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td colspan=\"2\"&gt; &lt;input type=\"submit\" value=\"제출\"&gt; &lt;input type=\"reset\" value=\"초기화\"&gt; &lt;/td&gt; &lt;/tr&gt; &lt;/table&gt;&lt;/form&gt; 위는 html태그이고 아래는 js태그이다 12345678910111213141516171819202122232425262728293031323334353637383940414243444546474849505152535455565758596061626364656667686970717273747576777879808182&lt;script type=\"text/javascript\"&gt;function checkall(){ //데이터유효성체크 let id = document.fr.id.value let pw = document.fr.pw.value let repw = document.fr.repw.value let name = document.fr.name.value let idnum1 = document.fr.idnum1.value let idnum2 = document.fr.idnum2.value let womyn = document.fr.gender[0] let men = document.fr.gender[1] if(id == \"\"){ alert(\"아이디를 입력하세요\") document.fr.id.focus(); return false; } if(pw == \"\"){ alert(\"비밀번호를 입력하세요\") document.fr.pw.focus(); return false; } if(pw != repw){ alert(\"비밀번호가 일치하지않습니다.\") document.fr.repw.select(); return false; } if(name == \"\"){ alert(\"이름을 입력하세요.\") document.fr.name.select(); return false; } if(idnum1 == \"\"){ alert(\"주민번호를 입력하세요.\") document.fr.idnum1.focus(); return false; } if(idnum2 == \"\"){ alert(\"주민번호를 입력하세요.\") document.fr.idnum2.focus(); return false; } if(womyn.checked == false &amp;&amp; men.checked == false){ if(idnum2.charAt(0) == 2 || idnum2.charAt(0) == 4){ womyn.checked = true; return false; } if(idnum2.charAt(0) == 1 || idnum2.charAt(0) == 3){ men.checked = true; return false; } } if(document.fr.hobby[0].checked == false &amp;&amp; document.fr.hobby[1].checked == false &amp;&amp; document.fr.hobby[2].checked == false){ alert(\"취미를 선택하세요\"); //document.fr.hobby[0].focus(); //사용자의 입력을 기다림 document.fr.hobby[0].checked == true; //사용자입력안할시 자동으로 0번을 선택함 } if(document.fr.sel.selectedIndex == 0){ alert(\"과목을 선택하세요\") document.fr.sel.focus(); return false; } if(document.fr.txt.value == \"\"){ alert(\"메모를 입력하세요\"); document.fr.txt.focus(); return false; }}&lt;/script&gt;","link":"/2020/06/22/200622jspi/"},{"title":"[ITWILL : JSP]JSP 첫 프로젝트 톰캣과 연결","text":"ITWILL학원 : 12강 JSP기초 BY 정규태강사기존 html코드에 java를 추가한 것이 바로 jsp이다. Project Explorer 우클릭 new &gt; dynamic web project &gt; 프로젝트이름을 적어주고 next &gt; next 후 Generate web.xml deployment descriptor를 꼭 틱해주고 Finish클릭 새로만든 프로젝트 우클릭 &gt; new &gt; jsp file 클릭 : 코드가 이미 있는 파일이 만들어졌다 이제 JSP 프로젝트를 톰캣서버와 연결해야한다. 새로 만든 프로젝트 우클릭 &gt; properties 클릭 &gt; java build path &gt; libraries &gt; server runtime 클릭 후 next를 눌러준다 tomcat을 클릭해주고 finish를 눌러준다 jsp파일에 첫번째행에 밑줄이 쳐져있던 것이 깨끗하게 사라진걸 확인할 수 있다 &gt; 서버와 연결 끝! 혹시나 안된다면 이클립스를 껐다 키거나 최상단 project 탭에 clear클릭하여 메모리를 한번 정리해준다","link":"/2020/06/22/200622jspi2/"},{"title":"[패스트캠퍼스python] Django 홈페이지 실습: web font, a태그 밑줄제거, 마우스오버시 글자색상변경, float적용방법","text":"파이썬 인강 자기계발 챌린지 23회차 미션1. web font사용폰트패밀리로 폰트를 지정해주었을 때, 만약 사용자가 해당 폰트를 다운로드해서 가지고 있지않으면 폰트 적용이 아예 안된다.이를 방지하기위해 웹폰트를 사용하면 사용자가 굳이 다운로드하지않더라고 폰트가 적용된 채로 홈페이지를 볼 수 있다. 웹폰트는 무료도 있고 유료도 있지만 제일 유명한 구글폰트는 무료이다. 구글웹폰트 구글웹폰트깃허브 : 한글 눈누 : 한글폰트로 유로뿐만 아니라 무료상업용웹폰트도 쉽게 찾을 수 있다. 웹폰트 사용법은 간단하다. 웹폰트의 link태그를 복사하여 head태그 사이에 붙여넣기하면 된다. 2. a태그 밑줄제거 text-decoration: none;a태그등을 링크를 나타나내는 태그를 사용하면 자동적으로 밑줄이 나타난다.이를 없애주기 위해서 { text-decoration: none; }을 주면 된다 아래 1번은 a태그의 본래 그대로의 모습이고 이제 { text-decoration: none; }를 적용하면 3번처럼 밑줄이 없이 예쁘게 출력되는 것을 볼 수 있다. 3. 카테고리 기본 레이아웃만들기 display: block; + padding: 10px;list-itmes밑에 있는 8개의 a태그를 한꺼번에 선택하는 방법에는 두가지가 있다.편한 방법으로 선택해주면 된다. 첫번째 방법 : .list-items a {} 12345.list-items a{ color: white; display: block; padding: 10px;} 두번째 방법 : .list-items &gt; a {} 12345.list-items &gt; a{ color: white; display: block; padding: 10px;} 1번은 위의 태그가 적용되기 전의 모습이고 3번은 적용된 후의 모습이다.패딩을 넓게 주어 사용자가 카테고리를 편하게 선택할 수 있도록 했다. 기본적으로 홈페이지 만들때 자주 사용되니 알아두면 좋다. 4. 가상클래스이용해서 마우스오버시 색상변경 구현가상클래스를 이용하여 카테고리에 마우스를 올리면 글자색상을 변경해보자.기존 글자색사은 흰색이고 해당 클래스에 마우스를 올리면 검정색으로 글자색이 변한다. 123list-items &gt; a:hover { color: black;} 이러한 디자인으로 사용자에게 지금 어느 카테고리위에 마우스가 있는지 친절하게 알려주어 사용성이 올라간다. 5. float 적용방법 위의 이미지는 메인콘텐츠와 사이드콘텐츠에 각각 { float : left; }, { float : right; }를 주었다.이로 인해 3가지 문제점이 발견된다. 하늘색은 main태그인데 main영역이 메인콘텐츠와 사이드콘텐츠의 높이를 전혀 인지하지못하고 있어 히어로콘텐츠와 메인콘텐츠, 사이드콘텐츠의 높이를 함께 포함하고 있어야하는데 히어로콘텐츠의 높이만 인식하고있다. 초록색은 footer태그인데 footer영역이메인콘텐츠와 사이드콘텐츠의 영향을 받고 있어 높이가 메인콘텐츠와 사이드콘텐츠만큼 올라와 있다. float된 속성은 normal flow에서 벗어나기때문에 자기자신의 높이를 상위태그가 알지 못하게 된다.normal flow에서 벗어났다는 의미는 해당 부분이 띄어져있다는 의미이다.따라서 이에 영향을 받는 태그들에게 { clear : both; }를 해줘서 자신의 높이를 찾도록 해줘야한다. 1번문제 해결방법 : float한 태그들을 div.container-float로 묶은 뒤 div.container-float에 가상요소를 주고 그 가상요소에 { clear : both; }를해준다. 메인콘텐츠와 사이드콘텐츠를 div.container-float안으로 감싸준다. .container-float에 가상요소를 주어 { clear : both; } 를 적용시킨다. 12345.container-float ::after{ //가상요소after display: block; content: \"\"; clear: both;} 2번문제 해결방법 : footer { clear : both; } footer태그에 아래와 같이 { clear : both; }속성을 적용시킨다.123.footer{ clear: both; }","link":"/2020/06/16/200616python/"},{"title":"[패스트캠퍼스python] 프로젝트와 앱의 차이, 템플릿생성, 프로젝트에 앱등록하기,Class생성, class Meta","text":"파이썬 인강 자기계발 챌린지 28회차 미션1. 새로운 프로젝트 생성하기 : django-admin startproject 새로운프로젝트명장고 설치가 완료되면 django-admin 명령어를 사용할 수 있다.django-admin startproject fc_community를 통해 fcdjango_venv 아래에 fc_community 프로젝트가 만들어지고 안에 기본적인 내용들이 자동생성된다. 짜라란~ 2. app생성하기 : django-admin startapp 새로운앱명 django-admin startapp board명령어를 통해 fcdjango_venv 아래에 board라는 새로운 앱이 생성되어지고 models과 view게층이 자동적으로 생성된다. 3. project와 app의 차이점그렇다면 startproject명렁어와 startapp명령어의 차이점이 무엇일까? 위의 두가지 명령어로 자동생성된 파일들을 보자. 1번 빨간색은 startproject명렁어를 통해 자동생성된 파일들이다.2번 파란색은 startapp명령어를 통해 자동생성된 파일들이다. 프로젝트는 앱 한개 이상을 담을 수 있고 관련된 configuration도 함께 담아 하나의 웹사이트를 구성한다. 앱은 뷰계층과 모델게층을 묶어서 제공하며 하나의 웹앱기능만 담당한다. 또한 app은 프로젝트 A, B, C, D등등 동시에 여러 프로젝트에 포함될 수 있다. 4. templates생성MTV모델링을 하기 위해서는 템플릿폴더를 생성해줘야한다.템플릿은 어디에나 만들어도되지만 보통 앱안에 만든다.앱폴더명을 우클릭한 뒤 새로운 폴더를 누른 뒤 폴더이름은 templates라고 생성한다.장고에서 사용하는 템플릿엔진이 사용될때 이 폴더가 기본적으로 작동한다.그러니 app을 만든 뒤 항상 templates폴더도 생성할 것!세트로 기억하자 세트! 5. 만든 app을 프로젝트에 등록하기만든 앱들이 자동적으로 프로젝트에 등록되면 정말 좋겠지만 그렇지않다.따라서 프로젝트에 만든 앱을 등록시켜 연결이 되게끔 만들어줘야한다. startproject명령어로 프로젝트를 생성하면 프로젝트폴더안에 동일한 이름의 폴더가 하나 더 생성된다.여기서 만든 앱들을 등록시킬 수 있다.프로젝트명과 동일한 파일명을 클릭하면 여러 파일 중에 settings.py가 있다.클릭후 Application definition를 찾아보면 이미 installed된 앱 목록이 나온다.장고에서 기본적으로 제공해주는 앱으로 아래 코드에서 django.contrib로 시작하는 6개가 바로 그 앱들이다.이 코드 아래에 새로 만든 app을 추가해줘야한다.꼭 등록을 해줘야 모델이라든지 뷰등을 사용할 수 있게 된다.절대 까먹지말자! 나는 board와 fcuser앱 두개를 만들었으므로 두개를 아래 코드처럼 추가해줬다. 123456789101112# Application definitionINSTALLED_APPS = [ 'django.contrib.admin', 'django.contrib.auth', 'django.contrib.contenttypes', 'django.contrib.sessions', 'django.contrib.messages', 'django.contrib.staticfiles', 'board', 'fcuser'] 6. Class생성user를 관리할 수 있는 앱을 만들어보자. 1234class Fcuser(models.Model): username = models.CharField(max_length=64, verbose_name=\"사용자명\") password = models.CharField(max_length=64, verbose_name=\"비밀번호\") registered_dttm = models.DateTimeField(auto_now_add=True, verbose_name=\"등록시간\") CharField는 문자열을 담을 수 있는 필드이다. registered_dttm에서 dttm은 실무에서 자주 사용되는 약어로 dateTime의 약자이다 auto_now_add=True 는 fcuser라는 객체가 저장되는 시점에 자동으로 현재시간을 데이터로 넣게된다. 장고는 클래스만 만들면 데이터를 생성하고 삭제하는데에 있어서 별도의 지정이 필요가 없다.클래스 하나로 모델이 완성되버린 것이다! 디폴트값이 적용되어 바로 출력되기때문에 매우 편리하다. 7. class Meta테이블명을 바꿀때는 아래 코드를 사용한다.class Meta:라는 클래스안의 클래스를 통해서 장고프레임워크에게 내가 원하는 것을 전달할 수 있다. 테이블명을 바꾸는 이유는 이해도를 높이기 위함도 있지만 기본적으로 장고에서 제공되는 테이블명과 구분되어야하기 때문에 테이블명을 바꿔주는 것이 좋다. 1234567class Fcuser(models.Model): username = models.CharField(max_length=64, verbose_name=\"사용자명\") password = models.CharField(max_length=64, verbose_name=\"비밀번호\") registered_dttm = models.DateTimeField(auto_now_add=True, verbose_name=\"등록시간\") class Meta: db_table = \"자신이 원하는 테이블명\"","link":"/2020/06/21/200621python/"},{"title":"[ITWILL : JAVA]369게임만들기","text":"ITWILL학원 : 9강 JAVA BY 윤미영강사JAVA 369게임만들기369게임을 만들어보았다.일의 자리와 소수점첫번째자리를 나누어서 처리했다. 변수 input는 사용자가 scanner를 통해 입력하는 숫자이다.변수 remainder는 숫자를 10으로 나눈뒤 소수점첫째짜리를 3,6,9인지확인한다. 함수 divideTen()는 10으로 나눠서 369인지 체크하는 반복되는 코드이므로 밖으로 뺐다.함수를 어디로 빼야하는지몰랐는데 main함수밖이면서 class안으로 빼야하는 것이었다. 123456789101112131415161718192021222324public class game369 { public static void main(String[] args) { Scanner sc = new Scanner(System.in); System.out.println(\"1~99까지 정수를 입력해주세요\"); int input = sc.nextInt(); int remainder = input%10; //소수점첫번째자리체크 if(remainder == 3){ divideTen(input); }else if(remainder == 6){ divideTen(input); }else if(remainder == 9){ divideTen(input); } } private static void divideTen(int input){ if(input/10 == 3 || input/10 == 6 || input/10 == 9){ //1의자리체크 System.out.println(\"박수짝짝\"); }else{ System.out.println(\"박수짝\"); } }} 강사님 코드는 아래와 같다.박수치는 횟수를 카운드해서 if조건문으로 박수2번이면 박수짝짝을 입력하는 함수이다. 123456789101112131415161718public static void main(String[] args) { Scanner sc = new Scanner(System.in); System.out.println(\"1~99까지 정수를 입력해주세요\"); int num = sc.nextInt(); int digit10 = num/10; //1의자리체크 int digit1 = num%10; //소수점첫째자리체크 int clapCnt = 0;//박수횟수 if(digit1%3 == 0 &amp;&amp; digit1 !=0){ clapCnt++; } //else가 필요없다. 변수가 0일때도 카운트되기때문에 꼭 제거해야한다. if(digit10%3 == 0 &amp;&amp; digit10 !=0){ clapCnt++; } //변수가 0일때도 카운트되기때문에 꼭 빼줘야한다. if(clapCnt == 2){ System.out.println(\"박수짝짝\"); }else if(clapCnt == 1){ System.out.println(\"박수짝\"); }}","link":"/2020/06/22/200622javai/"},{"title":"[패스트캠퍼스python] 은(는) 내부 또는 외부 명령, 실행할 수 있는 프로그램, 또는 배치 파일이 아닙니다의 윈도우7해결, DB관리","text":"파이썬 인강 자기계발 챌린지 29회차 미션아래는 강사님이 python3 manage.py makemigrations명령어를 입력하고 난 뒤의 터미널 출력모습이다. 그리고 아래 이미지는 내 터미널에서 출력한 모습이다. 내가 뭐 터미널에 치는 코드들이 툭하면 자꾸 은(는) 내부 또는 외부 명령, 실행할 수 있는 프로그램, 또는 배치 파일이 아닙니다.라는 출력이 떴다. 너무나 빡쳐!!!! 빡치고있는 와중에 구글링해보니 위의 에러는 환경변수에 의해 발생하는 에러라고 한다.내가 컴퓨터가 두대가 있는데 하나는 윈도우 10을 쓰지만 다른 하나는 윈도우 7를 쓴다.그래서 두 OS에 python과 vscode 그리고 가상환경을 사용할 수 있는 환경변수 설정방법을 기록하려고 한다 1. python과 vscode 그리고 가상환경을 사용할 수 있는 환경변수 설정방법1. 윈도우10 환경변수window키를 누르고 검색창에 고급 시스템 설정 보기를 검색한다. 띄어쓰기에 유의하자. 윈도우 10의 경우 환경변수를 추가할 수 있게끔 예쁜 GUI가 나온다.새로만들기를 클릭하고 아래를 추가해준다 변수 값 : C:\\Users\\파이썬저장한경로\\Python\\Python38\\Scripts; 위의 값은 파이썬에서 가상환경을 사용하기 위한 내용이다.이 밖에도 python과 vscode를 추가해주면 되는데 사실 프로그램을 다운로드할때 자동적으로 추가가되어있을 것이다.깔끔하게 해결!! 2. 윈도우7 환경변수 설정하지만 윈도우7의 경우는 거지같이 나온다.일단 환경변수 설정에 들어가보자.window키를 누르고 검색창에 고급 시스템 설정 보기를 똑같이 검색한다. 띄어쓰기에 유의하자. 새로만들기를 클릭하고 아래 값을 그대로 입력했다 변수이름 : path 변수 값 : C:\\Users\\파이썬저장한경로\\Python\\Python38\\Scripts; 왜지? 윈도우10은 리스트에 추가된 행이 바로 나오는데 윈도우7은 전혀 그런게 보이지않았다.내가 잘못했나?다시 path의 값 전체를 삭제하고 파이썬의 가상환경을 사용하기위해서 아래를 입력했다.꼭 자신이 파이썬과 vs code, 가상환경을 다운로드한 경로를 지정해야한다.C:\\Users\\파이썬저장한경로\\Python\\Python38\\Scripts\\;를 붙여넣었다. 3. 설치위치 찾기만약 python과 vs code, 가상환경을 어디 설치했는지 경로를 모르겠다면?걱정 할 필요없다!window에서 모든 프로그램을 클릭한 후 python을 찾은 뒤 우클릭한다.그리고 속성을 클릭하면 대상에 경로가 설정되어있다.그 경로 그대로 복붙하면 된다! 그리고 새로만들기를 눌렀는데 아무런 변화가 없다?!?!그래서 변경을 누르고 기존 path를 아예 삭제하고 다시 등록해보았다.그.런.데.알고보니 path의 기존경로는 절대 지우면 안되고 그 뒤에 세미콜론(;)으로 붙여서 입력해야한다는 것이다.window의 기본 path는 건들면 절대 안된다고 한다!나는 그것도 모르고… 이미 지워버렸다…멘붕왔다가 잠시 진정하고 다시 환경변수 기본값을 찾는 여정부터 이어나갔다. 4. 환경변수 기본값 찾기환경변수의 기본값은 찾는 방법은 아래와 같다.cmd를 열고 regedit명령어를 입력한다.레지스트리편집기가 자동으로 open될텐데 아래 위치로 찾아간다. HKEY_LOCAL_MACHINE\\SYSTEM\\ControlSet002\\Control\\Session Manager\\Enviroment\\Path 그리고 path를 더블클릭하면 변경되기전이 값이 저장되어있다.복붙해서 환경변수에 한꺼번에 등록했다. 휴- 살았다! 2. Database관리데이터베이스를 관리해보자.데이터를 수정,추가한 경우에 항상 1번부터 2번까지 반복을 해주면 데이터베이스버전이 새로 생성되고 관리된다. python3 manage.py makemigrations명령어를 입력한다내 경우에는 ‘python3’은(는) 내부 또는 외부 명령, 실행할 수 있는 프로그램, 또는배치 파일이 아닙니다.에러가 사라지지않았다…하지만 python명령어는 위의 환경변수 세팅을 통해 잘되었으므로 3을 뺀 python manage.py makemigrations를 입력했다. 다행히 성공적으로 create model이 되었다. python3 manage.py migrate위와 마찬가지로 3을 뺀 뒤 실행했더니 잘 진행되었다. 1번과 2번을 통해 우리는 명령어 sqlite3 db.sqlite3등을 이용하여 직접 sqlite를 만질 필요가 없다. 왜냐면 장고가 다 알아서 데이터베이스의 테이블을 자동으로 생성해주기때문이다.","link":"/2020/06/22/200622python/"},{"title":"[패스트캠퍼스python] DB에 만든 app 연결, admin페이지 출력 문자열 한글로 변경","text":"파이썬 인강 자기계발 챌린지 30회차 미션만들어놓은 DB에 내가 만든 앱 연결해보자.이는 admin.py를 이용해서 진행해야한다. 1. admin.py 작성데이터를 추가,수정한 뒤 migrate를 한 상태에서 상위 앱폴더에서 admin.py폴더를 찾는다.그리고 migrate한 models안에 있는 내용을 import해온다.pass는 아무것도 안하겠다는 의미이다.그 뒤 아래와 같이 빈 클래스를 만들어 admin에 두가지(Fcuser, FcuserAdmin) 다 등록(register)한다. 1234567from django.contrib import adminfrom .models import Fcuserclass FcuserAdmin(admin.ModelAdmin): pass admin.site.register(Fcuser, FcuserAdmin) 2. python3 manage.py runserver 명령어입력잘 반영되었는지 runserver명령어롤 틍해 실행해보자.터미널에 아래 코드들이 출력되고 그 중 http://127.0.0.1:8000/를 ctrl를 누른상태에서 click하면 바로 인터넷창이 오픈된다. 123456789(fcdjango_venv) C:\\경로\\fc_community&gt;python manage.py runserverWatching for file changes with StatReloaderPerforming system checks...System check identified no issues (0 silenced).June 21, 2020 - 14:47:46Django version 3.0.7, using settings 'fc_community.settings'Starting development server at http://127.0.0.1:8000/Quit the server with CTRL-BREAK. 주소창에 admin/ 추가입력 후 enter.인터넷창이 오픈되면 주소뒤에 admin/을 붙여준다.그러면 장고에서 기본적으로 제공하는 site가 출력되면서 로그인페이지가 나타난다.아직 첫 아이디를 만들지 않았으므로 인터넷창을 닫아주고 터미널창에 ctrl+c 명령어를 입력하여 돌아가던 server를 멈춰준다. 3. python3 manage.py createsuperuser manage.py명령어를 통해 첫 user를 생성한다.자동적으로 아이디와 이메일주소, 비번과 비번확인 총 4단계의 입력과정을 거치면 드디어 생성!! 다시python3 manage.py runserver를 통해 http://127.0.0.1:8000/admin/으로 들어가서 방금 생성한 아이디와 비번으로 로그인을 한다.그러면 아래와 같이 사이트가 뾰로롱 생성된다. 파란색띠가 app을 나타내며 Authentication and Authorization 은 장고에서 제공하는 기본 앱이고 내가 만들었던 fcuser앱이 정상적을 출력되고 그 아래에 만들었던 Fcusers모델이 잘 등록되어있는 것을 확인할 수 있다. add를 누른뒤 사용자명과 비밀번호를 입력하면 아래 이미지처럼 Fcuser object(1)가 생성되고 그 안에 추가로 만든 사용자명과 비밀번호를 확인할 수 있다. 이렇듯 장고는 데이터베이스를 건들이지않아도 웹페이지에서 데이터베이스를 쉽게 다룰 수 있어 정말 편리하다.조금 아쉬운 점이 있다면 유저명이 Fcuser object(1) 이렇게 생성되어서 어떤 유저인지 한눈에 확인하기 어렵다. 이를 바꿔주는 설정을 해보자. 4. DB웹상 유저명 보기 쉽게 변경파이썬에는 기본 문자열을 반환해주는 언더바 두개로 감싼 내장함수( str )를 가지고 있다.이를 이용하여 문자열을 원하는대로 바꿀수있다.fcuser앱 아래의 models.py에서 class 안에 아래 코드를 추가해주면된다. 12def __str__(self): return self().username 5. DB웹상 다양한 유저정보 출력원하는대로 Fcuser object(1)에서 유저명으로 변경되었다.하지만 뭔가 좀 아쉽다.더 많은 정보들이 한눈에 보였으면 좋겠다. 이럴때 해줄 수 있는 방법이 있다.fcuser앱 아래의 admin.py에서 class 안에 아래 코드를 추가해주면된다.password말고도 다양한 내용을 추가입력하면 아래 이미지처럼 한눈에 보기좋게 출력된다. 12class FcuserAdmin(admin.ModelAdmin): list_display = ('username', 'password') #튜플로 만듬 유저명 위의 카테고리설명줄도 FCUSER -&gt; 사용자명, 비밀번호로 변경된 것을 확인할 수 있다.이는 처음 클래스를 만들때 verbose_name=&quot;비밀번호&quot;속성을 추가했기 때문이다. 6. admin페이지 출력 문자열 변경admin page에서 만든 fcuser앱의 하위의 fcusers도 변경해보자.fcuser였는데 s가 붙은 이유는 기본적으로 장고에서는 복수형태로 자동변환해서 출력해주기때문이다. fcusers가 뭘 뜻하는지 알기 쉽게 한글명으로 변경하려면 fcuser앱 아래의 models.py에서 class안의 class Meta:에서 verbose_name을 속성을 주면 된다. 1234class Meta: db_table = \"fastcampus_fcuser\" verbose_name = \"패스트캠퍼스 사용자\" verbose_name_plural = \"패스트캠퍼스 사용자\" 위에서 말했듯이 장고에서 자동적으로 복수형을 기입하기 때문에 verbose_name_plural입력하지 않는 경우 아래 이미지와 같이 패스크캠퍼스 사용자s라는 한국어에서 듣도보도 못한 문법으로 출력된다ㅋㅋㅋㅋㅋ","link":"/2020/06/23/200623python/"},{"title":"ITWILL : String객체, 짤라오는 함수 4종류 .substring(), slice(), substr(), charAt(), .indexOf()와 .lastIndexOf()차이, .concat(), .split(), ID자릿수를 제한하는 이메일 유효성검사","text":"ITWILL학원 : 8강 JS기초 BY 정규태강사1. 문자열객체(String)문자열객체는 배열처럼 데이터를 저장한다. 123let name = new String(\"Hong\") //문자열객체let name2 = \"Kim\" //문자열데이터(문자열상수) 둘 다 문자열객체로 사용할수있다. 문자열객체는 두가지타입의 function을 가지고있다.스타일을 지정하는 타입의 함수와 데이터를 처리하는 타입의 함수이다. 스타일을 지정하는 함수 폰트를 굵게 표시한다.하지만 스타일을 지정하는 함수는 실제론 거의 사용하지않는다.실무에선 스타일은 css로 지정한다그렇지만 굳이 css를 쓰지않더라도 이렇게 스타일을 지정할 수있다는 사실을 알고있어야한다. 참고로 toUpperCase()와 toLowerCase()는 사용할 수 도 있다 123document.write(\"name : \" + name.bold()); //굵게 출력document.write(name.toUpperCase()+\"&lt;br&gt;\"); //모두 대문자로 출력document.write(name.toLowerCase()+\"&lt;br&gt;\"); //모두 소문자로 출력 체이닝기법함수를 연결하여 한번에 사용하는 형태이다. 1document.write(msg.fontcolor(&quot;red&quot;).fontsize(&quot;15&quot;).bold()) 위의 코드를 통해 msg의 글씨색깔은 빨간색이며 폰트사이즈는 15이고 굵게 출력된다. 데이터를 처리하는 함수 아래 함수들(2번부터 ) 모두가 데이터를 처리하는 함수이다. 2. .length길이를 구하는 함수이다 3. 짤라오는 함수 4종류 .substring(), slice(), substr(), charAt()substring(시작인덱스,끝인덱스)는 시작부터 끝 인덱스 앞자리까지 짤라온다.substring(인덱스) 이처럼 인덱스를 하나만 적는 경우에는 시작인덱스로 취급하여 시작인덱스부터 끝까지 다 짤라온다. 123456let name3 = \"이번년도는 복세편살!\"document.write(name3.substring(2,6))document.write(name3.substring(2))//출력값 년도는년도는 복세편살! 이것과 비슷한 함수로는 아래 세 가지가 있다. slice(시작,끝) : 시작인덱스부터 끝인덱스의 앞자리까지 짤라오는 함수 substr(시작인덱스,갯수) : 시작인덱스부터 갯수만큼 짤라오는 함수 .charAt(인덱스) : 해당 인덱스에 있는 문자데이터를 가져온다. 123456let name3 = \"이번년도는 복세편살!\"document.write(name3.charAt(0)) //첫번째글자 가져오기document.write(name3.charAt(name3.length-1)) //제일 끝 글자가져오기// 출력값이! 예시 1. 주민번호로 성별 구분 코드짤라오는 함수를 이용하여 주민번호로 성별을 구분하는 코드를 작성해보자총 4가지 방법의 함수로 짤라올수가 있다! 12345678910111213let num = prompt(\"주민번호를 -와 함께 입력하세요\") let checkNum = num.substring(7,8); //첫번째방법 substring사용let checkNum = num.slice(7,8); //두번째방법 slice사용let checkNum = num.substr(7,1); //세번째방법 substr사용let checkNum = num.charAt(7); //네번째방법 charAt사용if(checkNum === \"2\" || checkNum === \"4\"){ document.write(\"여성입니다\")}else if(checkNum === \"1\" || checkNum === \"3\"){ document.write(\"남성입니다\")} 예시 2. 전화번호 중간자리 가리기위에서 배운 함수로 출력이 가능하나 마지막방법인 charAt는 1자리만 가져오는 것이기때문에 불가능하다.따라서 3가지 방법으로 코드를 작성할 수 있다. 1234let phonenum = prompt(\"전화번호를 -와 함께 입력하세요\")let mobile = \"010-****-\" + phonenum.substring(9) //첫번째방법 substring사용let mobile = \"010-****-\" + phonenum.slioce(9) //두번째방법 slice사용let mobile = \"010-****-\" + phonenum.substr(9) //세번째방법 substr사용 5. .indexOf()String안에 내가 원하는 값이 있는지 찾아보는 방법으로 indexOf()를 사용한다.indexOf()의 괄호안에는 찾고싶은 요소를 입력한다해당 요소가 있는 경우에는 왼쪽에서 시작해서 제일 먼저 만나는 index의 위치를 알려주고해당 요소가 없는 경우에는 -1이 출력된다. 1234567let name3 = \"이번년도는 복세편살이야\"document.write(name3.indexOf(\"이\")+\"&lt;br&gt;\")document.write(name3.indexOf(\"하\")+\"&lt;br&gt;\")//출력값은0-1 현재 name3안에는 “이”가 2개가 있지만 첫번째 “이”의 index위치를 알려주고 있다.중복되는 데이터의 첫번째 index 위치만 알려주기때문에 중복데이터가 있으면 그 위치가 어디인지 찾기가 어렵다.그럴때 사용하는 함수가 아래에 있는 .lastIndexOf()이다. 6. .lastIndexOf()String안에 내가 원하는 값이 있는지 찾아보는 방법으로 lastIndexOf()를 사용한다.lastIndexOf()의 괄호안에는 찾고싶은 요소를 입력한다해당 요소가 있는 경우에는 오른쪽에서 시작해서 제일 먼저 만나는 index의 위치를 알려주고해당 요소가 없는 경우에는 -1이 출력된다. 1234567let name3 = \"이번년도는 복세편살이야\"document.write(name3.indexOf(\"이\")+\"&lt;br&gt;\")document.write(name3.indexOf(\"하\")+\"&lt;br&gt;\")//출력값은11-1 7. .concat()괄호에 추가하고싶은 데이터를 작성하여, 데이터를 추가하는 방법에는 아래처럼 두가지가 있다. 더하기 연산자사용 .concat()사용 1234567let name3 = \"이번년도도는 복세편살이야\"document.write(name3 + \"!!!!\"+\"&lt;br&gt;\")document.write(name3.concat(\"!!!!\")+\"&lt;br&gt;\")//출력값이번년도도는 복세편살이야!!!!이번년도도는 복세편살이야!!!! 8. .split()괄호안의 값을 기준으로 문자를 파싱(나누기)후 배열에 저장한다. 1234567let name3 = &quot;이번년도도는 복세편살이야&quot;document.write(name3.split(&quot; &quot;)+&quot;&lt;br&gt;&quot;)document.write(name3.split(&quot; &quot;)[0]+&quot;&lt;br&gt;&quot;)//출력값 : 괄호가 스페이스이므로 스페이스 기준으로 2개가 나누어진다.이번년도도는,복세편살이야이번년도도는 9. ID자릿수를 제한하는 이메일 유효성검사userEmail.indexOf(“@”) &gt;= 0)에서0대신에 다른 숫자를 넣으면 해당 숫자에 따라 최소 ID의 자리수가 달라지는 로직을 만들수있다.userEmail.indexOf(“@”) &gt;= 8)인경우 8자리이상 ID만 true가 된다. 이런 로직을 잘 짜야지 좋은 개발자가 될 수 있다. 123456789101112131415161718192021222324252627282930313233343536373839function check(userEmail){ let check1 = false; //@유무 체크 let check2 = false; //유효한 이메일주소 체크 let emailArr = [\".co.kr\", \".com\", \".net\", \".or.kr\", \".go.kr\"] if(userEmail.indexOf(\"@\") &gt;= 0){ //숫자에 따라 최소 ID의 자리수가 달라짐 8인경우 8자리이상id필요 check1 = true; } for(let i=0; i&lt;emailArr.length; i++){ //document.write(emailArr[i] + \"&lt;br&gt;\")//출력 if(userEmail.indexOf(emailArr[i]) &gt;= 0){ check2 = true; break; } } if(check1 &amp;&amp; check2){ document.write(\"사용자 이메일 확인완료 : \"+ userEmail +\"&lt;br&gt;\") }else{ document.write(\"이메일주소 오류!&lt;br&gt;\") }}check(\"s.co.kr\")check(\"s.cd\")check(\"s@.co.kr\")check(\"2@.com\")check(\"2@.or.kd\")check(\"2@.cd\")//출력값이메일주소 오류!이메일주소 오류!사용자 이메일 확인완료 : s@.co.kr사용자 이메일 확인완료 : 2@.com이메일주소 오류!이메일주소 오류!","link":"/2020/06/15/200615jspi2/"},{"title":"JS에서 테이블만들기, 자식태그, 2차원배열, 2차원배열클릭이벤트, forEach","text":"웹 게임을 만들며 배우는 JS : 틱택토JS에서 테이블만들기, 자식태그, 2차원배열, 2차원배열클릭이벤트, forEach1. JS에서 테이블과 HTML태크 만들기123456789101112131415161718192021222324252627틱택토용으로 3x3 테이블은 한번에 만드는 코드는 table&gt;(tr&gt;td*3)*3 이다그러면 아래와 같이 자동으로 아래 코드가 생성된다 &lt;table&gt; &lt;tr&gt; &lt;td&gt; &lt;/td&gt; &lt;td&gt; &lt;/td&gt; &lt;td&gt; &lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td&gt; &lt;/td&gt; &lt;td&gt; &lt;/td&gt; &lt;td&gt; &lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td&gt; &lt;/td&gt; &lt;td&gt; &lt;/td&gt; &lt;td&gt; &lt;/td&gt; &lt;/tr&gt; &lt;/table&gt;위 코드만 치면 테이블이 모습을 나타내지 않기에 style을 넣어줘야한다. &lt;style&gt; td{ border: 1px solid black; width: 80px; height: 80px; } &lt;/style&gt; 이것을 그대로 JS로 구현할 수 있다. 1234567891011var 바디 = document.body;var 테이블 = document.createElement('table'); for (let i=1; i&lt;4; i+=1){ var 행 = document.createElement('tr'); for(let j=1; j&lt;4; j+=1){ var 열 = document.createElement('td'); 행.appendChild(열); } 테이블.appendChild(행); } 바디.appendChild(테이블); 직장생활팁 : 실무에서는 무조건 html로 작성해야한다. 그게 더 효율적임. js로 나타낼 수 있다는 걸 알기만 하면 됨. 2. JS에서 HTML 태크 만들기1&lt;div&gt;태그만들기&lt;/div&gt; 을 js에서 만들려면 아래와 같이 만들면 된다. 123var div태그 = document.createElement('div'); //div태그를 만드는 것div태그.textContent = '태그만들기'; // 만든 태그에 내용을 적는 것document.body.append(div태그); // 만든 태그를 body에 표현하는 것. 이걸 꼭 해야함. 3가지가 세트라고 생각하면 됨. 3종세트! 3. 자식태그만들기123&lt;div&gt;태그만들기 &lt;button&gt;버튼&lt;/button&gt;&lt;/div&gt; 을 js에서 만들려면 방법2가지가 있다. 123456789방법 1 : append 쓰기var div태그 = document.createElement('div'); div태그.textContent = '태그만들기'; document.body.append(div태그);var 버튼태그 = document.createElement('button'); 버튼태그.textContent = '등록'; div태그.append(버튼태그); //div태그(모부태그)안에 자식태그로 넣는 것. 123456789방법 2 : appendChild 쓰기var div태그 = document.createElement('div'); div태그.textContent = '태그만들기'; document.body.append(div태그);var 버튼태그 = document.createElement('button'); 버튼태그.textContent = '등록'; div태그.appendChild(버튼태그); //div태그(모부태그)안에 자식태그로 넣는 것. 둘 다 잘 작동한다 그렇다면 둘의 차이점은 무엇일까? 4. .append와 .appendChild의 차이점123&lt;div&gt;태그만들기 &lt;button id='비교해보자'&gt;등록&lt;/button&gt;&lt;/div&gt; 기존 js 12345678var div태그 = document.createElement('div'); div태그.textContent = '태그만들기'; document.body.append(div태그);var 버튼태그 = document.createElement('button'); 버튼태그.textContent = '등록'; 버튼태그.id = '비교해보자'div태그.append(버튼태그); //div태그(모부태그)안에 자식태그로 넣는 것. 위와 같이 이미 만들어져있는 HTML에서 ‘버튼’뒤에 string을 추가하고 싶다. 이때 2가지 비교해보자. 1234방법 1 : append 쓰기기존 js의 아래부분에 추가한다document.getElementById('비교해보자').append(\" 이건 어팬드\"); 버튼안에 ‘버튼 이건 어팬드’라고 출력되며 잘 작동한다 두번째 appendChild쓰면 어떨까? 12345방법 2 : appendChild 쓰기기존 js의 아래부분에 추가한다document.getElementById('비교해보자').appendChild(\" 이건 어팬드차일드\");//TypeError: Failed to execute 'appendChild' on 'Node': parameter 1 is not of type 'Node'. 타입에러가 난다. 왜일까? appendChild는 element가 필요하기 때문. 따라서 아래와 같이 적어야한다. 12345678방법 2-1 : appendChild 쓰기기존 js의 아래부분에 추가한다var 어팬드차일드 = document.createElement('text');또는var 어팬드차일드 = document.createElement('span');어팬드차일드.textContent = ' 이건 어팬드차일드'document.getElementById('비교해보자').appendChild(어팬드차일드); 버튼안에 ‘버튼 이건 어팬드차일드’라고 출력되며 잘 작동한다 만약 버튼 안의 text를 아예 바꾸고 싶다면 appendChild와 innerHTML를 세트로 사용하면 된다! 1234567방법 2-2 : appendChild + innerHTML 세트로 쓰기//이 방법은 기존js에서 수정이 필요하다//div태그.append(버튼태그);에서 appendChild로 수정이 필요하다 div태그.appendChild(버튼태그); document.getElementById('비교해보자').innerHTML =' 이건 어팬드차일드'; 딱 2줄 바꿨다. 근데 이건 버튼태그안의 내용에 추가하는 게 아니라 내용 자체를 변경하는 것이다 따라서 버튼태그안의 text인 ‘등록’은 없어지고 ‘ 이건 어팬드차일드’만 남는다. 결론적으로 appendChild사용할 수 있는 모든 경우는 append 사용이 가능하지만, 그 반대는 아니다.appendChild + innerHTML 세트로 사용하면 내용 변경에 유용하다참고링크 : https://rpubs.com/raulUbiqum/append 5. 2차원배열3x3칸을 만들었다면 그 안에 O,X 배열을 넣어야 게임을 만들 수 있다. 그것을 2차원 배열이라고 하는데 아래처럼 보이게 만들고 싶다. 12345열들 = [ [첫칸, 두칸, 세칸] [첫칸, 두칸, 세칸] [첫칸, 두칸, 세칸]] 어떻게 하면 될까? 2차원 배열을 만드는 방법 첫번째 스탭은 123456789101112131415161718//틱택토게임STEP1. JS로 3X3테이블만들기var 바디 = document.body;var 테이블 = document.createElement('table');var 행들 = [];var 열들 = []; for (let i=1; i&lt;4; i+=1){ var 행 = document.createElement('tr'); 행들.push(행); 열들.push([]); //빈 배열 3개를 만듬 즉, 행 3개를 만듬 console.log(행들, 열들); for(let j=1; j&lt;4; j+=1){ var 열 = document.createElement('td'); 행.appendChild(열); } 테이블.appendChild(행); } 바디.appendChild(테이블); 콘솔로그를 확인하면 빈 배열 3개가 생겼으므로 그 배열에 2차원 배열을 넣어야한다. 두번째 스탭은 1234567891011121314151617//틱택토게임STEP1. JS로 3X3테이블만들기var 바디 = document.body;var 테이블 = document.createElement('table');var 열들 =[]; for (let i=1; i&lt;4; i+=1){ var 행 = document.createElement('tr'); 열들.push([]); //빈 배열 3개를 만듬 즉, 행 3개를 만듬 for(let j=1; j&lt;4; j+=1){ var 열 = document.createElement('td'); 열들[i-1].push(열); //왼쪽상단제일첫번째칸에 열을 넣는 것. 행.appendChild(열); } 테이블.appendChild(행); } 바디.appendChild(테이블);console.log('행들' , 행들, '열들', 열들); 콘솔로그를 확인하면 짜잔- 2차원 배열 완성! 6. 2차원배열 클릭이벤트이벤트리스너로 만든 2차원배열을 클릭할때마다 O,X를 나타나게끔 구현 3번의 들여쓰기가 있기에 코딩격언에 따라 ㅋㅋㅋ 변수에 function을 넣는다. 12345678910111213141516171819202122232425262728293031//틱택토게임STEP2. 2차원배열에 클릭하면 O,X 구현 var 턴 = 'X';var 비동기콜백 = function (이벤트){ console.log(이벤트.target); //열을 지목 console.log(이벤트.target.parentNode); //모부코드를 지목(=여기선 행) console.log(이벤트.target.parentNode.parentNode); //조모부코드를 지목(=여기선 테이블) var 몇번행 = 행들.indexOf(이벤트.target.parentNode); //인덱스오브로 몇줄인지 찾을 수 있음 console.log('몇줄', 몇번행); var 몇번열 = 열들[몇번행].indexOf(이벤트.target); console.log('몇칸', 몇번열); // if(열들[몇번행][몇번열].value !== '') 여기서는 밸류가 아니라 텍스트콘텐트다 //input의 값이 value이고 //태그 안 글자는 textContent if (열들[몇번행][몇번열].textContent !== ''){ //칸이 이미 채워져있는 경우 console.log('빈칸아닙니다') }else{ console.log('빈칸입니다') 열들[몇번행][몇번열].textContent = 턴; if (턴 === 'X'){ 턴 = 'O'; }else { 턴 = 'X'; } }};바디.append(결과); 이벤트.target = 열을 지목하는 것 이벤트.target.parentNode = 모부코드를 지목하는 것. 여기선 행으로 지정해놓았다 배열.indexOf(‘이거’) = 배열안에 ‘이거’가 몇번째에 있는지 순서를 알려준다. 참고 : https://www.w3schools.com/jsref/jsref_indexof_array.asp 2차원 배열을 클릭하면 X나O로 배열안의 내용을 바꿔주고 싶을 때는 .value가 아니라 .textContent이다. 12열들[0][1].value = 'X' 여기서는 error 뜸 열들[0][1].textContent = 'X' 여기서는 배열의 0번째행 1번째열이 'X'로 변경됨. input의 값은 .value를 사용하고 태그 안 글자는 .textContent를 사용한다 7. 테이블의 3칸이 다 X거나 O로 채워졌는 지 구현12345678910111213141516171819202122232425262728293031323334353637383940414243444546474849var 결과 = document.createElement('div');//틱택토게임STEP3. 3칸이 다 X거나 O로 채워졌는 지 구현 var 다참 = false; //가로줄검사 if(열들[몇번행][0].textContent === 턴 &amp;&amp; 열들[몇번행][1].textContent === 턴 &amp;&amp; 열들[몇번행][2].textContent === 턴){ 다참 = true; } //세로줄검사 if(열들[0][몇번열].textContent === 턴 &amp;&amp; 열들[1][몇번열].textContent === 턴 &amp;&amp; 열들[2][몇번열].textContent === 턴){ 다참 = true; } //대각선검사 if(몇번행 - 몇번열 === 0){ if(열들[0][0].textContent === 턴 &amp;&amp; 열들[1][1].textContent === 턴 &amp;&amp; 열들[2][2].textContent === 턴){ 다참 = true; }} if(Math.abs(몇번행-몇번열)===2){ if(열들[0][2].textContent === 턴 &amp;&amp; 열들[1][1].textContent === 턴 &amp;&amp; 열들[2][0].textContent === 턴){ 다참 = true; }} //다 찼으면 if (다참){ 결과.textContent = 턴 +'님의 승리!'; console.log(턴 + '님의 승리!') //승리한 뒤에는 초기화가 되어야한다. 아래는 초기화하는 코드. 턴 = 'X'; 열들.forEach(function (행){ //1차원으로 행을 먼저 선택한 후 행.forEach(function(열){ //2차원으로 선택된 행에서의 열을 함께 선택함. 열.textContent = ''; }); }); }else{ if (턴 === 'X'){ 턴 = 'O'; }else { 턴 = 'X'; } } }}; 2차원 배열이니까 반복문 2번씩 사용된다. 3차원배열이면 3번씩 사용됨. 중첩문을 줄이는게 코딩을 잘 하는 것. 8. 배열.forEach(function(){ })123456789[1,2,3,4,5].forEach(function(엘리먼트){ //배열안의 것들을 요소(element)라고 부름 console.log(엘리먼트);});//output =&gt;12345 참고 : https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/forEach","link":"/2019/09/07/190907/"},{"title":"Math.random(), Math.floor&#x2F;ceil&#x2F;round, forEach와map, for반복문과while반복문사용차이, .sort(오름차순정렬) setTimeout(function (){} , 밀리초)","text":"웹 게임을 만들며 배우는 JS : 로또추첨기Math.random(), Math.floor/ceil/round, forEach와map, for반복문과while반복문사용차이, .sort(오름차순정렬) setTimeout(function (){} , 밀리초)1. Math.random()랜덤한 수를 뽑는 매서드이다. 123456Math.random() 에서 * n을 하면, n전까지의 숫자가 random으로 나온다.보기쉽게 소수점첫째자리 버림 하는 함수인 Math.floor()와 함께 주로 사용한다.예를들어Math.floor(Math.random()*5)//=&gt; 0,1,2,3,4 숫자들이 랜덤으로 출력됨. 2. Math.floor()와 Math.ceil()와 Math.round()세가지의 차이점은 123Math.floor() : 소수점 버림. 정수로 반환. Math.ceil() : 소수점 올림. 정수로 반환.Math.round() : 소수점 반올림. 정수로 반환. 3. .forEach(function(){})와 .map(function(){})STEP1. 로또 숫자 만들기(1~45까지) 123456789101112var 후보군 = Array(45); //empty가 45개 생기고 empty의 특징은 foreach반복문 적용 불가.var 필 = 후보군.fill(); //필을 해줘야 45개의 emtpy에서 undefined가 된다.empty가 아니기에 forEach반복문 실행가능해짐.//forEach를 사용해서 억지로 숫자를 넣을 수 있다.필.forEach(function(요소,인덱스) { 필[인덱스] = 인덱스 + 1; });console.log(필);//=&gt; (45) [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45] 더 좋은 방법이 있다. 바로 maping이다..map(function(){})은 array 요소와 1대1로 mapping이 된다. 12345678var 후보군 = Array(45); var 필 = 후보군.fill(); var 맵 = 필.map(function(요소, 인덱스){ return 인덱스 + 1});console.log(맵);//=&gt; (45) [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45] 굳이 변수를 3개씩 많이 지정할 필요가 없다. 위의 전체를 변수 1개로 그리고 단 세 줄로 나타낼 수 있다. 12345var 후보군 = Array(45).fill().map(function(요소, 인덱스){ return 인덱스 + 1});console.log(후보군);//=&gt; (45) [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45] 세상 깔~끔! 4. for반복문과 while반복문 사용차이STEP2. 숫자를 랜덤하게 섞고 총7개 숫자를 뽑기 숫자를 랜덤하게 섞은 뒤 7가지의 숫자를 뽑고자 한다면 흔히 for문을 먼저 생각할 것이다. 1234567891011121314var 셔플 = [];for (var i=0; i&lt;후보군.length; i+=1){ var 이동값 = 후보군.splice(Math.floor(Math.random()*후보군.length), 1)[0]; 셔플.push(이동값);} console.log('---')console.log('후보군길이: '+후보군.length); //=&gt;22개console.log('셔플길이: '+셔플.length); //=&gt;23개// 후보군길이 + 셔플길이 = 45 개 된다. // 즉, 기존 후보군길이 45개에서 셔플로 23개 빠지고 나머지 22개만 남게된다.console.log('후보군: '+후보군.sort(function(p, c){ return p-c;})); console.log('셔플숫자: '+셔플.sort(function(p, c){ return p-c;})); 하지만 for반복문을 못 쓰지 못한다. 후보군길이 + 셔플길이 = 45 개 된다. 즉, 기존 후보군길이 45개에서 셔플로 23개 빠지고 나머지 22개만 남게된다. 후보군.length가 45개에서 22개로 줄어들면 우리가 원하는데로 45개에서 랜덤숫자 7개를 뽑을 수 없다. 지금 23개에서 랜덤숫자 7개 뽑는 꼴이 되버림. 따라서 이럴 때는 while을 쓴다. 12345678910111213while (후보군.length&gt;0){ var 이동값 = 후보군.splice(Math.floor(Math.random()*후보군.length), 1)[0]; 셔플.push(이동값);}console.log('---')console.log('후보군길이: '+후보군.length); //=&gt; 0개console.log('셔플길이: '+셔플.length); //=&gt; 45개// 후보군길이 + 셔플길이 = 45 개 된다. // 즉, 기존 후보군길이 45개에서 셔플로 45개 빠지고 나머지 0개만 남게된다.console.log('후보군: '+후보군.sort(function(p, c){ return p-c;})); console.log('셔플숫자: '+셔플.sort(function(p, c){ return p-c;})); for반복문은 내가 몇번 반복해야할 지 정확히 알 때 사용하면 좋고, while반복문은 내가 몇번 반복해야할 지 모를 때, 그리고 기준값이 계속 변경될때 사용하면 좋다. 여기서 기준값은 후보군.length다. 이렇게 뽑은 랜덤한 7개의 숫자는 아직 console.log를 통해 볼 수 밖에 없다. 따라서 화면에 구현하는 방법은 html로 결과창태그를 만든 뒤 js상으로 결과창태그를 불러와서 뽑은 랜덤당첨숫자들이 결과창태그의 자식태그로 들어가면 된다. 123&lt;div id='결과창'&gt; &lt;div&gt;여기에 각 당첨숫자태크가 갯수만큼 자동으로 생겨야함&lt;div&gt; //그렇다면 for문이겠지?&lt;/div&gt; 123456789//1.html상의 결과창태그를 js로 가져오는 방법은 두가지이며 아래 5번에서 자세히 설명함!var 결과창 = document.getElementById('결과창');//2.뽑힌 숫자들을 결과창태그의 자식태그로 넣기for(let i=0; i&lt;당첨숫자들.length; i+=1){ var 공 = document.createElement('div'); //i번만큼의 div태크 만들고 공.textContent = 당첨숫자들[i]; //div태크안에는 뽑힌 당첨숫자들을 하나씩 넣고 결과창.appendChild(공); //결과창태크의 자식태그로 넣는다} 5. JS에서 html태그를 불러오는 2가지 방법첫번째, getElementById 와 getElementsByClassName 를 이용하기 두번째, querySelector 와 querySelectorAll를 이용하기(권장) 1234567&lt;body&gt; &lt;div&gt;당첨 숫자는? ㄷㄱㄷㄱㄷㄱ&lt;/div&gt; &lt;div id='결과창'&gt;&lt;/div&gt; &lt;div&gt;보너스숫자&lt;/div&gt; &lt;div class='보너스'&gt;&lt;/div&gt; &lt;script src = \"로또추첨기.js\"&gt;&lt;/script&gt; &lt;/body&gt; 이 태그들 중 결과창과 보너스를 js로 가져오는 방법은 1234567//첫번째 방법사용var 결과창 = document.getElementById('결과창'); var 칸 = document.getElementsByClassName('보너스')[0]; //class의 경우 여러개 사용이 가능해서 꼭 뒤에 [n] 몇번째 클래스인지 적어줘야함//두번째 방법사용var 결과창 = document.querySelector('#결과창'); //id일 경우 #var 칸 = document.querySelector('.보너스'); //class일 경우 . 끝!이렇게 가지고 와서 원하는 방향으로 사용하면 된다! 6. .sort와 .sort(function(p, c){ return p-c;})123.sort() : 숫자 정렬예를들어 [2,15,4,7,27].sort();//=&gt; [15,2,27,4,7] . 뭔가 이상한데? 첫째자리 수를 기준으로 숫자 오름차순이라서 그렇다. 15에 1이 먼저 있기때문에 15가 제일 첫번째로 정렬되었다. 우리가 원하는 오름차순은 아래와 같다. 내림차순은 덤으로 공부! 1234567.sort(function(p, c){ return p-c;}) : 숫자오름차순 정렬예를들어 [2,15,4,7,27].sort(function(p, c){ return p-c;})//=&gt; [2,4,7,15,27].sort(function(p, c){ return c-p;}) : 숫자내름차순 정렬예를들어 [2,15,4,7,27].sort(function(p, c){ return c-p;})//=&gt; [27,15,7,4,2] 어떠한 원리로 정렬이 되는 걸까? 123456789101112131415161718[25,1,12].sort(function(p, c){ return p-c;})//=&gt; p-c가 0보다 크면 둘의 정렬순서를 바꿔주는 원리.p - c25 - 1 = 24 //=&gt;이건 0보다 크므로 [1,25,12]로 정렬순서가 바뀐다. // 그리고 바뀐 정렬순서에서 다시 실행.p - c 25 - 12 = 13 //=&gt;이건 0보다 크므로 [1,12,25]로 정렬순서가 바뀐다.//그리고 처음부터 다시 실행.p - c1 - 12 = -11 //=&gt;이건 0보다 작으므로 순서를 바꾸지 않는다//그 다음 계속 실행p - c12 - 25 = -13 //=&gt;이건 0보다 작으므로 순서를 바꾸지 않는다//다 돌았으므로 정렬 끝 = [1,12,25] 숫자뿐만 아니라 문자도 비슷한 원리로 정렬이 된다고 한다. 7. setTimeout(function (){} , 밀리초)STEP3. 화면에 로또숫자를 긴장감있게 나타내기 랜덤 숫자들이 화면에 한꺼번에 보여지는 게 아니라 시간차를 두고 나타나게 하고 싶다면 setTimeout(function (){} , 밀리초) 을 사용하면 된다. 12345setTimeout(function(){ var 공 = document.createElement('div'); 공.textContent = 당첨숫자들[0]; //for문사용시 클로저문제가 발생하므로 당첨숫자들[0] ~ 당첨숫자들[5]까지 각각 적어준다. 결과창.appendChild(공);}, 1000); //밀리초라고해서 1000 = 1초임 for문사용시 클로저문제가 발생하므로 당첨숫자들[0] ~ 당첨숫자들[5]까지 각각 적어준다. 나는 쪼랩이라 아직 클로저문제 해결법을 안 알려준다고 한다ㅋㅋㅋㅋ 나중에 중급강의에 알려준다고 하니 그때 해야지. 그럼 어떻게 하느냐? for문을 안 쓰면 된다 당첨숫자들[0] ~ 당첨숫자들[5]까지 각각 적어준다. 만약 클로저를 이용해서 푼다면 아래와 같다 12345678for(var i=0; i&lt;당첨숫자들.length; i+=1){ function 클로저(j){ setTimeout(function(){ 공색칠하기(당첨숫자들[j], 결과창); },(j+1) * 1000); } 클로저(i);} 이걸 더 짧게 줄일 수가 있는데 바로 즉시실행코드를 이용하면 된다 function을 괄호로 감싸면 즉시실행코드가 된다 1234567for(var i=0; i&lt;당첨숫자들.length; i+=1){ (function 클로저(j){ setTimeout(function(){ 공색칠하기(당첨숫자들[j], 결과창); },(j+1) * 1000); })(i);}","link":"/2019/09/12/190912/"},{"title":"[ITWILL : java]Scanner라이브러리와 equals()를 이용한 사칙연산계산기, if문과 switch문 변환 예시, 반복문과 break","text":"ITWILL학원 : 3강 JAVA BY 윤미영강사1. Scanner 라이브러리기능 : 키보드로부터 데이터를 받아온다.java.util 패키기에 있는 중요한 라이브러리이므로 사용법은 암기필수. 1234567891011121314151617181920212223242526272829//1. 선언import java.util.Scanner;// import라는 예약어는 // 단축키는 ctrl + shift + O 누르면 자동으로 import 생성됨Scanner sc = new Scanner(System.in); // 의미는 나는 이제부터 스캐너라이브러리를 변수명(ex: sc)이라는 이름으로 불러서 사용하겠다는 의미// System.in 자바의 표준입력으로 키보드를 의미한다. 즉 키보드로부터 데이터를 받아오겠다라는 의미System.out.println(\"단어를 입력하세요\");//2. 변수 s에 저장String s = sc.next();// 콘솔창에 입력한 것들이 변수 s에 저장된다.//3. 출력System.out.println(s);//4. 예시System.out.println(\"이름을 입력해주세요\");String s = sc.next(); System.out.println(\"연락처를 -없이 입력해주세요\");int i = sc.nextInt(); System.out.println(\"입력하신 \"+ s +\"님의 휴대폰번호 0\"+ i +\" 가 맞습니까?\"); 다른 명령어들은 아래와 같다 12345678sc.nextInt()//키보드로부터 정수데이터를 가지고 옴sc.next()//키보드로부터 string(한단어)를 가지고 옴sc.nextLine()//키보드로부터 string(공백을 포함한 한줄전체)를 가지고 옴 2. Scanner 라이브러리를 이용한 사칙연산계산기 만들기처음 떠오른 코드는 아래와 같다. 12345678Scanner sc = new Scanner(System.in);System.out.println(\"원하는 사칙연산 수식을 입력하세요\");int data1 = sc.nextInt();String operator = sc.next();int convertOper = int(operator);int data2= sc.nextInt();System.out.println(\"입력하신 \" + data1 + operator + data2 +\"의 값은 \"+ (data1 + convertOper+ data2)+\"입니다\") 그런데 string으로 연산자를 받으니까 연산이 되지않으니까 int로 형을 바꿀려고했는데 Cannot cast from String to int 에러가 났다. 사칙연산자들의 데이터타입이 무엇인지 구글링했는데 그래도 잘 모르겠어서강사님께 여쭈어보니 string을 int로 받아도 해결할 수 없다고 한다. if문을 써서 equals()를 쓰는게 낫다고 했다equals()를 어떻게 쓰는지 찾아본 뒤 바로 적용해보았다 1234567891011121314151617Scanner sc = new Scanner(System.in);System.out.println(\"원하는 사칙연산 수식을 입력하세요\");int data1 = sc.nextInt();String operator = sc.next();int data2= sc.nextInt();if(\"+\".equals(operator)){ System.out.println(\"입력하신 \" + data1 + operator + data2 +\"의 값은 \"+ (data1 + data2)+\"입니다\");}else if(\"-\".equals(operator)){ System.out.println(\"입력하신 \" + data1 + operator + data2 +\"의 값은 \"+ (data1 - data2)+\"입니다\");}else if(\"*\".equals(operator)){ System.out.println(\"입력하신 \" + data1 + operator + data2 +\"의 값은 \"+ (data1 * data2)+\"입니다\");}else if(\"/\".equals(operator)){ System.out.println(\"입력하신 \" + data1 + operator + data2 +\"의 값은 \"+ (data1 / data2)+\"입니다\");}else{ System.out.println(\"또 잘못입력함? 다시 입력해주세요\")} 작동 잘된다! 역시 가르쳐주는 사람이 있으니까 좋다switch문으로 바꾸어보자 1234567891011switch(operator){case \"+\" : System.out.println(\"덧셈결과는 \" + (data1+data2));break;case \"-\" : System.out.println(\"뺄샘결과는 \" + (data1-data2));break;case \"*\" : System.out.println(\"곱셈결과는 \" + (data1*data2));break;case \"/\" : System.out.println(\"나눗셈결과는 \" + (data1/data2));break;default : System.out.println(\"또 잘못입력함? 다시 입력해주세요\");} 3. 제어문 종류 조건문 if(조건문) switch(값) 반복문 for(반복횟수) while(조건식) 4. 조건문 : Switch문정수식안에는 변수, 숫자, 문자, 조건들이 들어갈 수 있다.case안의 값에는 and연산자, Boolean, 실수는 아예 들어갈 수 없다.break;문이 없을 경우 다음 break;를 찾을때까지 모든 문장을 실행한다.default문은 가장 마지막 작업으로 위의 case 이외의 값인 경우 default문은이 출력되고 Switch문은 끝난다 123456789switch( 정수식 ){ //숫자,문자 case 값 : 출력값1; break; case 값 : 출력값2; break; case 값 : 출력값3; break; default : 출력값4;} 예시 123456789101112131415161718switch(season){case \"spring\" : System.out.println(\"봄 사랑 벚꽃 말고 by 아이유\"); break;case \"summner\" : System.out.println(\"party by 소녀시대\"); break;case \"autumn\" : case \"fall\" : System.out.println(\"11:11 by 태연\"); break;case \"winter\" : System.out.println(\"Santa tell me by Ariana grande\"); break;default : System.out.println(\"잘못입력하셨거나 스페..펠..ㄹ..잉 틀리셨나봐요?\");} 5. 조건문 : switch문과 if문 비교임의의 노래방 점수를 터미널에 입력하면 점수대별로 아래 문구를 출력하고싶다. 100점의 문구 : 실화냐? 가수다! 가수가 나타났다! 80 ~ 99점의 문구 : 노래실력이 아주 좋으신데요~ 40 ~ 79점의 문구 : 매력이~ 넘쳐요 40점미만의 문구 : 노ㄹ..아니 박수실력이 나날이 늘어가네요!그외의 점수들 : 잘못된 숫자를 입력하셨습니다.다시 입력해주세요 if일때 123456789101112131415Scanner sc = new Scanner(System.in);System.out.println(\"점수를 입력하세요\");int inputScore = sc.nextInt(10);if (inputScore == 100){ System.out.println(\"WOW \" + inputScore + \"점 실화냐? 가수다! 가수가 나타났다!\");}else if(inputScore &gt;= 80 &amp;&amp; inputScore &lt; 100 ){ System.out.println(inputScore + \"점! 노래실력이 아주 좋으신데요~\");}else if(inputScore &gt;= 40 &amp;&amp; inputScore &lt; 80 ){ System.out.println(\"내 노래 점수는 \" + inputScore + \"점! 매력이~ 넘쳐요\");}else if(inputScore &lt; 40 &amp;&amp; inputScore &gt;= 0){ System.out.println(inputScore + \"점! 노ㄹ..아니 박수실력이 나날이 늘어가네요!\");}else{ System.out.println(\"잘못된 숫자를 입력하셨습니다.다시 입력해주세요\");} switch일때 12345678910111213141516171819202122switch(inputScore/10){case 10 : System.out.println(\"100점 실화냐? 가수다! 가수가 나타났다!\"); break;case 9 :case 8 : System.out.println(\"노래실력이 아주 좋으신데요~\"); break;case 7 : case 6 : case 5 : ystem.out.println(\"매력이~ 넘쳐요\"); break;case 4 : case 3 :case 2 : case 1 : System.out.println(\"노ㄹ..아니 박수실력이 나날이 늘어가네요!\"); break;default : System.out.println(\"잘못된 숫자를 입력하셨습니다.다시 입력해주세요\");} 6. 반복문 : for문for문의 기본은 아래와 같다 123for(int i=0; 조건식; 증감식){ 출력값} 간단한 예시를 보면서 어떻게 컴파일이 되는지 순서를 보자 123for(int i=1; i&lt;10; i++){ System.out.println(\"Hi\");} 조건문 확인 : i는 1이고 10보다 작다 -&gt;true 괄호안의 코드출력 증감식 확인 : 이제 i는 2 조건문 확인 : i는 2이고 10보다 작다 -&gt;true 괄호안의 코드출력 증감식 확인 : 이제 i는 2 계속반복 조건문 확인 : i는 10이고 10보다 작다 -&gt; false for문 종료 7. 반복문 : break반복문에서 break를 사용하면 반복문이 바로 종료된다. 구구단 3단 예시를 들어보자 12345678int multiply;int result;multiply = 3;for(int x=1; x&lt;=9; x++){ result = multiply * x; System.out.print(result + \",\");}//출력값 : 3,6,9,12,15,18,21,24,27, 출력값의 마지막 컴마를 없애고 싶다.어떻게 하면 좋을까? if와 break를 사용해보자. 123456789101112int multiply;int result;multiply = 3;for(int x=1; x&lt;=9; x++){ result = multiply * x; if(x==9){ System.out.println(result); break; } System.out.print(result + \",\");}//출력값 : 3,6,9,12,15,18,21,24,27 break를 입력하면 if조건이 만족되는 순간 바로 반복문이 종료된다아래 예시는 구구단 3단 나타내지만 if조건문을 5까지 입력했다즉 3*5까지 진행하는 구구단이다. 123456789101112int multiply;int result;multiply = 3;for(int x=1; x&lt;=9; x++){ result = multiply * x; if(x==5){ System.out.println(result); break; } System.out.print(result + \",\");}//출력값 : 3,6,9,12,15 x가 6,7,8,9가 남았지만 if조건을 만족하고 break때문에 반복문이 종료된다.","link":"/2020/06/04/200604javai/"},{"title":"[ITWILL : DB]제약조건문법(컬럼레벨&#x2F;테이블레벨), 제약조건 5가지, 버퍼에 있는 자주 사용할 쿼리구문을 저장하는 방법","text":"ITWILL학원 : 4강 Database BY 정지윤강사1. 제약조건명 생성시 문법 2가지제약조건명 생성시 oracle에서 권장하는 이름작성 방법이 두가지(컬럼레벨문법과 테이블레벨문법)가 있다. 1-1. Column-level 문법 Not Null 제약조건사용시 column-level문법으로 작성해야한다! 나머지 4종류의 제약조건은 레벨문법 둘 중 하나만 쓰면 된다 기본형 : 테이블명약자_컬럼명약자_제약조건유형약자 예시 :제약조건 2개 이상 작성하고 싶다면 스페이스누르고 constraint 적은 뒤 다시 제약조건을 적으면 된다. 12345create table title_copy( copy_id number(10),title_id number(10) CONSTRAINT tc_tid_fk REFERENCES title(title_id),rating VARCHAR2(4) CONSTRAINT tc_ra_nn not null CONSTRAINT tc_ra_ck check (rating in ('G', 'PG', 'R', 'NC17', 'NR')); 1-2. Table-level 문법 기본형 : 테이블명약자_컬럼명약자_제약조건유형약자(컬럼명) 예시 :PK를 두 컬럼에 하려면 테이블레벨문법으로 작성해야한다. 1234create table title( copy_id number(10),title_id number(10) constraint t_tid_nn not null,constraint t_id_pk primary key (copy_id, title_id)); 2. 제약조건 5가지 2-1. Not null (NN) 컬럼레벨문법만 가능 빈 값(null값)이 컬럼에 삽입될 수 없다. 테이블안의 여러컬럼에 선언 가능 예를들어, 회원가입테이블에서 이름과 전화번호가 필수인 경우 Not Null 제약조건을 걸어서 필수사항을 꼭 기입하도록 하는 조건이다 주로 사용하는 약자 nn 예시 : 12345create table test1(id number(10) constraint t1_id_nn not null,name varchar2(30) constraint t1_name_nn not null,email varchar2(20),start_date date); 2-2. Unique (UK) 고유한 값만 가능하다. (중복불가) 테이블안의 여러컬럼에 선언 가능 예시 : 12345create table test2(id number(10) CONSTRAINT t2_id_nn not null CONSTRAINT t2_id_uk unique,email VARCHAR2(20),start_date date,CONSTRAINT t2_email_uk unique(email)); 2-3. Primary key (PK) Not null과 Unique성격을 동시에 가진다. 테이블안의 한번만 선언 가능. 테이블에서 선언시 한 번에 여러 컬럼에 선언하면 됨 나중에 다른 테이블과 join시 여러 컬럼의 조합값으로 join됨 어떤 컬럼을 Primary key 조건을 걸면 좋을까? 개인의 선택이지만 지극히 개인정보는 선택하면 안된다 예를들어 사원테이블에서 사원주민번호를 Primary key를 설정하면 주민번호가 대표key이므로 이곳 저곳에 데이터가 불려다니게 되므로 정보유출이 될 수 있다. (보안에 취약) 따라서 사원 주민번호보단 사원번호를 Primary key를 설정하는 것이 좋다 예시1 :copy_id, title_id의 조합값에 pk를 걸 수 있다. 1234create table title( copy_id number(10),title_id number(10) constraint t_tid_nn not null,constraint t_id_pk primary key (copy_id, title_id)); 예시2 : 2-4. Foreign Key (FK) 자기 자신 테이블이나 다른 테이블의 특정 컬럼(PK, UK)를 참조하는 제약조건 아무컬럼이나 참조할 수 있는 것은 아니고 PK조건이나 UK조건이 있는 컬럼만 FK로 참조할 수 있다 FK가 지정되어있으면 해당컬럼이 자식컬럼이 되고 참조한 PK이나 UK조건컬럼이 모부컬럼이 된다. 테이블안의 여러컬럼에 선언 가능 자식컬럼이 있는한 모부컬럼은 삭제되지않는다. 모부컬럼에 있는 내용만 자식컬럼에 들어올 수 있다. BUT null 유일하게 모부컬럼에 없는 null은 자식컬럼에 허용한다 null이란 zero도 아니고 공백도 아닌 특수한 값으로 아직 정의되지않은 값을 의미한다. 모부컬럼에 없는 null이 자식컬럼에 들어올 수 있다 컬럼레벨 FK 예시 : 1234create table test4(id number(10) CONSTRAINT t3_id_pk primary key,email VARCHAR2(20),department_id number(10) CONSTRAINT t4_dept_fkdept_fk references departments(department_id)); 테이블레벨 FK 예시 : 12345create table test4(id number(10) CONSTRAINT t3_id_pk primary key,email VARCHAR2(20),department_id number(10), CONSTRAINT t4_dept_fk FOREIGN KEY (department_id) references departments(department_id)); 2-5. Check (CK) 해당 컬럼이 만족해야하는 조건들을 자유자재로 지정하는 제약 조건 테이블안에 여러컬럼에 선언 가능 컬럼레벨로 선언했을때와 테이블레벨로 선언했을때의 차이가 없는 유일한 제약조건이다 예시1 : 컬럼레벨과 테이블레벨 차이점 예시Salary라는 컬럼은 급여데이터이기때문에 CHECK (salary &gt; 0)으로 제약조건을 걸수있다. 컬럼레벨 : 12345678910111213141516171819202122salary number(2), ... constraint emp_salary_min CHECK (salary &gt; 0), ...``` - 테이블레벨 : 위와 비교해서 알 수 있듯이 다른 제약조건들과 달리 두 레벨의 차이점이 없는 것이 특징이다 ```bashsalary number(2), ... constraint emp_salary_min CHECK (salary &gt; 0), ...``` - - 예시2 : 길이조건```bash주민번호 varchar2(13) constraint 000 check (length(주민번호) = 13), ...``` - 예시3 : 성별조건아래 두 문장은 동일한 결과값을 가진다.```bash성별 varchar2(10) constraint 000 check (성별 = '여' or 성별 = '남' ), ...성별 varchar2(10) constraint 000 check (성별 in ('여','남')), ... 2-6. 제약조건 전체 예시위에서 배운 제약조건들을 다 넣은 예시룰 보자 사원번호는 주로 PK제약조건을 사용하기때문에 PK제약조건을 사용했다 이름에 공백에 있으면 안되므로 NN제약조건을 사용했다 number(8,2)는 전체 데이터는 8byte이고 소수점 둘째자리까지 나타낸다는 의미이다 CHECK제약조건을 사용하여 급여는 0보다 커야한다는 제약을 걸었다 내 테이블안의 FK제약조건을 사용했다 모부칼럼 : employees1 테이블의 employee_id 칼럼 자식칼럼 : employees1 테이블의 manager_id 칼럼 다른 테이블을 가져와서 FK제약조건을 사용했다 모부컬럼 : departments 테이블의 department_id 칼럼 자식컬럼 : employees1 테이블의 department_id 칼럼 2-7. 제약조건 확인하는 방법DB사전에서 찾아보면 테이블에 선언된 제약조건을 확인할 수 있다 select 명령어를 통해 제약조건_이름과 제약조건_타입, C가 not null인지 checnk조건인지 서치, 래퍼런스가있으면 그이름 가져오기 from user_constraints 은 DB사전안에 제약조건을 확인할 수 있는 곳이다 where table_name = 테이블명을 적어줘야하는데 아무명이나 들어갈 수 있도록 &amp;tablename으로 설정한다 -&gt; 추후 sql쿼리문을 저장하기 위해서 테이블명을 항상 대문자로 적어야한다 데이터가 출력되었으나 보기 좋게 출력되지 않았다. 데이터를 가독성있게 작성해보자 not null과 check는 둘다 C라고 뜬다 따라서 search를 꼭 입력해줘야 그 뒤의 결과값으로 두가지가 구분 가능하다.search_condition으로 C가 not null조건인지 check조건인지 알수있다. col 원하는컬럼이름 format a원하는크기 : col은 컬럼의 약어로 col이 나타나는 형식을 바꿔서 가독성을 높이는 명령어이다 컬럼포맷 여기서 col은 끝에 ;(세미콜론)을 넣지않았다. 이건 시스템언어이기때문이다 컬럼아래의 점선의 한 점이 1byte라고 생각하면 된다 따라서 글씨크기는 보통 a20해주면 깔끔 enter value for tabkename: 테이블명은 항상 대문자로 적어준다 짜잔- 가독성있게 데이터가 잘 출력되었다. 3. 버퍼에 있는 자주 사용할 쿼리구문을 저장하는 방법 버퍼에 있는 쿼리구문이 앞으로 자주 사용될 것같다는 판단이 들면 버퍼가 덮어씌어지기전에 따로 저장해놓으면 된다 쿼리구문이 들어가 있는 파일을 저장하려면 무조건 확장자는 .sql로 저장해야한다 현재 버퍼의 쿼리구문 확인 현재 버퍼에 어떤 퀴리구문이 남아있는지 확인하는 명령어는 l이다. 버퍼로 들어가지않고도(ed) 버퍼에 남은 마지막 퀴리구문이 뭔지 확인하는 명령어이다. -&gt; l에서 빠져나오려면 / + enter 하면 된다. 쿼리구문 저장하기 명령어는 save 저장경로/저장하고픈 파일명.sql 이다 home 안에 있는 oracle에 cons.sql이라고 저장해보려면 아래의 문구를 쓰면 된다.1save /home/oracle/cons.sql 저장한 쿼리파일 실행하기 명령어는 @/저장경로/저장하고픈 파일명.sql 위에 저장했더 경로의 파일을 그대로 불러오면된다1@/home/oracle/cons.sql 테이블이름 입력에 확인하고싶은 테이블이름을 무조건 대문자로 입력한다아래 5번에 제약조건쿼리구문이 실행된 것을 확인할 수 있다.","link":"/2020/06/08/200608dbi/"},{"title":"[패스트캠퍼스python] 부트스트랩을 이용한 회원가입페이지만들기, csrf token","text":"파이썬 인강 자기계발 챌린지 31회차 미션부트스트랩을 이용해 회원가입페이지를 만들어보자 1. 부트스트랩 설정앱 아래에 만들어놓은 templates폴더안에 register.html 파일을 생성한다.그 뒤 부트스트랩 홈페이지로 이동한다. head태그안에 부트스트랩 CSS를 복붙한다. head태그안에 부트스트랩 JS를 복붙한다. head태그안에 아래 기본 meta코드를 복붙한다. 12&lt;meta charset=\"utf-8\"&gt;&lt;meta name=\"viewport\" content=\"width=device-width, initial-scale=1, shrink-to-fit=no\"&gt; 또는 위의 3단계를 생략하고 부트스트랩 Starter template를 복붙해도 된다! 2. Bootstrap’s form styles 적용하기.부트스트랩 컴포넌즈 폼에서 form태그를 복붙해온뒤 센터정렬이라든지 커스터마이징을 할수있다.부트스트랩의 기본 폼스타일은 아래 이미지와 같다.딱 심플 그자체! 기본 폼 스타일에서 커스터마이징을 해보자.input태그를 추가하여 비밀번호 확인을 만들 수 있다.input태그를 추가한 후 python manage.py runserver명령어를 입력한 뒤 주소창에 register/를 추가입력해주면 커스터마이징한 웹페이지가 나타난다. 3. html페이지를 view에 연결하기부트스트랩으로 만든 html페이지를 view에 연결을 해줘야한다.앱 아래의 views.py파일에서 아래 코드를 입력한다. view는 항상 request라는 매개변수를 받기때문에 입력을 해주어야한다. 1234from django.shortcuts import renderdef register(request): return render(request, 'register.html') #따옴표안에 연결하고싶은 파일의 경로입력 4. url설정 앱 하위에 urls.py파일을 생성한 뒤 아래 코드를 입력해준다register는 3번에서 만든 views안의 register함수를 연결해준 것이다. 1234567from django.urls import pathfrom . import viewsurlpatterns = [ path('register/', views.register), #register는 views안의 register함수에 연결하겠다는 의미] 프로젝트폴더의 동일한 이름으로 자동생성된 파일 하위의 urls.py를 클릭한다.urls.py에서 path('앱명/', include('앱명.urls')) 한줄을 추가한다.추가한 뒤 전체코드는 아래와 같다. 1234567from django.contrib import adminfrom django.urls import path, includeurlpatterns = [ path('admin/', admin.site.urls), path('앱명/', include('앱명.urls'))] python3 manage.py runserver 실행.잘 연결되었는지 확인을 위해 python3 manage.py runserver를 실행한다. 5. csrf_token장고를 이용하면 꼭 넣어야하는 코드이고 항상 form태그 안에 위치해야한다.form의 겨우 데이터를 서버에 전달하는 역할을 하는데 우리 사이트에서 우리 서버로 데이터를 전송하는 것은 문제될것이 없으나 피싱범죄를 목적으로 자신의 웹사이트에서 전송을 하는 경우가 있다.이를 방지하기 위해, 즉 크로스도메인을 막기위해 암호화된 키를 숨겨놓는다. 참고링크 : CORS 크로스 도메인 이슈와 해결방법 이 코드를 {% csrf_token %}입력을 해놓으면 장고가 알아서 암호화된 키를 생성하고 키검증까지 자동으로 해준다. 123&lt;form method=\"POST\" action=\".\"&gt; {% csrf_token %}&lt;/form&gt; 여기서 action값을 생략하거나 점(.)을 입력하면 현재페이지 action이 진행된다.실제 사용예시는 아래와 같다. form태그 밑에 위치하면 된다!","link":"/2020/06/24/200624python/"},{"title":"[패스트캠퍼스python] 회원가입페이지만들기2 비밀번호일치여부확인","text":"파이썬 인강 자기계발 챌린지 32회차 미션1. 비밀번호와 비밀번호확인값 데이터베이스에 넣기원래 프론트앤드에서 주로 담당하지만 백엔드로도 만들 수 있다.기본 코드는 앱 하위 view.py파일에서 아래 코드를 작성한다. request를 가져오는 방식에느 get과 post가 있다. post일때 회원가입페이지이므로 register.html 파일에서 input태그마다 붙여준 name값을 키로 가지고와서 함수를 실행시킨다. fcuser에 입력값을 생성하기 위해서는 기존의 clas fcuser를 상단에 import해야한다 -&gt; from .models import Fcuser 12345678910111213141516171819202122from django.shortcuts import renderfrom .models import Fcuser #새로운 importdef register(request): if request.method == \"GET\": return render(request, 'register.html') #연결하고싶은 파일의 경로 elif request.method == \"POST\": #회원가입하는 코드작성 -&gt; register.html파일에서 name값을 키로해서 함수진행 username = request.POST['username'] password = request.POST['password'] re_password = request.POST['re-password'] #fcuser생성 -&gt; fcuser를 사용하기 위해서 기존의 clas fcuser를 import해야한다 fcuser = Fcuser( #객체를 생성해서 저장 username=username, password=password ) fcuser.save() return render(request, 'register.html') #연결하고싶은 파일의 경로 회원가입페이지에서 값들을 입력하고 등록버튼을 누르면 빤짝하고 아래 이미지처럼 모든 값들이 리셋되어진다. 어떠한 변화가 생긴걸까?위의 코드의 함수가 실행되었지만 입력값들이 post로 들어왔기때문에 elif문을 실행해주고 마지막에 render가 ‘register.html’를 호출했기때문에 페이지사의 변화는 없어보일뿐 데이터는 데이터베이스에 저장되어있다. 2. 비밀번호와 비밀번호확인입력값이 일치하는 지 확인일치여부는 if문으로 간단하게 나타낼수있다.앱 하위의 views.py에서 아래 코드를 작성하면된다 12345678910111213141516171819202122232425from django.shortcuts import renderfrom .models import Fcuserfrom django.http import HttpResponse #새로운 importdef register(request): if request.method == \"GET\": #기존회원로그인 return render(request, 'register.html') elif request.method == \"POST\": #회원가입 username = request.POST['username'] password = request.POST['password'] re_password = request.POST['re-password'] #비밀번호와 비밀번호확인일치여부 if password != re_password: return HttpResponse('비밀번호가 다릅니다') # HttpResponse를 사용하기위해 파일 상단에 import시켜준다 fcuser = Fcuser( username=username, password=password ) fcuser.save() return render(request, 'register.html') 기존이 회원가입페이지내용이 다 사라져버려서 유저입장에서 불편하다.따라서 기존 코드에서 더 나아가보자. 기존 register()함수에서 res_data = {} 변수를 생성하여 불일치의 경우의 데이터를 변수에 담는다.함수가 끝나가는 마지막라인에서 변수 res_data도 함께 return해준다. 123456789101112131415161718192021222324def register(request): if request.method == \"GET\": return render(request, 'register.html') elif request.method == \"POST\": #회원가입하는 코드작성 -&gt; 앞에서 만든 네임값을 키로해서 진행 username = request.POST['username'] password = request.POST['password'] re_password = request.POST['re-password'] #비밀번호와 비밀번호확인일치여부 res_data = {} #불일치의 경우 데이터를 res_data라는 변수에 담는다. if password != re_password: res_data['error'] = '비밀번호가 다릅니다' fcuser = Fcuser( username=username, password=password ) fcuser.save() return render(request, 'register.html', res_data) 위 코드이 변수res_data가 return할 값이 출력되어야하기때문에 register.html error가 출력된 수 있도록 코드를 추가해야한다.에러코드가 나타나길 원하는 위치에 {{ error }}를 작성해주면 끝! 12345&lt;div class=\"row\"&gt; &lt;div class=\"col-12\"&gt; {{ error }} &lt;/div&gt;&lt;/div&gt;","link":"/2020/06/25/200625python/"},{"title":"[패스트캠퍼스python] 세션session, 로그인화면만들기","text":"파이썬 인강 자기계발 챌린지 33회차 미션1. 세션 Session웹사이트 로그인 기능을 만들기위해 꼭 필요하면서도 중요한 개념인 세션에 대해 알아보자. 구조 설명 클라이언트 웹브라우저 쿠키 서버별 저장소 서버 서버 데이터베이스 클라이언트별 저장소 웹브라우저안에 쿠키라는 저장공간이 있다. 이를 통해 데이터를 유지할수있다. 이제 화살표이 흐름을 알아보자. 처음 웹사이트(alghost.com)에 접속한 클라이언트는 아무런 쿠키를 가지고있지않다. 클라이언트는 쿠키없이 서버에 요청을 한다 ex)www.naver.com 서버는 요청을 가지고 쿠키 키를 만든 뒤 헤더위치에 넣어서 클라이언트에게 응답한다. 서버는 만든 쿠키키를 데이터베이스에 저장한다. 클라이언트는 서버로부터 응답을 받으면서 쿠키를 쿠기저장소에 저장을 한다. 쿠키를 저장할때 각 웹사이트별로 나눠서 저장한다. 클라이언트는 두번째 요청부터 모든 요청에 가지고있는 쿠키를 함께 보낸다. 서버는 쿠키정보를 보고 “아 아까 그 클라이언트구나!”를 알게되고 데이터베이스에서 기존 쿠키를 꺼내 빠르게 응답할수있다. 이를 통해 서버는 클라이언트를 구분해서 인지할 수 있다. 세션은 처음에 어렵게 느껴질 수 있지만 Django를 이용하면 세션을 알아서 해주기때문에 편하다. 2. 로그인화면만들기회원가입페이지에 이어 로그인페이지를 만들어보자. 1. HTML파일로 화면그리기먼저 html파일로 간단한 틀을 만들 수 있다.로그인페이지는 사용자명과 비밀번호입력창과 로그인버튼만 있으면 되기때문에 회원가입페이지보다 간단하게 만들 수 있다. error비밀번호가 일치하지 않는 경우 에러문구를 알려주는 코드이다.div태그를 감싸서 에러문구가 나오길 원하는 곳에 위치시켜주면된다. csrf_token크로스도메인을 막기위해 암호화키이다. 12345678910111213141516171819202122232425262728293031323334353637383940&lt;body&gt;&lt;div class=\"container\"&gt; &lt;div class=\"row\"&gt; &lt;div class=\"col-12\"&gt; &lt;h1&gt;로그인&lt;/h1&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class=\"row\"&gt; &lt;div class=\"col-12\"&gt; {{ error }} &lt;/div&gt; &lt;/div&gt; &lt;div class=\"row\"&gt; &lt;div class=\"col-12\"&gt; &lt;form method=\"POST\" action=\".\"&gt; {% csrf_token %} &lt;div class=\"form-group\"&gt; &lt;label for=\"username\"&gt;사용자이름&lt;/label&gt; &lt;input type=\"text\" class=\"form-control\" id=\"username\" placeholder=\"사용자 이름\" name=\"username\"&gt; &lt;/div&gt; &lt;div class=\"form-group\"&gt; &lt;label for=\"password\"&gt;비밀번호&lt;/label&gt; &lt;input type=\"password\" class=\"form-control\" id=\"password\" placeholder=\"비밀번호\" name=\"password\"&gt; &lt;/div&gt; &lt;button type=\"submit\" class=\"btn btn-primary\"&gt;로그인&lt;/button&gt; &lt;/form&gt; &lt;/div&gt; &lt;/div&gt;&lt;/div&gt;&lt;/body&gt; 2. view.py에 비밀번호일치여부체크 함수구현하기회원가입 페이지를 만들었던것처럼 먼저 views.py에 함수를 선언한다.한꺼번에 모든 기능을 구현하는 것이 아니라 기본 기능부터 차근차근 구현하면서 코드를 진화시켜나가는 것이 좋다.먼저 만들어 볼 기능은 가장 간단한 기능으로 아이디와 비밀번호가 다 입력되었는지 체크하고 입력되어있으면 비밀번호느 일치하는 지에 대한 함수를 코드로 구현할 것이다. render에 html파일 연결하기method는 get방식을 이용한뒤 render에는 위에서 만들었던 login.html을 연결해준다. if조건문 : get방식모든 데이터가 다 있을 경우 get방식으로 바로 login.html파일로 render한다. if조건문 : post방식post방식일 경우에는 데이터가 없으므로 데이터를 입력하라고 해야한다.이때 비밀번호 일치여부도 함께 확인한다. 모든값이 입력되었는지 확인 -&gt; 비밀번호일치하는 지를 체크하느 순서대로 코드를 짠다. 1234567891011121314151617181920def login(request): if request.method == \"GET\": return render(request, 'login.html') elif request.method == \"POST\": username = request.POST.get('username', None) password = request.POST.get('password', None) res_data = {} #불일치할때 데이터를 res_data라는 변수에 담는다. if not (username and password ): res_data['error'] = '모든 값이 입력되지 않았습니다' else: #회원가입시 객체로 만들어놓은 fcuser의 데이터와 일치하는 지 확인 fcuser = Fcuser.objects.get(username=username) #(필드명=지정한값) if check_password(password, fcuser.password): # 리다이렉트 # 세션 pass else: res_data['error'] = '비밀번호를 틀렸습니다' return render(request, 'login.html', res_data) 일부러 번호를 틀리면 아래와 같이 비밀번호를 틀렸습니다라는 error메세지가 제대로 출력되는 것을 확인 할수 있다. 3. view.py에 리다이렉트 함수구현하기위에서 비밀번호일치여부까지 확인했다.로그인할때를 떠올려보자.비밀번호가 일치하고 난 뒤 계속 로그인페이지에 머무느 것이 아니라 main 콘텐츠가 있는 페이지로 자동이동이된다. 이를 redirect라고 한다. import redirect 하기리다이렉트를 사용하기 위해서는 import를 먼저 해줘야한다.장고숏컷 밑에 위치하고있기에 거기서 impor해주면된다. 1from django.shortcuts import render, redirect return redirect(‘url’)redirect뒤에는 주소값을 입력해주면 된다.만약 ('http://naver.com)을 입력하면 로그인을 하고나면 네이버페이지로 이동하는 것이다.보통은 홈으로 이동을 하기때문에 아래와 같이 사용한다./는 홈으로 가는 코드이다. 123456if check_password(password, fcuser.password): # 세션 #리다이렉트 return redirect('/') #홈으로이동else: res_data['error'] = '비밀번호를 틀렸습니다' sessionrequest객체안에 sesssion이라는 변수가 있다. 딕셔너리처럼 이용하면 된다.user라는 키에다가 fufuser.id라는 값을 저장해주기만 하면 끝이다! 1234567if check_password(password, fcuser.password): # 세션 request.session['user']=fcuser.id #리다이렉트 return redirect('/') #홈으로이동else: res_data['error'] = '비밀번호를 틀렸습니다' 4. home 간단히 표현하기root에 연결하기전에 home을 간단히 만들어 로그인뒤 잘 넘어가는지 확인해봐야한다.fcuser 하위의 views.py에 아래 코드를 입력한다. 123456789def home(request): user_id = request.session.get('user') if user_id: #로그인되었으면 로그인한 유저네임출력 fcuser = Fcuser.objects.get(pk=user_id) #pk는 기본키라는 의미 return HttpResponse(fcuser.username) #로그인을 안했다면 그냥 홈 텍스트만 출력 return HttpResponse('home!') 5. root설정이제 기능들을 연결해줄 root를 설정해야한다.어디다 설정하면 될까? 1번선택 : fc_community 하위의 urls.py 2번선택 : fcuser 하위의 urls.py 정답은 바로 1번이다!fuuser 하위의 views.py에서 함수를 만들었지만 root연결은 fcuser상위폴더인 fc_community에 해야한다. fc_community 하위의 urls.py에 아직 만들지않았지만 곧 만들 home을 import 해준 뒤 path('/', home)를 추가한다. 1234567from fcuser.views import home #추가urlpatterns = [ path('admin/', admin.site.urls), path('fcuser/', include('fcuser.urls')) path('', home) #추가]","link":"/2020/06/26/200626python/"},{"title":"[ITWILL : JSP]JSP 주석과 JSP directive, JSP 스크립트 요소","text":"ITWILL학원 : 13강 JSP기초 BY 정규태강사jsp는 html과 java를 합쳐서 사용하는 것이기때문에 주석을 두가지를 사용할 수 있다. 1. JSP주석 <%– – %>%로 시작하는 주석은 jsp주석이다. 이는 엘리먼트요소이다.html 주석문과 <!– –> 과 차이점은 html주석은 개발자도구에서 보이지만 JSP주석은 개발자도구에서 보이지않는다. 12HTML주석 : &lt;!-- &lt;h1&gt;에이치티엠엘yo!&lt;/h1&gt; --!&gt; JSP주석 : &lt;%-- &lt;h1&gt;제이에스피yo!&lt;/h1&gt; --%&gt; 2. JSP가 어떻게 JAVA와 연결되어있을까?연결성을 알기 위해서 아래 경로를 찾아가보자. 경로 : D:\\JAVA저장경로.metadata.plugins\\org.eclipse.wst.server.core\\tmp0\\work\\Catalina\\localhost\\JSP7\\org\\apache\\jsp\\JSP1 해당 폴더에는 내가 생성한 적 없는 아래 파일 두개가 들어가있다. 파일명.java 파일명.class 해당 폴더안에 .java파일을 열어보면 내가 만들었던 .jsp파일이 내부적으로 .java파일을 생성하고 그 뒤 .class파일을 실행시키는 방식으로 연결되어있다.이런 .java파일을 서블릿이라고 부른다. 즉, 내가 .jsp파일을 만들면 컴파일러가 알아서 서블릿이라는 형태인 .java파일을 만들고 그 뒤 .class파일을 실행시킨다. 3. JSP 디렉티브(directive)jsp 디렉티브(directive)는 jsp페이지가 실행될때 필요한 정보를 지정하는 것이다.jsp페이지는 사용자가 페이지를 요청할때 실행된다. <%@ 내용내용블라블라 %> 형태로 사용한다.크게 3가지 지시어가 존재한다. page include taglib 1. JSP 디렉티브(directive)의 page지시어 속성아래는 page예시이다. import 123&lt;%@ page import=\"java.util.*\" %&gt;&lt;%-- import란 외부로부터 다른 파일(클래스/객체)가져와서 추가해서 지정할수있다. --%&gt; contentType 사용자의 요청을 응답할때 응답할 페이지의 MIME타입을 지정하기위한 속성이다.따라서 css나 aac오디오, azw전자책등등 다양한 종류의 페이지타입을 만들수있다. contentType 종류 1&lt;%@ page contentType=\"text/html; %&gt; 5. JSP 스크립트 요소JSP 스크립트요소에는 총 3가지가 있다. 선언문 : 변수, 매서드(함수)를 선언해서 사용한다. 스크립틀릿 : 자바코드를 작성(변수와 매서드 사용가능)해서 사용한다. 표현식 : 화면에 출력할 내용을 작성하여 사용한다. 1. 선언문선언문 형태 : <%! %>변수, 매서드(함수)를 선언해서 사용하기때문에 배열은 생성할수없다. 배열을 생성하고싶으면 스크립틀릿안에 써야한다.멤버변수(전역변수)형태로 사용가능. 123456&lt;%!//자바코드를 사용해서 변수,메서드 사용(전역변수) public void Method(){ System.out.println(\"안녕하세요\"); }%&gt; 2. 스크립틀릿스크립틀릿 형태 : <% %>자바코드를 작성(변수와 매서드 사용가능)해서 사용한다.지역변수형태로만 사용가능. 12345678&lt;% //java System.out.println(name); System.out.println(a); // html 영역의 출력 out.print(\"안녕하세요(html)\");%&gt; 3. 표현식표현식 형태 : <%= 자바의 값 %>화면에 출력할 내용을 작성하여 사용한다.즉 표현식은 값 또는 자바변수의 값을 화면에 출력가능한 코드이다. 1234567&lt;%for (int i=0; i&lt;strArr.length; i++){ %&gt; &lt;%= i%&gt;는 &lt;%= strArr[i]%&gt; &lt;br&gt; &lt;%}%&gt; 표현식으로 테이블만들기 1234567891011121314151617181920212223&lt;%String[] strArr = new String[5];strArr[0] = \"java\";strArr[1] = \"jsp\";strArr[2] = \"web\";strArr[3] = \"DB\";strArr[4] = \"spring\";%&gt;&lt;table border=\"1\"&gt; &lt;tr&gt; &lt;td&gt;인덱스&lt;/td&gt;&lt;td&gt;값&lt;/td&gt; &lt;/tr&gt; &lt;% for(int i=0;i&lt;strArr.length;i++){ %&gt; &lt;tr&gt; &lt;td&gt;&lt;%=i %&gt;&lt;/td&gt;&lt;td&gt;&lt;%=strArr[i] %&gt;&lt;/td&gt; &lt;/tr&gt; &lt;% } %&gt; 4. 선언문과 스크립틀릿 차이선언문은 전역변수로 사용가능하지만 스크립틀릿은 지역변수로만 사용가능하다.자주 사용할 것은 선언문보다 스크립틀릿이다.","link":"/2020/06/23/200623jspi/"},{"title":"[ITWILL : JSP]내장객체","text":"ITWILL학원 : 13강 JSP기초 BY 정규태강사JSP 내장객체서블릿(JSP -&gt; JAVA로 변환하는 것)을 실행할때 필요한 정보를 저장하고 있는 객체이다.원래 객체는 외부에 있기에 import를 추가해야하지만,내장객체의 경우 기본적으로 포함되어있기때문에 따로 객체를 생성하거나, import로 추가할 필요가 없다. 자주사용하는 객체 6가지는 무조건 암기할 것! 내장객체는 총 9가지이다. java.servlet 패키지 8가지 request : 클라이언트의 Http 요청 정보를 저장하는 객체 response : Http 요청을 처리하는 응답 정보를 저장하는 객체 session : 해당 클라이언트의 세션정보를 저장하는 객체 예시 : 은행웹접속하면 10분지나면 ‘로그인세션이 만료하였습니다’ pageContext : 페이지가 실행할때 필요한 컨텍스트 정보를 저장하는 객체 컨텍스트정보 = 프로젝트정보 out : 응답페이지에 전송하기위한 출력스트림 객체 버퍼링 : 버퍼라는 공간을 채우는 작업이 버퍼링이다. 데이터가 큰 경우 전체 데이터를 작은 단위로 잘라서(버퍼) 먼저 데이터를 보여주는 것이다. 이것이 발전된 형태가 스트림이다. 스트림 : 데이터를 글자단위로 보내는 것이 아니라 스트림단위로 보낸다. 물흐르듯 데이터를 계속 보내는 것을 스트림이라고 한다. 예시 : 음악스트리밍 application : 해당 애플리케이션의 정보를 저장하는 객체 헷갈릴수있는게 스마트폰등의 안드로이드 앱이 아니라 응용프로그램전체라는 의미이다. 개념을 분리하자. jsp에서는 애플리케이션의 정보를 저장한 객체이다. 예시 : 누적페이지방문수를 표시할때 application객체를 이용한다 config : 페이지의 서블릿설정 정보를 저장하는 객체 서블리설정 = 초기화값 page : 페이지의 서블릿 객체 java.lang 패키기 1가지 exception : 예외처리를 다루는 객체 2. 자주 사용하는 내장객체 : request객체클라이언트의 Http 요청 정보를 저장하는 객체이다js에서 객체는 아래와 같이 만들었다. 1let 참조변수a = new 객체(); HttpServeltRequest 클래스를 객체로 구현한 뒤 request 이름(참조변수a)으로 사용한다.웹페이지에서 사용하는 왠만한 데이터들은 다 request객체로 가져 올 수있다. 12345678910111213141516171819서버도메인명 : &lt;%= request.getServerName() %&gt;&lt;br&gt;서버포트번호 : &lt;%= request.getServerPort() %&gt;&lt;br&gt;URL : &lt;%= request.getRequestURL() %&gt;&lt;br&gt;URI : &lt;%= request.getRequestURI() %&gt;&lt;br&gt;클라이언트호스트명 : &lt;%= request.getRemoteHost() %&gt;&lt;br&gt;클라이언트IP주소 : &lt;%= request.getRemoteAddr() %&gt;&lt;br&gt;프로토콜정보 : &lt;%= request.getProtocol() %&gt;&lt;br&gt;요청정보방식(전송방식) : &lt;%= request.getMethod() %&gt;&lt;br&gt;컨텍스트경로(프로젝트경로) : &lt;%= request.getContextPath() %&gt;&lt;br&gt;물리적경로 : &lt;%= request.getRealPath(\"/\") %&gt;&lt;br&gt;- 물리적경로란? 하드디스크의 어디에 저장하는 지가 물리적경로&lt;br&gt;Http헤더(user-agent) : &lt;%= request.getHeader(\"user-agent\") %&gt;&lt;br&gt;- Http헤더(user-agent)란? 이용자가 사용하고있는 웹사이트 정보&lt;br&gt;Http헤더(accept-language) : &lt;%= request.getHeader(\"accept-language\") %&gt;&lt;br&gt;Http헤더(host) : &lt;%= request.getHeader(\"host\") %&gt;&lt;br&gt;Http헤더(connection) : &lt;%= request.getHeader(\"connection\") %&gt;&lt;br&gt; 3. 자주 사용하는 내장객체 : response객체Http 요청을 처리하는 응답 정보를 저장하는 객체이다. 1234567891011&lt;% response.setHeader(\"해더이름\", 값); response.addCookie(\"쿠키값\"); response.setContentType(\"타입\"); response.sendRedirect(\"주소\");//예시 response.sendRedirect(\"httl://www.naver.com\"); //코드를 작성한 html파일에서 실행했지만 자동으로 네이버로 이동됨%&gt; 4. 자주 사용하는 내장객체 : session객체해당 클라이언트의 세션정보를 저장하는 객체세션은 만들어지는 시간, 최종시간등을 확인할 수 있다. 예시 : 은행웹접속하면 10분지나면 ‘로그인세션이 만료하였습니다’ 12345678910세션 ID : &lt;%=session.getId() %&gt;&lt;br&gt;세션 생성 시간 : &lt;%=session.getCreationTime() %&gt;세션 최종 접속시간 : &lt;%=session.getLastAccessedTime() %&gt; &lt;br&gt;세션 유지시간 : &lt;%=session.getMaxInactiveInterval() %&gt; &lt;br&gt;- 세션 유지시간 default값 : 1800초 = 30분&lt;br&gt;&lt;%// 세션 유지시간 변경 :30분 -&gt; 60분session.setMaxInactiveInterval(3600);%&gt;변경된 세션 유지시간 (3600초,60분): &lt;%=session.getMaxInactiveInterval() %&gt; &lt;br&gt; 5. 자주 사용하는 내장객체 : application객체해당 애플리케이션의 정보를 저장하는 객체헷갈릴수있는게 스마트폰등의 안드로이드 앱이 아니라 응용프로그램전체라는 의미이다.개념을 분리하자. jsp에서는 애플리케이션의 정보를 저장한 객체이다.예시 : 누적페이지방문수를 표시할때 application객체를 이용한다 123서버정보 : &lt;%=application.getServerInfo() %&gt;&lt;br&gt;물리적경로 : &lt;%=application.getRealPath(\"/\") %&gt;&lt;br&gt;-슬러시(/)는 root라는 의미로 최상위경로를 의미한다. 6. 자주 사용하는 내장객체 : out객체응답페이지에 전송하기위한 출력스트림 객체 버퍼링 : 버퍼라는 공간을 채우는 작업이 버퍼링이다. 데이터가 큰 경우 전체 데이터를 작은 단위로 잘라서(버퍼) 먼저 데이터를 보여주는 것이다. 이것이 발전된 형태가 스트림이다. 스트림 : 데이터를 글자단위로 보내는 것이 아니라 스트림단위로 보낸다. 물흐르듯 데이터를 계속 보내는 것을 스트림이라고 한다. 예시 : 음악스트리밍 버퍼사이즈를 다 사용하면 출력에 문제가 생길수있다. 입출력작업자체가 자원을 많이 사용하므로 out객체를 사용하고나서 out.close()매서드를 사용해야한다 123456789&lt;% out.print(\"out객체 사용&lt;br&gt;\");%&gt;버퍼 사이즈 : &lt;%=out.getBufferSize() %&gt; BYTE&lt;br&gt;사용후 남은 버퍼사이즈 : &lt;%=out.getRemaining() %&gt; BYTE&lt;br&gt;- out객체를 사용하고나서 out.close()매서드를 사용해야한다&lt;% out.close(); //자원해제 %&gt;","link":"/2020/06/23/200623jspi2/"},{"title":"[ITWILL : DB]Select 구문을 사용한 데이터 검색, null VS 0 VS 공백, Distinct","text":"ITWILL학원 : 8강 Database BY 정지윤강사1. Select 구문을 사용한 데이터 검색1. 테이블 구조조회describe 테이블명이지만 실무에선 줄여서 desc 테이블명 명령어를 사용한다. 1SQL&gt; desc 테이블명 2. 테이블로부터 데이터검색 아스타(*)별표(*)라고 아스타 읽는다테이블명에 모든 컬럼을 출력해달라는 의미이다.그때 출력되는 순서는 기본 컬럼이 출력되는 순서이다. 12SQL&gt; select *SQL&gt; from 테이블명 컬럼사이즈조절컬럼사이즈를 조절하고싶다면 아래 명령어를 입력하면된다.사이즈를 줄이는 건 세션단위로만 지속된다. 1234SQL&gt; col 사이즈조절할컬럼명 format a원하는사이즈//예시SQL&gt; col department_name format a20 사이즈를 줄이는 건 쉽게 가능하지만 사이즈를 늘리는건 안된다.따라서 사이즈를 너무 많이 줄여서 #이 엄청 뜬 경우 sql프로그램을 종료 후 재실행해야하면 원래 사이즈로 돌아간다. 아래 exit쿼리는 sql만 종료할 뿐 db를 종료하는 것이 아니다.sql만 종료하고 다시 유저로 로그인하면 간단하게 끝! 123SQL&gt; exitSQL&gt; conn 유저명/비번SQL&gt; col 사이즈조절할컬럼명 format a원하는사이즈 원하는 순서대로 컬럼을 출력하고 싶다면 아래와같이 쿼리구문을 날리면된다.기본 순서가 바뀌는 것이 아니라 내가 display하고싶은 순서대로 화면에 출력만해주는 것이다. 산술식쿼리구문에는 산술식이 가능하다. 산술식은 사칙연산만 가능하다.테이블 employees에서 2가지 컬럼(last_name, salary)과 산술식이 들어간 컬럼 1개(12*(salary+100)))를 출력하는 코드는 아래와 같다. 12SQL&gt; select last_name, salary, 12*(salary+100)SQL&gt; from employees 2. null값null은 사용할 수 없는 값, 알려지지 않은 값, 할당받지 못한 값, 모르는 값, 아직 정의되지 않은 값이다.null은 0과 공백과는 다른 특수한 값으로 모든 데이터타입에 사용가능하다. null VS 0 VS 공백 null은 알려지지 않은 값이고 모든 데이터타입에 사용가능. 숫자 0(zero)는 숫자데이터타입의 한 종류 공백은 캐릭터데이터타입의 한 종류 숫자 0와 null은 구분이 가능하다어떻게?desc 명령어를 통해서! 1SQL&gt; desc 테이블명 위의 명령어로 출력되는 테이블의 TYPE에 NUMBER인 경우 0의 값일것이다. 그렇다면 공백과 NULL은 어떻게 구분할까?desc 명령어를 통해서는 구분할수가없고, 구분할 수 있는 함수가 존재한다. 결국 desc명령어를 통해 null과 숫자데이터타입은 구분이 가능하지만 null과 공백데이터타입은 육안으로 구분하기힘들다. null은 사칙연산을 해도 null이 된다.null때문에 계산이 잘 안되는 경우가 왕왕있다.계산할때만이라도 null값을 0으로 넣어서 계산하는 함수가 존재한다. 3. 제목명을 보기좋게 display하기1. alias (엘리아스) 별칭칼럼명에 별칭(alias 엘리아스)을 넣어 데이터를 출력할 수 있다. 칼럼명 as alias 칼럼명 alias 칼럼명 (as) “Alias” : 대소문자구분, 공백포함, 특수문자 포함을 원하는 경우 as생략가능! 12SQL&gt; select last_name as name, salary*12 &quot;Annual Salary&quot;SQL&gt; from employees; 엘리아스를 사용하면 엘리아스명으로 format을 새로 지정해줘야한다.위에 별칭을 줬던 두 컬럼의 사이즈를 format해보자. 12SQL&gt; col name format a20SQL&gt; col &quot;Annual Salary&quot; format a20 2. || 연산자 사용두개의 컬럼을 하나로 합쳐서 출력하면서 직원이름과 job id를 매칭시켜서 출력하고싶다면 ||연산자를 사용하면 된다. 그리고 두 컬럼사이를 구분하기 위해 리터럴 값은 ‘ is a ‘ 를 넣어준다.리터럴값이 뭘까? 아래에 설명글을 보자. 123SQL&gt; select last_name || ' is a ' || job_idSQL&gt; as &quot;Employees Details&quot;SQL&gt; from employees; 3. 리터럴리터럴값 : 명령어, 테이블명, 컬럼명, 엘리아스, 키워드는 아닌데 쿼리구문에 포함된 일반 문자,숫자,날짜 값! 숫자 리터럴값은 그냥적어도 되지만 문자나 날짜 리터럴값은 작은따음표(‘’)로 묶어서 작성해야한다. 실제 문법은 큰따옴표(“”)는 안되고 작은따옴표만 가능하지만 요즘에는 사용 프로그램에 따라 큰따옴표도 자동적으로 작은따옴표료 인식하기도한다. 4. Distinct중복된 값을 자동으로 제거해 주고 한번만 display해주는 키워드 12SQL&gt; select distinct department_idSQL&gt; from employees; 예를들어 employees 테이블에 사원들의 department_id가 총 몇개인지 궁금하다.이럴때 distinct 키워드를 쓰지않고 출력하게된다면 모든 사원의 department_id가 사원수만큼 출력된다. 1번부서 2번부서 1번부서 1번부서 5번부서 5번부서 6번부서 총 7row 이때 distinct 키워드를 사용하면 중복값을 제거하고 출력할수있다 1번부서 2번부서 5번부서 6번부서 총 4row 이를 통해 department_id의 총 갯수파악이 쉬워진다.","link":"/2020/06/23/200623dbi/"},{"title":"[ITWILL : JAVA]배열과 함께쓰는 메서드","text":"ITWILL학원 : 10강 JAVA BY 윤미영강사1. for each문향상된 for문인 for each문은 기존 for문과 비교해서 초기값과 증감식을 사용하지 않으며 배열이 가지고 있는 요소들을 특정 변수로 바로 할당해서 사용할 수 있게한다 123for(데이터타입 변수명 : 반복할 배열명/컬렉션){ //반복할 문장} 이 반복문은 내부적으로 배열의 인덱스 0번부터 배열의 길이만큼을 반복한다. 장점 : 전체적으로 for문을 훨씬 간결히 작성할 수 있다. 단점 인덱스를 사용하지않고 사용불가능. 반복 처리할 범위를 지정불가능. 결론 : 따라서 인덱스를 써야하거나 특정범위를 반복해야하는 경우는 전통적인 for문을 쓰고 아닐 경우 for each를 쓰면 된다 아래 for문과 for each문의 예시를 보자.랜덤한 짝수를 3개를 뽑은 뒤 그 합을 구해보자. 랜덤한 짝수 3개뽑기는 index를 사용해야하기때문에 for each를 쓸 수 없다.뽑은 짝수합을 구하는 경우 index도 필요없고 특정범위반복도 필요없기때문에 for each를 쓰면 한결 간결해진다. 1234567891011121314151617int[] evendatas = new int[3];//랜덤한 짝수 3개 뽑기for(int i=0;i&lt;evendatas.length;i++){ evendatas[i] = rd.nextInt(8)+1; if(evendatas[i]%2 !=0){ evendatas[i] = evendatas[i]+1; } System.out.print(evendatas[i]+\"\\t\");}//뽑은 짝수합구하기evenSum = 0;for(int data : evendatas){ evenSum+=data;}System.out.print(\"랜덤한 짝수의 합 : \"+evenSum); 2. 배열 데이터의 정렬배열과 같은 자료구조에 대해서는 정렬에 대한 요구사항이 빈번하다.정렬을 구현하기 위한 알고리즘은 버블 정렬, 선택 정렬, 삽입 정렬 등 여러가지 방식이 있다. Arrays.sort() 오름차순정렬Arrays클래스 API를 이용하기 위해 import java.util.Arrays;해줘야한다.만약 문자열을 관리하는 배열이 파라미터로 들어온다면 대문자-&gt;소문자의 사전순으로 정렬한다. 12345678910int[] data = {5, 7, 2, 9, 1};Arrays.sort(data);//정렬 후 출력for(int x : data){ System.out.print(x + \"\\t\");}//출력값1 2 5 7 9 3. 배열 데이터의 출력 : Arrays.toString(arr)배열데이터를 출력하기 위해서 for문을 이용해도 되지만 Arrays클래스 API를 이용하여 출력할수있다.Arrays.toString(arr)사용하기 위해서는 import를 먼저 해야한다. 1234567891011121314String [] arr1 = {\"JAVA\", \"is\", \"Not\", \"bad\"};Arrays.sort(arr1);//배열출력1 : for each이용for(String s :arr1){ System.out.print(s + \"\\t\");}//배열출력2 : Arrays클래스 API이용 System.out.println(Arrays.toString(arr1));// 출력값JAVA Not bad is [JAVA, Not, bad, is] 4. Arrays 로또 만들기배열에 무작위 숫자로 구성된 로또를 만들고 정렬 후 출력하는 게임을 만들어보자.로또는 1~45사이의 숫자로 구성되며 6개의 숫자를 랜덤으로 뽑느다.그리고 모든 숫자의 중복 x. 1234567891011121314151617int[] selected = new int[6]; //로또를 저장할 배열int[] fullBall = new int[45]; //모든 공의 정보를 가지고 있는 배열int cnt= 0;Random rd = new Random();while(cnt &lt; 6){ //총 6개의 공을 선택할 조건 int index = rd.nextInt(45); //0~44사이의 정수 int ball = fullBall[index]; if(ball ==0){ //중복체크 selected[cnt] = index +1; fullBall[index] = -1; cnt ++; }}Arrays.sort(selected);System.out.println(Arrays.toString(selected));} random.nextInt(n)이는 0~(n-1)개의 정수를 랜덤하게 생성한다.그렇다면 여기선 random.nextInt(45)이므로 0~44사이의 랜덤한 정수를 생성하게된다.왜그럴까?selected된 공은 index에서 +1해주기때문이다if문을 보자.랜덤으로 index가 0이 걸리면 선택된 공은 1이되고랜덤으로 index가 44가 걸리면 선택된공은 45가된다. ball if문으로 중복체크ball = 0이 참이면 이 fullBall[index]가 한번도 뽑힌적이 없는 숫자라는 의미이다.그리고 선택되어지고 selected[cnt] = index +1을 준다.그리고 이미 뽑힌 수는 -1로 값을 준다.그렇게되면 다음번에 또 뽑혔을때 -1이기때문에 거짓이 되어 selected가 되지않는다. 123예를 들어fullBall[2]가 처음뽑혔으면 if문이 참이므로 selected[1]가 되고 로또숫자는 3이다.그리고 난 뒤 fullBall[2] = -1로 바뀌어서 다음번에 뽑혀도 if문에서 거짓으로 팅겨나간다 5. System.arraycopy()배열은 한 번 생성되면 메모리의 연속성때문에 그 크기를 변경할 수 없다.하지먼 프로그래밍을 하다 보면 처음 예상했던 데이터의 개수보다 더 많은 데이터를 관리해야할 경우가 있다.이를 예방하기위해 처음부터 배열의 크기를 크게 지정해버린다면 불필요한 메모리를 낭비하는 꼴이다. 필요에 따라 배열의 길이를 늘이기 위해서는 기존배열의 길이를 늘일수는 없고배열의 길이 큰 새로운 배열은 만들고 기존 데이터를 복사해 넣은 다음 새로운 데이터를 추가해야한다. 첫번째 방법 : for문과 Arrays.toString()이용123456789int[] source = {1,2,3};int[] newSource = new int[7]; //원하는 배열길이만큼의 숫자입력for(int i=0; i&lt;source.length; i++){ newSource[i] = source[i];}System.out.println(Arrays.toString(newSource));//출력값[1, 2, 3, 0, 0] 두번째 방법 : System.arraycopy()와 Arrays.toString()이용System.arraycopy(기존배열명, 카피할데이터인덱스, 새로운배열명, 데이터붙여넣을시작인덱스, source.length); 아래처럼 데이터붙여넣을시작인덱스에 2를 넣었기때문에 출력값은 인덱스2번부터 [0, 0, 1, 2, 3, 0, 0]부터 붙여넣기가 된다.만약 0을 넣었다면 출력값은 인덱스0번부터 [1, 2, 3, 0, 0, 0, 0]이 된다. 1234567int[] source = {1,2,3};int[] newnewSource2 = new int[7] //원하는 배열길이만큼의 숫자입력System.arraycopy(source, 0, newnewSource2, 2, source.length);System.out.println(Arrays.toString(newnewSource2));//출력값[0, 0, 1, 2, 3, 0, 0] 5. Integer.parseInt(파라미터)GUI환경에서 가장 잘 사용하는 메서드이다.정수의 형태인 파라미터를 int로 변경해 리턴한다.만약 파라미터가 정수형태가 아닐 경우 NumberFormatException 에러가 난다.","link":"/2020/06/24/200624javai/"},{"title":"[ITWILL : JSP]JAVA DATATYPE, Integer.parseInt(문자열), 동일한 파라미터의 값을 가지는 데이터가 여러개있을 경우 변수로 가져오기","text":"ITWILL학원 : 14강 JSP기초 BY 정규태강사1. JAVA DATA TYPE 자바데이터타입기본형 8가지를 기억하면 나머지는 전부다 참조형이다. 1. 기본형 :8가지 boolean : 1byte char : 2byte byte : 1byte short : 2byte int : 4byte long : 8byte float : 4byte double : 8byte 2. 참조형 : 엄청 많음 String Scanner 등등 2. 형변환1. 묵시적 형변환메모리공간의 크기가 작은 곳에서 큰 곳으로 자동변환. 예시 : int(4바이트) -&gt; double(8바이트) 자동으로 변환되는 것을 말한다 누가 자동으로 형변환을 해줄까?정답은 컴파일러!!문제가 없기때문에 컴파일러가 자동으로 형변환을 해준다. 2. 명시적 형변환메모리공간의 크기가 큰 곳에서 작은 곳으로 변환. 왜 컴파일러가 자동으로 형변환을 해주지않을까?메모리공간의 차이로 데이터손실이 발생하기때문에 자동형변환을 해주지않는다. 예시인티저.파스인트(스트링)Integer.parseInt(문자열)은 문자열을 정수형(int)로 변경해준다. 12345678// 이전페이지에서 정보를 받아오기System.out.println(&quot;입력숫자 : &quot; + request.getParameter(&quot;num&quot;)); //콘솔에서 출력out.println(&quot;입력하신 숫자는 &quot; + request.getParameter(&quot;num&quot;)); //html화면에서출력//form태그에서 get방식으로 정보를 전달할시 모든 데이터는 string타입으로 변경되어 전달되기때문에//숫자데이터 출력을 원하면 형변환Integer.parseInt()해줘야한다int num = Integer.parseInt(request.getParameter(&quot;num&quot;));정수형값 : &lt;%=num %&gt; &lt;br&gt; 3. 파라미터값 한글처리form get방식과 달리 post방식을 사용하면 한글이 깨지는 문제가 발생한다.따라서 body태그 바로 밑에 파라미터 한글처리 코드가 필요하다. 1234&lt;!-- form post방식을 사용하면 한글이 깨지는 문제가 발생하기때문에 파라미터 한글처리 코드가 필요하다 --&gt; &lt;% request.setCharacterEncoding(\"UTF-8\"); %&gt; 4. 동일한 파라미터의 값을 변수로 가져오기사용자가 radio박스를 클릭하면 해당 데이터를 변수로 가져올수있다. request.getParameter(&quot;&quot;) : 큰따옴표안에 name속성을 넣으면된다. 정보를 입력하는 페이지는 아래와 같이 radio버튼을 만들어놓았다. 1234567&lt;form action=\"정보출력페이지.jsp\" method=\"post\" name=\"fr\"&gt;&lt;label&gt;성별 : &lt;/label&gt;&lt;input type=\"radio\" name=\"gender\" value=\"womyn\"&gt; 여성&lt;input type=\"radio\" name=\"gender\" value=\"men\"&gt; 남성&lt;input type=\"submit\" value=\"제출\"&gt;&lt;/form&gt; 정보를 출력하는 페이지는 아래와 같이 코딩하면 된다. 123456789&lt;h1&gt;변수가져오기&lt;/h1&gt;&lt;% String gender = request.getParameter(\"gender\");%&gt;&lt;h1&gt;사용자정보출력&lt;/h1&gt;입력하신 정보를 아래에서 확인해주세요 성별은 &lt;%=gender %&gt;입니다 &lt;br&gt; 5. 동일한 파라미터의 값을 가지는 데이터가 여러개있을 경우일반적으로 4번방법을 이용하면되지만 checkbox처럼 중복데이터가 가능한 경우는 어떻게 해야할까?동일한 파라미터의 값을 가지는 데이터가 여러개있을 경우 배열을 통해서 데이터를 저장해야한다. 사용자가 몇개를 선택할지 모르지만 변수로 가져오고 싶다면 request.getParameterValues(&quot;&quot;)을 이용한다. request.getParameterValues(&quot;&quot;) : 큰따옴표안에 name속성을 넣으면된다. 정보를 입력하는 페이지는 아래와 같이 checkbox버튼을 만들어놓았다. 12345678&lt;form action=\"정보출력페이지.jsp\" method=\"post\" name=\"fr\"&gt;&lt;label&gt;취미 : &lt;/label&gt;&lt;input type=\"checkbox\" name=\"hobby\" value=\"game\"&gt; 게임&lt;input type=\"checkbox\" name=\"hobby\" value=\"movie\"&gt; 영화감상&lt;input type=\"checkbox\" name=\"hobby\" value=\"workout\"&gt; 운동&lt;input type=\"submit\" value=\"제출\"&gt;&lt;/form&gt; 정보를 출력하는 페이지는 아래와 같이 코딩하면 된다. 1234567891011121314151617181920212223&lt;h1&gt;변수가져오기&lt;/h1&gt;&lt;% // String hobby = request.getParameter(\"hobby\"); //중복데이터 변수로 가져오기 불가능. 첫번째꺼데이터만 출력가능 //동일한 파라미터의 값을 가지는 데이터가 여러개있을 경우 배열을 통해서 저장해야한다. String[] hobbyarr = request.getParameterValues(\"hobby\"); //중복데이터 변수로가져오기가능 %&gt;&lt;h1&gt;사용자정보출력&lt;/h1&gt;취미는 &lt;% if(hobbyarr == null){ //취미를 선택 안한경우 처리 out.println(\"선택안함\"); }else{ for(int i=0;i&lt;hobbyarr.length;i++){ %&gt; &lt;%=hobbyarr[i] %&gt; &lt;% } }%&gt;입니다&lt;br&gt;","link":"/2020/06/24/200624jspi/"},{"title":"[ITWILL : JSP]영역객체scope","text":"ITWILL학원 : 14강 JSP기초 BY 정규태강사참고로 교재는 p209부터임. 1. 영역객체(scope)영역 객체(Scope) , 속성(Attribute) 내장객체 (8+1)중에서 해당 유효한 범위안에서 데이터를 서로 공유할수있는 객체이때, 그 공유되는 범위를 ‘영역(Scope)’라고한다. 그때의 공유되는 값 ‘속성(Attribute)’라고한다. 영역 영역처리 객체 page pageContext request request session session application application 왼쪽의 영역을 처리하기 위해서는 오른쪽의 객체를 사용해야한다.내장객체 8가지 중에서 위의 4가지들은 서로 데이터를 공유할 수 있다.page에서 application으로 영역이 내려올수록 영역의 범위/크기가 커진다. 1. page 영역 : 해당 페이지가 클라이언트에 정보를 제공하는 동안해당 페이지가 클라이언트에 정보를 제공하는 동안 페이지 영역이라는 공간에서 데이터를 주고받을 수 있다. pageContext 객체사용가능 : JSP페이지 정보를 저장하는 객체 사용 : 다른 내장객체를 호출하거나, 페이지흐름제어하거나, 에러데이터 처리할 때 주로 사용한다 2. request 영역 : 클라이언트 요청이 처리되는 동안여러개의 페이지를 이동할때 정보를 저장해서 사용page 영역과 request영역 차이request영역은 주소창에 주소를 치는 동안의 영역이다. request 객체사용가능 : 페이지 요청시 정보를 처리하는 객체 사용 : 페이지 이동시 주로 사용한다. 3. session 영역 : 세션이 유지되는 동안 (브라우저당 세션 1개씩 생성이되고 기본값은 30분)예를 들어 크롬창을 키는 순간부터 30분동안 세션에 정보가 저장된다. session 객체사용가능 : 하나의 웹 브라우저가 정보를 유지하기위한 시간동안 사용되는 객체 사용 : 사용자인증처리에서 주로 사용한다. 4. application 영역 : 웹 애플리케이션이 실행되고있는 동안즉 서버가 실행중일때의 영역이다.서버의 설정정보나 자원에 대한 정보, 애플리케이션실행시 발생하는 이벤트정보등이 저장된다.4가지영역중 가장 큰 영역이다 application 객체사용가능 : 웹 애플리케이션의 Context 정보를 처리객체 사용 : 홈페이지 방문자수 카운트 등에 주로 사용한다.","link":"/2020/06/24/200624jspi2/"},{"title":"[ITWILL : JAVA]객체지향언어, 클래스 : 멤버변수vs지역변수","text":"ITWILL학원 : 11강 JAVA BY 윤미영강사 클래스 class : 실생활에서 도면에 해당하는 것, 객체를 만드는 원판 객체 object=instance : 도면을 이용해서 찍어내는 제품, 원판을 통해 만들어진 객체 인스턴스화 : 클래스 - 인스턴스화(=객체화=객체생성=메모리에 객체가 생성됨)-&gt; 객체 1. 객체지향언어객체는 예약어로 따지자면 class다.객체를 프로그램에 포함하기위해서는 내가 필요한 기능만 뽑는 즉, 추상화과정이 필요하다. 객체지향언어의 특징 : 모듈화 객체지향의 큰 특징 중 하나는 모듈화이다. 모듈은 재사용이 가능하다록 조립된 블록이고 모듈화란 모듈 형식으로 작업을 진행하는 것을 말한다. 추가/수정/삭제가 쉽다. 재사용이 가능하다. 이미 검증된 모듈을 사용할 경우 신뢰도가 높다. 2. 객체지향언어 vs 절차지향언어(기능위주언어)두 언어 모두 function이 있지만 객체지향언어는 객체단위로이루어져있다 객체지향언어논리적 흐름에 따라 위에서 쭉 코드를 작성해나가는 탑다운 방식을 사용한다.즉,자바는 객체지향 프로그래밍언어로 함수보다는 클래스객체를 만들어 문제를 해결해나간다예를들어 사칙연산프로그램을 만든다면 +클래스, *클래스, *클래스, /클래스를 만든다. 절차지향언어위에서 쭉 코드를 작성해나가는 것보다 기능중심의 함수를 정의해 문제를 해결해나간다.절차지향언어 예로는 파이썬이 있는데 워낙 인기가 많고 쉽게 사용하다보니 java도 버전9부터 람다를 만들어서 기능/함수위주의 언어로 가기 위해 노력하고있다. 3. 클래스(객체)자바는 모든 코드가 클래스에 담겨 있는 100% 객체지향언어이다.클래스란, 객체를 정의하는 틀이다.클래스의 형태는 아래와 같다클래스안의 변수들은 멤버변수라고 부른다. 12345class 클래스명{ int 멤버변수; String 멤버변수; 실행코드;} 하나의 클래스를 생성해놓았다면 꼭 객체생성을 해야쓸수있다.왜냐하면 객체생성을 해주지않으면 메모리에 올라가지않는다. 3-1. 접근지정자 class 클래스명{ 실행코드 }접근지정자는 접근허용한도를 정해주는 키워드이다. public : 누구나 접근 가능하다 protected : 같은 패키지 내에 있거나 상속받은 자손클래스에서만 졉근가능 default(package-private) : 아무런 접근 제어자를 적어주지 않을 때이며, package-private라고도 불린다. 같은 패키지 내에 있을 때만 접근 가능하다. private : 해당 클래스 내에서만 접근 가능하다. 123접근지정자 class 클래스명{ 실행코드 } 접근지정자 범위 public &gt; protected &gt; 기본접근지정자(디폴트) &gt; private public이 가장 넓은 범위이다. 매서드오버라이딩시 접근지정자는 슈퍼클래스의 메서드보다 범위가 줄어들어서는 안된다. 커지는 건 가능. 3-2. 클래스(객체) 구성요소하나의 클래스는 필드(Field), 생성자(Constructor), 메소드(Method)로 구성된다. 필드 =&gt; 객체의 속성필드는 멤버변수(=필드변수, 인스턴스 변수)라고 하며 class내부에 선언되는 변수이다.변수는 선언의 위치에 따라 멤버변수와 지역변수로 나누어진다.또 멤버변수는 클래스변수와 인스턴스 변수로 나누어진다. 생성자 =&gt; 멤버변수를 초기화 메서드 =&gt; 객체의 기능 4. 변수변수는 변수의 타입에 따라 기본형과 참조형으로 구분할수있고 또한 변수의 선언 위치에 따라 변수의 종류를 구분할 수도 있다. 선언위치 변수명 변수종류 특징 클래스내부선언 멤버변수 클래스멤버변수 static키워드사용(객체생성필요X, 객체가 메모리에 자동생성) 클래스내부선언 멤버변수 인스턴스멤버변수 static키워드없음(객체생성필요O) 메소드나 생상자에서 생성 지역변수(=로컬변수) 로컬변수 메소드나 생상자에서 생성 지역변수(=로컬변수) 파라미터 변수 메서드 파라미터 참고로 파라미터변수는 지역변수소속이므로 지역변수이다. 4-1. 멤버변수 VS 지역변수자바는 선언위치에 따라 크게 두 종류의 변수로 나눠진다. 멤버변수 : 클래스변수, 지역변수 class내부에 선언되는 변수 자동으로 초기화됨(주로 0) 지역변수 : 로컬변수, 파라미터변수 메소드나 생성자, 초기화블록처럼 class영역 내에 있는 또 다른 블록 내부에 선언된 변수 메서드가 종료되면 자동소멸된다. 자동으로 초기화안됨. -&gt; 명시적인 초기화가 필요하다. 4-2. 클래스멤버변수 vs 인스턴스멤버변수이제 멤버변수안에 있는 두가지 변수를 비교해보자클래스멤버변수 = static 멤버변수.static변수은 정적이라는 의미이다. static변수는 객체생성필요없이 사용가능하다. 그럼 객체생성할 필요없는 static멤버변수를 쓰면 편한데 왜 굳이 객체생성까지해야하는 인스턴스멤버변수를 사용할까?자바에서는 static키워드를 사용한다는 것은 메모리에 한번 할당되어 프로그램이 종료될 때 해제되는 것을 의미한다.메모리를 많이 잡아먹기때문에 필요한 것들만 사용하는 인스턴스멤버변수를 사용하는 것이 메모리 효율에 좋다. 참고링크 : static변수와 static메소드 static이 붙고 안붙고의 차이를 아래 예시의 출력값으로 비교해보자. 1234567891011121314151617181920public class Person { String name; //인스턴스멤버변수 int age; //인스턴스멤버변수 static int a; //클래스멤버변수}public static void main(String[] args) { Person.a =0; Person p1 = new Person(); //객체생성 -&gt;객체생성을 하지않으면 메모리에 올가가지않기에 객체생성을 꼭해야한다. p1.name = &quot;홍길동&quot;; p1.a = 100; Person p2 = new Person(); //객체생성 p2.name = &quot;이순신&quot;; p2.a = 200; System.out.println(p1.name + &quot; : &quot;+p1.a); //홍길동 : 200 System.out.println(p2.name + &quot; : &quot;+p2.a); //이순신 : 200} 출력값의 차이를 보자인스턴스멤버변수인 name의 경우 홍길동, 이순신 각각 잘 출력되었지만클래스멤버변수인 a의 경우 p1.a =100;이라고 선언해도 탑다운방식으로 출력문전에 200으로 바뀌었으므로 둘다 200으로 출력된다. 4-3. 전역변수변수를 공부하다가 생각난 변수가 있는데 바로 전역변수이다.자바에는 전역변수가 없나생각했는데 nope!!자바에서는 클래스를 기준으로 사용하므로 클래스안에 있는 멤버변수가 전역변수이다!클래스즉 멤버변수 = 전역변수 = 필드변수라고도한다","link":"/2020/06/25/200625javai/"},{"title":"[ITWILL : JSP]영역객체 안에서 사용하는 속성(Attribute), 링크이동 방법별 전달가능한 영역(scope)","text":"ITWILL학원 : 15강 JSP기초 BY 정규태강사1. 영역객체 안에서 사용하는 속성(Attribute)속성(Attribute)을 저장해서 사용. 사용형태 2가지 해당영역객체.setAttribute(&quot;이름&quot;, 값) 해당영역객체.getAttribute(&quot;이름&quot;) 1234567//html페이지&lt;fieldset&gt; &lt;form action=&quot;jsp페이지.jsp&quot; method=&quot;get&quot;&gt; &lt;label&gt;아이디 : &lt;/label&gt;&lt;input type=&quot;text&quot; name=&quot;id&quot;&gt; &lt;input type=&quot;submit&quot; value=&quot;submit&quot;&gt; &lt;/form&gt;&lt;/fieldset&gt; 페이지객체에서 setAttribute(“이름”, 값)를 통해 생성하고 getAttribute(“이름”)를 통해 출력한다. 123456789101112131415//jsp페이지&lt;h1&gt;내장객체(pageContext, request, session, application)생성&lt;/h1&gt; &lt;%pageContext.setAttribute(&quot;p&quot;, &quot;pageContext 값있음!&quot;);request.setAttribute(&quot;req&quot;, &quot;request 값있음!&quot;);session.setAttribute(&quot;ses&quot;, &quot;session 값있음!&quot;);application.setAttribute(&quot;app&quot;, &quot;application 값있음!&quot;);&lt;h1&gt;내장객체 (pageContext, request, session, application)출력&lt;/h1&gt; pageContext 내장객체의 값 : &lt;%=pageContext.getAttribute(&quot;p&quot;)%&gt;&lt;br&gt;request 내장객체의 값 : &lt;%=request.getAttribute(&quot;req&quot;)%&gt;&lt;br&gt;session 내장객체의 값 : &lt;%=session.getAttribute(&quot;ses&quot;)%&gt;&lt;br&gt;application 내장객체의 값 : &lt;%=application.getAttribute(&quot;app&quot;)%&gt;&lt;br&gt;%&gt; 2. 링크이동 방법별 전달가능한 영역(scope)공통적으로 아래 4가지 방식들은 session,application, 파라미터를 저장/전달가능하다. 자바스크립트, JSP(sendRedirect), 액션태그 방식은 서로 같이 사용불가. 2-1. a태그로 이동시사용가능한 영역은 4가지영역(pageContext,request,session,application) 중에 session, application영역의 값 공유가능하다. 1&lt;a href=\"scopeProPro.jsp\"&gt; scopeProPro.jsp로 페이지이동 ... &lt;/a&gt; 만약 파라미터의 값도 저장하고 전달하고 싶다면 어떻게 하면될까?표현식을 이용하면 된다.파라미터까지 전달이 가능하다. 1&lt;a href=\"scopeProPro.jsp?id=&lt;%=id%&gt;\"&gt; scopeProPro.jsp 페이지로 이동 ... &lt;/a&gt; 즉, a태그(링크) 이동시 session,application 영역의 값을 공유가능.파라미터의 값도 저장/전달 가능하다(get 방식)HTML이기에 파라미터를 가져갈때 표현식을 사용하면된다. 2-2. js에서 location.href사용하여 이동시자바스크립트 이동시 session,application 영역의 값을 공유가능.파라미터의 값도 저장/전달 가능하다(get 방식)HTML이기에 파라미터를 가져갈때 표현식을 사용하면된다. 1234&lt;script type=\"text/javascript\"&gt;alert(\"자바스크립트로 scopeProPro.jsp 페이지로 이동\")location.href=\"scopeProPro.jsp?id=&lt;%=id%&gt;&amp;pw=1234\";&lt;/script&gt; 2-3. 내장객체 response 이동시session,application 영역의 값을 공유가능.파라미터의 값도 저장/전달 가능하다(get 방식).파라미터를 가져갈때 표현식이 아닌 1234567&lt;%//response.sendRedirect(\"이동할 페이지 주소\");response.sendRedirect(\"scopeProPro.jsp\");//파라메터 추가로 같이 공유하는 방법response.sendRedirect(\"scopeProPro.jsp?id=\"+id+\"&amp;pw=1234\");%&gt; 아이디가 한글일때는 왜 물음표가 나타날까요?response.sendRedirect()전까지는 한글이 안깨지다가 response.sendRedirect()명령어부터 한글이 깨진다.데이터를 인코딩해서 보내야한다. 인코딩에는 여러 방식이 있는데 response.sendRedirect()는 한글데이터를 처리하지못하는 인코딩방식이다.response객체안에 전달되는 콘텐츠타입을 바꿔서 해야하는데 그걸 하려면 서블릿을 이용해야해서 서블릿배우면 알수있다. 2-4. 액션태그 forward 이동시(p222)html태그이지만 jsp동작을 할수있게 만들어진 특수한 기능을 가지고 있다.액션태그 : jsp페이지에서 자바, 스크립트코드없이 다른 페이지로 이동하는 기능이 있다.서블릿, 객체(자바빈)에 접근할수있는 방법이 액션태그이다.원래 페이지에 의해 생성된 request객체와 response객체가 그대로 넘어간다. 즉, session,application 그리고 request 영역 더불어 파라미터값까지 공유가능. 1234567&lt;jsp:forward page=\"scopeProPro.jsp\" /&gt; 또는&lt;jsp:forward page=\"scopeProPro.jsp\"&gt; &lt;jsp:param name=\"pw\" value=\"&lt;%=a %&gt;\" /&gt; &lt;!--표현식사용가능 --&gt;&lt;/jsp:forward&gt; 액션태그는 포워딩이 일어난다. forwarding (포워딩)이란 이동하는 페이지의 주소는 변경 X, 페이지의 내용만 변경. 중요 request객체와 response객체를 가지고 이동가능 따라서 액션태그는 이동하는 페이지의 주소는 변경되지않고 페이지의 내용만 변경되는 희안한 태그이면서 request객체와 response객체를 가지고 이동한다. 그런데 주소를 변경안하는 기능이 왜 필요할까?MVC패턴개발방식에서 꼭 필요하다.웹서핑중에 jsp파일명을 주소창에서 본 적이 있는가?아마 없을 것이다. 보안을 위해서 .jsp파일을 절대 공개하지않는다.따라서 가상주소를 사용해야하는데 그 가상주소를 사용할때 액션태그 forward가 필요하다","link":"/2020/06/25/200625jspi/"},{"title":"[ITWILL : JSP]JSP 디렉티브(directive) 중 include VS 액션태그 include, jspf확장자 파일","text":"ITWILL학원 : 15강 JSP기초 BY 정규태강사1. include의 두 종류 @include : 골뱅이방식골뱅이방식은 jsp 지시어이고 jsp문법이다.공통으로 사용되는 변수를 파일에 지정해서 추가한다.해당 페이지가 컴파일되기전에(소스코드파일.java가 클래스파일로.class 변화하는 과정) 소스코드를 include한 후 컴파일한다.컴파일을 한번한다. jsp:include page=”” : 액션태그방식액션태그방식은 html문법이다.공통으로 사용되는 메뉴들을(주로 페이지) 특정 공간에 추가한다.해당 페이지가 java파일(서블릿)으로 컴파일 된 후에 include한다.컴파일을 두번하게된다. 12345 &lt;%@ include ~ %&gt; &lt;!-- JSP 지시어 : 공통으로 사용되는 변수를 파일에 지정해서 추가 --&gt; &lt;jsp:include page=\"\"&gt; ~ &lt;!-- 액션태그 : 공통으로 사용되는 메뉴들을(페이지) 특정 공간에 추가 --&gt; 예시아래 테이블에서 첫 행에 top.jsp라는 파일을 추가하고싶을때 jsp액션태그를 사용하는 방법이다. 123456789 &lt;table border=1 width=\"600\" height=\"600\"&gt; &lt;tr&gt; &lt;td colspan=\"2\" height=\"100\"&gt; &lt;jsp:include page=\"top.jsp\"&gt; &lt;jsp:param value=\"Your name\" name=\"name\"/&gt; &lt;/jsp:include&gt; &lt;/td&gt; &lt;/tr&gt;&lt;/table&gt; 2. @include 와 jsp:include page=”” 차이점둘 다 목적은 include(추가)하는 거지만 include되는 시점이 다르다.골뱅이방식은 jsp파일에 include한 뒤 java가 되고 class파일이 된다.액션태그방식은 jsp가 java파일이 되고 거기에 include를 하고 class파일이 된다. 3. jspf확장자 파일jspf( Jsp Servlet Page Framegment ) : JSP 변수를 저장가능한 확장자파일.","link":"/2020/06/25/200625jspi2/"},{"title":"[ITWILL : DB]테이블 전체목록조회, 테이블구조조회, WHERE(조건문)절","text":"ITWILL학원 : 9강 Database BY 정지윤강사1. 테이블 전체 목록조회내가 어떠한 테이블을 가지고 있는 지 모를때 아래 명령어를 날리면 몇개의 테이블을 가지고 있는지 알려준다 12SQL&gt; select *SQL&gt; from tab; 2. 테이블 구조조회위에서 파악된 테이블 전체목록중에 구조 보고싶은 테이블이있다면 아래 명령어를 입력하면된다. describe 테이블명이지만 실무에선 줄여서 desc 테이블명 명령어를 사용한다. 1SQL&gt; desc 테이블명 3. WHERE(조건문)절 1. where 컬럼명 = 리터럴값 숫자employees테이블에 salary가 3500인 직원들의 last_name을 출력하는 쿼리. 123SQL&gt; select last_nameSQL&gt; from employeesSQL&gt; where salary = 3500; 문자(대소문자 주의!)employees테이블에 last_name이 Bell인 직원의 last_name과 연봉을 출력하는 쿼리.리터럴값은 대소문자를 구분하기때문에 Bell로 저장된 직원을 bell이나 BELL로 찾으면 no row selected가 뜬다.따라서 대소문자를 주의해야한다!모든 데이터가 소문자인지 대문자인지 intcap형태인지 헷갈리므로 이때 사용하는 대소문자변환함수가 있다. 123SQL&gt; select last_name, salarySQL&gt; from employeesSQL&gt; where last_name = 'Bell'; 2. where between a AND ba는 b보다 항상 작은 값을 주고b는 a보다 항상 큰 값을 입력해야한다. a와b에는 숫자에만 들어갈 수있을까? Nope! 날짜도 순서가 있고 문자에도 순서가있다! 숫자 employees테이블에 연봉 2500에서 3000사이를 받는 직원의 last_name과 salary를 출력하는 쿼리. 123SQL&gt; select last_name, salarySQL&gt; from employeesSQL&gt; where salary between 2500 and 3000; 날짜 : 오래된날짜부터 최신순으로 날짜는 사람마다 국가마다 다르게 쓰기때문에 순서가 정해져있다.날짜는 DAY 두자리-MONTH두자리-YEAR두자리로 사용한다. 날짜순서 : DD-MON-RR employees테이블에서 입사일이 2004년 1월 1일부터 2004년 1월 31일까지인 직원의 last_name과hire_date를 출력하는 쿼리. 123SQL&gt; select last_name, hire_dateSQL&gt; from employeesSQL&gt; where hire_date between '01-JAN-04' and '31-JAN-04'; 문자 : 알파벳순서 기준으로 알파벳순서기준으로 Bell부터 Fay사이에 알파벳이 있는 모든 직원의 employee_id와 last_name을 출력하는 쿼리. 123SQL&gt; select employee_id, last_nameSQL&gt; from employeesSQL&gt; where last_name between 'Bell' and 'Fay'; 3. where 컬럼명 in (a,b,c)a,b,c에는 숫자가능하고 문자도 가능하다.문자쓸때는 꼭 ('a','b','c')를 붙여서 사용하면된다. where 컬럼명 in (a,b,c)는 &&(앤드)연산자처럼생각하면된다.a,b,c를 다 포함하는 걸 출력하는 쿼리이다. where 컬럼명 in (a,b,c) 는 where 컬럼명 = a or 컬럼명 = b or 컬럼명 = c와 동일하다or가 약간 헷갈릴수있지만 a,b,c를 다~ 포함하는 것이란걸 유의하자. employees테이블에서 manager_id가 100이거나 101이거나 201인 직원의 employee_id, last_name, manager_id 를 출력하는 쿼리. 123SQL&gt; select employee_id, last_name, manager_idSQL&gt; from employeesSQL&gt; where manager_id in (100, 101, 201); 이와 동일한 결과가 나오는 쿼리는 아래와 같다.or가 약간 헷갈릴수있지만 매니저ID가 100,101,201인 걸 다 포함하는 것이란걸 유의하자. 123SQL&gt; select employee_id, last_name, manager_idSQL&gt; from employeesSQL&gt; where manager_id = 100 or manager_id = 101, manager_id = 201); 4. where 컬럼명 like ‘’ 비교연산자like비교연산자는 우변에 패턴이 와야한다.대소문자구분되니 대소문자 작성에 유의하자! % : 자리에는 문자가 아예 없거나 또는 여러개여도 된다는 의미._ : 앞자리에 반드시 무언가가 와야한다는 의미. a시작하는 문자열 찾기a로 시작되는 문자열을 찾고싶을때 like 'a%'로 쿼리를 보내면 된다. abc =&gt; 조건일치 (a로 시작해서) a =&gt; 조건일치 (a로 시작해서) baaaa =&gt; 조건불일치 (a로 시작하지않아서) bsc =&gt;조건불일치 a가 포함된 문자열 찾기a가 포함되는 문자열을 찾고싶을때 like '%a%'로 쿼리를 보내면 된다. abc =&gt; 조건일치 a =&gt; 조건일치 baaaa =&gt; 조건일치 bsc =&gt;조건불일치 a로 끝나는 문자열 찾기a로 끝나는 문자열을 찾고싶을때 like '%a'로 쿼리를 보내면 된다. abc =&gt; 조건불일치 a =&gt; 조건일치 baaaa =&gt; 조건일치 bsc =&gt;조건불일치 두번째문자가 a인 문자열 찾기두번째문자가 a인 문자열을 찾고싶을땐 like '_a%'(언더바1개)로 쿼리를 보내면 된다. abc =&gt; 조건불일치 a =&gt; 조건불일치 baaaa =&gt; 조건일치 bsc =&gt;조건불일치 끝에서 세번째문자가 a인 문자열 찾기끝에서 세번째문자가 a인 문자열을 찾고싶을땐 like '%a__'(언더바2개)로 쿼리를 보내면 된다. abc =&gt; 조건일치 a =&gt; 조건불일치 baaaa =&gt; 조건일치 bsc =&gt;조건불일치 employees테이블에서 last_name의 두번째 문자가 소문자 o인 직원의 last_name를 출력하는 쿼리. 123SQL&gt; select last_nameSQL&gt; from employeesSQL&gt; where last_name like '_o%'; 5. where 컬럼명 is null따라서 아래 4가지로 NULL값을 가진 컬럼을 출력할수있을까? where 컬럼명 = null where 컬럼명 = ‘null’ where 컬럼명 = ‘Null’ where 컬럼명 = ‘NULL’ 정답은 NOPE! 싹 다 틀렸다. NULL은 특수한 값이다.따라서 일반 사칙연산자(=등)으로는 비교를 할 수 없다.NULL은 특수한 값이때문에 자체 연산자가 따로 있다.그것이 바로 IS NULL이다. 대소문자 구분은 안해도 된다. employees테이블에서 manager_id가 null인 직원(즉, 대표이사)의 employee_id, last_name를 출력하는 쿼리. 123SQL&gt; select employee_id, last_nameSQL&gt; from employeesSQL&gt; where manager_id is null; 참고링크 : where절 쿼리에 조건주기 4. WHERE(조건문)절 부정where조건절의 부정은 not을 적어주면 된다.","link":"/2020/06/26/200626dbi/"},{"title":"[ITWILL : DB]Order by 정렬","text":"ITWILL학원 : 9강 Database BY 정지윤강사order by를 입력하는 순서는 쿼리구문의 제일 마지막에 적어줘야한다. 오름차순정렬 : asc = ascending order, default 내림차순정렬(최신이 위쪽) : desc = descending order 컬럼명은 alias를 적어도 적용가능하다 1. asc : 오름차순 정렬, 디폴트값asc를 적어도되고 생략해도 동일한 결과값이 출력된다. 아래 예시는 employees테이블에서 hire_date로 오름차순 정렬하여 출력하는 퀴리이다. 123select last_name, job_id, department_id, hire_date from employeesorder by hire_date; 아래와 같이 오름차순으로 정렬됨을 알수있다 2. desc : 내림차순 정렬내림차순을 원하면 꼭 적어줘야한다. 어디서 본적이 없는가? desc는 describe의 약어이기도했다.동명이기능이라고 생각하면된다. hire_date를 alias로 date로 별칭을 정한뒤 order by 컬럼명을 별칭으로 적어도 정상적으로 출력된다. 아래 예시는 employees테이블에서 별칭date로 내림차순 정렬하여 출력하는 퀴리이다. 123select last_name, job_id, department_id, hire_date as datefrom employeesorder by date desc; 3. 위치값기준 정렬위치값으로 정렬할수도있다. 아래 예시를 보자.숫자 3을 기준으로 어떻게 정렬될까? select되어진 컬럼들을 차례대로 1번부터 시작하면 된다.3이니 department_id를 기준으로 아무것도 적지않았으니 asc로 정렬하게된다. 아래 예시는 employees테이블에서 department_id로 오름차순 정렬하여 출력하는 퀴리이다. 123select last_name, job_id, department_id, hire_datefrom employeesorder by 3; 4. 다중컬럼기준 정렬다중컬럼 기준으로 정렬도 가능하다이때는 정렬되는 순서가 달라지는데 order by 1번컬럼, 2번컬럼인 경우 1번컬럼 정렬 후!!! 2번컬럼이 정렬되어 출력된다. 아래예시를 보자.employees테이블에서 department_id는 오름차순 정렬한 뒤 salary는 내림차순정렬로 last_name, job_id, department_id, salary를 출력하는 춰리이다. 123select last_name, job_id, department_id, salaryfrom employeesorder by department_id, salary desc;","link":"/2020/06/26/200626dbi2/"},{"title":"[ITWILL : WEB] input태그속성 및 input태그type종류","text":"ITWILL학원 : 5강 WEB(HTML, CSS) BY 김영희1. required 속성필수입력요소를 설정할때 required 속성을 지정하면 된다.필수입력요소를 입력하지않고 submit버튼을 누르면 해당칸을 입력하라는 메세지가 출력되고 포커스까지 해준다. 12&lt;h1&gt;필수입력요소로 지정 : required &lt;/h1&gt;&lt;label&gt;연락처 : &lt;/label&gt;&lt;input type=\"text\" required&gt; 2. readonly 속성 vs disabled 속성 readonly : 읽기전용이다. 쓰기가 불가하며 드래그는 가능하다. 태그자체를 가져가서 다른 곳에서 사용가능. 폼태그를 이용해서 submit했을때 데이터가 그대로 넘어가서 다른 곳에서 사용할 수 있다 disabled : 사용불가이다. 쓰기도 불가하고 드래그도 불가능하다. 태그자체를 가져갈수없어서 다른 곳에서 불러 사용할수없다. 폼태그를 이용해서 submit했을때 데이터가 아예 넘어가지않아 다른 곳에서 사용할 수 없다 required속성과 함께 출력해보면 아래 이미지처럼 출력된다. reired속성과 readonly 속성, disabled 속성은 의미상 맞으면 다른 tag에도 사용가능하지만 실무에서는 input타입에 가장 많이 쓰인다!!! 3. type=&quot;number&quot; min, max, step속성입력창을 클릭하면 오른쪽에 화살표버튼이 생긴다. min값을 지정하지않으면 음수도 넣을 수 있다.step에 원하는 숫자n을 넣으면 n단위로 증가/감소 시킬 수 있다.주로 쇼핑몰에서 사용할수있는 속성이다 1234&lt;h1&gt;type=\"숫자\" min, max, step &lt;/h1&gt;&lt;label&gt;type=\"숫자\" min=\"1\" 최소값 : &lt;input type=\"number\" min=\"1\"&gt;개&lt;/label&gt;&lt;br&gt;&lt;label&gt;type=\"숫자\" max=\"10\" 최대값 : &lt;input type=\"number\" max=\"10\"&gt;개&lt;/label&gt;&lt;br&gt;&lt;label&gt; type=\"숫자\" step=\"5\" 5단위로 증가&lt;input type=\"number\" max=\"100\" step=\"5\"&gt;개&lt;/label&gt;&lt;br&gt; 출력값은 아래와 같다. 4. fieldset 필드셋예로 쇼핑몰페이지에서 주문자정보, 배송지정보으로 각각 필드셋으로 묶어서 처리할 수 있다. 12345&lt;fieldset&gt; &lt;legend&gt;배송지정보&lt;/legend&gt; 배송지주소 : &lt;input type=\"text\" placeholder=\"신주소\"&gt;&lt;br&gt; 받는사람 연락처 : &lt;input type=\"text\" size=\"30\" placeholder=\"예) 010-1234-5678\"&gt;&lt;br&gt;&lt;/fieldset&gt; 5. html5에서 추가된 input태그 types 종류input태그의 타입은 굉장히 다양하다 1. 종류참고링크 : W3SCHOOLS input type 2. 특징브라우저마다 지원가능여부도 다르고 디자인도 다르다.지원가능여부를 확인할 수 있는 유용한 사이트인 Can I use가 있다.참고링크 : Can i use에서 검색을 통해 브라우저별로 지원가능한지 확인할 수 있다. 3. 전체 예시1234567891011121314151617181920212223242526&lt;h1&gt;html5에서 추가된 inpu태그 type값&lt;/h1&gt;&lt;ul&gt; &lt;li&gt;input type=\"date\" : &lt;input type=\"date\"&gt;&lt;/li&gt; &lt;!-- 날짜를 포함하는 입력영역(년월일) --&gt; &lt;li&gt;input type=\"datetime-local\" : &lt;input type=\"datetime-local\"&gt;&lt;/li&gt; &lt;!-- 사용자가 위치한 나라를 기준으로 날짜와 시간 입력(년월일시분초) --&gt; &lt;li&gt;input type=\"time\" : &lt;input type=\"time\"&gt;&lt;/li&gt; &lt;!-- 사용자가 위치한 나라를 기준으로 시간 입력 (시분초) --&gt; &lt;li&gt;input type=\"week\" : &lt;input type=\"week\"&gt;&lt;/li&gt; &lt;!-- 사용자가 위치한 나라를 기준으로 날짜 입력 (년주) --&gt; &lt;li&gt;input type=\"month\" : &lt;input type=\"month\"&gt;&lt;/li&gt; &lt;!-- 사용자가 위치한 나라를 기준으로 날짜 입력 (년월) --&gt; &lt;li&gt;모바일 브라우저만 지원 input type=\"tel\" : &lt;input type=\"tel\"&gt;&lt;/li&gt; &lt;!-- 모바일브라우저만 지원. 웹브라우저에서는 아무런 영향이 없음 --&gt; &lt;!-- 가상키패드로 숫자키패드가 디폴트. 전화걸기가능 --&gt; &lt;li&gt;input type=\"email\" : &lt;input type=\"email\"&gt;&lt;/li&gt; &lt;!-- 이메일형식에 맞는지 브라우저에서 자동체크함. @입력필수 --&gt; &lt;li&gt;input type=\"url\" : &lt;input type=\"url\"&gt;&lt;/li&gt; &lt;!-- url형식에 맞는지 브라우저에서 자동체크함. 프로토콜(http, https)입력필수 --&gt; &lt;li&gt;input type=\"number\" : &lt;input type=\"number\"&gt;&lt;/li&gt; &lt;!-- 자동으로 위아래화살표가 생기며 키보드로 제어가능 --&gt; &lt;li&gt;input type=\"range\" : &lt;input type=\"range\"&gt;&lt;/li&gt; &lt;!-- 범위를 바형태로 조절 --&gt; &lt;li&gt;input type=\"color\" : &lt;input type=\"color\"&gt;&lt;/li&gt; &lt;!-- 색상 설정가능 --&gt;&lt;/ul&gt; date, datetime-local, time, week, month 예시 위의 타입들을 지정하면 달력아이콘과 날짜 또는 시간형식이 자동생성된다. tel예시하이픈은 뜨지않고 INPUT창을 모바일브라우저에서 눌리면 숫자키패드가 뜬다!아래 MDN사이트들어가면 모바일브라우저를 통해 어떻게 출력되는지 바로 확인가능하다.참고링크 : MDN input type tel email, url email, url은 형식에 맞춰쓰지않으면 아래 이미지처럼 느낌표 팝업창이 뜬다. email은 @주소값이 필수로 들어가야한다. url은 프로토콜(http, https)이 필수로 들어가야한다. range예시range는 인스타그램처럼 바형태로 나타난다.구체적인 값이 아닌 대략적인 값을 입력할때 사용한다. color예시color태그를 클릭하면 아래와 같이 컬러파레트가 자동으로 연결된다.","link":"/2020/06/26/200626webi/"},{"title":"[ITWILL : WEB] radio버튼클릭에 따라 하위태그 사라지게 하기","text":"ITWILL학원 : 5강 WEB(HTML, CSS) BY 김영희아래예시를 보자.정보를 제공받으시겠습까 radio버튼 아니요를 클릭하면 아래 소식을 어떻게받으시겠습니까는 아예 사라지게 하고싶다. 아래는 html구조이다 12345678910&lt;p&gt;&lt;label for=\"acceptInfo\"&gt;♣아이티윌부산이 제공하는 정보를 받으시겠습니까?&lt;/label&gt;&lt;/p&gt;&lt;input type=\"radio\" name=\"event\" id=\"event-y\" checked&gt;&lt;label for=\"event-y\"&gt;예, 받겠습니다&lt;/label&gt;&lt;br&gt;&lt;input type=\"radio\" name=\"event\" id=\"event-n\"&gt;&lt;label for=\"event-n\"&gt;아니요, 받지않겠습니다.&lt;/label&gt;&lt;br&gt;&lt;p id=\"event-h\"&gt;&lt;label for=\"howToGetInfo\"&gt;♣정보나 이벤트 소식을 어떻게 받으시겠습니까?&lt;/label&gt;&lt;br&gt;&lt;input type=\"checkbox\" name=\"howToGetInfo\" value=\"email\" checked&gt;이메일&lt;input type=\"checkbox\" name=\"howToGetInfo\" value=\"text\" &gt; 문자&lt;input type=\"checkbox\" name=\"howToGetInfo\" value=\"katalk\" checked&gt; 카카오톡&lt;input type=\"checkbox\" name=\"howToGetInfo\" value=\"mail\" &gt; 우편&lt;/p&gt; 아래는 css코드이다 1234&lt;style&gt; #event-y:checked~#event-h {display: block;} #event-h {display: none;}&lt;/style&gt;","link":"/2020/06/26/200626webi2/"},{"title":"[패스트캠퍼스python] 상속, Django form기능","text":"파이썬 인강 자기계발 챌린지 34회차 미션1. 상속지금까지 회원가입페이지와 로그인페이지를 만들어보았다.html코드를 보면 알겠지만 두 페이지가 body태그빼고 똑같다.이럴땐 하나의 템플릿을 만들고 상속을 이용해야한다. 왜냐고?개발자라면 중복되는 코드는 어떻게든 줄이고싶은 마음이 단전에서부터 부글부글 끓어올라야하기 때문이다!ㅋㅋㅋ 1. base.html만들기중복되는 html코드를 새로운 html파일에 작성한다.그리고 중복되는 부분은 아래코드처럼 처리한다.블럭을 만들고 그 안을 중복되지않은 코드들로 채워넣는 것이다. 12{% block 원하는이름작성 %}{% endblock %} 2. {% extends “이름.html” %}로 상속받기base.html을 상속받아서 사용할 수 있는 코드는 아래와 같다.extends로 먼저 상속받은 뒤 block안에 중복되지않는 html코드들을 입력하면 된다. 12345{% extends \"base.html\" %}{% block 원하는이름작성 %} # 중복되지 않는 HTML코드입력{% endblock %} 위의 이미지에서 2번(오른쪽부분)은 중복되는 코드들을 정리해놓은 HTML태그이고 block를 contents라는 이름으로 지정했다.1번(화면왼쪽)부분은 contents라는 block사이에 중복되지않은 html코드를 작성했다.runserver를 이용하면 정상적으로 실행됨을 알 수 있다. 이렇듯 상속을 이용하면 전체코드를 수정해야할 일이 생길때 일일이 모든 페이지를 수정하지않아도 된다.그냥 base.html페이지만 수정하면 상속받은 모든 코드가 자동으로 수정되기때문이다! 개이득!!! 2. Django form기능이때까지 html태그로 form태그를 만들어 사용하였다. 하지만 Django에서 자체적으로 제공하는 form기능을 이용하면 훨씬 가독성있는 코드를 짤 수 있다. 1. forms.py 파일생성하기fcuser폴더 하위에 forms.py를 생성한 뒤 django에서 forms기능을 import해줘야한다. 아래 코드는 로그인폼을 만드는 코드로 username과 password를 만든다. 12345from django import formsclass LoginForm(forms.Form): username = forms.CharField(max_length=32) password = forms.CharField() 2. view.py 코드 수정django에서 form기능을 import한 뒤 기존 코드는 싹 지우고 아래 코드를 작성하면 끝.단 3줄에 완성할수있다! 신기! 1234# 로그인페이지만들기(django의 form기능이용)def login(request): form = LoginForm() #클래스변수를 만들고 템플릿에 전달 return render(request, 'login.html', {'form':form}) 3. login.html에 {{ form }} 기능 추가기존 form태그안에 로그인과 비밀번호 input태그를 삭제한 후 아래 코드를 입력하면 끝!그 많던 html코드가 python 한줄로 완성된다! 1{{ form }} 위의 코드들을 기존의 html코드들과 비교해보자. 위의 이미지는 왼쪽은 login.html이고 오른쪽은 views.py이다.빨간선을 기준으로 1번부분(위쪽)은 html의 form태그를 이용해서 작성한 코드이다.2번부분(아래)은 django의 form기능을 이용해서 작성한 코드이다.한 눈에 봐도 수많은 코드들이 단 몇줄로 깔끔하게 정리되고 심지어 가독성도 있어보임을 알 수 있다. 그렇다면 출력값도 같을까? 따로 여백을 주지않은채로 진행했기때문에 inline형태로 출력되었지만 특별한 기능이 들어가있다.바로 입력을 하지않으면 알림창이 떠서 모든값을 입력해야지 로그인버튼을 누르고 home페이지로 넘어갈 수 있다.이를 유효성체크라고 하는데 따로 코드를 작성하지않아도 자동으로 들어가있어 엄청 유용한 기능이다.","link":"/2020/06/27/200627python/"},{"title":"[패스트캠퍼스python] 게시판만들기","text":"파이썬 인강 자기계발 챌린지 35회차 미션게시판만들기위해선 순서가 있다. html파일로 화면그리기 board 폴더안에 있는 views.py에서 함수 만들기 board 폴더안에 urls.py 생성하기 프로젝트명과 동일한 폴더하위의 urls.py에 연결하기 board 폴더안에 있는 models.py에서 코드작성하기 1. html파일로 화면그리기기본적으로 board는 테이블형태로 작업을 많이 한다.기본적인 내용은 base.html에서 상속받은 뒤 다른 부분만 작성해주면된다. 상속코드작성 block contents와 endblock 사이에 고유코드작성 부트스트랩의 텍스트유틸리티를 사용해서 색상 밝게 변경 : table table-light, thead-light, text-dark부트스트랩의 텍스트유틸리티 적용유무의 차이는 가장 아래 첨부된 이미지에서 확인할 수 있다. 123456789101112131415161718192021222324252627282930{% extends \"base.html\" %} &lt;!-- 상속 --&gt;{% block contents %} &lt;!-- 다른 부분 시작 --&gt;&lt;table class=\"table table-light\"&gt; &lt;thead class=\"thead-light\"&gt; &lt;tr&gt; &lt;th&gt;#&lt;/th&gt; &lt;th&gt;제목&lt;/th&gt; &lt;th&gt;아이디&lt;/th&gt; &lt;th&gt;일시&lt;/th&gt; &lt;/tr&gt; &lt;/thead&gt; &lt;tbody class=\"text-dark\"&gt; {% for board in boards %} &lt;tr onclick=\"location.href='/board/detail/{{ board.id }}/'\"&gt; &lt;th&gt;{{ board.id }}&lt;/th&gt; &lt;td&gt;{{ board.title }}&lt;/td&gt; &lt;td&gt;{{ board.writer }}&lt;/td&gt; &lt;td&gt;{{ board.registered_dttm }}&lt;/td&gt; &lt;/tr&gt; {% endfor %} &lt;/tbody&gt;&lt;/table&gt;&lt;!-- 글쓰기버튼만들기 --&gt;&lt;div class=\"col-12\"&gt; &lt;button class=\"btn btn-primary\" onclick=\"location.href='/board/write/'\"&gt;글쓰기&lt;/button&gt; &lt;/div&gt; {% endblock %} &lt;!-- 다른 부분 끝 --&gt; 2. board 폴더하위에 있는 views.py에서 render함수만들기views.py에서 board_list.html페이지를 render할 수 있는 함수를 만든다 12def board_list(request): return render(request, 'board_list.html') 3. board 폴더하위에 urls.py 생성하기게시판폴더인 board폴더안에는 urls.py파일이 없기때문에 직접생성해줘야한다.board폴더 안에 파일명은 urls.py로 생성한 뒤 아래 코드를 입력하면 위에서 만든 view.board_list가 연결된다. 123456from django.urls import pathfrom . import viewsurlpatterns = [ path('list/', views.board_list)] 4. 프로젝트명과 동일한 폴더하위의 urls.py에 연결하기fc_community하위의 urls.py에서 path를 추가하여 연결해준다 1path('board/', include('board.urls')), 5. 위의 4단계의 결과물위의 4단계를 다 한뒤에 python manage.py runserver명령어로 실행하면 board_list.html파일을 확인할 수 있다. url은 http://127.0.0.1:8000/board/list/로 지정하면 만든 html파일을 볼 수 있다. 부트스트랩의 텍스트유틸리티로 밝기를 지정하기 전에는 위와같은 이미지로 출력되고밝기지정 후에는 아래와 같은 이미지로 출력된다. 한결 가독성이 좋아졌다.따로 색상을 지정할 필요없이 텍스트유틸리티를 이용하면 손쉽게 해결할 수 있다.","link":"/2020/06/28/200628python/"},{"title":"[ITWILL : JSP] 세션(Session)","text":"ITWILL학원 : 16강 JSP기초 BY 정규태강사1. 세션 session(p270~)세션이 없는 http 프로토콜의 요청처리흐름 아래와 같다. 세션을 이해하기 위해서는 http 프로토콜의 특성을 알아둬야한다.http프로토콜의 특성은 연결되면 요청/응답을 한 뒤에 바로 연결이 종료된다.클라이언트와 서버의 연결 정보를 유지하기위해 연결이 끊어지지않도록 유지할 수 있게 하는 것이 세션이다.즉 세션은 클라이언트와 서버 간의 접속을 유지시켜주는 역할을 한다. 세션 : 서버쪽에서 웹컨테이너의 상태를 유지하기 위해서 정보를 저장하는 객체(방법)웹브라우저당 1개의 세션 정보를 생성해서 사용한다.웹 서버는 각각의 브라우저로 부터 요청을 받아서 응답할때 특별한 식별자(seessionID)를 가지고 응답한다. 위와 같은 이미지를 시퀀스 다이어그램이라고 부른다 2. 세션 사용방법 : 세션 객체 생성(JSP내장객체) -&gt; 값을 저장 -&gt; 저장된 값을 확인기본적으로 객체는 객체생성해서 사용해야하지만 세션은 JSP에서 내장함수이다. 1. 세션생성세션영역에 해당 속성을 저장하는 것이 세션 객체이다.세션정보를 생성하는 코드이다 1session.setAttribute(&quot;이름&quot;, 값); 2. 세션정보 가져오기세션 영역에 있는 속성값을 가져오는 코드이다. 1session.getAttribute(&quot;이름&quot;) 3. 세션정보 삭제하기세션정보를 삭제하는 코드이다.해당 코드는 특성 대상값을 삭제한다. 1session.removeAttribute(&quot;이름&quot;) 4. 세션유지시간 설정하고 반환하기세션의 유지 시간을 설정하는데 사용되는 코드이다. 초 단위로 인자 값을 설정할 수 있다. 1session.setMaxInactiveInterval(1000); 아래 코드는 세션의 유지 시간을 반환하는 역할을 한다. 1session.getMaxInactiveInterval(); 5. 세션정보 초기화하기이 코드는 세션의 모든 속성을 제거하는 역할을 한다. 1sesssion.invalidate(); 6. 삭제와 초기화의 차이** invalidate와 removeAttribute의 차이 ** invalidate() 메소드는 세션의 모든 속성 값을 제거하기 떄문에 removeAttribute()메소드를 사용할 때 처럼 각 속성 값들을 하나씩 제거할 필요가 없다.invalidate() 메소드는 모든 속성을 제거하기 때문에 세션 유지 시간이 지났을 때 세션이 초기화되는 것과 같은 효과를 가져온다. 초기화가 되지않는다면 서버입장에서는 세션정보를 계속 가지고있게되어 부담이 되고 또한 보안상의 문제가 있다.따라서 일반적으로 삭제보다는 초기화를 많이 사용한다.주로 로그아웃기능시 사용한다. 7. 세션값 테스트기존 사용하던 브라우저 다 종료한 후 실행해야 정확히 세션테스트를 할 수 있다. 브라우저당 세션 1개이므로 크롬에서 세션을 생성했다고 익스엣지에 똑같은 세션이 생성되어있지않다. 이제 세션값 생성버튼을 누르면 세션을 생성하고 세션값 삭제버튼을 누르면 세션값이 삭제되며 세션값 초기화를 누리면 세션값이 초기화되는 기능을 구현해보자 sessionTest.jsp 페이지생성 12345678910111213&lt;%String value = (String)session.getAttribute(\"value\"); //session.getAttribute()는 object테이터타입이기에 명시적형변환으로 (String)을 해줘야한다.if ( value == null){ value = \"세션값 없음!\"; // 기본 반환타입인 null에서 세션값 없음으로 표현변경}%&gt;&lt;h1&gt;세션 값 : &lt;%= value %&gt;&lt;/h1&gt;&lt;h1&gt;세션 값(이름) : &lt;%= session.getAttribute(\"name\") %&gt;&lt;/h1&gt;&lt;input type=\"button\" value=\"세션값 생성\" onclick=\"location.href='sessionSet.jsp'\"&gt;&lt;input type=\"button\" value=\"세션값 삭제\" onclick=\"location.href='sessionDel.jsp'\"&gt;&lt;input type=\"button\" value=\"세션값 초기화\" onclick=\"location.href='sessionInvalidate.jsp'\"&gt; sessionSet.jsp 페이지생성세션은 여러개 생성가능하다여기서는 value와 name 총 2개의 세션을 만들었다. 123456789&lt;%//세션 값 생성 session.setAttribute(\"value\", \"세션값 있음~\"); session.setAttribute(\"name\", \"홍길동\");%&gt;&lt;script&gt; alert(\"세션값 생성 완료!\") location.href=\"sessionTest.jsp\" 위는 자바스크립트코드를 사용했고 response객체사용를 사용할 수 있다. 123456&lt;%//세션 값 생성 session.setAttribute(\"value\", \"세션값 있음~\"); session.setAttribute(\"name\", \"홍길동\"); response.sendRedirect(\"sessionTest.jsp\");%&gt; sessionDel.jsp 페이지생성sessionSet과 마찬가지로 처리하는 데에 2가지 방법이 있다.자바스크립트를 사용하거나 response를 사용하거나이다. 이 둘의 차이점은 전혀없다.편한거 사용하면 된다. 자바스크립트 코드사용 123456789&lt;%//세션 값 삭제 session.removeAttribute(\"value\");%&gt;&lt;script&gt; alert(\"세션값 삭제 완료!\") location.href=\"sessionTest.jsp\"&lt;/script&gt; response객체사용 1234&lt;%session.removeAttribute(\"value\");response.sendRedirect(\"sessionTest.jsp\");%&gt; sessionInvalidate 페이지생성세션에 있는 모든 정보를 없앨수있다. 처리시 2가지 방법이있다.자바스크립트를 사용하거나 response를 사용하거나이다. 이 둘의 차이점은 전혀없다.편한거 사용하면 된다. 자바스크립트코드사용 123456&lt;%session.invalidate();%&gt;&lt;script&gt; alert(\"세션값 초기화 완료!\") location.href=\"sessionTest.jsp\";&lt;/script&gt; response객체사용 1234&lt;%session.invalidate();response.sendRedirect(\"sessionTest.jsp\");%&gt; 기존 브라우저를 다 종료 후 sessionTest를 열면 세션값은 null인 것을 확인할 수 있다.세션값 생성 버튼을 클릭하면 sessionSet페이지로 이동 후 alert창이 뜨고 다시 sessionTest로 돌아오게된다.그러면 화면에는 세션값 있음~과 홍길동이 출력된다! 이제 세션값 삭제 버튼을 눌러보면 모든 값이 다 사라져야하지만세션값 없음!과 홍길동이 출력된다. 세션값을 삭제했지만 null이 아닌 여전히 홍길동이 계속 출력된다. 이럴때 세션값 초기화 버튼을 사용하면 세션값 없음!과 null이 출력된다초기화버튼을 통해 모든 세션의 정보를 지울 수 있다.","link":"/2020/06/29/200629jspi/"},{"title":"[ITWILL : JSP] &#x3D;&#x3D;과 str.equals(str2) 차이, 객체와 클래스","text":"ITWILL학원 : 16강 JSP기초 BY 정규태강사1. ==과 str.equals(str2) 차이점두가지는 공통적으로 비교연산을 하지만 차이점이 존재한다.String타입을 비교할때는 equals()를 사용해야한다. == : 두개의 문자열 객체가 완전히 같은지 비교(주소비교) 메모리 주소를 비교(동일한 객체인지) stack 메모리에 있는 주소를 비교 기본형데이터타입을 비교할때 사용한다 str.equals(str2) : 두 개의 문자열 객체의 문자 데이터값이 같은지 비교 대상의 내용을 비교 heap 모든 참조형데이터타입에 사용하는 것은 아니고 참조형데이터타입중에 string타입 비교시에만 사용 가능하다. 다른 참조형데이터타입을 비교하는 방법은 상속을 배운뒤 알게된다. 12345678910111213//일치여부확인(==이용)if (id == DBID &amp;&amp; pw == DBPW){ %&gt; &lt;%=id%&gt; 님 환영합니다! &lt;%}else{ %&gt; 잘못입력하셨습니다.&lt;%}//일치여부확인(equals이용)if (id.equals(DBID) &amp;&amp; pw.equals(DBPW)){ %&gt; &lt;%=id%&gt; 님 환영합니다! &lt;%}else{ %&gt; 잘못입력하셨습니다.&lt;%} 참고링크 : java equals 차이점 2. 객체와 클래스 객체 : 모든 대상,기능들이다. -&gt;객체를 프로그램에 포함하기위해서는 내가 필요한 기능만 뽑는 즉, 추상화과정이 필요하다. 클래스 : 추상화된 객체를 코드로 표현한 형태 흔히 이를 붕어빵만들기에 비유하곤 한다. 클래스 - 객체 =&gt; 인스턴스화(객체화)붕어빵틀 - 붕어빵 =&gt; 가열동작 하지만 붕어빵틀과 붕어빵만 있으면 붕어빵을 만들수있을까?가열동작이 없으면 붕어빵은 만들어지지않는다이 가열동작은 인스턴스화(객체화, 메모리에 올린다)라고 생각하면 쉽다.이때 new연산자를 이용한다. -&gt; new를 하면 메모리에 올라간다. 3. 클래스1. 클래스와 객체는 같다?NOPE! 다르다! 2. 클래스의 구성요소 생성자 : 멤버 변수를 초기화 멤버 변수 : 객체의 속성 멤버 메서드 : 객체의 동작(기능) 왼쪽처럼 기본데이터형의 변수를 선언하면 stack메모리에 올라간다.오른쪽처럼 클래스를 선언하면 stack에는 a라는 변수가 생성되고 heap에는 new Test()라는 객체가 생성된다. 3. 클래스예시휴대폰이라는 객체가 있다고 생객해보자 속성 : model, price, color …등등 기능 : on/off(), tell(), sendMSG() …등등 1234567891011121314class Phone { 1. 속성 model price color ...등등 2. 기능 on/off() tell() sendMSG() ...등등}new Phone(); //클래스선언이 되고 이는 heap메모리에 저장된다.","link":"/2020/06/29/200629jspi2/"},{"title":"[ITWILL : DB] 단일행함수 : 문자함수","text":"ITWILL학원 : 10강 Database BY 정지윤강사SQL함수에는 두가지 유형이 있다. 단일행함수 : 행당 하나의 결과 반환 여러행함수 : 행 집합당 하나의 결과 반환 이 중 단일행함수에 대해 알아보자. 단일행함수종류단일행함수는 총 5가지이다. 문자함수 숫자함수 날짜함수 변환함수 일반함수 1. 문자함수문자함수는 크게 변환함수와 문자 조작 함수로 나누어진다. 1. 대소문자 변환함수변환함수는 총 3가지가 있다.대소문자를 변환한다. 기능 결과 LOWER(‘SQL Course’) sql course UPPER(‘SQL Course’) SQL COURSE INITCAP(‘SQL Course’) Sql Course 123$ select_id, last_name$ from employees$ lower(last_name) = 'higgins'; 2. 문자조작함수 concat(expr1, expr2)concat은 인수를 2개밖에 못 받는다.만약 2개초과로 쓰고싶다면 concat을 중첩해서 사용해야한다. 예를 들어 last_name과 first_name을 합쳐서 full_name을 만들고싶다concat이용한 구문과 연결연산자 이용한 구문의 출력값은 같다.차이점은 concatl은 인수2개만 가능하고 연결연산자는 원하는만큼의 인수를 사용할 수 있다 1234567//concat이용한 구문$ select concat(last_name, first_name) as full_name$ from employees;//연결연산자(||) 이용한 구문$ select last_name || first_name as full_name$ from employees; 이때 last_name과 first_name 사이에 공백 한칸을 넣고싶다그래서 처음에는 아래 코드를 작성했다. 1234$ select concat(last_name, ' ', first_name) as full_name$ from employees;//반환값에러 : invalid number of arguments 위 코드처럼 했더니 invalid number of arguments에러가 떴다.즉, concat은 인수를 2개밖에 못 받기때문에 3개를 쓰려면 중첩해야한다. 123//concat 중첩하기$ select concat(concat(last_name, ' '), first_name) as full_name$ from employees; substr(expr1, expr2, expr3)문자열의 일부분을 반환해주는 함수이다. expr1 : 반환할 문자열 expr2 : 시작위치 음수인 경우 뒤에서 시작위치 ex)-1이면 뒤에서 첫번째글자 expr3 : 반환할 문자갯수 방향은 항상 왼쪽에서 오른쪽으로 문자갯수만큼 반환한다 생략가능 : 생략되면 시작위치에서 끝까지 반환 주로 주민번호(770123-2123456)를 반환할때 사용한다. 12345$ select substr(770123-2123456, 1, 6)//반환값 : 770123$ select substr('Kochhar, -3, 2)//반환값 : ha instr(expr1, expr2)문자열(expr1)로 부터 특정 문자(expr2)의 첫번째 위치값을 반환해주는 함수이다. 아래 문자열에는 o가 2개가 있다. 5번째와 7번째에 있는데 어느 값을 반환해줄까?instr는 첫번째 위치값만 반환해준다. 123$ select isnt('HelloWorld', 'o')//반환값 : 5 lpad(expr1, expr2, expr3) 와 rpad(expr1, expr2, expr3)오른쪽 정렬/왼쪽 정렬 해주는 함수 expr1 : 반환할 문자열 expr2 : 전체자리수 expr3 : 남는 공간을 채울 문자 공백을 주면 오른쪽/왼쪽정렬을 표현할 수 있어 유용하다. 1234//lpad 오른쪽정렬$ select lpad(last_name, 20, ' ')//반환값 : 오른쪽정렬 trim(expr1 from expr2)문자열(expr2)로부터 특정 문자(expr1)가 접두어나 접미어에 있다면 삭제(절단)해주는 함수이다. (ex1) trim(‘H’ from ‘HHelloHWHorldHHH’) =&gt; elloHWHorld 한자리 숫자를 출력하려고 할때 01,02,03 등등으로 출력된다.이때 0을 빼고 한자리만 출력할때 주로 사용한다. length(expr1)문자열의 길이를 반환해주는 함수이다. 123$ select length('HelloWorld')//반환값 : 10 replace(expr1, expr2, expr3)문자열(expr1)로 부터 특정 문자(expr2)를 다른 문자(expr3)로 교체해주는 함수이다. DB에 폰번호가 .로 저장되어있을때 우리가 보기 편하게 -로 바꿔줄수있다. 12345//기존데이터 : 010.1234.5678$ select last_name, replace(phone_number, '.', '-') as mobile$ from employees//replace후 반환 : 010-1234-5678","link":"/2020/06/30/200630dbi/"},{"title":"[ITWILL : DB] 단일행함수 : 숫자함수, 날짜함수","text":"ITWILL학원 : 10강 Database BY 정지윤강사SQL함수에는 두가지 유형이 있다. 단일행함수 : 행당 하나의 결과 반환 여러행함수 : 행 집합당 하나의 결과 반환 이 중 단일행함수에 대해 알아보자. 단일행함수종류단일행함수는 총 5가지이다. 문자함수 숫자함수 날짜함수 변환함수 일반함수 1. 숫자함수실무에서는 반올림, 버림을 자주 사용한다.실무에서 올림은 잘 사용하지않는다.mod함수는 홀수짝수 구분할때 주로 사용한다. 1-1. dual(듀얼) 테이블select는 출력쿼리이다. 12*123 이라는 간단한 산술결과값을 출력하고 싶다. 123$ select 12*123 as value;//반환값에러 : FROM keyword not found 반환값에러가 나왔다.select와 from은 항상 함께 해야한다.테이블에서 정보를 빼낼 필요가 없지만 from키워드가 있어야하니까 가지고 있는 아무테이블명을 적을 수 있다.단순한 산술결과나 함수결과를 출력할때는 from에 아무테이블명을 적어버리면 테이블의 row갯수만큼 반복 출력된다. 만약 그 아무테이블의 row가 12만개면 출력값이 12만번 반복된다. 따라서 이런 상황에서 쓸 수 있는 행 하나짜리 테이블이 있다. 바로 dual(듀얼)이다. 1234$ select 12*123 as value$ from dual;//반환값 : 1476 1-2. 0의 자릿수 일의 자리는 0으로 나타내며 생략도 가능하다. 1234$ select round(45.923,2), round(45.923,0), round(45.923), round(45.923,-1)$ from dual;//반환값 : 45.92, 46, 46, 50 2. 날짜함수","link":"/2020/06/30/200630dbi2/"},{"title":"[ITWILL : DB] 단일행함수 : 변환함수, 일반함수","text":"ITWILL학원 : 10강 Database BY 정지윤강사SQL함수에는 두가지 유형이 있다. 단일행함수 : 행당 하나의 결과 반환 여러행함수 : 행 집합당 하나의 결과 반환 이 중 단일행함수에 대해 알아보자. 단일행함수종류단일행함수는 총 5가지이다. 문자함수 숫자함수 날짜함수 변환함수 일반함수 1. 변환함수1-1. 변환함수 종류변환함수는 총 3가지이다. to_char() : 자주사용, 금액 천의 단위로 변환할때 주로 사용 to_number() : 거의 사용안함. to_date() : 가장 많이 사용. 1-2. 변환함수 출력형식출력형식은 아래와 같다. Y대신 R을 써도 연도표시가능 RRRR : 숫자로 된 전체 연도 ex)2020 RR : 두자리숫자로 된 전체 연도 ex)20 문자열은 큰 따옴표(“”)로 묶어 추가한다. 숫자 접미어는 숫자를 영어 철자로 표기한다.아래 예시는 오늘이 6월 30일인 경우 1234$ select to_char(sysdate, 'fmDdspth \"of\" month YYYY fnHH:MI:SS AM')$ from dual;//반환값 : thirtieth of june 2020 02:41:38PM 1-4. 주요예시 예시 - 대소문자대문자면 대문자로, 소문자면 소문자로, INITCAP이면 INITCAP형식으로 출력된다. 12345678$ select to_char(sysdate, 'YEAR-MONTH-DD DAY HH24:MI:SS AM') as today$ from dual;//반환값 : TWENTY TWENTY-JUNE-30 TUESDAY 14:32:24 PM$ select to_char(sysdate, '\"Today is\" RRRR-mm-dd DY! \"and time is \" HH:MI') as today$ from dual;//반환값 : Today is 2020-Jun-30 TUE! and time is 02:32 예시 - 천단위로 표시기존 DB값 : 7900, 10000아래 코드 후 : $7,900.00, $10,000.00 12$ to_char(salary, 'fm$999,999.00') salary$ from employees 여기서 fm은 지정해놓은 포맷길이 앞뒤에 있을 수 있는 공백이나 문자들을 삭제한다. 추가링크 : fm 설명자세히 2. 쿼리구문에 큰따옴표(“ “)가 사용되는 경우 컬럼명 [AS] “Alias” : 대소문자, 공백, 특수문자 포함 시 to_char(sysdate, ‘YYYY-MM-DD “Time” HH24:MI’) : 사용자 형식 내 문자열 포함 시 3. 일반함수 종류 의미 NVL(expr1, expr2) expr1이 null이면 expr2 반환 NVL2(expr1, expr2, expr3) expr1이 null이면 expr2 반환 NULLIF(expr1, expr2) expr1 = expr2이면 null반환, 같지않으면 expr1을 반환 COALESCE(expr1, expr2, …, exprn) expr1이 null이 아니면 expr1을 출력하고 종료 후 다음행시작한다. 만약 expr1이 null이면 expr2가 null인지 검사하고 expr2가 null아니면 expr2의 실제값 반환하고 종료한다. 만약 expr2가 null이면 세번째인수 검사하면서 실제값이 나올때까지 n번 한다. 3-1. NVL 함수 : 가장 많이 사용null값을 실제 값으로 변환한다,사용할 수 있는 데이터 유형은 날짜, 문자, 및 숫자이다.데이터 유형이 일치해야한다. 아래는 직원들의 연봉을 계산하는 쿼리이다. 12345$ select last_name, salary, commission_pct,$ (salary*12) + (salary*12*commission_pct) as annual salary$ from employees;//출력값 : 에러 commission이 없는 직원의 경우 null값이 입력되어있기때문에 산술연산자가 제대로 계산되지 않는다.이때 사용하는 것이 NVL함수이다commission값이 null이면 0으로 변경해서 산술이 잘 이뤄지도록 만든다. 12345$ select last_name, salary, commission_pct,$ (salary*12) + (salary*12*nvl(commission_pct,0)) as annual salary$ from employees;//출력값 : 정상적으로 출력됨 3-2. NVL2함수 : 첫번째 표현식을 검사해서 NULL이 아니면 두번째 표현식을 반환하고 NULL이면 세번째 표현식을 반환한다. 약간 내 느낌에 NVL2는 삼항연산자같다.ㅋㅋㅋㅋ(조건 expr1 == null)? 참(expr3반환):거짓(expr2반환) 3-3. 예시문제employees테이블로부터 사원들의 last_name과 commission_pct를 출력하되 커미션을 받지 않는 직원들은 “No Commission”이라고 출력하는 구문을 작성하시오. 내코드commission_pct의 데이터형태는 number인데 No Commission은 문자열이라서 replace로 숫자0을 문자열No Commission로 대체했다. 123$ SELECT last_name, replace(nvl(commission_pct, '0'), '0', 'No Commission') $ as \"No Commission\"$ FROM employees; 강사님 코드to_char로 null이 나올때마다 문자열No Commission로 대체했다 12$ SELECT last_name, NVL(TO_CHAR(commission_pct), 'No Commission') COMM$ FROM employees;","link":"/2020/06/30/200630dbi3/"},{"title":"[ITWILL : DB] 여러행함수 : 그룹함수","text":"ITWILL학원 : 10강 Database BY 정지윤강사SQL함수에는 두가지 유형이 있다. 단일행함수 : 행당 하나의 결과 반환 여러행함수 : 행 집합당 하나의 결과 반환 그룹함수 Group by절 Having절 이 중 여러행함수에 대해 알아보자.그룹함수는 테이블의 전체 행을 하나 이상의 컬럼을 기준으로 그룹화하여 그룹별로 결과를 출력하는 함수 1. 그룹함수 1-1. 숫자뿐만 아니라 날짜,문자에도 max(),min()가 가능하다날짜에서 min값은 더 과거날짜를 말한다.날짜에서 max값은 더 최신날짜를 말한다.문자열에서 min값은 알파벳순으로 A로 시작하는 값을 말한다.문자열에서 max값은 알파벳역순으로 Z로 시작하는 값을 말한다. 1-2. avg(), max(), min(), sum()예시employees테이블에 있는 모든 사원의 연봉의 평균값과, 최대값, 최소값, 합계를 구하는 쿼리이다.모든 값들에서 null값 제외된다. 12$ select avg(salary), max(salary), min(salary), sum(salary)$ from employees employees테이블의 모든 사원들의 커미션 평균을 구하는 쿼리구문을 작성해보자두 가지 방법이 있는데 어느 것이 정답일까? 123456789//1. avg()사용select avg(commssion_pct) as \"Avg_comm1\"from employees//출력값 : .222857143//2. sum(), count()사용select sum(commssion_pct)/count(last_name) as \"Avg_comm2\"from employees//출력값 : .072897196 정답은 2번이다.WHY?null값때문에! avg()같은 경우 제외된 null행의 갯수가 분모에 들어갈까?nope! 포함되지 않는다. 따라서 1번과 2번 쿼리구문의 결과값이 다르다.1번 출력값은 커미션을 받는 직원들의 커미션평균값이다.2번 출력값은 전 사원의 커미션평균값이다.avg(), nvl()사용해서도 전 사원의 커미션평균값을 구하는 쿼리를 작성할수있다. 강사님코드 12345//3. avg(), nvl()사용select avg(nvl(commssion_pct, 0)) as \"Avg_comm3\"from employees//출력값 : .072897196 1-3. count()예시counts는 null을 포함하여 수를 셀지 여부와 중복값을 포함여부에 따라 달라진다. count(*) : null포함, 중복값포함한 카운트 80번 부서에 소속된 사원수를 구하는 쿼리구문이다. 123$ select count(*)$ from employees$ where department_id = 80; count(expr) : null제외, 중복값포함한 카운트. 80번 부서에 소속된 직원중 커미션을 받는 사원수를 구하는 쿼리구문이다. 123$ select count(commission_pct)$ from employees$ where department_id = 80; count(distinct expr) : null제외, 중복값제외한 카운트. employees테이블의 department_id갯수를 구하는 쿼리구문이다. 12$ select count(distinct department_id)$ from employees","link":"/2020/06/30/200630dbi4/"},{"title":"[ITWILL : JAVA]클래스 : 메서드, 객체생성(객체화 &#x3D; 인스턴스화), 오버로딩(overloading)","text":"ITWILL학원 : 11강 JAVA BY 윤미영강사1. 메서드 메서드란 어떤 작업을 수행하는 명령문(코드)의 집합을 표현한다.다른 언어에서는 함수라고도 부른다. 메서드를 작성하는 이유 : 반복적으로 사용되는 코드의 중복을 방지. 코드양을 줄여주어 유지 보수성을 향상하기 위함. main메서드 : system소속으로 실행을 담당하는 특별한 메서드이다. 메서드종류 생김새 특징 main메서드 public static voide main(String[] args){ } system소속, 실행을 담당. void형 메서드 void 메서드명(){ } return값 없음. 변수에 담아서 사용X, 호출만 가능. return형 메서드 리턴데이터타입 메서드명(){ } return값이 있기에 리턴데이터타입작성필수, 변수에 담아서 사용가능. 메서드의 형태매개변수는 호출시에만 메모리에 할당받고 메서드실행이 끝나는 순간 매개변수는 사라진다.매서드는 return값이 없으면 void를 붙여준다. 123제한자/리턴_타입 메서드명(타입 변수명, 타입 변수명, ...){ 실행코드} void 메서드 예시void는 return값이 없는 메서드이다return이 없기때문에 system.out,print(person())에서 사용할 수 없고 변수에 담아서 사용할 수 없다.오직 호출만가능하다. 1234567891011public class Person { void eat(String food){ //String food는 매개변수라고 부른다 System.out.println(food + &quot;먹었다&quot;) }}Person p = new Pesron();p.eat(&quot;바나나&quot;); //바나나먹었다p.eat(&quot;딸기&quot;); //딸기먹었다p.eat(1); //타입에러p.eat(&quot;1&quot;); //'먹었다 리턴타입이있는 메서드 예시return값이 있는 메서드는 리턴타입을 적어주면된다 1234567891011public class Person { String name = '민지'; int age = '77'; String infoPrint(){ //String타입을 리턴값으로 가지는 메서드이다. return name +&quot;는 &quot;+ age; }} Person p1 = new Pesron();System.out.println(p1.infoPrint()); // 민지는 77 2. 메서드 오버로딩(Method overloading) 동일한 기능을 수행하는 메서드를 매개변수를 달리하여 추가로 작성하는 것을 의미. 데이터타입이 다른 매개변수에 따라 메서드를 여러개 정의하는 것을 말한다. 메서드오버로딩방법 : 동일한 이름의 메서드에 파라미터의 개수 또는 파라미터의 타입을 다르게 작성하면 된다. 오버로딩 사용하는 이유 : 재사용성을 높이기 위해서. 오버로딩과 오버라이딩은 차이가 있으니 용어에 주의하자 오버로딩(Overloading) : 같은 이름의 메서드 여러개를 가지면서 매개변수의 유형과 개수가 다르도록 하는 기술 오버라이딩(Overriding) : 상속관계일때 사용. 상위 클래스가 가지고 있는 메서드를 하위 클래스가 재정의해서 사용 메서드뿐만 아니라 생성자도 오버로딩이 가능하다. 생성자 오버로딩 : 파라미터를 다르게 해서 여러 개의 생성자를 정의하는 것 3. 객체(인스턴스)클래스가 붕어빵틀이라면 객체는 붕어빵 그 자체이다.배열과 마찬가지로 객체도 선언 후에 생성을 해야 사용할수있다.객체생성을 하지않으면 메모리에 올가가지않기에 사용할수가없다. 따라서 객체생성을 꼭해야한다. 객체생성 1객체명 변수명 = new 클래스명(); //객채생성 참고링크 : 클래스와 인스턴스","link":"/2020/06/25/200625javai2/"},{"title":"[ITWILL : JAVA]클래스 : 생성자, new역할, this키워드용법","text":"ITWILL학원 : 12강 JAVA BY 윤미영강사1. 생성자 생성자란 객체를 생성할 때 호출하는 메서드 비슷한 것을 말함. 주로 일반 멤버변수의 초기화나 객체를 생성할때 실행하는 작업을 정리한다. 생성자 형태 1234567class Person{ String name; public Person(){ //생성자명은 class명과 똑같아야함 name = '홍길동'; //생성자의 주요역할은 멤버변수의 초기화 }} 특징 class명과 똑같아야함. 객체생성될때 딱 한번 호출되어짐 생성자도 overloading가능 2. 생성자 VS void메서드 차이점 형태가 retrun값이 없는 void메서드와 비슷하게 생겼다 차이점 : 이름과 역할 이름 : 생성자는 class명과 똑같아야하고 메서드는 달라야한다. 역할 : 메서드는 다양한 기능을 담당하지만 생성자는 멤버변수의 초기화를 담당한다. 3. 생성자를 왜 쓸까?생성자는 자바창시자가 FM방식으로 설정했기때문이다.자바 창시자는 생성자로 변수초기화시키고 메서드는 기능만 담당하도록 설정하고 싶었던 것이다!자바 창시자가 정식방법으로 자바를 쓰길 원했지만 나는 한번도 쓴 적이 없는데 자바는 잘 돌아갔다.어떻게 된 일일까? 바로 아래 NEW에 답이 있다. 4. new의 역할나는 생성자를 한번도 생성한 적 없이 java를 사용했는데 작동에 전혀 무리가 없었다.왜 그럴까? 바로 new 때문이다.별도의 생성자를 만들지 않았을 때 컴파일러에 의해 컴파일 타임에 자동으로 생성자가 만들어지기 때문이다.이를 기본생성자라고 한다. 기본생성자는 파라미터를 전달받지 않기 때문에 빈 객체를 생성한다. 기본생성자의 형태 생성자를 만들지않았지만 new라는 키워드를 통해서 BasicConstructor person = new BasicConstructor()를 통해서 자동으로 public BasicConstructor() {} 기본연산자가 생성된다. 12345678910111213141516171819public class BasicConstructor { String name; int age; boolean isHugry; //public BasicConstructor() {} //생략된 기본 생성자 public static void main(String[] args) { //new연산자가 BasicConstructor()를 호출하면 컴파일러가 자동으로 기본생성자를 만든다 BasicConstructor person = new BasicConstructor(); //기본생성자이므로 외부에서 객체의 멤버 변수를 설정해줘야한다 person.name =\"홍길동\"; person.age =77; person.isHugry = false; }} new 를 쓰고 안쓰고의 차이. 5. this 키워드 용법this에는 두가지 용법이 있다. this. : 현재 객체를 참조하기 위한 용도 this() : 다른 생성자를 호출하는 용도 6. 멤버변수를 참조하는 this.멤버변수명현재 객체를 참조하기 위한 용도로 사용하는 this.먼저 보자. 아래 코드를 보자.멤버변수명과 매개변수명을 동일하게 설정했다.컴파일러가 첫번째 name과 두번째 name을 잘 구분할수있을까? 참고 : 생성자자동생성단축키(Generate Constructor) : Alt + Shift + S → C 매개변수로 만들고싶은 멤버변수의 체크박스를 틱하면 생성자를 생성해준다. 123456789101112public class ThisPerson { String name; int age; boolean isHugry; ThisPerson(String name, int age, boolean isHungry){ name = name; //컴파일러가 첫번째 name은 멤버변수로 두번째 name은 매개변수로 잘 구분할수있을까? age = age; isHungry = isHungry; }} 정답은 NOPE! 구분하지못한다.이때 구분해주기위해 멤버변수명앞에 this를 붙여준다. 123456789101112public class ThisPerson { String name; int age; boolean isHugry; ThisPerson(String name, int age, boolean isHungry){ this.name = name; this.age = age; this.isHungry = isHungry; }} 이제 만든 생성자를 출력해보자.매개변수로 받은 this.name을 출력하는 코드이다. 1234567891011121314151617public class ThisPerson { String name; int age; boolean isHugry; ThisPerson(String name, int age, boolean isHungry){ this.name = name; this.age = age; this.isHugry = isHugry; } public static void main(String[] args) { ThisPerson person = new ThisPerson(\"홍지민\", 20, true); System.out.printf(\"name : %s\", this.name); }} 홍지민이 출력될거라 기대했지만 출력값은 오류가 발생한다. 123//위 코드 출력값Exception in thread &quot;main&quot; java.lang.Error: Unresolved compilation problem: Cannot use this in a static context this는 객체에 대한 참조값이다. this는 참조값이기때문에 객체가 생성되기 전에는 사용할 수 없다. 따라서 static영역에서는 this키워드를 사용할 수 없다. 아래 코드를 출력하면 해결된다. 123456789101112131415161718192021public class ThisPerson { String name; int age; boolean isHugry; ThisPerson(String name, int age, boolean isHungry){ this.name = name; this.age = age; this.isHugry = isHugry; } String print(){ return String.format(\"name : %s, age : %d\", this.name, this.age); } public static void main(String[] args) { ThisPerson person = new ThisPerson(\"홍지민\", 20, true); System.out.println(person.print()); }} 7. 다른 생성자를 호출하는 this() 파라미터를 다르게 해서 여러 개의 생성자를 정의하는 것을 생성자 오버로딩이라고 한다. 메서드와 마찬가지로 생성자도 오버로딩이 가능하다. 생성자오버로딩하는 이유 : 다른 생성자를 호출해서 중복코드를 제거.이때 다른 생성자를 호출하는 키워드가 this이다. 12345678910111213141516171819202122232425262728293031323334353637383940414243public class OverloadConstructorPerson { String name = \"한사장\"; int age = 90; boolean isHugry = false; OverloadConstructorPerson(String name, int age, boolean isHungry){ //아래 3줄의 중복코드가 발생함. this.name = name; this.age = age; this.isHugry = false; } OverloadConstructorPerson(String name, int age){ //this()용법사용 this(name, age, false); } OverloadConstructorPerson(String name){ //this()용법사용 this(name, 0, false); } OverloadConstructorPerson(){ //아무 코드도 없으면 기존 멤버변수값이 출력된다. } public static void main(String[] args) { OverloadConstructorPerson p1 = new OverloadConstructorPerson(\"하지\", 77); System.out.printf(\"이름 : %s, 나이 : %d%n\", p1.name, p1.age); OverloadConstructorPerson p2 = new OverloadConstructorPerson(\"뽀니\"); System.out.printf(\"이름 : %s, 나이 : %d%n\", p2.name, p2.age); OverloadConstructorPerson p3 = new OverloadConstructorPerson(); System.out.printf(\"이름 : %s, 나이 : %d%n\", p3.name, p3.age); }}//출력값이름 : 하지, 나이 : 77이름 : 뽀니, 나이 : 0이름 : 한사장, 나이 : 90","link":"/2020/07/01/200701javai/"},{"title":"[ITWILL : JSP]쿠키(Cookie)","text":"ITWILL학원 : 17강 JSP기초 BY 정규태강사1. 쿠키 Cookie (p279~) 클라이언트쪽에서 저장되어 관리되는 정보. 이름, 값, 유효기간 도메인(주소), 경로 … 등등 포함하고 있다. ㅋ쿠기의 이름은 알파벳, 숫자조합으로 생성됨 공백, 괄호, 등호, 콤마, 세미콜론 등등은 인코딩작업 후 쿠키로 사용할 수 있다. 브라우저가 종료되어도 상관없이 지정된 생존기간까지 사용가능.(클라이언트의 HDD하드디스크에 저장되기때문에 브라우저 종료되어도 계속 데이터를 유지할수있다.) 쿠키생성하면서 값을 입력하였다고 쿠키가 메모리 또는 하드디스크에 저장된 것이 아니다. 쿠키를 생성하였으면 생성한 쿠키를 꼭 클라이언트로 전송해줘야한다. 단점 : 클라이언트에서 관리되기 때문에 보안에 취약(하드디스크에 있는 쿠키파일 수정할수있기때문) 반대개념은 세션(Session) : 서버쪽에서 저장되어 관리되는 정보, 서버종료되는 사용불가 1-1. 왜 쿠키가 필요할까? 서버는 클라이언트의 1건의 요청에 응답 후 연결을 끊는다.WHY?서버가 요청오는 모든 클라이언트와 계속 연결이 되어있으면 서버쪽에 부담이 되기때문에! 이때 요청에 응답하면서 쿠키를 함께 보낸다.WHY?아 옛날에 그 클라이언트구나?! 하면서클라이언트를 구분해서 인지할수있고 빠른 응답이 가능하기때문에! 1-2. 쿠키사용방법 쿠키 생성하기 서버 서버는 쿠키 객체를 생성 서버는 쿠키에 필요한 설정을 지정(유효기간, 설명, 도메인, … 등등) 서버가 생성된 쿠키를 HDD에 저장 후 클라이언트에 쿠키를 전달 1234567891011121314151617&lt;h1&gt;쿠키테스트(서버 역할)&lt;/h1&gt;&lt;% //1.쿠키객체생성 : 기본생성자이면 에러가 뜨니 기본값을 직접 입력해주거나 꼭 파라미터를 작성할 것//아래처럼 직접 입력시 공백있으면 에러남 ex)\"Cookie Val!\" =&gt;에러발생Cookie ck = new Cookie(\"cName\", \"CookieValue!\"); //2.쿠키에 필요한 설정 : 시간설정(사용할 수 있는 시간을 지정)ck.setMaxAge(600); //초단위, 600초 = 10분(60초*10)//3.쿠키정보를 저장해서 응답response.addCookie(ck);%&gt;&lt;script type=\"text/javascript\"&gt; alert(\"쿠키값생성 후 저장됨\"); location.href=\"cookieTest.jsp\";&lt;/script&gt; 쿠키 사용하기 브라우저(클라이언트) 브라우저에서 요청시 쿠키정보를 가져옴 쿠키값은 (이름, 값)쌍으로 만들어진 배열. 쿠키값의 이름을 사용해서 쿠키 객체를 사용. 1234567891011121314151617181920212223&lt;h1&gt;쿠키테스트(클라이언트 역할)&lt;/h1&gt;&lt;%//1. 쿠키정보가져오기Cookie[] cks = request.getCookies();String cName=\"\";String cValue=\"\";if(cks != null){ for(int i=0; i &lt; cks.length; i++){ if(cks[i].getName().equals(\"cName\")){ //2. 저장된 쿠키 이름을 가져온다 cName = cks[i].getName(); //3. 쿠키값을 가져온다 cValue = cks[i].getValue(); } }}%&gt;&lt;h2&gt; 쿠키이름 : &lt;%=cName %&gt; &lt;/h2&gt;&lt;h2&gt; 쿠키값 : &lt;%=cValue %&gt; &lt;/h2&gt;&lt;input type=\"button\" value=\"쿠키값 저장\" onclick=\"location.href='cookieSet.jsp'\"&gt;&lt;input type=\"button\" value=\"쿠키값 삭제\" onclick=\"location.href='cookieDel.jsp'\"&gt; 특정 쿠키 삭제하기 쿠키값이 있을때만 삭제진행 쿠키 배열의 처음부터 끝까지 비교하여 쿠키이름이 “cName”인 대상을 찾아서 삭제 -&gt; 변경된 쿠키 정보를 클라이언트에 전달 12345678910111213141516171819202122&lt;%//1.쿠키 가져오기 : 지울 쿠키가 있는지부터 체크Cookie[] cookies = request.getCookies();String cName=\"\";String cValue=\"\";//2. 쿠키값이 있을때만 삭제동작 진행if(cookies != null){ for(int i=0; i &lt; cookies.length; i++){ // 3. 쿠키이름이 \"name\"인 대상을 찾아서 삭제 = 쿠키의 유효시간을 0으로 설정하여 만료시킨다 if(cookies[i].getName().equals(\"cName\")){ cookies[i].setMaxAge(0); // 4. 변경된 쿠기 정보를 다시 클라이언트에 전달 response.addCookie(cookies[i]); } }} %&gt;&lt;script type=\"text/javascript\"&gt; alert(\"쿠키값 삭제 성공\") location.href=\"cookieTest.jsp\"&lt;/script&gt; 전체 쿠키 삭제 쿠키값이 있을때만 삭제진행 쿠키 배열의 전체를 찾아서 삭제 -&gt; 변경된 쿠키 정보를 클라이언트에 전달 123456789101112131415161718192021&lt;%//1.쿠키 가져오기 : 지울 쿠키가 있는지부터 체크Cookie[] cookies = request.getCookies();String cName=\"\";String cValue=\"\";//2. 쿠키값이 있을때만 삭제동작 진행if(cookies != null){ for(int i=0; i &lt; cookies.length; i++){ // 3. 쿠키 전체의 유효시간을 0으로 설정하여 만료시킨다 cookies[i].setMaxAge(0); // 4. 변경된 쿠기 정보를 다시 클라이언트에 전달 response.addCookie(cookies[i]); } }} %&gt;&lt;script type=\"text/javascript\"&gt; alert(\"쿠키값 삭제 성공\") location.href=\"cookieTest.jsp\"&lt;/script&gt; 1-3. 크롬 개발자도구로 쿠키 확인하기쿠키를 확인하는 방법은 크롬 개발자도구를 오픈 NETWORK 탭에서 NAME카테고리에서 내가 만든 jsp파일클릭 Cookies 탭클릭 세션아이디(jsessionid)위에 쿠기가 생성된 것을 확인할 수 있다. 1-4. 쿠키예시 쿠키폼페이지 생성하기 123456789101112131415161718192021222324252627282930313233343536373839404142&lt;h1&gt;쿠키form&lt;/h1&gt;&lt;!-- 폼태그 언어값에 따라서 달라지는 출력값 구현 --&gt;&lt;%//1.쿠키정보가져오기Cookie[] ck = request.getCookies();String lang = \"\";if(ck != null){ for(int i=0; i&lt;ck.length; i++){ if(ck[i].getName().equals(\"lang\")){ lang = ck[i].getValue(); } }}%&gt;&lt;form action=\"cookiePro.jsp\" method=\"post\" name=\"fr\"&gt; &lt;input type=\"radio\" name=\"language\" value=\"kor\" &lt;% if(lang.equals(\"kor\")){ %&gt; checked &lt;%} %&gt; &gt;한국어 &lt;input type=\"radio\" name=\"language\" value=\"eng\" &lt;% if(lang.equals(\"eng\")){ %&gt; checked &lt;%} %&gt; &gt;영어(미국) &lt;input type=\"submit\" value=\"언어설정\"&gt;&lt;/form&gt;&lt;%if(lang.equals(\"kor\")){ out.print(\"안녕하세요, 쿠키연습!\");}else if(lang.equals(\"eng\")){ out.print(\"Hello, Cookie Test!\");}else{ //설정값없을때 out.print(\"\");}%&gt; 쿠키프로페이지 생성하기 12345678910111213141516171819202122&lt;h1&gt;쿠키pro&lt;/h1&gt;&lt;%System.out.println(\"라디오버튼 결과값 : \"+ request.getParameter(\"language\"));//1.쿠키객체생성 : 기본생성자이면 에러가 뜨니 기본값을 직접 입력해주거나 꼭 파라미터를 작성할 것 , 직접입력시 공백있으면에러남Cookie ck = new Cookie(\"lang\", request.getParameter(\"language\")); //두번째방법 : 첫번째 방법도 쓸수있어야한다(짧은 코드)//String lang = request.getParameter(\"language\");//Cookie ck = new Cookie(\"lang\", lang); //2.쿠키에 필요한 설정 : 시간설정(사용할 수 있는 시간을 지정)ck.setMaxAge(120); //초단위, 600초 = 10분(60초*10)//3.쿠키정보를 저장해서 응답response.addCookie(ck);//response.sendRedirect(\"location href='cookieForm.jsp'\");%&gt;&lt;script type=\"text/javascript\"&gt; alert(\"언어설정완료!\"); location.href=\"cookieForm.jsp\";&lt;/script&gt;","link":"/2020/07/01/200701jspi/"},{"title":"[ITWILL : JSP]MYSQL 설치, MYSQL환경변수설정, cmd에서 명령어 잘못입력해서 mysql못빠져나갈때","text":"ITWILL학원 : 17강 JSP기초 BY 정규태강사MySQL기초 MYSQL 설치, MYSQL환경변수설정, cmd에서 명령어 잘못입력해서 mysql못빠져나갈때 MYSQL 접속순서, DB명령어, 테이블명령어, 데이터명령어 MySQL 한글깨짐현상 두가지 해결방법 : cmd와 Workbench, 이클립스와 MYSQL연결 1. MYSQL 설치 (p372~) MYSQL 다운로드에 접속 아래 이미지의 MYSQL Community(GPL) Downloads를 클릭 MYSQL Installer for Windows 다운로드 full package version 다운르도 No thanks, just start my download 클릭 Check Requirements 탭에서 excute를 클릭하기각각 설치가 완료되면 체크박스가 tick되어진다.꼭 설치되어있어야하는 것은 SERVER와 WORKBENCH이다.설치가 완료되면 NEXT버튼으로 바뀌게되고 클릭하면된다 Installation 탭에서 excute를 클릭하기각각 설치가 완료되면 Status가 Complete로 바뀌게 된다꼭 설치되어야하는 것은 SERVER와 WORKBENCH, NOTIFIER이다.설치가 완료되면 NEXT버튼으로 바뀌게되고 클릭하면된다. 포트번호 : 3306 기억하고 NEXT Account and Roles탭에서 Root계정 비밀번호 설정 후 Add user하기Root계정의 비밀번호를 설정 후 절대 잊어버리면 안된다.혹시 잊어버리면… MYSQL지우고 다시 까는 수밖에 없다고 한다.그래도 찾아보면 방법이 있지않을까? Add User클릭 후 아래 설정 후 OK 클릭하기 User Name : 맘대로 Host : &lt;All Hosts(%)&gt;선택 Role : DB admin (혹시 다른 거원하면 선택하면 됨) Windows Service탭에서 Start the MySQL Server at System Startup tick 해제하기윈도우를 시작할때마다 서버를 킬지 물어보는 체크박스이다. Apply Configuration탭에서 틱완료되었는지 확인 후 Finish를 클릭한다. Connect To Server탭에서 Root계정의 비밀번호를 입력하면 status가 변경된다. 기존 running status에서 connection succeeded로 변경성공 Installation Complete탭에서 start MySQL workbanch after Setup 틱을 해제한 뒤 finish를 클릭한다 2. MySQL 사용방법 두가지.2-1. mysql 커맨드 실행다운로드한 파일들 중에 MySQL Command Line Client를 실행시킨 뒤 비밀번호 1234 입력한다.비밀번호가 일치하면 mysql&gt;옆에 쿼리구문을 작성할 수 있다. 2-2. mysql workbanch실행다운로드한 파일들 중에 MySQL Workbanch를 실행시킨 뒤 비밀번호를 입력한다. 3. 환경변수설정아래 이미지처럼 MySQL 다운로드한 경로의 bin파일 경로를 환경변수에 추가한다 환경변수설정완료했다면 cmd창 종료 -&gt; cmd 다시 시작한 뒤 제대로 다운도르 되었는지 아래 쿼리로 확인한다. 1$ mysql 아래 이미지처럼 나오면 설치가 정상적으로 되었다는 의미이다. 3. cmd에서 명령어 잘못입력해서 mysql못빠져나갈때잘못 명령어를 입력해서 mysql못나갈경우 \\c를 입력하면 된다한참 헤맨 증거…ㅋㅋㅋㅋㅋ 3-1. mysql 유저 접속아래 명령어를 입력하고 엔터를 치면 password를 입력창이 뜬다. 1$ mysql -u [id] -p 유저 로그인 성공!","link":"/2020/07/01/200701jspi2/"},{"title":"[ITWILL : JAVA]클래스 : 매개변수위치에 따른 차이(생성자 vs 메서드), private멤버변수 getter와 setter로 가져다쓰기","text":"ITWILL학원 : 13강 JAVA BY 윤미영강사1. 매개변수위치에 따른 차이클래스 Book은 책제목과, 저자, 가격을 출력해준다. 123456789101112131415161718public class Book { private String title; private String author; private int price; public Book(String t, String a, int p){ title = t; author = a; price = p; } void showInfo(String title, String author, int price ){ System.out.printf(\"책 제목 : %s, 저자 : %s, 가격 : %,d%n\", title, author, price); } void showInfo(){ System.out.printf(\"책 제목 : %s, 저자 : %s, 가격 : %d%n\", title, author, price); } 클래스 TestBook 이라는 새로운 클래스파일을 만들고 메인메서드를 실행해보자. 123456789101112131415161718192021222324252627282930313233343536373839404142434445464748public class TestBook { public static void main(String[] args) { //생성자파라미터를 통해서 값입력 Book book1 = new Book(\"운동하는여자\", \"양민영\", 25000); Book book2 = new Book(\"채식주의자\", \"한강\", 13500); //파라미터메서드를 통해서 값입력 Book book3 = new Book(); book3.showInfo(\"머니\", \"롭무어\", 28000); //배열생성 Book[] books = new Book[4]; //파라미터가 있는 배열값 넣는 방법2가지 //첫번째방법 : new 이용 books[0] = new Book(\"며느라기\", \"수신지\", 50000); //두번째방법 : 객체대입 books[1] = book1; books[2] = book2; books[3] = book3; //배열의 모든값 출력하는 두가지방법 //for문 사용 for(int i=0; i&lt;books.length; i++){ books[i].showInfo(); } //for each문사용 for(Book b: books){ b.showInfo(); } }}//출력값책 제목 : 머니, 저자 : 롭무어, 가격 : 28,000책 제목 : 며느라기, 저자 : 수신지, 가격 : 50000책 제목 : 운동하는여자, 저자 : 양민영, 가격 : 25000책 제목 : 채식주의자, 저자 : 한강, 가격 : 13500책 제목 : null, 저자 : null, 가격 : 0책 제목 : 며느라기, 저자 : 수신지, 가격 : 50000책 제목 : 운동하는여자, 저자 : 양민영, 가격 : 25000책 제목 : 채식주의자, 저자 : 한강, 가격 : 13500책 제목 : null, 저자 : null, 가격 : 0 1-1 null값이 나오는 이유?보이는 것처럼 생성자파라미터를 통해서 입력한 값들은 제대로 출력되지만 파라미터메서드를 통해서 입력한 값들은 null로 출력된다. WHY?메서드는 파라미터의 값을 받았는데 넣어줄 곳이 없기때문에! 그렇다면 메서드를 어떻게 바꾸면 될까?멤버변수를 파라미터값을 대입할수있게 코드를 추가해주면된다 123456void showInfo(String title, String author, int price ){ this.title = title; this.author = author; this.price = price; System.out.printf(\"책 제목 : %s, 저자 : %s, 가격 : %,d%n\", title, author, price);} 1-2 어떤 방법이 좋은걸까?생성자에 파라미터를 받는 방법과 메서드에 파라미터를 받아서 하는 방법 중 어느것이 더 좋은 것일까? 생성자파라미터 12345678//1-1.생성자파라미터 생성public Book(String t, String a, int p){ title = t; author = a; price = p;}//1-2.생성자파라미터 출력Book book1 = new Book(\"운동하는여자\", \"양민영\", 25000) 파라미터메서드 1234567891011//2-1.파라미터메서드 생성void showInfo(String title, String author, int price ){ this.title = title; this.author = author; this.price = price; System.out.printf(\"책 제목 : %s, 저자 : %s, 가격 : %,d%n\", title, author, price);}//2-2. 메서드 출력Book book1 = new Book();book3.showInfo(\"운동하는여자\", \"양민영\", 25000); 둘 다 기능은 동일하지만 생성자파라미터를 쓰는 것이 더 좋다 WHY?생성자의 기능과 메서드의 기능에 맞게 충실하게 하는 것이 좋기때문이다생성자의 기능은 변수를 초기화하는 것이다.메서드는 이름에서도 알수있듯이 showInfo()이다. 하지만 파라미터메서드를 생성하면 변수도 초기화하고 출력까지하는 두가지 짬뽕기능을 가지게 된다. 따라서 기능에 맞게 나눠서 코딩하는 것이 좋은 개발습관이다. 2. private 멤버변수값을 사용하는 방법 DTO(Data Transfer Object) : 데이터가 포함된 객체를 한 시스템에서 다른 시스템으로 전달하는 작업을 처리하는 클래스이다. 즉, 객체에서 정보가 중요하다. 즉 멤버변수가 중요한 클래스. 정보전달이 중요한 DTO타입의 클래스들은 값을 생성해주는 getter, setter메서드를 만들어야한다 자바빈으로 불리기도 함. vs 기능이 중요한 클래스, 라이브러리가 중요한 변수 멤버변수는 private을 설정하는 것이 데이터보안상 좋다.하지만 private을 쓰게되면 다른 클래스에서 가져가 쓸 수가 없다.이럴때 아래 두가지 메서드를 이용한다(개발자들의 약속이다). 2-1. getter메서드와 setter메서드 멤버변수의 특정한 값을 가져오고 싶을땐 get멤버변수명(). 멤버변수의 특정한 값을 설정하고싶을땐 set멤버변수명(). 이를 getter와 setter라고 부른다. Getters and Setters 단축키 : Alt + Shift + S -&gt; R 또는 source탭 Generate Getters and Setters 클릭 2-2. getter와 setter 사용하는 방법 getter와 setter 사용하는 코드 123456//메인메서드안에서 get메서드쓰는 방법System.out.println(book1.getTitle()); //값가져오기//메인메서드안에서 set메서드쓰는 방법book1.setPrice(20000); //값설정System.out.println(book1.getPrice()); //값가져오기 2-3. getter와 setter 예시Book 클래스파일은 아래와 같다.제목과 저자 가격을 멤버변수로 가지고 있다. 12345678910111213141516171819202122232425262728293031323334public class Book { private String title; private String author; private int price; public Book(String t, String a, int p){ title = t; author = a; price = p; } void showInfo(){ System.out.printf(\"책 제목 : %s, 저자 : %s, 가격 : %d%n\", title, author, price); } String getTitle(){ return title; } String getAuthor(){ return author; } int getPrice(){ return price; } void setTitle(String title){ this.title = title; //매개변수명과 멤버변수명이 같을때 this를 통해 멤버변수를 지정해줄수있다. } void setAuthor(String a){ author = a; //매개변수명과 멤버변수명이 다른경우 그냥 쓰면 된다. } void setPrice(int p){ price = p; }} 매개변수명과 멤버변수명이 같을때 this를 통해 멤버변수를 지정해줄수있다. 실행하는 메인메서드파일은 아래와 같다. 12345678Book book1 = new Book(\"운동하는여자\", \"양민영\", 25000);System.out.println(book1.getTitle());book1.setPrice(20000);System.out.println(book1.setPrice());//출력값운동하는여자20000","link":"/2020/07/02/200702javai/"},{"title":"[ITWILL : JSP] MYSQL 접속순서, DB명령어, 테이블명령어, 데이터명령어","text":"ITWILL학원 : 18강 JSP기초 BY 정규태강사MySQL기초 MYSQL 설치, MYSQL환경변수설정, cmd에서 명령어 잘못입력해서 mysql못빠져나갈때 MYSQL 접속순서, DB명령어, 테이블명령어, 데이터명령어 MySQL 한글깨짐현상 두가지 해결방법 : cmd와 Workbench, 이클립스와 MYSQL연결 1. MYSQL 순서 cmd에서 mysql -u [id] -p 입력 비번입력 MySQL로그인 use jspdb show tables; 만약 DB가 켜져있지않다는 에러가 난다면 파일탐색기에서 서비스검색한 후 MySQL을 찾아 더블클릭하고 시작버튼을 누르고 다시 cmd에서 명령어를 입력하면 된다. 2. DB명령어 : DB목록조회, DB생성, DB삭제, DB사용 기능 명령어 목록조회 show databases; DB 생성 create database 디비이름; DB 삭제 drop database 디비이름; DB 사용 use 디비이름; DB생성 12$ mysql&gt; create database jspdb;Query OK, 1 row affected (0.01 sec) DB 목록조회 12345678910111213$ mysql&gt; show databases;+--------------------+| Database |+--------------------+| information_schema || jspdb || mysql || performance_schema || sakila || test || world |+--------------------+7 rows in set (0.00 sec) DB 사용 123456789101112131415$ mysql&gt; use jspdb;Database changedmysql&gt; show databases;+--------------------+| Database |+--------------------+| information_schema || jspdb || mysql || performance_schema || sakila || test || world |+--------------------+7 rows in set (0.00 sec) DB삭제 123456789101112131415$ mysql&gt; drop database jspdb;Query OK, 0 rows affected (0.10 sec)$ mysql&gt; show databases;+--------------------+| Database |+--------------------+| information_schema || mysql || performance_schema || sakila || test || world |+--------------------+6 rows in set (0.00 sec) 3. 테이블명령어 : 테이블생성, 테이블조회, 테이블삭제, 테이블구조확인 기능 명령어 테이블생성 create table 테이블이름 (필드명1 데이터타입 제약조건, 필드명2 데이터타입 제약조건, …); 테이블삭제 drop table 테이블이름; 테이블전체조회 show tables; 테이블구조확인 desc 테이블이름; 테이블생성 12mysql&gt; create table test (idx int);Query OK, 0 rows affected (0.16 sec) 테이블전체조회 1234567mysql&gt; show tables;+-----------------+| Tables_in_jspdb |+-----------------+| test |+-----------------+1 row in set (0.01 sec) 테이블구조확인 1234567mysql&gt; desc test;+-------+---------+------+-----+---------+-------+| Field | Type | Null | Key | Default | Extra |+-------+---------+------+-----+---------+-------+| idx | int(11) | YES | | NULL | |+-------+---------+------+-----+---------+-------+1 row in set (0.02 sec) 테이블삭제 12drop table test;Query OK, 0 rows affected (0.09 sec) 3-1. DB에 따른 데이터타입 차이점 데이터타입 오라클 MySQL 문자형 varchar2 varchar 정수형 number int 실수형 double 4. 데이터명령어 : 입력, 출력(검색), 삭제, 수정 여기서 중괄호는 생략가능을 나타낸다. 데이터입력에서 필드명 생략가능 필드명 사용한 경우 : 지정한 필드에만 값 추가 가능 필드명 사용 안한경우 : 모든 필드에 순서대로 값을 입력해야함. 기능 명령어 데이터 전체출력(검색) select * form 테이블명; 데이터 출력(검색) select 컬럼명 {where 조건} form 테이블명; 데이터 입력 insert into 테이블명 {(필드명1, …)} values(값1, …); 데이터 전체삭제 delete from 테이블명 데이터 일부분삭제 delete from 테이블명 {where 조건} 데이터 전체수정 update 테이블명 set 컬럼명1 = 값, 컬럼명2 = 값, …; 데이터 해당 조건만 수정 update 테이블명 set 컬럼명1 = 값, 컬럼명2 = 값, …where 조건; 5. 내장함수 기능 명령어 사용법 현재시간자동입력 now() insert into 테이블명 {(필드명1, …)} values(now(), …);","link":"/2020/07/02/200702jspi/"},{"title":"[ITWILL : JSP] MySQL 한글깨짐현상 두가지 해결방법 : cmd와 Workbench, 이클립스와 MYSQL연결","text":"ITWILL학원 : 18강 JSP기초 BY 정규태강사MySQL기초 MYSQL 설치, MYSQL환경변수설정, cmd에서 명령어 잘못입력해서 mysql못빠져나갈때 MYSQL 접속순서, DB명령어, 테이블명령어, 데이터명령어 MySQL 한글깨짐현상 두가지 해결방법 : cmd와 Workbench, 이클립스와 MYSQL연결 1. cmd로 한글깨짐현상 해결하기1-1. mysql 유저 접속아래 명령어를 입력하고 엔터를 치면 password를 입력창이 뜬다. 1$ mysql -u [id] -p status 명령어를 날리면 현재 DB상태확인가능하다.빨간 부분을 보면 UTF-8이 아니다. 이럴 경우 한글이 깨질수있으므로 utf-8로 설정해줘야한다. 아래 주소 C:\\ProgramData\\MySQL\\MySQL Server 5.6 에서 my.ini파일을 열어준다 ctrl+F로 [mysqld]를 찾는다. [mysqld]을 지우고 그 위에 아래 내용을 쓴다. 1234567[mysql]default-character-set=utf8[mysqld]collation-server = utf8_unicode_cicharacter-set-server = utf8skip-character-set-client-handshake 설정된 값이 실행되려면 MYSQL를 재부팅하면 된다.정상적으로 utf-8로 뜨는 것을 확인할 수 있다. 2. Workbench로 한글깨짐현상 해결하기 DB 한글설정제일 상위 DB에 마우스를 가져다되면 2개의 아이콘이 오른편에 생긴다.그 중 가장 오른쪽인 몽키스패너를 클릭한다.Charset/Collation탭에서 utf8과 utf8_bin으로 지정 후 apploy를 눌러준다 이미 생성된 테이블 한글설정모든 컬럼에 utf8과 utf8_bin으로 지정 후 apploy를 눌러준다. 3. 이클립스와 MYSQL연결라이브러리를 사용해서 MYSQL에 접근할 수 있다.이클립스와 MYSQL연결을 위해 툴 설치가 필요하다. MYSQL 다운로드에서 Connector/J를 클릭한다. ZIP파일로 다운로드 후 압출을 푼 뒤 mysql-connector-java-5.1.49-bin.jar파일을 이클립스에 복붙한다 3-1. 이클립스에서 MYSQL불러오기 드라이버를 로드 : Class.sforName(“com.mysql.jdbc.Driver”) DB연결DriverManager.getConnection(url, user, password)이고 파라미터가 3개이다. 파라미터 자세히 : DriverManager.getConnection(“jdbc:mysql://localhost:포트번호/DB이름”, user, password) import = java.sql.Connection 보라색동그라미 의미 : Interface java.sql로 클릭하면 자동 import생성 123456789101112131415&lt;%@page import=\"java.sql.Connection\"%&gt; //자동import//1단계 드라이버를 로드Class.forName(\"com.mysql.jdbc.Driver\");System.out.println(\"드라이버 로드성공\");//2단계 DB연결Connection con = DriverManager.getConnection(\"jdbc:mysql://localhost:3306/jspdb\", \"root\", \"1234\");System.out.println(\"DB연결성공\");%&gt;&lt;h2&gt;연결성공 &lt;%=con %&gt;&lt;/h2&gt;//출력값 : 연결성공 com.mysql.jdbc.JDBC4Connection@4edd8384 골뱅이 앞은 객체주소 -&gt; 만약 null이 나오면 객체가 생성되지않았다는 의미. 골뱅이 뒤는 객체 캐쉬번호.","link":"/2020/07/02/200702jspi2/"},{"title":"[ITWILL : JSP]JDBC활용 - import쓰는 이유, form페이지로 받은 데이터를 DB에 insert하는 방법","text":"ITWILL학원 : 19강 JSP기초 BY 정규태강사JDBC JDBC활용 - import쓰는 이유, form페이지로 받은 데이터를 DB에 insert하는 방법 JDBC활용 - JAVA에서 DB 정보 지우기 2가지방법 JDBC활용 - DB에서 고객정보를 불러와서 HTML테이블에 담기 JDBC활용 - TIMESTAMP주의점, JDBC에서 데이터처리 JDBC활용 - 회원정보수정페이지만들기 JDBC활용 - 회원목록출력하는데 관리자는 빼고 출력하기, 자바 에러 두종류 1. import는 언제, 왜 쓸까?어떤 건 import를 쓰고 어떤 건 import하지않고도 사용가능하다. 왜그럴까? import가 필요없는 경우 : 기본적으로 사용 가능한 클래스인 경우이다. 직접구현해서 접근가능한 범위에서 만들어 놓은 클래스들 java 활용도가 높은 클래스를 패키지 추가 없이 사용가능하도록 만들어 놓은 클래스들 예 ) java.lang.*은 자바에서 제공하는 기본패키지로 import없이 사용가능하다. 대표적으로 String 객체는 java.lang.*에 속해있다. import를 써야하는 경우 : 기본제공되는 클래스가 아닌 경우 클래스가 있는 패키지를 추가(import)해야함 2. form페이지로 받은 데이터를 DB에 insert하는 방법form페이지를 만들어서 이름과 성별, 나이, 주민번호를 사용자로부터 받은 뒤 그 데이터들을 insertPro.jsp파일에서 불어와서 MySQL DB에 넣어보는 코드이다. 아래 코드는 form페이지는 생략하고 insertPro.jsp만 나타낸 코드이다. 총 3단계로 이루어진다. form페이지에서 입력한 데이터를 변수로 불러오기 DB연결하기 SQL구문작성 후 stmt객체생성하기 : SQL구문작성시에는 작은 따음표와 큰 따옴표를 잘 입력해야한다. 123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354//import 아래 3가지 추가됨&lt;%@page import=\"java.sql.Statement\"%&gt;&lt;%@page import=\"java.sql.DriverManager\"%&gt;&lt;%@page import=\"java.sql.Connection\"%&gt;&lt;% //1. 변수로 가져오서 데이터출력//1-1. 파라미터값 한글처리request.setCharacterEncoding(\"UTF-8\");//1-2. form태그에서 받은 모든 데이터는 string타입으로 전달되므로 -&gt; int는 형변환필수String name = request.getParameter(\"name\");int age = Integer.parseInt(request.getParameter(\"age\"));String gender = request.getParameter(\"gender\");String jumin1 = request.getParameter(\"jumin1\");String jumin2 = request.getParameter(\"jumin2\");String jumin = jumin1 + \"-\" + jumin2;%&gt;&lt;!--1-3. 데이터출력 --&gt;이름 : &lt;%=name %&gt;&lt;br&gt;나이 : &lt;%=age %&gt;&lt;br&gt;성별 : &lt;%=gender %&gt;&lt;br&gt;주민번호 : &lt;%=jumin %&gt;&lt;br&gt;&lt;%//2. DB에 담기//2-1. 필요한 변수들 상수로 정리final String DRIVER = \"com.mysql.jdbc.Driver\";final String DBURL = \"jdbc:mysql://localhost:3306/jspdb\";final String DBID = \"root\";final String DBPW = \"1234\";//2-2. 드라이버로드Class.forName(DRIVER);System.out.println(\"드라이버로드성공\");//2-3. DB연결Connection con = DriverManager.getConnection(DBURL, DBID, DBPW);System.out.println(\"드라이버연결\");//3. SQL구문작성, stmt 객체생성//3-1. SQL구문작성 : 작은따옴표와 큰따옴표 주의하기String sql= \"insert into itwill_member values(null,'\"+name+\"','\"+gender+\"',\" +age+\",'\"+jumin+\"')\"; //3-2. stmt 객체생성(java.sql하위의 statement사용) : sql구문을 실행하는 역할.Statement stmt = con.createStatement(); //statement객체생성완료//3-3. stmt 실행stmt.executeUpdate(sql);System.out.println(\"DB저장완료\");%&gt; MySQL가서 select * from 테이블명 명령어를 입력하면 row가 추가된 것을 확인할 수 있다. 3. PreparedStatement 객체생성위의 sql구문작성을 보면 변수, 작은따옴표, 큰따옴표혼재되어있어서 적기에 매우 불편하다이를 해소하기위한 객체PreparedStatement를 이용하면된다. 기존 Statement보다 처리속도도 빠르고 보안도 좋은 PreparedStatement를 사용해야한다. 아래 두 코드를 비교해보자. 3-1. Statement사용1234567891011&lt;%@page import=\"java.sql.Statement\"%&gt;//1.SQL구문작성String sql= \"insert into itwill_member values(null,'\"+name+\"','\"+gender+\"',\" +age+\",'\"+jumin+\"')\"; //2. stmt 객체생성(java.sql하위의 statement사용) : sql구문을 실행하는 역할.Statement stmt = con.createStatement();//3. stmt 실행stmt.executeUpdate(sql); 3-2. PreparedStatement사용3단계 stmt 실행시 기능에 따라 쿼리구문을 두가지로 구분할수있다. pstmt.executeUpdate() : insert, update, delete에 사용 DB조작하는 구문. pstmt.executeQuery() : select에 사용 DB조작없이 값만 사용하는 구문. 123456789101112131415161718&lt;%@page import=\"java.sql.PreparedStatement\"%&gt;//1. SQL구문작성String sql= \"insert into itwill_member values(null,?,?,?,?)\";//2. pstmt 객체생성(java.sql하위의 prepareStatement사용) : sql구문을 실행하는 역할.PreparedStatement pstmt = con.prepareStatement(sql);//물음표 값채우기 pstmt.set테이블데이터타입(물음표위치, 값) //항상 물음표 갯수와 쿼리구문갯수가 동일해야한다.pstmt.setString(1, name);pstmt.setString(2, gender);pstmt.setInt(3, age);pstmt.setString(4, jumin);//3. pstmt 실행 : 업데이트 또는 쿼리pstmt.executeUpdate();//pstmt.executeQuery();","link":"/2020/07/03/200703jspi/"},{"title":"[ITWILL : JSP]JDBC활용 - JAVA에서 DB 정보 지우기 2가지방법","text":"ITWILL학원 : 19강 JSP기초 BY 정규태강사JDBC JDBC활용 - import쓰는 이유, form페이지로 받은 데이터를 DB에 insert하는 방법 JDBC활용 - JAVA에서 DB 정보 지우기 2가지방법 JDBC활용 - DB에서 고객정보를 불러와서 HTML테이블에 담기 JDBC활용 - TIMESTAMP주의점, JDBC에서 데이터처리 JDBC활용 - 회원정보수정페이지만들기 JDBC활용 - 회원목록출력하는데 관리자는 빼고 출력하기, 자바 에러 두종류 JAVA에서 DB 정보 지우기이름과 주민번호의 입력값이 DB데이터와 일치하면 회원탈퇴를 진행하는 코드를 만들어보자. 1. 사용자가 작성할 form페이지만들기먼저 이름과 주민번호를 사용자로부터 입력받을 수 있는 deleteForm.jsp파일을 만든다 12345678910&lt;fieldset&gt;&lt;legend&gt;회원정보수정&lt;/legend&gt; &lt;form action=\"deletePro.jsp\" method=\"post\" name=\"fr\"&gt; &lt;h3&gt;본인확인정보&lt;/h3&gt; 이름 &lt;input type=\"text\" name=\"name\"&gt;&lt;br&gt; 주민번호 &lt;input type=\"text\" name=\"jumin1\"&gt; - &lt;input type=\"password\" name=\"jumin2\"&gt;&lt;br&gt; &lt;p&gt;&lt;/p&gt; &lt;input type=\"submit\" value=\"탈퇴하기\"&gt;&lt;br&gt; &lt;/form&gt;&lt;/fieldset&gt; 2. 사용자가 작성한 데이터를 불러와서 DB에 연결하기 deletePro.jsp에서 사용자데이터를 불러와서 DB데이터와 확인 후 탈퇴를 처리하는 코드를 작성하면 아래와 같다. 순서는 아래와 같다 사용할 변수를 먼저 가져오기 DB연결하기 SQL쿼리작성하기 12345678910111213141516&lt;%//1. 변수가져오기request.setCharacterEncoding(\"UTF-8\");String name = request.getParameter(\"name\");String jumin = request.getParameter(\"jumin1\")+\"-\"+request.getParameter(\"jumin2\");%&gt;&lt;% //2.DB연결final String DRIVER = \"com.mysql.jdbc.Driver\";final String DBURL = \"jdbc:mysql://localhost:3306/jspdb\";final String DBID = \"root\";final String DBPW = \"1234\";Class.forName(DRIVER);Connection con = DriverManager.getConnection(DBURL, DBID, DBPW);%&gt; 3. sql작성 &amp; pstmt객체생성이때 두가지 방법이 있다. 3-1. 바로 delete하기 pstmt.executeUpdate();는 return값이 int이므로 int형 변수에 넣은 뒤 if조건문을 통해 진행여부를 html페이지에서 보여줄 수 있다. 사용자입력값이 DB데이터와 일치하면 이클립스 console창에 실행완료(수정완료) : 1 출력 html파일에서는 이름과 함께 정상적으로 탈퇴되었습니다라는 문구 출력된다. 사용자입력값이 DB데이터와 불일치하면 이클립스 console창에 실행완료(수정실패) : 0 출력 html파일에서는 탈퇴실패 문구 출력된다. 12345678910111213141516&lt;%//3. sql작성 &amp; pstmt객체생성String sql = \"delete from itwill_member where name=? &amp;&amp; jumin=?\";PreparedStatement pstmt = con.prepareStatement(sql);pstmt.setString(1, name);pstmt.setString(2, jumin);int val = pstmt.executeUpdate();if(val &gt; 0){ System.out.println(\"실행완료(수정완료) : \"+ val); %&gt;&lt;%=name %&gt;님, 정상적으로 탈퇴되었습니다.&lt;%}else{ System.out.println(\"실행완료(수정실패) : \"+ val); %&gt;탈퇴실패&lt;%}%&gt; 3-2. select 후 delete하기 pstmt.executeUpdate();는 return값이 int이므로 int형 변수에 넣은 뒤 if조건문을 통해 진행여부를 html페이지에서 보여줄 수 있다. 사용자입력값이 DB데이터와 일치하는지 select로 확인후 일치하면 delete구문으로 데이터 삭제 사용자입력값이 DB데이터와 일치하는지 select로 확인후 불일치하면 삭제동작없이 이전페이지로 이동 DB에서 delete은 매우 신중한 작업이다.따라서 정확한 데이터를 찾아 정확하게 처리해야하기때문에 전자보단 후자를 사용해야한다. 1234567891011121314151617181920212223242526272829303132&lt;% //3. sql작성 &amp; pstmt객체생성String sql = \"select name jumin from itwill_member where name=?\";PreparedStatement pstmt = con.prepareStatement(sql);pstmt.setString(1, name);ResultSet rs = pstmt.executeQuery();if(rs.next()){ //레코드셋에서 커서를 옮겨서 데이터가 있을 때 실행하겠다. //이름과 주민번호가 있는 회원의 정보가 존재한다 =&gt;삭제 if(jumin.equals(rs.getString(\"jumin\"))){ sql = \"delete from itwill_member where name=?\"; pstmt = con.prepareStatement(sql); pstmt.setString(1, name); pstmt.execute(); System.out.println(\"회원삭제완료\"); }else{ //이름은 있지만 주민번호가 다른 경우 =&gt;삭제동작없이 이전페이지로 이동 %&gt; &lt;script type=\"text/javascript\"&gt; alert(\"주민번호 오류\") history.back(); //뒤로가기. &lt;/script&gt; &lt;% }}else{ //이름에 해당하는 주민번호가 존재하지않음 =&gt; 즉,비회원이므로 삭제동작없이 이전페이지로 이동 %&gt; &lt;script type=\"text/javascript\"&gt; alert(\"이름 오류\") history.back(); //뒤로가기. &lt;/script&gt; &lt;%}%&gt;","link":"/2020/07/03/200703jspi2/"},{"title":"[ITWILL : WEB] IMG태그, 무료이미지사이트, a태그의 target속성","text":"ITWILL학원 : 6강 WEB(HTML, CSS) BY 김영희1. 웹에서 활용하는 대표 이미지형식 3가지 확장자명 특징 .gif 최대 256가지 색상 표현 가능. 투명배경 가능. 움짤가능 .jpg 트루컬러 표현 가능. 색상에 비해 파일 용량이 작음 ex)일반사진 .png 트루컬러 표현 가능. 투명배경가능. ex)로고 2. 무료이미지사이트 Pixabay Pexels Morguefile 3. a태그의 target속성a태그의 target속성은 링크 여는 방식을 지정한다. 총 4가지가 있다.이제는 프레임구조가 없어져서 top과 parent는 더이상 사용하지 않는다. 1234target = \"_self\" : 기본값, 링크가 현재 위치에서 열림.target = \"_blank\" : 링크를 새탭열기.target = \"_top\" : (프레임구조에서) 링크가 전체 창에 하나로 열림.target = \"_parent\" : (프레임구조에서) 링크가 상위창(모부창)에서 열림. 예시 12현재페이지열기 : &lt;a href=\"https://www.naver.com/\"&gt;새창열기 : &lt;a href=\"https://www.naver.com/\" target=\"_blank\"&gt;","link":"/2020/07/03/200703webi/"},{"title":"[패스트캠퍼스python] 장고프로젝만들기 전체 순서&#x2F;흐름도(ft.쇼핑몰)","text":"차근차근 순서대로 Django와 python으로 쇼핑몰을 만들어보자. 1. Django 가상환경설정 가상환경 virtualenv 설치하기 : pip3 install virtualenv 가상환경은 첫 사용시 한번만 설치하면 된다. 이미 설지채놓았다면 2번 가상환경 폴더만들기부터 진행하면된다. virtualenv는 일반적으로 글로벌 설치가 되어야하는 유일한 패키지이다. 나머지 패키지들은 가상 환경에 설치하기때문이다. 가상환경 폴더만들기 : virtualenv 새로운파일명(보통은 env) 새로운 프로젝트를 시작할때마다 새로운 가상환경을 설정해주는 것이 좋다. 가상환경폴더는 보통 env라고 정하고 프로젝트 디렉토리 내부에 이를 만드는 것이 일반적인 관습이다. 만약 git과 같은 버전 컨트롤 시스템을 사용한다면, env 디렉토리를 커밋에 포함시키면 안된다. 반드시 .gitignore 파일에 env 디렉토리를 추가해야한다. 가상환경 들어가기 : cd 가상환경을 설치한 파일경로 cd Scripts activate 위에서 만든 가상환경 폴더 안에서 Django설치 : pip3 install django 가상환경 안에 어떤 프로그램이 설치되어있는지 궁금할때는 pip list을 입력하면 된다. 2. 새로운 프로젝트와 앱생성 새로운 프로젝트 생성하기 : django-admin startproject 새로운프로젝트명 app생성하기 : django-admin startapp 새로운앱명 쇼핑몰이므로 user, product, order, delivery등의 app을 생성하면 된다. 위에서 만든 모든 app에 각각 templates 폴더 생성 만든 app을 app(프로젝트명과 동일한 이름)하위의 settings.py에서 Installed_app = []에 연결. 만든 각각의 app하위의 models.py에 class와 그 안에 class Meta를 생성. 아래는 쇼핑몰 user 예시코드이다. 쇼핑몰이니까 user앱뿐만 아니라 product, order, delivery등의 각 app 하위에도 class와 class Meta를 생성한다. 123456789class User(models.Model): email = models.EmailField(verbose_name='이메일') password = models.CharField(max_length=64, verbose_name='비밀번호') register_date = models.DateTimeField(auto_now_add=True, verbose_name='가입일자') class Meta: db_table='shop_user' verbose_name='고객' verbose_name_plural='고객' 3. Database 설정 DB에 변경이 필요한 사항 추출하기 : python3 manage.py makemigrations 예를 들어 클래스를 만들었으면, 클래스에서 모델을 불러와 테이블 생성한다. DB에 변경사항 반영하기 : python3 manage.py migrate 예를 들어 클래스를 만들었으면, 위에서 불러온 테이블(클래스)에 칼럼 및 속성 추가 또는 반영한다. 9번과 10번을 통해서 DB에 테이블 자동 생성이된다. sqlite3 db.sqlite3 명령어등으로 sqlite3를 만질 필요가 없이 장고가 알아서 다 해준다! 이 맛에 장고를 이용한다고 한다. 첫 user생성하기 : python3 manage.py createsuperuser 반영사항 체크하기 : python3 manage.py runserver 4. 부트스트랩 설정 각 app의 templates폴더안에 html파일을 만든다. user app의 templates폴더안에 base.html, index.html product app의 templates폴더안에 order app의 templates폴더안에 templates폴더안에 html파일에 부트스트랩 css와 js를 복붙한다. 부트스트랩 사이트 base.html에 부트스트랩 css코드와 js코드를 head태그안에 복붙한다. index.html은 base.html을 상속받아서 활용한다. 아래는 base.html 코드이다. 123456789101112131415161718&lt;!DOCTYPE html&gt;&lt;head&gt; &lt;meta charset=\"UTF-8\"&gt; &lt;meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\"&gt; &lt;!-- 부트스트랩 css코드와 js코드 복붙 --&gt; &lt;link rel=\"stylesheet\" href=\"https://stackpath.bootstrapcdn.com/bootstrap/4.5.0/css/bootstrap.min.css\" integrity=\"sha384-9aIt2nRpC12Uk9gS9baDl411NQApFmC26EwAOH8WgZl5MYYxFfc+NcPb1dKGj7Sk\" crossorigin=\"anonymous\"&gt; &lt;script src=\"https://code.jquery.com/jquery-3.5.1.slim.min.js\" integrity=\"sha384-DfXdz2htPH0lsSSs5nCTpuj/zy4C+OGpamoFVy38MVBnE+IbbVYUew+OrCXaRkfj\" crossorigin=\"anonymous\"&gt;&lt;/script&gt;&lt;script src=\"https://cdn.jsdelivr.net/npm/popper.js@1.16.0/dist/umd/popper.min.js\" integrity=\"sha384-Q6E9RHvbIyZFJoft+2mJbHaEWldlvI9IOYy5n3zV9zzTtmI3UksdQRVvoxMfooAo\" crossorigin=\"anonymous\"&gt;&lt;/script&gt;&lt;script src=\"https://stackpath.bootstrapcdn.com/bootstrap/4.5.0/js/bootstrap.min.js\" integrity=\"sha384-OgVRvuATP1z7JjHLkuOU7Xw704+h835Lr+6QL9UvYjZE3Ipu6Tp75j7Bh/kR0JKI\" crossorigin=\"anonymous\"&gt;&lt;/script&gt; &lt;title&gt;&lt;/title&gt;&lt;/head&gt;&lt;body&gt; &lt;div class=\"containner\"&gt; {% block contents %} {% endblock %} &lt;/div&gt;&lt;/body&gt;&lt;/html&gt; 아래는 index.html 코드이다. “base.html”를 상속받는다. 123456{% extends \"base.html\" %}{% block contents %}하이{% endblock%} 부트스트랩스타일적용 : 프로젝트디렉토리 하위에 static 폴더생성 (app폴더들과 동급)-&gt; 원하는 디자인 다운로드 후 폴더안에 넣기 html파일을 view.py에 연결하기. 만든 모든 html파일은 view.py에 연결해야한다. 예시로 위에서 만든 index.html을 view.py에 연결하는 방법은 아래와 같다. 1234from django.shortcuts import renderdef index(request): return render(request, 'index.html') usr.py에 연결하기.","link":"/2020/07/05/200705python/"},{"title":"[ITWILL : JAVA]클래스 : 상속, 메서드 오버라이딩, super()","text":"ITWILL학원 : 14강 JAVA BY 윤미영강사1. 상속 정의상속은 객체간의 관계를 표현하는 것. 상속을 왜 사용할까?프로그램에서 상속은 기존 클래스의 멤버변수와 메서드을 다른 클래스에서 재사용하기 위한 것이다. 상속의 관계에서 물려주는 클래스 : 슈퍼클래스 = 조상클래스 = 모부클래스 = 상위클래스 상속의 관계에서 물려받는 클래스 : 서브클래스 = 자손클래스 = 자식클래스 = 하위클래스 상속 사용방법은 아래와 같다. extends 슈퍼클래스이름으로 작성해주면된다. 1class 서브클래스이름 extends 슈퍼클래스이름 2. 상속 특징상속의 장점 1. 서브클래스는 멤버변수와 메서드를 자신의 것처럼 사용할 수 있기 때문에 코드 절감 효과. 2. 슈퍼클래스의 코드를 변경하면 모든 서브 클래스들에게도 적용되므로 유지보수성 향상. 상속의 특징 : 단일 상속만 가능 - 프로그램복잡도를 줄이기 위해서 JAVA는 다중상속을 지원하지않는다. - 상속을 여러 슈퍼클래스에서 받을 수 없다. 3. 상속범위 상속대상 : 멤버변수, 메서드 상속제외대상 : 생성자, 초기화블록 생성자는 상속하지않고 super()를 통해 호출한다. 명시적으로 super()를 이용해서 다른 생성자를 호출하는 코드가 없다면 컴파일러는 언제나 슈퍼클래스의 기본 생성자를 호출하는 super()를 생성해 첫 행에 삽입하게 된다. 결론적으로 최상위의 객체인 Object까지 모든 조상객체가 다 만들어지는 구조가 된다. 4. Object 라이브러리 Object는 자바에서 아주 중요한 클래스이며 최상위클래스이다. Object 클래스는 모든 클래스의 조상 클래스로 만약 클래스 선언부에 extends Object생략 가능하다. 5. 메서드 오버라이딩(Method overriding) 슈퍼클래스에서 정의된 기능을 서브 클래스에 적합하게 수정해서 재정의하는 것. 서브클래스의 메서드 오버라이딩을 하면 슈퍼클래스의 메서드를 은닉하고 재정의한다. 은닉한 슈퍼클래스의 메서드에 접근할수있을까? YES!어떻게? super.메서드명();하면된다 5-1. 메서드 오버라이딩시 똑같아야 하는 것 메서드의 이름은 슈퍼클래스의 메서드 이름과 같아야한다. 매개변수의 개수, 타입, 순서는 슈퍼클래스의 메서드와 같아야한다. 리턴타입은 슈퍼 클래스의 메서드와 같아야한다. 5-2. 메서드 오버라이딩시 달라도 되는 것메서드 오버라이딩시 달라도 되는 것 접근지정자 : public &gt; protected &gt; 기본접근지정자(디폴트) &gt; private 하지만 접근지정자가 작아지면 안된다. 메서드오버로딩과 용어헷갈리지않도록 주의! 오버로딩(Overloading) : 같은 이름의 메서드 여러개를 가지면서 매개변수의 유형과 개수가 다르도록 하는 기술 오버라이딩(Overriding) : 상속관계일때 사용하며 같은 이름의 메서드를 가진다. 상위 클래스가 가지고 있는 메서드를 하위 클래스가 재정의해서 사용 아래는 Person 클래스이다. 123456public class Person{ String name; public void jump(){ System.out.println(\"사람 : 뛰기\"); }} 아래는 spider 클래스이다. 12345public class Spider { public void jump(){ System.out.println(\"스파이터 : 점프\"); }} 이제 오버라이딩해 볼 SpiderMan2 클래스이다.SpiderMan2는 Person클래스를 상속하고 있다. 12345678910111213141516171819public class SpiderMan2 extends Person{ Spider spider = new Spider(); boolean isSpider; @Override //애노테이션 public void jump(){ if(isSpider){ spider.jump(); }else{ System.out.println(\"스파이더맨2 : 뛰기\"); } }}//출력값거미모드로 변신스파이터 : 점프사람모드로 변신스파이더맨2 : 뛰기 5-3 애노테이션(Annotation) @Override 컴파일러등을 위한 주석으로 ‘이 메서드는 재정의한 메서드이니까 메서드 오버라이딩 규칙에 맞지 않으면 오류를 발생시켜라’라는 정보를 컴파일러에게 전달한다. 애노테이션 생략가능. 6. super키워드생성자를 만들면 항상 super()로 먼저 슈퍼클래스를 실행한 뒤에 서브클래스를 실행한다. 하나의 파일안에 여러 class를 둘 수 있지만 이럴땐 두가지 규칙이 있다. 파일명과 동일한 class에만 public을 붙일 수 있다. 파일명과 동일한 class에만 메인메서드를 넣을 수 있다. 보통 실무에서는 하나의 파일에는 하나의 class만 만든다. 구분하기 편하기때문에. super()는 두가지 기능을 한다. 조상멤버변수와 메서드를 참조. 조상의 생성자를 호출. 조상클래스의 생성자를 호출하기 위해 super()가 사용된다.명시적으로 super()를 이용해서 다른 생성자를 호출하는 코드가 없다면 컴파일러는 언제나 슈퍼클래스의 기본 생성자를 호출하는 super()를 생성해 첫 행헤 삽입하게 된다.이는 결론적으로 최상위의 객체인 Object까지 모든 조상객체가 다 만들어지는 구조가 된다. 6-1. this와 super의 차이점super()와 this()는 둘다 반드시 첫번째 문장에 와야한다.따라서 둘이 함께 쓰지 못한다.둘 중 하나만 쓸 수 있다. this가 현재 객체를 참조(나자신) super는 조상 객체를 참조(부모객체) 6-2. super예시 : this와 super의 차이점super()와 this()는 모두 참조변수이다.아래는 this와 super의 차이점을 설명해주는 super키워드를 사용한 예시이다.Child는 두개의 멤버변수를 가진다 Parent클래스의 x와 Child클래스의 x. 123456789101112131415161718192021222324252627class Parent{ String x = \"슈퍼클래스의 멤버변수\";}class Child extends Parent { String x = \"서브클래스의 멤버변수\"; void method(){ String x = \"지역변수\"; System.out.println(\"x : \" + x); System.out.println(\"this.x : \" + this.x); System.out.println(\"super.x : \" + super.x); }}public class ScopeTest { public static void main(String[] args) { Child child = new Child(); child.method(); }}//출력값x : 지역변수this.x : 서브클래스의 멤버변수super.x : 슈퍼클래스의 멤버변수 6-3. super예시 : 순서아래 코드의 출력값의 순서는 어떻게 될까? 출력값의 순서 main클래스에 따라 MyStudent 클래스를 먼저 실행하는데 extends되어있다 -&gt; MyStydent생성자안에 super()가 생략되어있다. super()인 Student클래스가 먼저 실행되고 난 후 MyStudent생성자의 println이 실행된다. 파라미터가 있는 생성자를 쓰게 된다면 super()가 에러나지않도록 항상 디폴트생성자를 기재해야한다! 1234567891011121314151617181920212223242526class Student{ public Student(){} //디폴트생성자 public Student(int a) { //생성자 System.out.println(\"슈퍼생성자\"); } }public class MyStudent extends Student{ public MyStudent(){ //super(); 자동생성되며 생략됨 System.out.println(\"서브생성자\"); }}public class Test { public static void main(String[] args) { MyStudent ms = new MyStudent(); //객체생성 }}//출력값슈퍼생성자서브생성자 혹시 아래 코드처럼 super()를 밑에 작성해도 같은 결과가 나올까? 123456public class MyStudent extends Student{ public MyStudent(){ System.out.println(\"서브생성자\"); super(); }} 아랫줄에 작성하면 에러Constructor call must be the first statement in a constructor가 발생한다.super()는 항상 생성자 구현부의 첫번째줄에 있어야한다. Student 생성자의 생략된 super()는 Object를 상속받고있다.모든 클래스는 Object를 상속받는다.","link":"/2020/07/06/200706javai/"},{"title":"[ITWILL : JSP]JDBC활용 - TIMESTAMP주의점, JDBC에서 데이터처리","text":"ITWILL학원 : 20강 JSP기초 BY 정규태강사JDBC JDBC활용 - import쓰는 이유, form페이지로 받은 데이터를 DB에 insert하는 방법 JDBC활용 - JAVA에서 DB 정보 지우기 2가지방법 JDBC활용 - DB에서 고객정보를 불러와서 HTML테이블에 담기 JDBC활용 - TIMESTAMP주의점, JDBC에서 데이터처리 JDBC활용 - 회원정보수정페이지만들기 JDBC활용 - 회원목록출력하는데 관리자는 빼고 출력하기, 자바 에러 두종류 1. MySQL Workbench에서 Timestamp 추가시 주의점 MySQL Workbench에서 row추가시 Timestamp 데이터타입을 쓰고싶다면 TIMESTAMP라고 직접 작성하거나 드롭다운리스트에서 TIMESTAMP()을 찾은 뒤 꼭 괄호를 삭제하고 TIMESTAMP로 apply해야 에러가 발생하지 않는다. 타임스탬프는 사용자가 입력하는 데이터가 아니라 컴퓨터시간에서 가져오는 데이터이다.따라서 JDBC의 3단계인 sql구문 &amp; DB저장에서 객체생성을 통해 진행할 수 있다. 아래 코드는 JDBC에서 itwill_member테이블에 사용자가 입력한 id, pw와 컴퓨터현재시간을 차례대로 sql구문에 넣는 코드이다. 123456//3. sql구문 &amp; DB저장 진행시 String sql = \"insert into itwill_member value(?,?,?)\";PreparedStatement pstmt = con.prepareStatement(sql);pstmt.setString(1, id);pstmt.setString(2, pw);pstmt.setTimestamp(3, new Timestamp(System.currentTimeMillis())); 2. JDBC에서 데이터처리JDBC 3단계인 SQL작성 &amp; pstmt 객체생성 &amp; 데이터처리를 중점으로 로그인페이지를 작성해보자. 아이디 일치 + 비번일치 =&gt; 로그인, main페이지이동, id값 세션객체 생성 아이디 일치 + 비번불일치 =&gt; 에러(“비밀번호오류”), 뒤로가기 아이디 불일치 =&gt; 에러(“비회원입니다”), 뒤로가기 123456789101112131415161718192021222324252627282930313233343536373839//3-3. 데이터처리if(rs.next()){ //true라는 건 id가 있다는 소리임 즉, 회원인 경우가 됨 if(pw.equals(rs.getString(\"pw\"))){ //비번일치 //세션ID값생성 session.setAttribute(\"id\", id); response.sendRedirect(\"main.jsp\"); //js코드보다 java코드가 좋다 System.out.println(id+\"로그인성공\"); %&gt;&lt;!-- &lt;script type=\"text/javascript\"&gt; location.href=\"main.jsp\" &lt;/script&gt; js코드보다 java코드가 더 좋다 --&gt; &lt;% }else{ System.out.println(\"비밀번호오류\"); //비번불일치 %&gt; &lt;script type=\"text/javascript\"&gt; alert(\"비밀번호가 일치하지 않습니다\") //페이지이동 3가지의 차이점 history.back(); //=&gt;작성한 아이디나 데이터가 살아있다 //location.href=\"loginForm.jsp\" //=&gt;작성한 아이디나 데이터가 없다 //location.reload();//=&gt;새로고침으로 alert창이 반복된다 &lt;/script&gt; &lt;% }}else{ //false이므로 id가 없다는 소리임. 즉, 비회원인 경우. System.out.println(\"아이디오류-비회원입니다\"); %&gt; &lt;script type=\"text/javascript\"&gt; let tmp = confirm(\"비회원입니다. 회원가입하시겠습니까?\") if(tmp){ location.href=\"insertForm.jsp\"; }else{ history.back(); } &lt;/script&gt; &lt;%}%&gt; 2-1. 페이지이동시 js코드보다 java코드가 좋은 이유다른 페이지로 이동시 왜 js코드보다 java코드가 더 좋을까?해당파일의 확장자는 jsp이다. jsp파일이라서 자바코드의 처리가 우선순위에 있다.js코드인 경우, java로 된 코드가 다 실행되고 난 뒤에 실행이 된다.이때 이후에 나오는 java코드에 문제가 생기면 js코드가 실행안될 수 있기때문에 아예 java코드를 쓰는것이실행순서상 좋다. js코드를 이용한 페이지이동 123&lt;script type=\"text/javascript\"&gt; location.href=\"main.jsp\"&lt;/script&gt; --&gt; java코드를 이용한 페이지이동 1response.sendRedirect(\"main.jsp\"); 2-2. 페이지새로고침 3가지의 차이점. history.back(); : 작성한 아이디나 데이터가 살아있다 location.href=&quot;loginForm.jsp&quot;; : 작성한 아이디나 데이터가 없다 location.reload(); : 새로고침으로 alert창이 반복된다","link":"/2020/07/06/200706jspi2/"},{"title":"[ITWILL : JSP]JDBC활용 - DB에서 고객정보를 불러와서 HTML테이블에 담기","text":"ITWILL학원 : 20강 JSP기초 BY 정규태강사JDBC JDBC활용 - import쓰는 이유, form페이지로 받은 데이터를 DB에 insert하는 방법 JDBC활용 - JAVA에서 DB 정보 지우기 2가지방법 JDBC활용 - DB에서 고객정보를 불러와서 HTML테이블에 담기 JDBC활용 - TIMESTAMP주의점, JDBC에서 데이터처리 JDBC활용 - 회원정보수정페이지만들기 JDBC활용 - 회원목록출력하는데 관리자는 빼고 출력하기, 자바 에러 두종류 DB저장되어있는 모든 회원정보를 출력하는 코드를 작성해보자. 1. recordset과 resultset recordset = select 구문의 결과. BOF부터 EOF(End Of File)까지의 총 덩어리를 의미. resultset = 테이블을 의미. ex)테이블A, 테이블B, 테이블C 각각이 다 resultset이다. rs.next() = 커서객체를 다음(next)로 넘기는 메서드. row에 데이터가 있으며 true이고 없으면 다음 row로 내려간다. 데이터에 행이 없으면 False가 되고 while문이 종료된다. getString(columnIndex)는 columnIndex안에 테이블의 열번호를 넣으면 된다. 가독성이 떨어지고 모든 열이 어떤 데이터인지 알고있을때 사용할 수있다. 따라서 index값을 사용하는 경우 주석을 적어 무엇을 나타내는 데이터인지 알려주는 것이 좋다. 2. DB에서 고객정보를 불러와서 테이블에 담기.1234567891011121314151617181920212223242526272829303132&lt;table border=\"1\"&gt; &lt;tr&gt; &lt;td&gt;인덱스&lt;/td&gt; &lt;td&gt;이름&lt;/td&gt; &lt;td&gt;성별&lt;/td&gt; &lt;td&gt;나이&lt;/td&gt; &lt;td&gt;주민번호&lt;/td&gt; &lt;/tr&gt;&lt;%//1.변수설정%&gt;&lt;% //2. 드라이버 로드와 DB연결final String DRIVER = \"com.mysql.jdbc.Driver\";final String DBURL = \"jdbc:mysql://localhost:3306/jspdb\";final String DBID = \"root\";final String DBPW = \"1234\";Class.forName(DRIVER);Connection con = DriverManager.getConnection(DBURL, DBID, DBPW);//3.쿼리작성String sql = \"select * from itwill_member\";PreparedStatement pstmt = con.prepareStatement(sql);ResultSet rs = pstmt.executeQuery();//3-1.일반출력/* while(rs.next()){ System.out.println(\"이름 : \" + rs.getString(\"name\") //이름만 출력 + \", 성별 : \" + rs.getString(\"gender\") + \", 나이 : \" + rs.getInt(\"age\") + \", 주민번호 : \" + rs.getString(\"jumin\")); //이름, 나이, 성별, 주민번호 -&gt; 콘솔로 출력하기 -&gt; html 테이블생성해서 출력하기 }*/ 2-1. 테이블에 출력가져온 데이터를 테이블형태로 출력해보는데 2가지 방법이 있다. 변수지정없이 바로 while반복문실행SQL구문작성시 select * from itwill_member이라서 while반복문을 사용했다.만약 SQL구문이 select * from itwill_member where id=?로 where조건절을 추가하면 반복문이 아닌 if문으로 사용가능하다. 1234567891011121314151617181920//3.쿼리작성String sql = \"select * from itwill_member\";PreparedStatement pstmt = con.prepareStatement(sql);ResultSet rs = pstmt.executeQuery();while(rs.next()){ %&gt; &lt;tr&gt; &lt;td&gt;&lt;%=rs.getString(1) %&gt;&lt;/td&gt; //인덱스 &lt;td&gt;&lt;%=rs.getString(\"name\") %&gt;&lt;/td&gt; &lt;td&gt;&lt;%=rs.getString(\"gender\") %&gt;&lt;/td&gt; &lt;td&gt;&lt;%=rs.getInt(\"age\") %&gt;&lt;/td&gt; &lt;td&gt;&lt;%=rs.getString(\"jumin\") %&gt;&lt;/td&gt; &lt;/tr&gt; &lt;%}%&gt;&lt;/table&gt; 변수에 저장해서 반복문없이 table에 바로 태그집어넣기rs에서 가져온 값을 변수로 저장해서 html table태그에 바로 표현식으로 집어넣을 수 있다. 12345678910111213141516171819202122232425262728293031323334353637383940//3.쿼리작성String sql = \"select * from itwill_member where id=?\";PreparedStatement pstmt = con.prepareStatement(sql);pstmt.setString(1, id);ResultSet rs = pstmt.executeQuery();String name = \"\";int age = 0;String gender = \"\";String email = \"\";Timestamp reg_date = null; //null이 초기값임if(rs.next()){ //id=rs.getString(\"id\"); 세션으로 가져와서 필요없음 name = rs.getString(\"name\"); age = rs.getInt(\"age\"); gender = rs.getString(\"gender\"); email = rs.getString(\"email\"); reg_date = rs.getTimestamp(\"reg_date\");}%&gt;&lt;table border=1&gt; &lt;tr&gt; &lt;td&gt;아이디&lt;/td&gt; &lt;td&gt;이름&lt;/td&gt; &lt;td&gt;나이&lt;/td&gt; &lt;td&gt;성별&lt;/td&gt; &lt;td&gt;이메일&lt;/td&gt; &lt;td&gt;가입일자&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td&gt;&lt;%=id %&gt;&lt;/td&gt; &lt;td&gt;&lt;%=name %&gt;&lt;/td&gt; &lt;td&gt;&lt;%=age %&gt;&lt;/td&gt; &lt;td&gt;&lt;%=gender %&gt;&lt;/td&gt; &lt;td&gt;&lt;%=email %&gt;&lt;/td&gt; &lt;td&gt;&lt;%=reg_date %&gt;&lt;/td&gt; &lt;/tr&gt;&lt;/table&gt;","link":"/2020/07/06/200706jspi/"},{"title":"[ITWILL : JSP]JDBC활용 - 회원정보수정페이지만들기","text":"ITWILL학원 : 21강 JSP기초 BY 정규태강사JDBC JDBC활용 - import쓰는 이유, form페이지로 받은 데이터를 DB에 insert하는 방법 JDBC활용 - JAVA에서 DB 정보 지우기 2가지방법 JDBC활용 - DB에서 고객정보를 불러와서 HTML테이블에 담기 JDBC활용 - TIMESTAMP주의점, JDBC에서 데이터처리 JDBC활용 - 회원정보수정페이지만들기 JDBC활용 - 회원목록출력하는데 관리자는 빼고 출력하기, 자바 에러 두종류 사용자가 로그인한 뒤 자신의 정보를 수정할 수 있는 마이페이지를 만들어보자. 회원정보를 수정할 수 있는 전제는 로그인이다.로그인이 되어있지않다면 로그인페이지로 이동시켜야한다.로그인이 되어있는 사용자는 사용자정보를 DB에서 불러와서 화면에 각 요소를 출력한다 -&gt; 원하는 정보를 수정한 뒤 다시 DB에 업데이트해야한다. 1. 회원정보수정폼 페이지만들기로그인한 사용자에 한하여 DB에 저장되어있는 해당 회원정보를 FORM형식으로 나타내주는 updateForm.jsp 페이지를 만들어보자. 다음은 회원정보수정폼 작성 순서이다. 1-1. 로그인여부를 먼저 체크. &amp; 한글처리 &amp; 변수로딩 로그인이 되어있지않다면 로그인페이지로 이동 id값을 가져올 수 있는 방법이 여기서는 두가지이다, 기본 방식은 파라미터로 가져오거나 = request.getParameter(“id”) session을 이용했기에 세션활용. 세션값은 object이기에 String으로 형변환필수 = (String) session.getAttribute(“id”) 1-2.드라이브로드 &amp; DB를 연결.DB에 저장된 회원정보를 사용해야함으로 드라이브로드 &amp; DB를 연결해야한다. 1-3. SQL 구문작성 &amp; pstmt select구문으로 해당 id에 관한 모든 정보를 DB에서 불러온다 많은 컬럼중에 왜 하필 id일까? =&gt; id가 primary key이기 때문이다. primary key를 기준으로 where조건문을 걸어 DB에서 데이터를 select하면 된다. select쿼리이므로 executeQuery()와 executeUpdate()중 executeQuery()를 사용하면 된다. select쿼리이므로 pstmt는 int형 변수에 저장해서 사용하면 된다. 1-4. 실행 -&gt; rs에 결과저장 -&gt; 데이터처리 지역변수에 데이터를 넣어서 사용할 수 있다. 지역변수는 멤버변수처럼 자동으로 초기화되지 않는다. 따라서 직접해줘야한다 지역변수의 초기화값은 데이터타입에 따라 다르다. 초기화값은 보통 0이나 null임. 실무에선 String 초기화시 null보단 “”로 사용한다. 데이터타입 초기화값 int 0 String “”(공백) 배열 0 참조형(Timestamp등) null 1-5. 비밀번호를 입력받은 뒤 사용자가 입력한대로 데이터수정하기 -&gt; updatePro.jsp에서 진행12345678910111213141516171819202122232425262728293031323334353637383940414243444546474849505152535455565758596061626364656667686970717273&lt;%//1. 로그인여부체크 (로그인x-&gt;로그인페이지로이동)request.setCharacterEncoding(\"UTF-8\");String id = (String) session.getAttribute(\"id\"); //object이기에 형변환필수if(id == null){ //로그인페이지이동 response.sendRedirect(\"loginForm.jsp\");} //2. 드라이브로드 &amp; 디비연결 : 로그인한 사용자의 정보를 가져오기final String DRIVER = \"com.mysql.jdbc.Driver\";final String DBURL = \"jdbc:mysql://localhost:3306/jspdb\";final String DBID = \"root\";final String DBPW = \"1234\";Class.forName(DRIVER);Connection con = DriverManager.getConnection(DBURL, DBID, DBPW);System.out.println(\"드라이브로드와 디비연결성공\");//3. SQL &amp; PSTMT &amp; 실행String sql = \"select * from itwill_member where id=?\";PreparedStatement pstmt = con.prepareStatement(sql);pstmt.setString(1, id);//4. 실행-&gt; rs에 결과저장 -&gt; 데이터처리ResultSet rs = pstmt.executeQuery();//지역변수초기화-자동으로 안됨.String name = \"\";int age = 0;String gender = \"\";String email = \"\";Timestamp reg_date = null; // Timestamp의 초기값은 null임if(rs.next()){ //id=rs.getString(\"id\"); 세션으로 가져와서 필요없음 name = rs.getString(\"name\"); age = rs.getInt(\"age\"); gender = rs.getString(\"gender\"); email = rs.getString(\"email\"); reg_date = rs.getTimestamp(\"reg_date\");}//4. gender를 입력안하고 회원가입한경우 if(gender == null){ gender=\"여\"; }//5. 비밀번호를 입력받은 뒤 수정하기 -&gt;updatePro.jsp에서 진행%&gt;&lt;fieldset&gt;&lt;legend&gt;회원정보수정&lt;/legend&gt; &lt;form action=\"updatePro.jsp\" method=\"post\" name=\"fr\"&gt; 아이디 &lt;input type=\"text\" name=\"id\" value=\"&lt;%=id %&gt;\" readonly&gt;&lt;br&gt; 비밀번호 &lt;input type=\"password\" name=\"pw\"&gt;&lt;br&gt; 이름 &lt;input type=\"text\" name=\"name\" value=\"&lt;%=name %&gt;\"&gt;&lt;br&gt; 나이 &lt;input type=\"text\" name=\"age\" value=\"&lt;%=age %&gt;\"&gt;&lt;br&gt; 성별 &lt;input type=\"radio\" name=\"gender\" value=\"여\" &lt;% if(gender.equals(\"여\")){ %&gt; checked &lt;%}%&gt; &gt; 여성 &lt;input type=\"radio\" name=\"gender\" value=\"남\" &lt;% if(gender.equals(\"남\")){ %&gt; checked &lt;%}%&gt; &gt; 남성&lt;br&gt; 이메일 &lt;input type=\"text\" name=\"email\" value=\"&lt;%=email %&gt;\"&gt;&lt;br&gt; &lt;input type=\"submit\" value=\"회원정보수정하기\"&gt; &lt;/form&gt;&lt;/fieldset&gt; 2. 회원정보수정페이지의 데이터처리페이지만들기아래는 회원정보폼에 수정을 하면 update구문을 실행하는 updatePro.jsp 코드이다. 2-1. 로그인여부를 먼저 체크 로그인이 되어있지않다면 로그인페이지로 이동 id값을 가져올 수 있는 방법이 여기서는 두가지이다, 기본 방식은 파라미터로 가져오거나 = request.getParameter(“id”) session을 이용했기에 세션활용. 세션값은 object이기에 String으로 형변환필수 = (String) session.getAttribute(“id”) 2-2. 한글처리 &amp; 변수가져오기변수에 전달된 정보를 저장(아이디,비번,이름,나이,성별,이멜)한다 2-3. 드라이브로드 &amp; DB를 연결.2-4. SQL 구문작성 &amp; pstmt수정하고자하는 id정보가 DB에 있는지 select구문으로 판단 2-5. 실행 -&gt; rs에 결과저장 -&gt; 데이터처리 아이디,비번 동일한 경우 =&gt; 입력받은 데이터를 DB에 update. 비밀번호오류 =&gt; 에러메세지 123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869&lt;%//1.로그인여부체크 -&gt;로그인페이지이동String id = (String) session.getAttribute(\"id\");if (id == null) { response.sendRedirect(\"loginForm.jsp\");}//2. 한글처리 &amp; 변수 : 전달된 정보를 저장(아이디,비번,이름,나이,성별,이멜)request.setCharacterEncoding(\"UTF-8\");//String id = request.getParameter(\"id\"); 세션으로 이미가져왔음String pw = request.getParameter(\"pw\");String name = request.getParameter(\"name\");int age = Integer.parseInt(request.getParameter(\"age\"));String email = request.getParameter(\"email\");String gender = request.getParameter(\"gender\");//3. 드라이버로드 &amp; DB연결final String DRIVER = \"com.mysql.jdbc.Driver\";final String DBURL = \"jdbc:mysql://localhost:3306/jspdb\";final String DBID = \"root\";final String DBPW = \"1234\";Class.forName(DRIVER);Connection con = DriverManager.getConnection(DBURL, DBID, DBPW);System.out.println(\"updatePro : 드라이브로드와 디비연결성공\");//4. SQL구문 &amp; pstmt실행 &amp; 실행-&gt;rs저장// 4-1 sql구문 : 수정하고자하는 사람의 정보가 있는지 판단 후 selectString sql = \"select pw from itwill_member where id=?\";PreparedStatement pstmt = con.prepareStatement(sql);pstmt.setString(1, id);//5. 데이터처리 // 아이디,비번 동일한 경우 =&gt; 수정// 비밀번호오류 =&gt; 에러메세지ResultSet rs = pstmt.executeQuery();if(rs.next()){ //아이디있는 경우 if(pw.equals(rs.getString(\"pw\"))){// 비밀번호 일치하는 경우 sql = \"update itwill_member set name=?,age=?,gender=?,email=?\" +\"where id=?\"; pstmt = con.prepareStatement(sql); pstmt.setString(1, name); pstmt.setInt(2, age); pstmt.setString(3, gender); pstmt.setString(4, email); pstmt.setString(5, id); pstmt.executeUpdate(); System.out.println(\"회원정보수정완료\"); response.sendRedirect(\"main.jsp\"); }else{ // 비밀번호 불일치하는 경우 %&gt; &lt;script type=\"text/javascript\"&gt; alert(\"비밀번호오류로 수정불가\") history.back(); //뒤로가기. &lt;/script&gt; &lt;% System.out.println(\"비밀번호오류로 수정불가\"); }}else{ //아이디없는 경우 %&gt; &lt;script type=\"text/javascript\"&gt; alert(\"비회원입니다\") history.back(); //뒤로가기. &lt;/script&gt; &lt;% System.out.println(\"아이디오류\");}%&gt;","link":"/2020/07/07/200707jspi/"},{"title":"[ITWILL : DB]여러행함수 : Group by절, Having절","text":"ITWILL학원 : 11강 Database BY 정지윤강사SQL함수에는 두가지 유형이 있다. 단일행함수 : 행당 하나의 결과 반환 여러행함수 : 행 집합당 하나의 결과 반환 그룹함수 Group by절 Having절 이 중 여러행함수에 대해 알아보자.그룹함수는 테이블의 전체 행을 하나 이상의 컬럼을 기준으로 그룹화하여 그룹별로 결과를 출력하는 함수 1. Group by절 모두 사원 전체를 기준으로 데이터를 추출하는 것이 아닌 특정 그룹으로 묶어 데이터를 GROUP BY절로 집계할 수 있다. 즉 테이블안에서 또 다시 작은 테이블로 그룹을 나누고싶을때 사용. GROUP BY 구문은 WHERE와 ORDER BY절 사이에 위치한다. 문법이므로 정확한 위치에 적어여한다. 따라서 암기하기 쉽게 ORDER BY절이 항상 마지막이라고 생각하면된다. 예시1 : 하나의 테이블(emp)에서 부서별(deptno)로 평균급여(AVG(sal)) 조회(select)시 사용 예시2 : employees테이블에서 부서별로 job_id가 동일한 사원들의 평균급여를 출력시 사용. 모바일사업부에서 동일한 job_id(마케팅)를 가진 사원들의 평균 급여 모바일사업부에서 동일한 job_id(총무팀)를 가진 사원들의 평균 급여 모바일사업부에서 동일한 job_id(자재구매팀)를 가진 사원들의 평균 급여 화이트가전사업부에서 동일한 job_id(마케팅)를 가진 사원들의 평균 급여 화이트가전사업부에서 동일한 job_id(총무팅)를 가진 사원들의 평균 급여 화이트가전사업부에서 동일한 job_id(자재구매팀)를 가진 사원들의 평균 급여 123$ select dept_id, job_id, avg(salary)$ from employees$ group by dept_id, job_id 2. Having 절조건문을 작성할수있는 절이다. 2-1. Where절과 Having절 차이Where절도 조건문을 작성할 수 있는 절인데 이 둘의 차이가 뭘까? Where절 : 행 제한 조건문, 즉 단일행함수가 들어갈때 사용. Having절 : 행 그룹 제한 조건문, 즉 그룹함수가 들어갈때 사용. 아래 쿼리는 employees테이블에서 job_id에 REP가 들어가지 않은 job_id를 기준으로 salary합계가 13000 초과하는 job_id별로 salary합계를 낮은순으로 정렬한 뒤 PAYROLL로 제목을 나타내서 출력한다. 123456$ select job_id, SUM(salary) PAYROLL$ from employees$ where job_id not like '%REP%'$ group by job_id$ having SUM(salary) &gt; 13000$ order by SUM(salary) 3. Group by절과 Having절 예시","link":"/2020/07/07/200707dbi/"},{"title":"[ITWILL : JAVA]클래스 : 다형성(Polymorphism)","text":"ITWILL학원 : 15강 JAVA BY 윤미영강사캐스팅은 OOP(객체지향프로그래밍) 에서 매우 중요하다.왜냐하면 캐스팅은 OOP의 다형성과 관련이 있기 때문이다. 1. 다형성java에서 기본형이 아닌 참조형데이터일때, 그리고 상속관계에 있을 때에 한정해서 슈퍼클래스 타입으로 서브클래스 객체를 레퍼런스할 수 있는 성질. 2. 캐스팅종류(casting, 형변환)캐스팅은 크게 자동 형변환, 명시적 형변환으로 나뉜다.또 데이터 타입에 따라 다르다. 데이터타입 캐스팅종류 기본형 자동 형변환 기본형 명시적 형변환 (상속관계의) 참조형 자동 형변환(UpCasing) (상속관계의) 참조형 명시적 형변환(DownCasing) 상속관계일때 캐스팅은 크게 두가지로 나뉜다.두 캐스팅의 전제조건은 상속이다. 참고링크 : JAVA - UpCasting(업캐스팅) 2-1 UpCasting(업캐스팅 = 자동형변환) : 서브클래스가 슈퍼클래스로 형변환 되는 것. 슈퍼클래스의 레퍼런스에 서브클래스의 인스턴스(객체)를 저장. 컴파일러가 자동으로 형변환 업캐스팅을 하면 상속 받은 멤버(멤머변수,메서드)만 쓸 수 있다. 업캐스팅을 참조영역이 감소했다고 표현한다 WHY? 원래 Child는 Parent와 Child을 둘 다 쓸 수 있었는데 업캐스팅때문에 상속받은 것만 쓸 수 있게 됨 업캐스팅하는 3가지방법 123456Parent p = new Parent();Child c = new Child();Parent p1 = (Parent) new Child(); //업캐스팅 1번방법Parent p2 = new Child(); //업캐스팅 2번방법Parent p3 = c; //업캐스팅 3번방법 2-2. DownCasting(다운캐스팅 = 명시적 형변환) : 슈퍼클래스가 서브클래스로 형변환 되는 것. 다운캐스팅은 컴파일러가 자동으로 형변환 X =&gt; WHY? 해당객체가 존재하지 않을 수도 있기때문에 따라서 개발자가 직접 타입을 구현해야한다. =&gt; 예외가 발생한다고 표현함. UpCasting이 일어난 값에 한해서만 DownCasting이 가능하다. 서브클래스의 레퍼런스에 슈퍼클래스의 인스턴스(객체)를 저장. 123456789101112131415161718192021Parent p = new Parent();Child c = new Child();//아래 코드 네줄은 컴파일 에러가 발생한다. = Error//Type mismatch: cannot convert from Parent to ChildChild c1 = new Parent();c1.슈퍼클래스메서드명();c1.서브클래스메서드명();Child c2 = p;//아래 코드 네줄은 예외가 발생한다. = Exception//Exception in thread \"main\" java.lang.ClassCastException//업캐스팅을 안해서 다운캐스팅을 할수없다 heap메모리에는 은닉된 Childrk c2가 없음.Child c2 = (Child) new Parent();c1.슈퍼클래스메서드명();c1.서브클래스메서드명();Child c2 = p;//업캐스팅한 뒤 다운캐스팅이 가능하다Parent pp = new Child(); //업캐스팅Child c3 = pp; 3. 다형성이 왜 필요할까? 다형성과 참조형 객체의 형변환 insteadof 연산자 참조변수의 레벨에 따른 객체멤버 연결 공변 리턴 타입 3-1. 다형성과 참조형 객체의 형변환자바의 데이터타입은 크게 두가지로 나뉜다. 기본형데이터(8가지) : 기본 데이터형에서의 캐스팅은 원칙적으로 데이터손실을 막고자 한다. 종류 : 자동 형변환, 명시적 형변환.아래는 double형을 int형으로 형변환한 코드이다. 1int a = (int)1.0; 참조형데이터 종류 : 자동 형변환, 명시적 형변환. 조건 : 상속관계일때 성립.아래 예시를 보자.슈퍼클래스인 Parent와 서브클래스 Child가 있다.서브클래스 Child의 데이터양은 슈퍼클래스인 Parent보다 항상 많다.서브클래스가 슈퍼클래스를 포함하기때문이다. 기본적으로 같은 타입을 한 배열에 넣을 수 있다. 12345Person[] p = {new Person, new Person};SpiderMan[] sp = {new SpiderMan, new SpiderMan};AquaMan[] aq = {new AquaMan, new AquaMan}; 하지만 spiderMan과 AquaMan은 person에 포함된다고 볼 수 있다. 타입이 다른 참조형데이터를 하나의 배열에 넣을 순 없을까?할 수 있다!다형성을 적용하여 형변환을 하면 된다.상속관계인 경우에만 타입이 다른 참조형데이터를 하나의 배열에 묶을 수 있다. 123456789101112131415//배열선언 2가지 방법 : 1번과2번은 동일한 값을 가진다//1번째방법 : 업캐스팅Person[] p = new Person[3]p[0] = new Person();p[1] = new SpiderMan();p[2] = new AquaMan();//다운캐스팅Person pp = (Person) p[0];SpiderMan sp = (SpiderMan) p[1];AquaMan ap = (AquaMan) p[2];//2번째방법 : 업캐스팅 형변환Person[] p = {new Person. new SpiderMan, new AquaMan} 3-2. instanceof 연산자슈퍼타입을 언제나 형변환 연산자를 통해 서브타입으로 변경할 수는 없다.먼저 메모리에 있는 객체가 형변환을 위한 충분조건을 갖추고 있는지 확인해봐야한다.이때 사용할 수 있는 연산자가 instansof이다. 실제 메모리에 있는 특정 클래스 타입인지를 boolean타입으로 리턴한다.따라서 결과가 true일때 형변환 처리하면 된다. 1234567891011121314151617class Person {}class SpiderMan extends Person {}Person p = new Person();if( p instanceof SpiderMan) //=&gt; 변수p가 SpiderMan타입인가? 거짓if( p instanceof Person) =&gt; 참if( p instanceof Object) =&gt; 참Person p2 = new SpiderMan(); if( p2 instanceof SpiderMan) // =&gt; 변수p2가 SpiderMan타입인가? 참if( p2 instanceof Person) =&gt; 참if( p2 instanceof Object) =&gt; 참SpiderMan s = new SpiderMan();if( s instanceof SpiderMan) // =&gt; 변수s가 SpiderMan타입인가? 참if( s instanceof Person) =&gt; 참if( s instanceof Object) =&gt; 참 3-3. 참조변수의 레벨에 따른 객체멤버 연결상속을 이용하면 조상의 멤버들을 그대로 물려받으며 필요할 때 자손은 그 멤버들을 재정의할 수 있다.아래 코드를 보고 답변해보자 SubClass의 멤버변수는 몇개인가? SubClass의 메서드는 몇개인가? main메서드 실행 값은 순서대로 어떻게 될 것인가? 1234567891011121314151617181920212223242526272829303132class SuperClass{ String x = \"super\"; //멤버변수 public void method(){ System.out.println(\"super클래스메서드\"); }}class SubClass extends SuperClass{ String x =\"sub\"; //멤버변수 public void method(){ //메서드이름이 슈퍼클래스와 동일 = 메서드오버라이딩 System.out.println(\"sub클래스메서드\"); } }public class SuperSubTest { public static void main(String[] args) { SubClass sub = new SubClass(); //객체생성 System.out.println(sub.x); sub.method(); SuperClass super1 = sub; //업캐스팅 System.out.println(super1.x); super1.method(); }}//출력값subsub클래스메서드supersub클래스메서드 SubClass의 멤버변수는 2개 SubClass의 메서드는 오버라이딩되었기때문에 메서드는 1개다. 애노테이션(Annotation)이 있으면 구분이 쉬우니 꼭 적자. =&gt; 애노테이션위치는 subClass의 멤버변수와 메서드 사이에 위치! 다이나믹바인딩때문에 super클래스의 메서드가 아니라 sub클래스의 메서드이다. 그래서 sub에서 재정의된 메서드가 실행된다. 3-4. 공변 리턴 타입원래 메서드 오버라이딩시 서브메서드의 리턴 타입은 슈퍼클래스의 리턴 타입과 같아야 한다.하지만 공변 리턴타입는 슈퍼클래스의 리턴 타입을 서브 클래스 범위 안에서 다양하게 사용할 수 있다.리턴타입이 변화되기때문에 오버라이딩 규칙에 위배되지만 JDK 1.5버전부터는 예외로 허용하고있다. 주의점 : 상속관계상의 서브클래스에서만 가능. 장점 : 형변환의 번거로움을 많이 줄일 수 있다. 참고링크 : Covariant return types","link":"/2020/07/08/200708javai/"},{"title":"[ITWILL : JSP]JDBC활용 - 회원목록출력하는데 관리자는 빼고 출력하기, 자바 에러 두종류","text":"ITWILL학원 : 22강 JSP기초 BY 정규태강사JDBC JDBC활용 - import쓰는 이유, form페이지로 받은 데이터를 DB에 insert하는 방법 JDBC활용 - JAVA에서 DB 정보 지우기 2가지방법 JDBC활용 - DB에서 고객정보를 불러와서 HTML테이블에 담기 JDBC활용 - TIMESTAMP주의점, JDBC에서 데이터처리 JDBC활용 - 회원정보수정페이지만들기 JDBC활용 - 회원목록출력하는데 관리자는 빼고 출력하기, 자바 에러 두종류 1. 회원목록출력하는데 관리자는 빼고 출력하기이는 두가지 방법이 있다. DB에서 전체 데이터를 불러오고 출력만 관리자빼고하기 DB에서부터 관리자빼고 가져온 뒤 출력하기 어느 방법이 더 좋을까?2번째 방법!WHY?DB에서 데이터를 많이 가져올수록 시간이 오래 걸리므로 2번이 서비스측면에서 효율적이다. 1-1. DB에서 전체 데이터를 불러오고 출력만 관리자빼고하기조건문으로 한줄이면 끝난다! if(rs.getString(&quot;id&quot;).equals(&quot;admin&quot;)) continue; 짜잔! 1234567891011121314151617181920212223242526272829303132333435363738//4. sql구문 &amp; pstmtString sql = \"select * from itwill_member\";PreparedStatement pstmt = con.prepareStatement(sql);ResultSet rs = pstmt.executeQuery();//5. 실행 -&gt;rs저장 -&gt;데이터처리//가져온 최원 정보 모두를 테이블을 사용해서 출력//관리자는 목록에서 빼기%&gt;&lt;table border=\"1\"&gt; &lt;tr&gt; &lt;td&gt;아이디&lt;/td&gt; &lt;td&gt;비밀번호&lt;/td&gt; &lt;td&gt;이름&lt;/td&gt; &lt;td&gt;나이&lt;/td&gt; &lt;td&gt;성별&lt;/td&gt; &lt;td&gt;이메일&lt;/td&gt; &lt;td&gt;가입일시&lt;/td&gt; &lt;/tr&gt; &lt;% while(rs.next()){ if(rs.getString(\"id\").equals(\"admin\")) continue; %&gt; &lt;tr&gt; &lt;td&gt;&lt;%=rs.getString(\"id\") %&gt;&lt;/td&gt; &lt;td&gt;&lt;%=rs.getString(\"pw\") %&gt;&lt;/td&gt; &lt;td&gt;&lt;%=rs.getString(\"name\") %&gt;&lt;/td&gt; &lt;td&gt;&lt;%=rs.getInt(\"age\") %&gt;&lt;/td&gt; &lt;td&gt;&lt;%=rs.getString(\"gender\") %&gt;&lt;/td&gt; &lt;td&gt;&lt;%=rs.getString(\"email\") %&gt;&lt;/td&gt; &lt;td&gt;&lt;%=rs.getString(\"reg_date\") %&gt;&lt;/td&gt; &lt;/tr&gt; &lt;% }%&gt;&lt;/table&gt; 1-2. DB에서부터 관리자빼고 가져온 뒤 출력하기위의 코드에서 if구문을 없애고 sql구문만 변경해주면 된다. 1String sql = \"select * from itwill_member where id not in('admin')\"; 2. 자바 에러 두종류(JAVA ERROR) 컴파일에러 = Error 예외발생 = Exception","link":"/2020/07/08/200708jspi/"},{"title":"[ITWILL : JAVA]클래스 : 패키지, 임포트, 접근제어자, 데이터 은닉과 보호, 싱글턴디자인패턴","text":"ITWILL학원 : 16강 JAVA BY 윤미영강사1. toString()Object는 최상위객체이다.이 객체의 메서드중의 하나는 toString()이다.따라서 모든 클래스에서 toString()을 사용할 수 있다. retrun : 객체생성했을때 메모리에 올라가진 주소값을 유니크한 표현방식인 해쉬코드로 리턴. 하지만 리턴값이 객체의 특성을 충분히 반영하지는 못한다.따라서 그대로 사용하는 개발자는 아무도 없고 메서드오버라이딩을 해서 원하는 리턴값으로 변화시킨다.리턴값을 변화시킬때 이클립스에서 개발자가 보기편하게 포맷팅해서 제공하는 단축키가 있다. alt + shift + s 후에 Generate toString()을 클릭해서 ok누르면 리턴값 보기편하게 자동생성됨. toString은 하나하나 직접 타이핑하기 보단 자동 단축키로 만들어서 쓰는 거임. 참고링크 : java 도큐먼트 2. 패키지작성한 많은 클래스를 체계적으로 관리해야한다.이때 자바는 디렉토리(폴더)대신 패키지라는 것을 사용한다. 패키지 : 클래스를 모아 놓은 것 폴더 : 데이터를 모아 놓은 것 2-1. 패키지 작성규칙패키지명작성시 회사의 도메인주소를 거꾸로 작성 후 뒤에 점(.)을 찍고 회사에서 진행중인 프로젝트명을 이어서 작성한다. 맨 처음에는 회사 등소속늘 나타내고 주로 도메인을 사용하며 거꾸로 사용. 그 다음은 그 소속에서 벌어지고 있는 프로젝트 이름을 작성. 왜 도메인 주소를 쓸까?도메인은 중복이 없는 고유한 값이다.만약 세계 여러사람들과 겹치는 class 이름을 쓰더라도 패키지가 다르면 아예 구분이 되기때문에 패키지명은 꼭 고유한 값인 도메인주소를 사용한다. 1234//회사도메인주소거꾸로.프로젝트명.용도 순으로 작성한다.package com.itwillbs.test;package kr.co.itwillbs.test; 2-2. 임포트 (Import)다른 패키지에 선언된 클래스를 사용하기 위해 필요한 키워드이다. import 선언위치 : package선언과 class선언 사이에 위치. import 선언방법 import 키워드 뒤에 package명을 포함한 클래스명까지 모두 입력. * 를 사용하면 해당 package의 모든 클래스를 포함. but 하위패키지에 있는 클래스 import하진않는다 12import package_name.[package_name]class_name;import package_name.[package_name]*; 3. 제어자(Modifier)제어자란 클래스, 변수, 메서드의 작성 시 함께 사용하여 부가적인 의미를 주는 키워드이다.제어자의 종류는 크게 두종류이다. 접근제어자 : 총 4가지 public, protected, default, private암기필수, 멤버변수등을 사용할 수 있는 범위를 지정하는 키워드. 동시에 한개만 쓸수있다 그 외의 제어자 : final, static, abstract, synchronized등으로 접근지정자와 달리 public static final 처럼 여러개가 동시에 올 수도 있으며, 변수나 함수 등을 특별한 형태로 동작시키기 위한 용도로 쓰입니다. 3-1. 접근제어자(Access Modifier)자바에서는 접근지정자 = 접근제어자로 생각하면된다사실 두 단어의 차이점이 존재하는데 자바에서는 크게 중요하지않다. 참고링크 : C++상속의 접근제한자 멤버등에 사용되며 해당 요소를 외부에서 사용할 수 있게 할 것인지를 제어한다. public : 누구나 접근 가능하다 하나의 파일에 하나의 public클래스만 있어야한다. public클래스는 main메서드를 포함하고 있는 클래스이다. protected : 같은 패키지 내에 있거나 상속받은 자손클래스에서만 졉근가능 default(package-private) : 아무런 접근 제어자를 적어주지 않을 때이며, package-private라고도 불린다. 같은 패키지 내에 있을 때만 접근 가능하다. private : 해당 클래스 내에서만 접근 가능하다. 접근제어자 해당클래스안에서 같은패키지에서 상속받은클래스에서 import한 클래스에서 public O O O O protected O O O X default O O X X private O X X X 접근지정자 범위 public &gt; protected &gt; 기본접근지정자(디폴트) &gt; private public이 가장 넓은 범위이다. 매서드오버라이딩시 접근지정자는 슈퍼클래스의 메서드보다 범위가 줄어들어서는 안된다. 커지는 건 가능. 3-2. 그외의 제어자 : final 제어자더는 바꿀 수 없음을 의미한다 final사용위치 클래스 왼쪽 : 더 확장이 불가하므로 상속받을 수 없는 클래스다. 슈퍼클래스가 될 수 없다. 메서드 왼쪽 : 재정의 할 수 없다 = 오버라이딩할 수 없다. 변수 오른쪽 : 상수, 상속이 불가한 클래스 4. 데이터 은닉과 보호(Encapsulation)객체지향의 4대 특징(OOP Is A P.I.E)에서 E에 해당하는 특성이다.개인정보의 경우 외부에서 변수에 직접 접근가능해서는 안된다. 따라서 정보에 대한 직접 접근을 막아야한다.따라서 소중한 멤버번수들은 모두 private접근 제어자를 가진다. 그럼 외부에서 private 변수를 사용할 수 없을까?직접적으로 접근할 수 없고, getter, setter메서드를 통해서 접근할 수 있다. 캡슐화 = getter와 setter내에는 정보 보호를 위한 필요한 로직을 넣어서 부적절한 값의 설정을 방지할 수 있다. 5. Singleton 디자인패턴객체가 여러 개 필요한 경우는 객체마다 가지는 멤버 변수의 값이 다를 경우이다.만약 멤버변수가 없거나 같은 값만 사용되는 경우에는 굳이 여러 객체를 만들어 사용할 필요가 없다. 필요성 계속 연결과 반환을 반복하는 것보다 하나 또는 몇 개를 미리 만들어놓고 재사용하는 것이 리소스사용에 유리 특징 private 접근 제어자 : 싱글턴 디자인 패턴의 출발점은 대상 객체를 외부에서 직접 생성할 수 없어야 하니까. 따라서 이 생성자에 접근할 수 있는 것은 이 클래스 내부만 가능.1private SingletonClass() {} getter 메서드 : private 멤버변수에 접근할 수 있는 setter와 getter가 필요한데 외부에서는 어차피 객체를 만들 수 없기때문에 setter는 필요 없고 getter만으로 충분하다. static : 막상 getter를 쓰려고 보니 메서드에 접근할 수 있는 객체가 없다. 객체 없는 메서드를 사용하기 위해 메서드와 멤버변수에 static 선언이 필요해진다. 사용법 객체가 필요할 때 객체를 생성하는 것이 아니라 메서드를 호출하면 되고 이 메서드의 리턴은 언제나 하나의 객체일 것이다. 1234private static SingletonClass instance = new SingletonClass();public static SingletonClass getInstance(){ return instance;} 참고링크 : 싱글톤 패턴(Singleton pattern)을 쓰는 이유와 문제점","link":"/2020/07/09/200709javai/"},{"title":"[ITWILL : JSP]Javabean : 기초","text":"ITWILL학원 : 23강 JSP기초 BY 정규태강사1. 자바빈(JavaBean) (p245~) 디자인부분과 비즈니스로직부분을 분리하기 위해서 자바빈을 사용한다. DTO(Data Transfer Object)로 불리기도 함 2. 자바빈 설계규약 정리하자면 클래스는 public 멤버변수는 private 멤버변수마다 별도의 get/set메소드가 존재해야한다 기본생성자 있어야함 (public) 1234567891011121314151617//1번규칙만족 : 클래스는 publicpublic class Javabean1 { //2번규칙만족 : 멤버변수선언 private private String id; //4번규칙만족 : 기본생성자존재하지만 생략됨 //public Javabean1(){} //3번규칙만족 : 멤버변수마다 별도의 get/set메소드가 존재해야한다. public String getId() { return id; } public void setId(String id) { this.id = id; } } 3. 자바빈사용방법 자바빈 객체를 사용하는 방법 자바빈 액션태그를 사용하는 방법 예시파라미터값으로 가져오는 방법과 위의 자바빈사용방법 두가지 총 3가지를 비교해보자.공통적으로 사용할 페이지는 form.jsp페이지이다 먼저 form페이지이다.사용자가 id와 pw, 좋아하는 숫자를 입력할 수 있는 페이지 코드이다. 123456789&lt;fieldset&gt;&lt;legend&gt;사용자 정보입력&lt;/legend&gt; &lt;form action=\"beanPro2.jsp\" method=\"post\"&gt; 아이디 : &lt;input type=\"text\" name=\"id\"&gt;&lt;br&gt; 비밀번호 : &lt;input type=\"password\" name=\"pw\"&gt;&lt;br&gt; 좋아하는 숫자 : &lt;input type=\"text\" name=\"num\"&gt;&lt;br&gt; &lt;input type=\"submit\" value=\"확인\"&gt; &lt;/form&gt; &lt;/fieldset&gt; 3-1. 자바빈이 아닌 파라미터값을 가져와서 사용하는 방법123456789101112131415161718192021&lt;%request.setCharacterEncoding(\"UTF-8\");String id = request.getParameter(\"id\");String pw = request.getParameter(\"pw\");int num = Integer.parseInt(request.getParameter(\"num\"));%&gt;&lt;%-- 파라미터값으로 출력 =&gt; 아이디 : &lt;%=id %&gt;, 비밀번호 : &lt;%=pw %&gt; 좋아하는 숫자 : &lt;%=num %&gt; --%&gt;&lt;table border=\"1\" style=\"text-align: center\"&gt; &lt;tr&gt; &lt;td&gt;출력방식 &lt;/td&gt; &lt;td&gt;아이디&lt;/td&gt; &lt;td&gt;비밀번호&lt;/td&gt; &lt;td&gt;좋아하는 숫자&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td&gt;파라미터 이용&lt;/td&gt; &lt;td&gt;&lt;%=id %&gt;&lt;/td&gt; &lt;td&gt;&lt;%=pw %&gt;&lt;/td&gt; &lt;td&gt;&lt;%=num %&gt;&lt;/td&gt; &lt;/tr&gt;&lt;table&gt; 3-2. 자바빈 클래스 생성데이터를 한번에 들고 다니기 위해 Javabean.java 객체를 만들어야 자바빈 객체와 자바빈 액션태그를 사용할 수 있다.자바페이지는 자바빈설계규약에 맞게 작성해야한다. 12345678910111213141516171819202122232425262728293031323334353637//1번규칙만족 : 클래스는 publicpublic class Javabean2 { //2번규칙만족 : 멤버변수선언 private private String id; private String pw; int num; //4번규칙만족 : 기본생성자존재하지만 생략됨 //public Javabean2(){} //3번규칙만족 : 멤버변수마다 별도의 get/set메소드가 존재해야한다. public String getId() { return id; } public void setId(String id) { this.id = id; } public String getPw() { return pw; } public void setPw(String pw) { this.pw = pw; } public int getNum() { return num; } public void setNum(int num) { this.num = num; }//전체데이터를 효율적으로 한번에 표시하기위해 toString은 필수다//toString은 자동 단축키로 만들어서 쓰는 거임 : alt+shift+s에서 `Generate toString()`클릭 @Override public String toString() { return \"Javabean2 [id=\" + id + \", pw=\" + pw + \", num=\" + num + \"]\"; }} 3-3. 자바빈 객체 사용자바빈 객체를 사용하여 Form페이지에서 입력받은 값을 화면에 출력하는 코드이다. javabean타입의 객체생성 -&gt; import생성 변수 Jb는 private이므로 get메서드와 set메서드로 접근해야함 1234567891011121314151617//1. javabean타입의 객체생성 -&gt; import생성Javabean2 jb = new Javabean2(); //2. 값 가져오기 : private이므로 get/set메서드로 접근.jb.setId(request.getParameter(\"id\"));jb.setPw(request.getParameter(\"pw\"));jb.setNum(Integer.parseInt(request.getParameter(\"num\")));//3. 값 출력&lt;table border=\"1\" style=\"text-align: center\"&gt; &lt;tr&gt; &lt;td&gt;자바빈 객체 이용&lt;/td&gt; &lt;td&gt;&lt;%=jb.getId() %&gt;&lt;/td&gt; &lt;td&gt;&lt;%=jb.getPw() %&gt;&lt;/td&gt; &lt;td&gt;&lt;%=jb.getNum() %&gt;&lt;/td&gt; &lt;/tr&gt;&lt;/table&gt; 3-4. 자바빈 액션태그 사용 액션태그방식은 html문법이며 공통으로 사용되는 메뉴들을(주로 페이지) 특정 공간에 추가한다. 해당 페이지가 java파일(서블릿)으로 컴파일 된 후에 include한다. 따라서 컴파일을 두번하게된다. 액션태그방식은 jsp가 java파일이 되고 거기에 include를 하고 class파일이 된다. jsp:useBean태그의 속성중 하나인 scope를 이용하면 더욱 효과적이다. scope 속성에 page, request, session, application값을 설정하면 해당 영역에 지정해서 저장가능하다. scope 속성의 설정값이 없으면 기본 page에 저장된다. 3-4-1. jsp:useBean 태그id =객체참조변수 class=사용할 클래스파일 경로(객체의 경로) 12&lt;jsp:useBean id=객체참조변수 class=사용할 클래스파일 경로(객체의 경로) /&gt;// 객체아래 코드는 Javabean1 jb = new Javabean1(); 3-4-2. jsp:setProperty 태그3가지 속성이 있다. property속성 : 자바빈 객체의 멤버변수(저장공간) name속성 : 자바빈 객체의 레퍼런스( = jsp:useBean의 id값) param속성 : 전달되는 파라미터값 123jsp:setProperty property=변수명 name=객체생성 id와 동일한 값 param=파라미터값//예시&lt;jsp:setProperty property=\"id\" name=\"bean\" param=\"id\"/&gt; 만약 setProperty에서 파라미터 가져올때 파라미터가 2개 이상인 경우는?property값과 param값이 동일하면 param값 생략가능하다. 123456&lt;jsp:useBean id=\"bean\" class=\"com.itwillbs.bean.Javabean1\"/&gt;&lt;jsp:setProperty property=\"*\" name=\"bean\" param=\"*\"/&gt;&lt;! -- 여기서 property값과 param값이 동일하면 아래처럼 param값 생략가능 --&gt;&lt;jsp:setProperty property=\"*\" name=\"bean\"/&gt; 3-4-3. jsp:getProperty 태그123456789&lt;jsp:getProperty property=\"set했던변수와 동일한 변수명\" name=\"객체생성 id와 동일한 값\"/&gt;&lt;br&gt;//예시&lt;jsp:getProperty property=\"id\" name=\"bean\"/&gt;&lt;br&gt;&lt;!-- 스크립틀릿을 통한 출력 --&gt;&lt;%out.println(\"자바빈 액션태그객체를 자바코드로 출력 : \" + bean.getId());%&gt; 3-4-4. 액션태그 전체 예시123456789101112131415161718192021//1. 액션태그만드는 객체&lt;jsp:useBean id=\"bean\" class=\"com.itwillbs.bean.Javabean2\"/&gt;//2. 파라미터값 저장(파라미터 모든 값을 저장하려면 * 아니면 각각 입력)&lt;jsp:setProperty property=\"*\" name=\"bean\"/&gt;//3. 파라미터값 출력 &lt;jsp:getProperty property=\"id\" name=\"bean\"/&gt;&lt;jsp:getProperty property=\"pw\" name=\"bean\"/&gt;&lt;jsp:getProperty property=\"num\" name=\"bean\"/&gt;//4. 데이터 처리 : 테이블사용&lt;table border=\"1\" style=\"text-align: center\"&gt; &lt;tr&gt; &lt;td&gt;자바빈 액션태그 이용&lt;/td&gt; &lt;td&gt;&lt;%=bean.getId() %&gt;&lt;/td&gt; &lt;td&gt;&lt;%=bean.getPw() %&gt;&lt;/td&gt; &lt;td&gt;&lt;%=bean.getNum() %&gt;&lt;/td&gt; &lt;td&gt;&lt;%=bean.toString() %&gt;&lt;/td&gt; &lt;/tr&gt;&lt;/table&gt;","link":"/2020/07/09/200709jspi/"},{"title":"[ITWILL : JSP]Javabean 1 : 회원가입페이지만들기","text":"ITWILL학원 : 23강 JSP기초 BY 정규태강사자바빈 프로젝트 1 : 회원가입페이지만들기자바빈 프로젝트 2 : 로그인 및 로그아웃페이지만들기자바빈 프로젝트 3 : 회원정보조회 및 수정페이지만들기 자바빈(JavaBean)을 이용한 회원가입 폼 작성(p261~)1. 자바빈 클래스 생성 : MemberBean.java 클래스 생성 자바빈클래스를 만들때는 자바빈설계규약을 꼭 지켜야한다 toString()을 하는 이유는 MemberBean클래스의 데이터 전체를 가져다 쓰고 싶기 때문이다. 123456789101112131415161718192021222324252627282930313233343536//자바빈 -&gt; 회원정보를 저장해서 이동시키기 위한 객체//DTO(데이터 전송 객체)로도 불린다.//1. 클래스는 publicpublic class MemberBean {//2. DB의 테이블의 컬럼을 자바빈의 private 멤버 변수로 생성private String id;private String pw;private String name;private int age;private String gender;private String email;private Timestamp reg_date; //import필수//4. 디폴트생성자 public MemberBean(){} 생략//3. getter 와 setter생성 : alt+shift+s에서 getter and setter 클릭 -&gt; 자동생성public String getId() { return id;}public void setId(String id) { this.id = id;}(이하 생략)//5. toString생성 : alt+shift+s에서 toString클릭 -&gt; 자동생성@Overridepublic String toString() { return \"멤버 [id=\" + id + \", pw=\" + pw + \", name=\" + name + \", age=\" + age + \", gender=\" + gender + \", email=\" + email + \", reg_date=\" + reg_date + \"]\";}} 2. insertForm.jsp만들기1234567891011121314&lt;fieldset&gt;&lt;legend&gt;회원가입&lt;/legend&gt; &lt;form action=\"insertProM.jsp\" method=\"post\" name=\"fr\"&gt; 아이디 &lt;input type=\"text\" name=\"id\" required&gt;&lt;br&gt; 비밀번호 &lt;input type=\"password\" name=\"pw\"&gt;&lt;br&gt; 이름 &lt;input type=\"text\" name=\"name\"&gt;&lt;br&gt; 나이 &lt;input type=\"text\" name=\"age\"&gt;&lt;br&gt; 성별 &lt;input type=\"radio\" name=\"gender\" value=\"여\"&gt; 여성 &lt;input type=\"radio\" name=\"gender\" value=\"남\"&gt; 남성&lt;br&gt; 이메일 &lt;input type=\"text\" name=\"email\"&gt;&lt;br&gt; &lt;input type=\"submit\" value=\"회원가입하기\"&gt; &lt;/form&gt;&lt;/fieldset&gt; 3. insertProM.jsp 페이지 만들기 파라미터값을 저장할때 가입일자의 경우 사용자의 입력값을 받아오지 않고 시스템의 시간을 넣는다. 따라서 별도로 파라미터값을 설정해줘야한다. 123456789101112131415161718192021222324252627282930&lt;%//1. 한글처리request.setCharacterEncoding(\"UTF-8\");%&gt;&lt;!-- 2. 액션태그 이용 : 전달되는 파라미터 정보저장2-1. 자바빈 객체 생성 --&gt;&lt;jsp:useBean id=\"mb\" class=\"com.itwillbs.member.MemberBean\" /&gt;&lt;!-- 2-2. 파라미터 값 저장 , 가입일자는 별도로 직접 저장--&gt;&lt;jsp:setProperty property=\"*\" name=\"mb\"/&gt;&lt;%System.out.println(mb); mb.setReg_date(new Timestamp(System.currentTimeMillis()));System.out.println(mb);//3. DB로 값 전달해서 회원가입 처리//3-1. MeberDAO객체 생성MemberDAO mdao = new MemberDAO();//3-2. 회원가입메서드호출mdao.insertMember(mb);//4. 성공시 -&gt; login페이지로 이동%&gt;&lt;script type=\"text/javascript\"&gt; alert(\"회원가입성공!\") location.href=\"loginForm.jsp\"&lt;/script&gt; 4. MemberDAO.java 페이지 만들기 DAO (데이터 처리 객체) -&gt; DB처리 모든 것은 이 페이지에서 한다 DB 데이터 생성, 조회, 수정은 여기서 진행 / 다른페이지는 출력만 함 123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172public class MemberDAO { //1. DB변수 생성 : 일부러 멤버변수로 선언함. 메서드에서 멤버변수 호출해서 사용할 예정 Connection con = null; String sql = \"\"; PreparedStatement pstmt = null; ResultSet rs = null; //2. DB연결 메서드 생성: 리턴해도되고 안해도 됨 private Connection getCon(){ //2-1. 드라이브로드 &amp; DB연결 final String DRIVER = \"com.mysql.jdbc.Driver\"; final String DBURL = \"jdbc:mysql://localhost:3306/jspdb\"; final String DBID = \"root\"; final String DBPW = \"1234\"; //2-2. Class.forName(DRIVER);면 에러메세지가 뜨는데 거기서 try catch구문의 해결방법을 누른다 try { Class.forName(DRIVER); System.out.println(\"드라이버 로드 성공!\"); con = DriverManager.getConnection(DBURL, DBID, DBPW); //getConnection() 에러메세지가 뜨는데 거기서 try catch구문의 해결방법을 누른다 System.out.println(\"DB 연결 성공!\" + con); } catch (ClassNotFoundException e) { System.out.println(\"드라이버 로드 실패!\"); e.printStackTrace(); } catch (SQLException e) { System.out.println(\"DB 연결 실패!\"); e.printStackTrace(); } return con; } //4. 자원해제 메서드 구현 public void closeDB(){ try{ if(rs != null) rs.close(); if(pstmt != null) pstmt.close(); if(con != null) con.close(); } catch (SQLException e) { e.printStackTrace(); } } //3. 회원가입처리 (외부에서 접근가능해야하니까 public) public void insertMember(MemberBean mb){ //파라미터로 정보를 받아서 DB에 저장 try { //3-1. DB연결메서드 불러오기 con = getCon(); //3-2. SQL &amp; pstmt 생성 &amp; 실행 sql = \"insert into itwill_member value(?,?,?,?,?,?,?)\"; pstmt = con.prepareStatement(sql); pstmt.setString(1, mb.getId()); pstmt.setString(2, mb.getPw()); pstmt.setString(3, mb.getName()); pstmt.setInt(4, mb.getAge()); pstmt.setString(5, mb.getGender()); pstmt.setString(6, mb.getEmail()); pstmt.setTimestamp(7, mb.getReg_date()); //insertForm에는 reg_date를 입력하는 란이 없기에 mb에 따로 넣어줘야한다. //즉, 파라미터로 전달되지 않는 정보는 insertForm에서 직접생성 pstmt.executeUpdate(); System.out.println(\"회원가입성공\"); } catch (SQLException e) { // TODO Auto-generated catch block System.out.println(\"회원가입실패\"); e.printStackTrace(); } finally { //자원해제로 DB 효율성을 높일수있다. closeDB(); } }}","link":"/2020/07/09/200709jspi2/"},{"title":"[ITWILL : JSP] try catch구문","text":"ITWILL학원 : 23강 JSP기초 BY 정규태강사try catch구문 예외처리라고도 부른다. 개발자가 예측하기 어려운 에러들을 예외라고 한다. 이러한 예외를 java 컴파일러가 객체로 만들어서 처리해준다. 우리는 try catch를 만들기만 하면 컴파일러가 알아서 한다. 실무에서 가장 많이 사용하는 방식은 아래 방식이다ClassNotFoundException과 SQLException은 여러 Exception종류 중에 임의로 작성한 것이고 제외한 나머지 코드들은 통으로 함께 쓰이는 코드이다.생각할 수 있는 구체적인 Exception을 찾아서 작성한 뒤 그 외에 발생할 수있는 예외를 대비해 catch(Exception e)로 추가 예외처리를 해준다. catch(Exception e)로 한번에 다 예외처리가 가능한데 왜 따로따로(ClassNotFoundException와 SQLException등등) 먼저 예외처리를 할까?예외마다 처리방법이 각기 다르다.따라서 각각 예외처리를 해주고 혹시 모를 또다른 예외를 위해 catch(Exception e)구문으로 예외처리를 해주는 것이다. 1234567891011121314151617181920212223try{ 예외가 발생할 수도 있는 코드를 작성 } catch(ClassNotFoundException e){ //class예외만 처리 예외정보를 출력 예외처리}catch(SQLException e) { //SQL예외만처리 예외정보를 출력 예외처리}catch(Exception e) { //모든 예외를 처리할 수 있음. 예외정보를 출력 예외처리}finally{ 예외 발생 유무와 상관없이 반드시 실행되는 코드 //ex)보통 자원해제로 메모리효율성을 높인다. //ex) if(pstmt != null) pstmt.close(); if(con != null) con.close();}","link":"/2020/07/09/200709jspi3/"},{"title":"[ITWILL : DB]SQL DEVELOPER사용방법","text":"ITWILL학원 : 12강 Database BY 정지윤강사1. SQL디벨로퍼(SQL Developer) 접속방법DB를 켜고 끄는 중대한 DB관리작업은 SQL Developer에서 할 수 없다. 터미널 lsnrctl start : 리스너를 작동시키는 명령어 sqlplus /nolog : sql+실행시키는 명령어 connect sys/oracle as sysdba : DB에 sys로 접속하는 명령어 startup : DB에 sys로 로그인한 후 DB실행하는 명령어 conn hr/hr : 유저 hr로 로그인 접속탭에서 초록색 + 클릭 아래 부분 중점으로 작성 후 접속 클릭 접속이름 : 원하는 이름 입력 사용자 이름 : 만들었던 유저명 입력 ex)hr 비밀번호 : 만들었던 유저 비번 입력 ex)hr SID : 사용하고 있는 DB명 입력 ex)orcl","link":"/2020/07/10/200710dbi/"},{"title":"[ITWILL : WEB] meta태그, 내부링크, id와 name속성의 차이","text":"ITWILL학원 : 7강 WEB(HTML, CSS) BY 김영희1. meta 태그 (메타태그) meta태그는 웹사이트의 안내자이다.대부분의 포털사이트는 웹 사이트의 제목, 태그의 내용, 본문의 첫 100여 단어등을 검색한 후 사용자의 검색어와 비교해서 검색 결과를 나열해준다. 위치 : head태그 사이에 입력한다. 구글에서 인식하는 메타태그들 네이버에서 인식하는 메타태그들 자주 사용하는 메타태그들 속성 값 설명 name application-name 웹어플리케이션의 이름을 표시 name author 문서의 저자 표시 name description 문서의 설명 표시 name generator 저작 툴을 표시 name keywords 문서의 키워드 표시 http-equiv content-type 문서의 인코딩 선언 http-equiv default-style 대체 스타일시트를 선언 http-equiv refresh 문서의 새로고침 주기 및 이동선언 content 텍스트 http-equiv나 name속성의 값 표시 charset 문자셋 문서의 문자 셋을 선언 예제아래 예시는 메타태그 refresh를 이용하여 5초뒤에 다른 페이지(test06.html)로 이동하는 태그이다 content = “숫자(단위는 초); url=”이동할페이지주소” 123456789&lt;head&gt; &lt;meta charset=&quot;UTF-8&quot;&gt; &lt;meta name=&quot;viewport&quot; content=&quot;width=device-width, initial-scale=1.0&quot;&gt; &lt;meta http-equiv=&quot;refresh&quot; content=&quot;5; url=test06.html&quot;&gt; &lt;title&gt;메타태그이용 5초뒤 페이지변화&lt;/title&gt;&lt;/head&gt;&lt;body&gt;메타태그 refresh예시&lt;/body&gt; 2. 페이지 최상단으로 옮기는 링크 싱글 페이지에서 이동하는 것을 내부링크라고 칭한다. id속성값을 활용하여 내부링크이동가능 123&lt;a href=\"#\"&gt; //=&gt; 페이지 최상단으로 이동&lt;a href=\"#top\"&gt; //=&gt;id값이 top인 곳으로 이동&lt;a href=\"#id명\"&gt; //=&gt;id값이 id명인 곳으로 이동 nav태그는 메뉴바를 칭함 css와 함께 작업할때는 nav태그 안에는 ul태그와 li태그로 데이터처리 지금은 html만했기때문에 a태그로만 진행 1234567891011121314151617181920212223242526272829303132333435363738394041424344&lt;h1 id=\"top\"&gt;사진 라이브러리&lt;/h1&gt;&lt;!-- 메뉴바는 nav태그, 지금은 a태그로 처리하지만 만약 css와 함께하면 ul과 li태그로 처리함--&gt;&lt;nav&gt; &lt;a href=\"#dog\"&gt;&lt;img src=\"img/1.jpg\" alt=\"dog\" width=\"50px\" height=\"50px\"&gt;&lt;/a&gt; &lt;a href=\"#cat\"&gt;&lt;img src=\"img/3.jpg\" alt=\"cat\" width=\"50px\" height=\"50px\"&gt;&lt;/a&gt; &lt;a href=\"#otter\"&gt;&lt;img src=\"img/4.jpg\" alt=\"otter\" width=\"50px\" height=\"50px\"&gt;&lt;/a&gt; &lt;a href=\"#babydog\"&gt;&lt;img src=\"https://lh3.googleusercontent.com/proxy/4JnvdaxyuL_oqz_o9-ZCMRbKRmo8JwcfvFbl0xWgoTM-yq2MaRCXsrB8rrgwZJP9rUiYD9Vi4w6QgXDo5kg-cTte510-1eB5V-4iLJcHcaVR4s6ZgIDS-zSBKJ5KXH9dkgc-DaynHLLe1r0utiGlztAVeYibEUIc4YsuYZ0n9yHBMUZTI6V6d3h0qJ9VDWZkD8r54Bs_Xu43yMneNzweq4sxA2AB5UZn1EGaerh_PrtO4I-mwB3Wh7_KRiZnOGIKbnCp5MbnQyOmO4dsdAl-ovNb4LG393U4ijVCEktc687awdhNqsmJBTFVKvC3_ak4PX84-2ZFbIQybWFuEoi7\" alt=\"babydog\" width=\"50px\" height=\"50px\"&gt;&lt;/a&gt; &lt;/nav&gt;클릭하면 사진으로 이동합니다&lt;button type=\"button\"&gt;&lt;a href=\"#down\"&gt;DOWN&lt;/a&gt;&lt;/button&gt; &lt;main&gt; &lt;div&gt; &lt;hr&gt; &lt;h2 id=\"dog\" id=\"top\"&gt;강아지&lt;/h2&gt; &lt;a href=\"#top\" title=\"사진 클릭하면 최상단으로 이동\"&gt;&lt;img src=\"img/1.jpg\" alt=\"dog\" height=\"400px\"&gt;&lt;/a&gt; &lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt; &lt;/div&gt; &lt;div id=\"cat\"&gt; &lt;hr&gt; &lt;h2 &gt;고양이&lt;/h2&gt; &lt;a href=\"#top\" title=\"사진 클릭하면 최상단으로 이동\"&gt;&lt;img src=\"img/3.jpg\" alt=\"cat\" height=\"400px\"&gt;&lt;/a&gt; &lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt; &lt;/div&gt; &lt;div id=\"otter\"&gt; &lt;hr&gt; &lt;h3&gt;수달&lt;/h3&gt; &lt;a href=\"#top\" title=\"사진 클릭하면 최상단으로 이동\"&gt;&lt;img src=\"img/4.jpg\" alt=\"otter\" height=\"400px\"&gt;&lt;/a&gt; &lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt; &lt;/div&gt; &lt;div id=\"babydog\"&gt; &lt;hr&gt; &lt;h3&gt;앞발 영차&lt;/h3&gt; &lt;a href=\"#top\" title=\"사진 클릭하면 최상단으로 이동\"&gt;&lt;img src=\"https://encrypted-tbn0.gstatic.com/images?q=tbn%3AANd9GcQqnXObJInmijzH378WQEfyZiKykrJC5OytLA&amp;usqp=CAU\" height=\"400px\" onmouseover=\"this.src='https://lh3.googleusercontent.com/proxy/utTrPxQ41R1DUb4-1FKuFuY86gmdy0CJ7GMllfStudciKalXjTldOSegJoDOrzOhPpxI7N0GXxaJUGdS5_M-B-yKVJSdfSCJDR5RLPaXC9N_WxCdxtJssEiS0gWKd5u5BuUSTb6N02pXvJpmRkpIu8A0ALQrnaSKuIrlyz06baXhjtms4VnDyLnzACOncR-Aoqs5zZ-UqqZUNgk00k6rBRGO0DfgXlDdFoz1hsjPu6UPqND-jyxlw6De1_yRI-dtnqaHtXwukoLWWuDQfWcCNKZSY2Kpz9scZIUPj4rVbjI8TzodeziBsyr39EDIsRJdfmnMfkeNpVb2x8ttVQ1_'\" onmouseout=\"this.src='https://encrypted-tbn0.gstatic.com/images?q=tbn%3AANd9GcQqnXObJInmijzH378WQEfyZiKykrJC5OytLA&amp;usqp=CAU'\" &gt; &lt;/a&gt; &lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt; &lt;/div&gt;&lt;button type=\"button\" id=\"down\"&gt;&lt;a href=\"#\"&gt;TOP&lt;/a&gt;&lt;/button&gt; 2-1 nav태그 css로 고정시키기12345678910111213141516171819202122&lt;style type=\"text/css\"&gt; * { box-sizing: border-box; } body{ text-align: center; } header{ position: fixed; top: 0; left: 0; right: 0; background-color: lightcyan; height: 200px; } div{ padding-top: 195px; } a{ text-decoration: none; }&lt;/style&gt; 3. id속성과 name속성의 차이 속성 설명 주사용처 id 하나의 요소에만 적용가능.페이지에서 유일한 고유값 form태그 데이터처리할때 사용 class 여러요소에 적용가능 CSS에서 식별자로 사용 name 여러요소에 적용가능 CSS에서 식별자로 사용 name속성 FORM 태그를 사용하여 서버에 페이지에 작성된 데이터전송하고 그 서버측에서 전달받은 데이터처리한다면 NAME속성값 필수 전송된 form의 데이터처리가 필요없다면 name속성값 필요없음 CSS사용불가 중복가능 ex) radio버튼은 name이 같아야 하나의 카테고리로 묶여짐. id속성 페이지에서 딱 하나만 가질 수 있는 고유한 값. 페이지에서 유일 CSS에서 식별자로 사용","link":"/2020/07/10/200710webi/"},{"title":"[ITWILL : WEB]iframe태그","text":"ITWILL학원 : 8강 WEB(HTML, CSS) BY 김영희1. iframe태그브라우저 영역에 다른 문서를 보여주는 태그이다.화면을 독립적으로 사용하길 원할때 사용한다. 2. iframe형태 iframe영역에 보여질 내용을 src 속성으로, 크기는 width와 height 속성으로 지정하고 name 속성으로 iframe을 구별하여 링크의 target 속성값으로 활용할 수 있다. iframe 태그 사이에 위치한 글자는 iframe을 지원하지 않는 브라우저에 보여지는 문구이다. alt속성과 동일한 역할을 한다. 12345678910111. 기본형태&lt;pre&gt; &lt;iframe src=\"\" width=\"\" height=\"\" name=\"\"&gt; (iframe을 지원하지 않는 브라우저 사용자를 위한 구문) &lt;/iframe&gt;&lt;/pre&gt;2. 예시&lt;iframe&gt; 최신 브라우저를 설치해주세요.&lt;/iframe&gt; 3. iframe속성 name : 프레임의 이름을 설정. width : 프레임의 너비를 설정. height :프레임의 높이를 설정. frameborder : 0으로 설정하면 프레임의 테두리선을 보이지 않음, 1을 설정하면 프레임의 테두리선을 나타남. scrolling : 스크롤바의 표시 여부를 나타냄. (yes, no, auto) 3. 사용처 웹페이지 이미지 동영상 텍스트파일 외부사이트 주소 게시판형식 : iframe태그에 name속성의 값을 주고 링크를 걸 때 a태그에 그 값을 target의 값으로 지정하면 해당 iframe안에 링크를 열어줄 수 있다. 즉 name과 target의 이름이 동일해야한다. 게시판으로 활용을 많이 한다. 3-1. target속성 blank : 내용을 새 창에 나타냄. self : 내용을 현재 프레임 영역(포커스가 있는 프레임)에 나타냄. (기본값) parent : 내용을 부모 프레임 영역에 나타냄. top : 내용을 무조건 전체 영역에 나타냄. 프레임명 : 해당 이름을 가진 프레임 영역에 나타냄. 123456789101112131415161718192021222324252627282930&lt;h3&gt;1. 웹페이지 (.htm/.html)&lt;/h3&gt;&lt;iframe src=\"test08-1.html\" width=\"800px\" height=\"400px\"&gt;&lt;/iframe&gt;&lt;h3&gt;2. 이미지 (.jpg/.gif/.png)&lt;/h3&gt;&lt;iframe src=\"img/2.jpg\" width=\"550px\" height=\"650px\"&gt;&lt;/iframe&gt;&lt;h3&gt;3. 동영상 (.mp4/.webm/.ogg)&lt;/h3&gt;&lt;iframe src=\"night.mp4\" width=\"600px\" height=\"500px\"&gt;&lt;/iframe&gt;&lt;h3&gt;4. 텍스트파일 (.txt)&lt;/h3&gt;&lt;iframe src=\"폼테스트용텍스트.txt\"&gt;&lt;/iframe&gt;&lt;h3&gt;5. 외부사이트 주소 (URL)&lt;/h3&gt;&lt;iframe src=\"https://itwillbs.co.kr/\" width=\"1000px\" height=\"600px\"&gt;&lt;/iframe&gt;&lt;h3&gt;6. 게시판형식&lt;/h3&gt;&lt;iframe src=\"test02.htm\" width=\"1000px\" height=\"600px\" name=\"html-box\"&gt;&lt;/iframe&gt; &lt;nav&gt; &lt;a href=\"test03.htm\" target=\"html-box\"&gt;test03.htm&lt;/a&gt; &lt;a href=\"test04.htm\" target=\"html-box\"&gt;test04.htm&lt;/a&gt; &lt;a href=\"test05.html\" target=\"html-box\"&gt;test05.htm&lt;/a&gt; &lt;a href=\"test06.html\" target=\"html-box\"&gt;test06.htm&lt;/a&gt; &lt;a href=\"test07.html\" target=\"html-box\"&gt;test07.htm&lt;/a&gt; &lt;a href=\"test08.html\" target=\"html-box\"&gt;test08.htm&lt;/a&gt; &lt;a href=\"test08-1.html\" target=\"html-box\"&gt;test08-1.htm&lt;/a&gt; &lt;/nav&gt; 4. a태그와 iframe태그의 차이점 a태그 : 모든 페이지 내용이 링크로 이동된다. iframe태그 : 다른 요소들은 건들지 않고 해당 frame안에서만 링크이동할 수 있다. 5. 주의사항HTML5 이전에도 이후에도 iframe을 사용하지 않는 것을 권고한다. 반응형 웹 사이트가 대세인 오늘날의 트렌드와 상극이다. 페이지의 파편화 문제가 생긴다 : 검색 엔진 등록 시 frameset 뿐만 아니라 메뉴용 페이지, 콘텐츠용 페이지 까지 함께 크롤링 할 수 있다. 웹접근성 저해의 요인이 될 수 있음으로 남용에 주의해야한다. 프레임 구조가 가지고 있던 장점을 CSS와 jQuery로 해결 할 수 있다. 쪼랩의 저장소","link":"/2020/07/13/200713webi/"},{"title":"[ITWILL : JSP]Javabean 2 : 로그인,로그아웃페이지만들기","text":"ITWILL학원 : 24강 JSP기초 BY 정규태강사자바빈 프로젝트 1 : 회원가입페이지만들기자바빈 프로젝트 2 : 로그인 및 로그아웃페이지만들기자바빈 프로젝트 3 : 회원정보조회 및 수정페이지만들기 1. 로그인폼페이지 작성123456789&lt;fieldset&gt;&lt;legend&gt;로그인&lt;/legend&gt; &lt;form action=\"loginPro.jsp\" method=\"post\" name=\"fr\"&gt; 아이디 &lt;input type=\"text\" name=\"id\" required &gt;&lt;br&gt; 비밀번호 &lt;input type=\"password\" name=\"pw\"&gt;&lt;br&gt; &lt;input type=\"submit\" value=\"로그인하기\"&gt; &lt;input type=\"button\" value=\"회원가입하기\" onclick=\"location.href='insertForm.jsp'\"&gt; &lt;/form&gt;&lt;/fieldset&gt; 2. 로그인프로페이지 작성파라미터를 저장할 때 세가지 방법이 있다. 파라미터 사용 : getParameter() 자바빈객체사용 : Javabean jb = new Javabean(), jb.set변수() 액션태그 사용 : useBean(), setProperty() 자세히 : 자바빈기초 이 중 로그인 페이지에선 파라미터를 사용할 예정이다. 로그인페이지 작성 순서 한글처리 &amp; 파라미터저장 1-1. 파라미터저장 -&gt; 파라미터사용 1-2. 파라미터저장 -&gt; 액션태그사용 로그인처리 -&gt; DAO에서 처리 why? DB와 관련된 모든 사항은 DAO에서 처리하니까. 로그인 메서드는 DB에서 해당 값이 있는지 체크하고 결과를 리턴 리턴값은 정수형 데이터값 사용(1-로그인처리, 0-비번오류, (-1)-아이디없음) 결과(result가 -1,0,1)에 따른 페이지 이동처리 result = 1 : 아이디정보를 세션값으로 저장(키값, 저장할 데이터이름), main.jsp로 이동 result = 0 : 비번불일치 알림창, history.back() result = -1 : 없는아이디 알림창, history.back() 12345678910111213141516171819202122232425262728293031323334353637&lt;%//1. 한글처리request.setCharacterEncoding(\"UTF-8\");//1-1. 파라미터사용 : 전달된 파라미터값 저장(아이디,비번)String id = request.getParameter(\"id\");String pw = request.getParameter(\"pw\");%&gt;&lt;!--1-2.액션태그사용 : 전달된 파라미터값 저장(아이디,비번) `useBean`객체생성(id값 아무거나 작성해도 됨) -&gt; `setProperty`로 파라미터저장&lt;jsp:useBean id=\"mb\" class=\"com.itwillbs.member.MemberBean\" /&gt;&lt;jsp:setProperty property=\"*\" name=\"mb\"/&gt;--&gt;&lt;% //2. 로그인처리 -&gt; DAO에서 처리 따라서 객체만 생성MemberDAO mdao = new MemberDAO();mdao.idCheack(id, pw);//3. 결과(result가 -1,0,1)에 따른 페이지 이동처리if(result == 1){ //3-1. 아이디정보를 세션값으로 저장(키값, 저장할 데이터이름) session.setAttribute(\"id\", id); //object자리에 string을 담았기에 업캐스팅발생 response.sendRedirect(\"main.jsp\");}else if(result == 0){ %&gt; &lt;script type=\"text/javascript\"&gt; alert(\"비밀번호가 일치하지 않습니다\"); history.back(); &lt;/script&gt; &lt;%}else{ %&gt; &lt;script type=\"text/javascript\"&gt; alert(\"없는 아이디입니다\"); history.back(); &lt;/script&gt; &lt;%}%&gt; 3. DAO페이지 작성기존에 만들었던 MemberDAO를 그대로 가져온 뒤 idCheck()메서드만 생성하면 된다. 기존 MemberDAO 태그 순서 드라이브로드 디비연결 SQL &amp; pstmt 생성 실행 -&gt; rs저장 데이터 처리 왜 while이 아닌 if인가? where절에서 id는 pk조건을 가지고 있으므로 중복이 없기때문. 세션정보를 만들 수 있을까? session.setAttribute(); 만들 수 없다. why? session은 jsp내장객체이다. java에서 사용할 수 없지만 추후 서블릿을 통해 사용할 수 있다. 그래서 지금은 main.jsp페이지에서 세션만들거임. 자원해제 12345678910111213141516171819202122232425262728293031323334public int idCheack(String id, String pw){ int result = -1; try { //4-1. 드라이브로드 디비연결 con = getCon(); //4-2. SQL &amp; pstmt 생성 sql = \"select pw from itwill_member where id=?\"; pstmt = con.prepareStatement(sql); pstmt.setString(1, id); //4-3. 실행 -&gt; rs저장 rs = pstmt.executeQuery(); //4-4. 데이터 처리 //왜 while이 아닌 if인가? where절에서 id는 pk조건을 가지고 있으므로 중복이 없기때문 if(rs.next()){ if(pw.equals(rs.getString(\"pw\"))){ result = 1; System.out.println(\"아이디,비번일치 = 로그인성공(1)\"); //4-5. 세션정보를 만들 수 있을까? 만들 수 없다. }else{ result = 0; System.out.println(\"아이디있지만 비번다름 (0)\"); } }else{ result = -1; System.out.println(\"아이디,비번없음 (-1)\"); } } catch (SQLException e) { // TODO Auto-generated catch block e.printStackTrace(); } finally { //4-6. 자원해제 closeDB(); } return result;}//idCheck닫힘 4. main 페이지작성 후 로그아웃 페이지 연결하기.순서 메인페이지, 한글처리 파라미터 저장 세션생성 메인페이지에 로그아웃버튼을 만들고 로그아웃페이지에 연결한다. 12345678910111213141516&lt;%//1.한글처리, 파라미터 (세션생성)request.setCharacterEncoding(&quot;UTF-8&quot;);String id = (String) session.getAttribute(&quot;id&quot;);//object를 string으로 다운캐스팅//1-1. id없이는 진입불가, id없는 경우 로그인페이지로 이동if(id == null){ response.sendRedirect(&quot;loginForm.jsp&quot;);}%&gt;&lt;h2&gt;&lt;%=id %&gt;님 환영합니다.&lt;/h2&gt;//2. 버튼생성&lt;input type=&quot;button&quot; value=&quot;회원정보조회&quot; onclick=&quot;location.href='memberinfo.jsp'&quot;&gt;&lt;input type=&quot;button&quot; value=&quot;회원정보수정&quot; onclick=&quot;location.href='updateForm.jsp'&quot;&gt;&lt;input type=&quot;button&quot; value=&quot;로그아웃&quot; onclick=&quot;location.href='logout.jsp'&quot;&gt;&lt;input type=&quot;button&quot; value=&quot;회원탈퇴&quot; onclick=&quot;location.href='deleteForm.jsp'&quot;&gt; 4-1. 로그아웃페이지작성메인페이지 연결한 로그아웃페이지를 만든다. 12345678&lt;%session.invalidate();System.out.println(\"로그아웃성공\");%&gt;&lt;script type=\"text/javascript\"&gt; alert(\"정상적으로 로그아웃 되었습니다\"); location.href=\"loginForm.jsp\";&lt;/script&gt;","link":"/2020/07/14/200714jspi/"},{"title":"[ITWILL : JSP]Javabean 3 : 회원정보조회&#x2F;수정 페이지만들기","text":"ITWILL학원 : 24강 JSP기초 BY 정규태강사자바빈 프로젝트 1 : 회원가입페이지만들기자바빈 프로젝트 2 : 로그인 및 로그아웃페이지만들기자바빈 프로젝트 3 : 회원정보조회 및 수정페이지만들기 1. 메인페이지 main.jsp에서 버튼 추가메인페이지에 회원정보조회 버튼을 만든다 123456789101112131415&lt;%//1.한글처리, 파라미터 (세션생성)request.setCharacterEncoding(\"UTF-8\");String id = (String) session.getAttribute(\"id\");//object를 string으로 다운캐스팅String name = request.getParameter(\"name\");//1-1. id없이는 진입불가, id없는 경우 로그인페이지로 이동if(id == null){ response.sendRedirect(\"loginForm.jsp\");}%&gt;&lt;h2&gt;&lt;%=id %&gt;님 환영합니다.&lt;/h2&gt;&lt;input type=\"button\" value=\"회원정보조회\" onclick=\"location.href='memberinfo.jsp'\"&gt;&lt;input type=\"button\" value=\"회원정보수정\" onclick=\"location.href='updateForm.jsp'\"&gt;&lt;input type=\"button\" value=\"로그아웃\" onclick=\"location.href='logout.jsp'\"&gt;&lt;input type=\"button\" value=\"회원탈퇴\" onclick=\"location.href='deleteForm.jsp'\"&gt; 2. 회원정보조회페이지 memberinfo.jsp 생성회원정보를 DB에서 가져와서 출력하는 memberinfo.jsp를 만든다 순서 한글설정 &amp; 변수생성 1-1. id값확인 -없으면 로그인페이지로 이동 MemberDAO객체 생성 -&gt; 회원정보 가져오는 메서드생성 MemberBean import하기 MemberBean 데이터타입 mb변수로 메서드정보 담아오기 데이터처리 : 테이블에 담기 12345678910111213141516171819202122232425262728293031323334353637383940414243444546474849//1. 한글설정 &amp; 변수생성String id = (String) session.getAttribute(\"id\");//object이기에 형변환필수//1-1.id값확인 -없으면 로그인페이지로 이동if(id == null){ response.sendRedirect(\"loginForm.jsp\");}//2. 멤버DAO객체 생성 -&gt; 회원정보 가져오는 메서드생성MemberDAO mdao = new MemberDAO();MemberBean mb = mdao.getMember(id);//3. 데이터처리 : 테이블로 표현if(mb != null){%&gt;&lt;h2&gt;마이페이지&lt;/h2&gt;&lt;table border=\"1\"&gt; &lt;tr&gt; &lt;td&gt;아이디&lt;/td&gt; &lt;td&gt;&lt;%=mb.getId() %&gt;&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td&gt;비밀번호&lt;/td&gt; &lt;td&gt;&lt;%=mb.getPw() %&gt;&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td&gt;이름&lt;/td&gt; &lt;td&gt;&lt;%=mb.getName() %&gt;&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td&gt;나이&lt;/td&gt; &lt;td&gt;&lt;%=mb.getAge() %&gt;&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td&gt;성별&lt;/td&gt; &lt;td&gt;&lt;%=mb.getGender() %&gt;&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td&gt;이메일&lt;/td&gt; &lt;td&gt;&lt;%=mb.getEmail() %&gt;&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td&gt;회원가입일&lt;/td&gt; &lt;td&gt;&lt;%=mb.getReg_date() %&gt;&lt;/td&gt; &lt;/tr&gt;&lt;/table&gt;&lt;% } %&gt;&lt;hr&gt;&lt;input type=\"button\" value=\"뒤로가기\" onclick=\"location.href='main.jsp'\"&gt; 3. DAO에서 getMember()메서드만들기회원정보 가져오는 메서드 getMember()로 회원정보 전부 리턴 -&gt; 테이블에 추가해야한다. 순서 드라이브로드 &amp; 디비연결 SQL 구문 작성 &amp; pstmt 생성 실행 -&gt; rs저장 데이터처리 : DB에 있는 회원정보 저장 후 memberinfo페이지로 전달 4-1. MemberBean mb = null; //객체 레퍼런스 생성 4-2. rs.next() : DB의 컬럼명과 일치해야함! 자원해제 1234567891011121314151617181920212223242526272829303132333435363738public MemberBean getMember(String id){ MemberBean mb = null; //객체 레퍼런스 생성 //왜 null인가? 정보가 생성되는 시점은 rs에 있을때이다. //따라서 rs가 없을땐 굳이 만들필요가 없다. try{ //5-1. 드라이브로드 디비연결 con = getCon(); //5-2. SQL &amp; pstmt 생성 sql = \"select * from itwill_member where id=?\"; pstmt = con.prepareStatement(sql); pstmt.setString(1, id); //5-3. 실행 -&gt; rs저장 rs = pstmt.executeQuery(); //5-4. 데이터처리 : DB에 있는 회원정보 저장 후 memberinfo페이지로 전달 //5-4-1. MemberBean mb = null; //객체 레퍼런스 생성 //DB의컬럼명을 입력할 것 if(rs.next()){ mb = new MemberBean(); mb.setId(rs.getString(\"id\")); mb.setPw(rs.getString(\"pw\")); mb.setName(rs.getString(\"name\")); mb.setAge(rs.getInt(\"age\")); mb.setEmail(rs.getString(\"email\")); mb.setGender(rs.getString(\"gender\")); mb.setReg_date(rs.getTimestamp(\"reg_date\")); System.out.println(\"회원정보저장완료\"); } System.out.println(\"sql구문실행완료\"); }catch (SQLException e) { // TODO Auto-generated catch block e.printStackTrace(); } finally { //5-5. 자원해제 closeDB(); } return mb;} 4. 회원정보수정페이지 updateForm.jsp 생성순서 한글처리 &amp; 세션변수 1-1. 로그인여부체크 (로그인x-&gt;로그인페이지로이동) //object-&gt;string 형변환필수 드라이브로드 &amp; 디비연결 = 멤버DAO객체 생성 -&gt; getMember()메서드호출 로그인한 사용자의 정보를 가져오기 getMember()를 이용해서 id에 해당하는 회원정보 가져오기 데이터처리 : 테이블형식으로 출력 비밀번호를 입력받은 뒤 수정하기 -&gt;updatePro.jsp에서 진행 12345678910111213141516171819202122232425262728293031323334353637&lt;%//1.로그인여부체크 (로그인x-&gt;로그인페이지로이동)request.setCharacterEncoding(\"UTF-8\");String id = (String) session.getAttribute(\"id\");//object이기에 형변환필수if(id == null){ response.sendRedirect(\"loginForm.jsp\");} //2. 드라이브로드 &amp; 디비연결 : 로그인한 사용자의 정보를 가져오기MemberDAO mdao = new MemberDAO();MemberBean mb = mdao.getMember(id);//3. 데이터처리 : 테이블형식으로 출력//4. 비밀번호를 입력받은 뒤 수정하기 -&gt;updatePro.jsp에서 진행%&gt;&lt;fieldset&gt;&lt;legend&gt;회원정보수정&lt;/legend&gt; &lt;form action=\"updatePro.jsp\" method=\"post\" name=\"fr\"&gt; 아이디 &lt;input type=\"text\" name=\"id\" value=\"&lt;%=mb.getId() %&gt;\" readonly&gt;&lt;br&gt; 비밀번호 &lt;input type=\"password\" name=\"pw\" placeholder=\"비밀번호를 입력하세요\" required&gt;&lt;br&gt; 이름 &lt;input type=\"text\" name=\"name\" value=\"&lt;%=mb.getName() %&gt;\"&gt;&lt;br&gt; 나이 &lt;input type=\"text\" name=\"age\" value=\"&lt;%=mb.getAge() %&gt;\"&gt;&lt;br&gt; 성별 &lt;input type=\"radio\" name=\"gender\" value=\"여\" &lt;% if(mb.getGender().equals(\"여\")){ %&gt; checked &lt;%}%&gt; &gt; 여성 &lt;input type=\"radio\" name=\"gender\" value=\"남\" &lt;% if(mb.getGender().equals(\"남\")){ %&gt; checked &lt;%}%&gt; &gt; 남성&lt;br&gt; 이메일 &lt;input type=\"text\" name=\"email\" value=\"&lt;%=mb.getEmail() %&gt;\"&gt;&lt;br&gt; &lt;input type=\"submit\" value=\"회원정보수정하기\"&gt; &lt;/form&gt;&lt;/fieldset&gt;&lt;button onclick=\"location.href='main.jsp'\"&gt;뒤로가기&lt;/button&gt; 5. 회원정보수정페이지 updatePro.jsp 생성순서 로그인여부체크 -&gt;로그인페이지이동 액션태그사용 : 전달된 정보를 저장(아이디,비번,이름,나이,성별,이멜) = jsp:useBean2-1. 파라미터 값 저장 = jsp:setProperty MeberDAO객체 생성 -&gt; updateMember()메서드 호출 데이터처리 : 1-수정완료, 0-비번오류, -1-아이디없음 1234567891011121314151617181920212223242526272829303132333435363738394041424344&lt;%//1. 한글처리 &amp; 로그인여부체크 -&gt;로그인페이지이동request.setCharacterEncoding(\"UTF-8\");String id = (String) session.getAttribute(\"id\");if (id == null) { response.sendRedirect(\"loginForm.jsp\");}%&gt;&lt;!-- 2. 액션태그사용 : 전달된 정보를 저장(아이디,비번,이름,나이,성별,이멜) --&gt;&lt;jsp:useBean id=\"mb\" class=\"com.itwillbs.member.MemberBean\" /&gt;&lt;!-- 2-1. 파라미터 값 저장 --&gt;&lt;jsp:setProperty property=\"*\" name=\"mb\"/&gt;&lt;%//3. MeberDAO객체 생성MemberDAO mdao = new MemberDAO();//4. 데이터처리 : 1-수정완료, 0-비번오류, -1-아이디없음int result = mdao.updateMember(mb);if(result == 1){ %&gt; &lt;script type=\"text/javascript\"&gt; alert(\"회원정보수정 성공\"); &lt;/script&gt; &lt;% System.out.println(\"회원정보수정성공\"); response.sendRedirect(\"main.jsp\");}else if(result == 0){ %&gt; &lt;script type=\"text/javascript\"&gt; alert(\"비밀번호오류로 회원정보수정실패\"); history.back(); &lt;/script&gt; &lt;%}else{ %&gt; &lt;script type=\"text/javascript\"&gt; alert(\"존재하지않는 아이디입니다.\"); history.back(); &lt;/script&gt; &lt;%}%&gt; 6. DAO에서 updateMember()메서드만들기회원정보 수정 메서드 순서 드라이브로드 &amp; 디비연결 SQL 구문 작성 &amp; pstmt 생성 2-1. select 사용해서 id가 있는지 체크 실행 -&gt; rs저장 데이터처리 : DB에 있는 회원인 경우 4-1. DB에 있는 회원 -&gt; 비번체크 : 비번일치(-&gt;수정) 비번불일치(-&gt;에러) 비번일치하는 경우 : SQL 구문작성 &amp; pstmt 생성 -&gt; 실행 4-2. DB에 없는 회원 -&gt; 에러 자원해제 1234567891011121314151617181920212223242526272829303132333435363738394041public int updateMember(MemberBean mb){ int result = -1; try { //6-1. 드라이브로드 디비연결 con = getCon(); //6-2. SQL 구문작성 &amp; pstmt 생성 sql = \"select pw from itwill_member where id=?\"; pstmt = con.prepareStatement(sql); pstmt.setString(1, mb.getId()); //6-3. 실행 -&gt; rs저장 rs = pstmt.executeQuery(); //6-4. 데이터처리 : DB에 있는 회원인 경우 수정 아닌 경우 에러 if(rs.next()){//DB에 있는 회원 if(mb.getPw().equals(rs.getString(\"pw\"))){//비번일치 //6-5. 비번일치하면 정보수정 작업 //6-5-1. SQL 구문작성 &amp; pstmt 생성 sql = \"update itwill_member set name=?, age=?, gender=?, email=? \" + \"where id=?\"; pstmt = con.prepareStatement(sql); pstmt.setString(1, mb.getId()); //6-5-2. 실행 pstmt.executeUpdate(); System.out.println(\"회원정보수정성공\"); result = 1; }else{ result = 0; System.out.println(\"아디일치,비번불일치 - 회원정보수정실패\"); } }else{ //DB에 없는 회원 result = -1; System.out.println(\"존재하지않는아이디 - 회원정보수정실패\"); } } catch (SQLException e) { // TODO Auto-generated catch block e.printStackTrace(); } finally{ closeDB(); } return result;}//updateMember닫힘","link":"/2020/07/14/200714jspi2/"},{"title":"[ITWILL : DB]Subquery, inlineview","text":"ITWILL학원 : 13강 Database BY 정지윤강사1. Subquery 하나의 SQL 문 안에 포함되어 있는 또 다른 SQL문 형태 Oracle이 sub쿼리를 먼저 실행한 뒤 main쿼리를 실행한다. 출력값은 main쿼리값만 출력된다. sub쿼리값은 출력되지않는다. main쿼리안에 sub쿼리는 여러번 작성가능하며 sub쿼리에 sub쿼리를 넣는 듯 중첩도 가능하다 이론상으로 256개가능ㅋㅋㅋㅋ&lt;쌤은 이걸 어떻게 외우시는거지..?! group by절 제외한 select, from, where, having등 모든 절에 sub쿼리 사용가능 sub쿼리가 제일 많이 사용되는 절은 where절과 having절이다 Subquery 사용시 주의점 반드시 괄호()안에 존재하여야 한다. 2. Subquery사내에서 최소한의 연봉을 받는 사람과 최대의 연봉을 받는 사람을 구하는 쿼리이다. 1234$ select last_name, job_id, salary$ from employees$ where salary = (select min(salary) from employees) $ or salary = (select max(salary) from employees); 참고링크 : 서브쿼리(Subquery) 총 정리 3. inlineviewfrom절에 sub쿼리가 사용된 경우 쓴다.employees 테이블에서 department_id가 50번 이상인 부서들의 최소 연봉인 department_id, min(salary)를 출력. 12345$ select department_id, min(salary)$ from employees$ group by department_id$ having min(salary) &gt; $ (select min(salary) from employees where department_id = 50);","link":"/2020/07/14/200714dbi/"},{"title":"[ITWILL : DB]데이터조작어DML : insert&#x2F;update&#x2F;delete구문","text":"ITWILL학원 : 13강 Database BY 정지윤강사 []대괄호로 묶여져 있는 부분은 생략가능하다는 의미. 1. 데이터조작어DML과 트랜잭션(Transaction)데이터조작어DML 테이블에 새로운 행 추가 = insert 테이블의 기존 행 수정 = update 테이블의 기존 행 삭제 = delete 트랜잭션(Transaction) 아주 중요한 개념 논리적인 작업 단위 여러 DML(insert, update, delete)이 모여서 하나의 트랜잭션이 구성됨 DML 작업 후 commit, rollback으로 트랜잭션 종료해야함 2. insert구문 컬럼명은 생략가능한다면 값은 기본컬럼순서대로 작성해야한다. 문자리터럴은 작은따옴표안에 작성 sub쿼리가 있다면 괄호()를 생략해야한다. 있으면 안됨. 1$ insert into 테이블명 [(컬럼명, 컬럼명, ...)] values (값, 값, ...) insert가 끝난 상태는 저장된 상태가 아닌 임시데이터상태이다. 따라서 트랜잭션을 통해 저장(commit)하든지 취소(rollback)하는 명령어를 입력해야지 변경된 데이터가 저장된다. commit한 뒤에는 rollback할수없다. 따라서 commit은 신중히! 3. update구문 update구문에서도 Subquery사용이 가능하다. 12$ update 테이블명 set 컬럼명 = 값 [, 컬럼명 = 값, ...]$ [where 조건]; 4. delete구문 행전체를 삭제. 레코드값 하나(한 칸)를 삭제하고 싶다면 그건 update구문을 이용해야한다. delete가 아니다! where절없는 경우, 테이블 전체가 삭제되는 거 아님. 테이블형태는 남고 안의 데이터가 다 삭제됨. 만약 행 몇개 삭제할려고했는데 where절을 깜박해서 전체 데이터를 날렸다면? rollback하면 해결되지만 만약 commit을 해버렸다면? Oracle Flashback기술을 이용해서 아주 가까운 과거 특정시점으로 DB를 되돌릴수있다.EX) 3분,10분 모든 순간을 다 Flashback할 수는 없고 특정 조건들이 맞아야지만 가능하다. 그러니 commit은 항상 신중히! 각 DBMS마다 Flashback기술이 있을 수도 있고 없을 수도 있다. 12$ delete [from] 테이블명$ [where 조건];","link":"/2020/07/14/200714dbi2/"},{"title":"[ITWILL : JSP] JSP전체목록List","text":"ITWILL학원 : JSP BY 정규태강사프로그래밍기초 프로그래밍기초이론, 하드웨어 vs 소프트웨어 vs 펌웨어, 기억장치, 클라이언트 vs 서버 JS기초 JS기초이론, Compile VS Interprete, 변수, js라이브러리,객체타입 JS를 문서에 나타내는 3가지방법, undefined VS null, 백의자리 Math.floor(), 복합대입연산자로table생성, A++과 ++A차이점, ==과===차이점, 논리표 JAVA SE/EE/ME 차이점, JAVA EE 설정. Tomcat 설치및설정, 이클립스 단축키 아이디와 비번입력, 새로고침location.reload(), 주석한번에 단축키, switch문 출력문 한줄리팩토링 반복문 for 순서 자세히, 개발자 도구로 디버깅, 기본 반복문암기, for문과 if문의 자리바꿈에 따른 변화, 반복문의 전위연산 VS 후위연산, do while문 무한반복문, 보조제어(break와continue)문, 익명함수, 재귀함수, 지역변수를 전역에서 사용하는 방법, 내장함수 JS기초 : 객체 (내장객체, 브라우저객체모델(BOM), 문서객체모델(DOM)) Object객체 전체개념, tv채널객체함수, new를 쓰고 안쓰고의 차이 Date객체 자세히, 디데이구하는 함수 Array객체 (for ~ in구문, join(), reverse(), sort()) String객체, 짤라오는 함수 4종류 .substring(), slice(), substr(), charAt(), .indexOf()와 .lastIndexOf()차이, .concat(), .split(), ID자릿수를 제한하는 이메일 유효성검사 이벤트리스너와 이벤트핸들러, 브라우저객체모델, window객체전체 브라우저객체모델안의 Document객체 (bgColor와 fgColor사용, img태그에 접근하여 속성 사용, 랜덤 img 출력하기) 브라우저객체모델안의 location객체 브라우저객체모델안의 history객체, screen객체, navigator객체 문서 객체 모델안의 form태그, 페이지이동방식(get과 post), focus() vs blur() vs select() 문서 객체 모델안의 if문에 return;의 역할, radio태그, checkbox태그 JS실습 js로 간단한 회원가입페이지 작성하기 JSP기초 JSP 첫 프로젝트 톰캣과 연결 JSP 주석과 JSP directive, JSP 스크립트 요소 JAVA DATATYPE, Integer.parseInt(문자열), 동일한 파라미터의 값을 가지는 데이터가 여러개있을 경우 변수로 가져오기 커넥션풀(Connection Pool) Wrapper클래스, 오토 박싱과 오토 언박싱, hierarchy확인법 JSP기초 : 내장객체 중 영역객체 내장객체 영역객체scope 영역객체 안에서 사용하는 속성(Attribute), 링크이동 방법별 전달가능한 영역(scope) JSP 디렉티브(directive) 중 include VS 액션태그 include, jspf확장자 파일 세션(Session) ==과 str.equals(str2) 차이, 객체와 클래스 쿠키(Cookie) MySQL MYSQL 설치, MYSQL환경변수설정, cmd에서 명령어 잘못입력해서 mysql못빠져나갈때 MYSQL 접속순서, DB명령어, 테이블명령어, 데이터명령어 MySQL 한글깨짐현상 두가지 해결방법 : cmd와 Workbench, 이클립스와 MYSQL연결 JDBC JDBC활용 - import쓰는 이유, form페이지로 받은 데이터를 DB에 insert하는 방법 JDBC활용 - JAVA에서 DB 정보 지우기 2가지방법 JDBC활용 - DB에서 고객정보를 불러와서 HTML테이블에 담기 JDBC활용 - TIMESTAMP주의점, JDBC에서 데이터처리 JDBC활용 - 회원정보수정페이지만들기 JDBC활용 - 회원목록출력하는데 관리자는 빼고 출력하기, 자바 에러 두종류 JAVABEAN Javabean : 기초 자바빈 실습1 : 회원가입페이지만들기 자바빈 실습2 : 로그인 및 로그아웃페이지만들기 자바빈 실습3 : 회원정보조회 및 수정페이지만들기 자바빈 실습4 : web.xml, 회원정보삭제페이지 자바빈 실습5 : 관리자만 확인할 수 있는 회원목록페이지만들기 자바빈 실습6 : 게시판만들기(글쓰기) 자바빈 실습7 : 게시판만들기(글 총 갯수, 글목록, 페이징처리) 자바빈 실습8 : 게시판만들기(글내용보기, 글수정하기) 자바빈 실습9 : 게시판만들기(글삭제하기) 자바빈 실습10 : 게시판만들기(답글쓰기) 파일업로드와 다운로드 기능 구현 자바빈 실습11 : MultipartRequest클래스 자바빈 실습12 : 파일업로드 자바빈 실습13 : 파일다운로드 자바빈 실습14 : ServletContext 사용하여 파일업로드와 다운로드 자료구조 자료구조1 : Collections Framwork(Set계열, List계열) 자료구조2 : Stack클래스, Queue인터페이스, Map인터페이스 홈페이지만들기 홈페이지만들기1 : 회원가입페이지구현","link":"/2020/11/17/jspList/"},{"title":"[ITWILL : JAVA]기본클래스 이외에 자바 구성요소1 : 추상클래스, 인터페이스","text":"ITWILL학원 : 17강 JAVA BY 윤미영강사1. 추상클래스(Abstract Class) 슈퍼클래스에서 메서드의 선언부까지는 작성가능하지만 구현부는 어떻게 될지 확정되지 않아 작성하기 어려울때 사용 서브클래스들에서 어차피 재정의해서 사용하기 때문에 슈퍼클래스에서 아직 작성할 수 없는 메서드에 대해 선언부에 abstract를 추가 작성하고 구현부를 세미콜론(;)으로 대체한다. 이를 abstract method design pattern 프로그래밍기법이라고 한다. 123456abstract class A { //멤버변수, 메서드, 생상자 public abstract void 메서드이름();}//abstract()메서드는 중괄호없이 세미콜론만. 추상클래스도 클래스이기에 클래스 구성요소(멤버변수, 메서드, 생성자)를 다 갖춰야하고 그 중 특이하게 abstract메서드를 가지는 클래스를 말한다. 참조변수로 사용가능 객체생성 불가능 : 구현부가 없어서 호출될 수 없기때문에 즉 abstract메서드때문에 미완성 미완성을 어떻게 완성시킬까? 상속하여 재정의! 상속관계의 @override해줘야한다. 반드시 재정의해줘야한다. 재정의를 통해 서브클래스를 객체생성해서 사용할 수 있다. 123456class B extends A { @Override public void 메서드이름(){ //구현부작성 }} 장점 : 재사용성 향상 참고링크 : 추상 클래스 및 추상 메서드(abstract class and abstract method) 2. 인터페이스 두 시스템 간에 만나는 접점이라는 의미. 모든 메서드가 abstract메서드인 클래스를 인터페이스라고 한다. 자주 사용하는 인터페이스 : GUI(Graphic User Interface). 인터페이스이름의 첫글자는 대문자. 인터페이스는 클래스가 아니라서 클래스와 구성요소의 차이가 있다. 객체생성 불가능 : abstract메서드가 있어서, 즉 메서드가 미완성 미완성을 어떻게 완성시킬까? 재구현! 클래스의 재구현을 통해서 객체생성할 수 있다. 2-1. 인터페이스와 클래스 차이점 인터페이스와 클래스는 정의법과 구성요소의 차이가 있다. 인터페이스 정의시에 왜 예약어가 생략가능할까? 컴파일러입장에서는 final과 abstract가 너무나 당연하기때문에 123456789101112//클래스 정의법class A{ 멤버변수 메서드 생성자}//인터페이스 정의법interface Interf { 상수(final 생략가능) abstract()메서드(abstract 예약어 생략가능)} 인터페이스와 클래스 차이 인터페이스 : 다중구현 가능 (헷갈릴까봐 다중상속이라고하지않고 다중구현이라고부른다) 클래스 : 다중상속 불가능 인터페이스는 객체 생성이 가능할까?NOPE! 클래스로 구현한 뒤 클래스를 객체생성할 수있다(업캐스팅) 2-2. 구현(implements) 클래스의 구현을 통해서 인터페이스를 사용할 수 있다. 키워드는 implements 사용! abstract 예약어 생략가능. 따라서 abstract 예약어 안써도 다 생략되어있다고 생각하면됨 왜냐면, 인터페이스안에는 일반변수와 일반메서드 사용할 수 없기 때문에 인터페이스의 모든 abstract method를 재구현하기 위해서 단축키 alt + shift + s를 통해 Override/implements method를 클릭한 뒤 abstract method를 tick해서 재구현해준다. 12345678//구현 키워드는 implementsclass interA implements Interf{ //멤버변수, 메서드, 생성자 //인터페이스가 가지고있는 모든 abstract method를 재구현해야함. @Override void method(){}} 2-3. 인터페이스의 필요성만들어놓은 라이브러리를 사용하기 위해 인터페이스를 시용한다. 구현의 강제로 표준화 인터페이스를 통해 간접적인 클래스 사용으로 손쉬운 모듈교체지원 서로 상속의 관계가 없는 클래스들에게 인터페이스를 통한 관계 부여로 다형성 확장 모듈 간 독립적 프로그래밍으로 개발 시간 단축 stub : 아직 개발되지 않은 코드를 임시로 대치하는 역할. 2-4. 인터페이스에 추가할 수 있는 다양한 메서드 JDK 1.8버전에서부터 default메서드와 static메서드가 추가되었다. default()메서드 : 구현부가 포함된 일반 메서드 interface클래스 구현한 뒤 디폴트메서드는 오버라이딩필요없이 사용가능. 중요 : 접근제어자는 public만 사용가능 문제점 : 인터페이스 다중구현할때 디폴트메서드가 이름이 똑같은 경우 우선순위를 어떻게 두는가? =&gt; 아래 규칙으로 충돌을 회피한다. 조상클래스의 메서드가 가장 높은 우선순위. 조상클래스의 메서드와 인터페이스의 디폴트메서드가 충돌하면 디폴트메서드는 무시된다. 하나의 인터페이스에서 디폴트메서드를 제공되고 다른 이터페이스에 충돌하는 메서드가 있는 경우(디폴트메서드가 아니더라도) 서브클래스는 반드시 조상의 메서드를 재정의해야한다.","link":"/2020/07/15/200715javai/"},{"title":"유용한 사이트","text":"1. 프로젝트시 유용한 사이트1-1. java 클래스 다이어그램 만들 수 있는 사이트 draw creately genmymodel 2. API 카카오 API 홈페이지 : https://developers.kakao.com 네이버 API 홈페이지 : https://developers.naver.com/ 구글 API 홈페이지 : https://console.developers.google.com 페이스북 API 홈페이지 : https://developers.facebook.com/ 공공데이터 포털 : https://www.data.go.kr/","link":"/2020/07/15/200715journal/"},{"title":"[ITWILL : JSP]Javabean 4 : web.xml, 회원정보삭제페이지","text":"ITWILL학원 : 25강 JSP기초 BY 정규태강사1. web.xml 배포서술자 : 프로젝트 실행시 가장 먼저 실행되는 파일. 프로그램에 필요한 전반적인 설정을 지정함. 에러코드별 데이터 처리필요 : 프로그램배포시 꼭 필요한 페이지. 위치 : WEBCONTENT하위의 WEB-INF폴더안에 위치함. 1-1. 404에러 예시 만약 404에러가 뜨면 location 아래로 이동해서 처리하겠다는 의미 webcontent하위에 error폴더 생성 후 그 안에 404code.jsp생성 web.xml파일에 </web-app>태그 위에 아래 코드를 입력한다. 123456&lt;error-page&gt; &lt;error-code&gt;404&lt;/error-code&gt; &lt;location&gt; /error/404code.jsp &lt;/location&gt;&lt;/error-page&gt; ‘error’폴더를 따로 생성한 뒤 404code.jsp를 만든다. 1234&lt;h1&gt;404code&lt;/h1&gt;&lt;h2&gt;페이지를 찾을 수 없습니다.&lt;/h2&gt;&lt;h2&gt;관리자에게 문의하세요.&lt;/h2&gt;&lt;input type=\"button\" value=\"로그인페이지로 이동\" onclick=\"location.href='loginForm.jsp'\"&gt; 1-2. 500에러 예시 만약 500에러가 뜨면 location 아래로 이동해서 처리하겠다는 의미 webcontent하위에 error폴더 생성 후 그 안에 500code.jsp생성 위와 동일한 방법에 코드만 404에서 500으로 변경해주면 된다 123456&lt;error-page&gt; &lt;error-code&gt;500&lt;/error-code&gt; &lt;location&gt; /error/500code.jsp &lt;/location&gt;&lt;/error-page&gt; 1234&lt;h1&gt;500code&lt;/h1&gt;&lt;h2&gt;페이지를 찾을 수 없습니다.&lt;/h2&gt;&lt;h2&gt;관리자에게 문의하세요.&lt;/h2&gt;&lt;input type=\"button\" value=\"로그인페이지로 이동\" onclick=\"location.href='loginForm.jsp'\"&gt; 2. 회원정보삭제페이지2-1. 메인페이지 main.jsp에서 회원정보삭제버튼 추가메인페이지에 회원정보삭제 버튼을 만든다 123456789101112131415&lt;%//1.한글처리, 파라미터 (세션생성)request.setCharacterEncoding(\"UTF-8\");String id = (String) session.getAttribute(\"id\");//object를 string으로 다운캐스팅String name = request.getParameter(\"name\");//1-1. id없이는 진입불가, id없는 경우 로그인페이지로 이동if(id == null){ response.sendRedirect(\"loginForm.jsp\");}%&gt;&lt;h2&gt;&lt;%=id %&gt;님 환영합니다.&lt;/h2&gt;&lt;input type=\"button\" value=\"회원정보조회\" onclick=\"location.href='memberinfo.jsp'\"&gt;&lt;input type=\"button\" value=\"회원정보수정\" onclick=\"location.href='updateForm.jsp'\"&gt;&lt;input type=\"button\" value=\"로그아웃\" onclick=\"location.href='logout.jsp'\"&gt;&lt;input type=\"button\" value=\"회원탈퇴\" onclick=\"location.href='deleteForm.jsp'\"&gt; 2-2. 회원정보삭제폼페이지 deleteForm.jsp 생성사용자로부터 비밀번호 받는 폼페이지 생성 123456789101112131415161718&lt;%//1. 로그인 처리 -&gt; 로그인 x (로그인페이지 이동)String id = (String) session.getAttribute(\"id\");if( id == null ){ response.sendRedirect(\"loginForm.jsp\");}//2.회원 비밀번호만 입력받아서 deletePro.jsp페이지 이동후 삭제%&gt; &lt;fieldset&gt; &lt;legend&gt;회원탈퇴&lt;/legend&gt; &lt;form action=\"deletePro.jsp\" method=\"post\"&gt; &lt;!-- input타입중 hidden은 화면에 있는 해당 input태그를 숨겨서 정보 전달 --&gt; 아이디 : &lt;input type=\"hidden\" name=\"id\" value=\"&lt;%=id %&gt;\" readonly&gt;&lt;br&gt; 비밀번호 : &lt;input type=\"password\" name=\"pw\"&gt;&lt;br&gt; &lt;input type=\"submit\" value=\"탈퇴하기\"&gt; &lt;input type=\"button\" value=\"뒤로가기\" onclick=\"location.href='main.jsp'\"&gt; &lt;/form&gt;&lt;/fieldset&gt; 2-3. 회원정보삭페이지 deletePro.jsp 생성순서 한글처리 &amp; 로그인여부체크 -&gt;로그인페이지이동 삭제할 비밀번호 가져오기 : 파라미터이용 MeberDAO객체 생성 -&gt; deleteMember()메서드 호출 데이터처리 : 1-삭제완료, 0-비번오류, -1-아이디없음 삭제 후 session 초기화 까먹으면 안된다! 세션 꼭 없앨 것! 1234567891011121314151617181920212223242526272829303132333435363738394041&lt;%//1.한글처리 &amp; 로그인확인 request.setCharacterEncoding(\"UTF-8\");String id = (String) session.getAttribute(\"id\");if(id == null){ response.sendRedirect(\"loginForm.jsp\");}//2. 삭제할 비밀번호 가져오기String pw = request.getParameter(\"pw\");%&gt;&lt;%//3.DAO객체생성 -&gt; 결과를 리턴(1=정상처리 2=비번오류 -1=아이디가없음)MemberDAO mdao = new MemberDAO();int result = mdao.deleteMember(id, pw); //2-4에서 만든 메서드 호출//4.데이터처리 -&gt; 삭제후 login페이지로 이동if(result == 1){ session.invalidate(); //초기화 필수! 까먹지마! %&gt; &lt;script type=\"text/javascript\"&gt; alert(\"회원정보삭제 성공\"); location.href=\"loginForm.jsp\"; &lt;/script&gt; &lt;%}else if(result == 0){ %&gt; &lt;script type=\"text/javascript\"&gt; alert(\"비밀번호오류로 회원정보삭제실패\"); history.back(); &lt;/script&gt; &lt;%}else{ %&gt; &lt;script type=\"text/javascript\"&gt; alert(\"존재하지않는 아이디입니다.\"); history.back(); &lt;/script&gt; &lt;%}%&gt; 2-4. DAO에서 deleteMember()메서드만들기순서 DB연결메서드 불러오기 SQL &amp; pstmt 생성 : 사용자가 입력한 비밀번호가 DB비번과 일치하는 지 확인 실행 -&gt; rs저장 데이터처리 : DB에 있는 비번일치하면 정보삭제 작업, 아닌 경우 에러 4-1. DB에 있는 회원 -&gt; 비번체크 : 비번일치(-&gt;수정) 비번불일치(-&gt;에러) 비번일치하는 경우 : SQL 구문작성 &amp; pstmt 생성 -&gt; 실행 4-2. DB에 없는 회원 -&gt; 에러 자원해제 1234567891011121314151617181920212223242526272829303132333435363738394041public int deleteMember(String id, String pw){ int result = -1; try { //7-1. DB연결메서드 불러오기 con = getCon(); //7-2. SQL &amp; pstmt 생성 sql = \"select pw from itwill_member where id=?\"; pstmt = con.prepareStatement(sql); pstmt.setString(1, id); //7-3. 실행 -&gt; rs저장 rs = pstmt.executeQuery(); //7-4. 데이터처리 : DB에 있는 회원인 경우 삭제, 아닌 경우 에러 if(rs.next()){ if(pw.equals(rs.getString(\"pw\"))){ //7-4-1. SQL 구문작성 &amp; pstmt 생성 sql = \"delete from itwill_member where id=?\"; pstmt = con.prepareStatement(sql); pstmt.setString(1, id); pstmt.executeUpdate(); result = 1; System.out.println(\"회원삭제성공-아디일치,비번일치\"); }else{ result = 0; System.out.println(\"회원삭제실패-아디일치,비번불일치\"); } }else{ result = -1; System.out.println(\"회원삭제실패-아이디불일치\"); } } catch (SQLException e) { e.printStackTrace(); //7-5. 자원해제 } finally { closeDB(); } return result; }//delete닫힘","link":"/2020/07/15/200715jspi/"},{"title":"[ITWILL : JSP]커넥션풀(Connection Pool)","text":"ITWILL학원 : 25강 JSP기초 BY 정규태강사1. JNDI(Java Naming and Directory Interface)(p444~) 필요한 데이터를 키-값 쌍으로 저장해서 필요시마다 키를 사용하여 값을 가져오는 방법 예시 : 내장객체.setAttribute(“키”, 값); 내장객체.getAttribute(“키”); 컬렉션의 해시맵/해시테이블 (“키”, 값); DNS서버(도메인서버) : 도메인네임에 해당하는 ID정보를 저장해서 사용 사용법 컨테이너(예:톰캣)를 사용하여 Connection Pool생성하여 그 안에 이름에 해당하는 정보를 저장(=키), 해당하는 DB정보를 저장(=값)해서 사용. 그렇다면 커넥션풀이 뭘까? 2. 커넥션풀(Connection Pool) DB연결을 하기위한 객체 효율적인 데이터 처리 가능 도입된 배경 : 빈번한 디비연결/호출로 인해서 메모리낭비(누수)발생을 줄이고자 도입되었다. 사용법 : 미리 연결정보(Connection)를 생성 필요할때마다 빌려주고 다 쓰면 반납하는 방식 작동방식 : 사용자 요청(Service)에 따른 Connection Pool에 쓸 쑤 있는 connection체크 후 connection 1개씩 할당 -&gt; 있으면 바로 사용, 없으면 대기(반납되기를 기다리기)거나 임시객체를 생성 커넥션(연결정보)개수를 제한(커넥션풀이 알아서 효율적으로 관리함) 커넥션 객체를 다 쓰게되면 자원회수 2-1. 라이브러리 다운로드커넥션풀을 사용하기 위해선 라이브러리를 다운받아야 한다. 라이브러리 다운로드 주소 : Apache Commons zip파일 다운로드 3가지 collections dbcp pool 위의 세가지를 차례대로 다운받으면 된다.먼저 collections zip파일다운로드 그다음 dbcp zip파일다운로드 마지막 pool zip파일다운로드 압축 푼 뒤 D:\\workspace_jsp7\\JSP7\\WebContent\\WEB-INF\\lib경로에 아래 세가지 파일을 복붙 commons-collections4-4.4.jar commons-dbcp2-2.7.0.jar commons-pool2-2.8.0.jar 2-2. 라이브러리를 서버에 연결 META-INF폴더에 Context.xml 생성 DB연결에 필요한 정보를 저장할 수 있다. 속성작성 name : 외부에서 해당정보에 접근할 수 있도록하는 이름값(필요에 따라 변경가능) auth : 자원관리자를 지정(Container/Application 고정) type : 웹에서 사용될때(name속성으로 호출할때) 표시되는 객체 타입(고정) driverClassName : JDBC드라이버주소(필요에 따라 변경가능) mysql쓴다면 : com.mysql.jdbc.Driver 오라클쓴다면 : oracle.jdbc.driver.OracleDriver url : DB가 존재하는 위치 = 디비서버의 주소(필요에 따라 변경가능) mysql쓴다면 : jdbc:mysql://localhost:3306/jspdb 오라클쓴다면 : jdbc:oracle:thin:@localhost:1521:orcl username/password : DB접속 계정 정보 maxWait : 커넥션풀에 사용가능한 커넥션이 없을 경우 커넥션의 회수를 기다리는 시간 지정(단위: 밀리초) 1234567891011&lt;Context&gt; &lt;Resource name=\"jdbc/mysqlDB\" auth=\"Container\" type=\"javax.sql.DataSource\" //DataSource라는 객체가 DB정보를 저장 driverClassName=\"com.mysql.jdbc.Driver\" //DataSource객체에 들어있는 정보 url=\"jdbc:mysql://localhost:3306/jspdb\" //DataSource객체에 들어있는 정보 username=\"root\" //DataSource객체에 들어있는 정보 password=\"1234\" //DataSource객체에 들어있는 정보 /&gt;&lt;/Context&gt; 2-3. JNDI 리소스 설정 web.xml파일에서 아래 코드 작성 description : 설명작성(의미없음, 원하는대로 작성하면됨) 나머지정보들은 Context.xml파일에서 해당 설정값을 그대로 복붙할 것! 123456&lt;resource-ref&gt; &lt;description&gt;ConnectDB&lt;/description&gt; &lt;res-ref-name&gt;jdbc/mysqlDB&lt;/res-ref-name&gt; &lt;res-type&gt;javax.sql.DataSource&lt;/res-type&gt; &lt;res-auth&gt;Container&lt;/res-auth&gt;&lt;/resource-ref&gt; 작동방식 : 서버를 실행하면 web.xml 먼저 접속 후 resource-ref코드를 보고 Context.xml을 읽어서 DB를 연결한다. 2-4. getCon()메서드 작성 : 커넥션풀 사용memberDAO.java파일로 이동해서 getCon()메서드를 커넥션풀을 사용한 아래 코드로 변경해준다. InitialContext클래스는 Context클래스를 재구현한 클래스이고 Object를 상속받았다 123public class InitialContextextends Objectimplements Context DataSource ds = (DataSource) init.lookup(“java:comp/env/jdbc/context파일의 name값그대로 입력”); 123456789101112131415161718192021//드라이버로드 디비연결 : 커넥션 풀 사용private Connection getCon(){ //Context 객체 생성 try { Context init = new InitialContext(); //업캐스팅 //디비연결정보를 불러오기 -&gt;DataSource 타입으로 저장 // 고정문구\"java:comp/env/jdbc/다른문구context파일의 name값입력\" DataSource ds = (DataSource) init.lookup(\"java:comp/env/jdbc/mysqlDB\"); //ds 사용해서 연결 con = ds.getConnection(); System.out.println(\"연결성공\" + con); } catch (SQLException e) { e.printStackTrace(); } catch (NamingException e) { e.printStackTrace(); } return con;}","link":"/2020/07/15/200715jspi2/"},{"title":"[ITWILL : JSP]Javabean 5 : 관리자만 확인할 수 있는 회원목록페이지만들기","text":"ITWILL학원 : 25강 JSP기초 BY 정규태강사1. main.jsp에 버튼추가관리자만 확인할 수 있는 회원목록페이지만들어보자. 12345678910111213141516171819202122232425&lt;%//1.한글처리, 파라미터 request.setCharacterEncoding(\"UTF-8\");String id = (String) session.getAttribute(\"id\");//object를 string으로 다운캐스팅String name = request.getParameter(\"name\");//1-1. id없이는 진입불가, id없는 경우 로그인페이지로 이동if(id == null){ response.sendRedirect(\"loginForm.jsp\");}%&gt;&lt;h2&gt;&lt;%=id %&gt;님 환영합니다.&lt;/h2&gt;&lt;%=name %&gt;&lt;br&gt;&lt;input type=\"button\" value=\"회원정보조회\" onclick=\"location.href='memberinfo.jsp'\"&gt;&lt;input type=\"button\" value=\"회원정보수정\" onclick=\"location.href='updateForm.jsp'\"&gt;&lt;input type=\"button\" value=\"로그아웃\" onclick=\"location.href='logout.jsp'\"&gt;&lt;input type=\"button\" value=\"회원탈퇴\" onclick=\"location.href='deleteForm.jsp'\"&gt;&lt;!-- 관리자일때만 메뉴확인가능 --&gt;&lt;% if(id != null){ if(id.equals(\"admin\")){ %&gt; &lt;input type=\"button\" value=\"회원전체목록(관리자용)\" onclick=\"location.href='memberList.jsp'\"&gt;&lt;% }}%&gt; 이때 관리자메뉴확인 if조건문을 아래 한줄짜리 코드로 바꿔보자 잘 실행될까? 12345678&lt;!-- 관리자일때만 메뉴확인가능 --&gt;&lt;% if(id.equals(\"admin\") &amp;&amp; id != null){ %&gt; &lt;input type=\"button\" value=\"회원전체목록(관리자용)\" onclick=\"location.href='memberList.jsp'\"&gt; &lt;%}%&gt; NOPE : 코드는 왼쪽에서부터 순서대로 실행되기때문 아래코드처럼 순서만 바꾼다면 잘 실행될까? 12345678&lt;!-- 관리자일때만 메뉴확인가능 --&gt;&lt;% if(id != null &amp;&amp; id.equals(\"admin\")){ %&gt; &lt;input type=\"button\" value=\"회원전체목록(관리자용)\" onclick=\"location.href='memberList.jsp'\"&gt; &lt;%}%&gt; YES! 이제 잘 실행된다 2. 회원전체페이지 출력하는 memberList.jsp 생성DB에서 모든 회원의 정보를 가져와서 페이지에 출력한다이때, 관리자는 목록에 제외되어야한다. 순서 로그인세션제어(관리자는 제외) DAO객체생성 회원목록을 가져오는 메서드 사용 ArrayList는 가변배열이므로 length가 없고 size가 존재한다. size()메서드는 배열의 요소의 갯수를 리턴한다. 12345678910111213141516171819202122232425262728293031323334353637383940414243444546&lt;%//1. 로그인세션제어(관리자는 제외)String id = (String) session.getAttribute(\"id\");//다운캐스팅if(id == null || !id.equals(\"admin\")){ //순서바뀌면 에러발생하므로 항상 null 먼저 비교할 것 response.sendRedirect(\"loginForm.jsp\");}//2. DAO객체생성MemberDAO mdao = new MemberDAO();//3. 회원목록을 가져오는 메서드 사용mdao.getMemberList();//아래 4번에서 DAO객체에 만들 메서드ArrayList memberList = mdao.getMemberList();%&gt;&lt;h2&gt;마이페이지&lt;/h2&gt;&lt;table border=\"1\"&gt; &lt;tr&gt; &lt;td&gt;아이디&lt;/td&gt; &lt;td&gt;비밀번호&lt;/td&gt; &lt;td&gt;이름&lt;/td&gt; &lt;td&gt;나이&lt;/td&gt; &lt;td&gt;성별&lt;/td&gt; &lt;td&gt;이메일&lt;/td&gt; &lt;td&gt;회원가입일&lt;/td&gt; &lt;/tr&gt; &lt;%//반복문 //ArrayList는 가변배열이므로 length가 없고 size가 존재한다. //size()메서드는 배열의 요소의 갯수를 리턴 for(int i=0;i&lt;memberList.size(); i++){ MemberBean mb = (MemberBean) memberList.get(i); %&gt; &lt;tr&gt; &lt;td&gt;&lt;%=mb.getId() %&gt;&lt;/td&gt; &lt;td&gt;&lt;%=mb.getPw() %&gt;&lt;/td&gt; &lt;td&gt;&lt;%=mb.getName() %&gt;&lt;/td&gt; &lt;td&gt;&lt;%=mb.getAge() %&gt;&lt;/td&gt; &lt;td&gt;&lt;%=mb.getGender() %&gt;&lt;/td&gt; &lt;td&gt;&lt;%=mb.getEmail() %&gt;&lt;/td&gt; &lt;td&gt;&lt;%=mb.getReg_date() %&gt;&lt;/td&gt; &lt;/tr&gt; &lt;% } %&gt;&lt;/table&gt;%&gt; 3. DAO객체에 getMemberList()메서드 생성 DB연결메서드 불러오기 SQL &amp; pstmt 생성 실행 -&gt; rs저장 데이터처리 : 4-1. 회원이 몇명인지 알지 못하므로 가변길이 배열을 생성 : 배열안에 자바빈을 넣어서 가져 갈 예정이다. 근데 데이터갯수를 몰라서 배열을 못만든다. 따라서 데이터형태 ArrayList로 가져갈거다. ArrayList<E> 여기서 e를 제네릭타입이라고 칭함 ArrayList<> 다이아몬드 오퍼레이터라고 칭함 mb는 MemberBean데이터타입인데 add(Object)가 들어가야한다 따라서 업캐스팅 (MemberBean -&gt; Object)해서 넣어야한다. add(mb)를 빼서 쓸때는 다운캐스팅을 해야지 사용할 수 있다. 4-2. DB테이블 결과 1행의 정보 모두를 MemberBean데이터타입으로 저장 4-3. 1행정보를 배열 한칸에 저장 finally 로 자원해제 12345678910111213141516171819202122232425262728293031323334353637383940414243public ArrayList getMemberList(){ //가변길이 배열 생성 ArrayList memberList = new ArrayList(); try { //8-1. DB연결메서드 불러오기 con = getCon(); //8-2. SQL &amp; pstmt 생성 sql = \"select * from itwill_member\"; pstmt = con.prepareStatement(sql); //8-3. 실행 -&gt; rs저장 rs = pstmt.executeQuery(); //8-4. 데이터처리 : //8-4-1. DB테이블 결과 1행의 정보 모두를 MemberBean데이터타입으로 저장 //8-4-2. 1행정보를 배열 한칸에 저장 while(rs.next()){ MemberBean mb = new MemberBean();//1.MemberBean객체생성 mb.setAge(rs.getInt(\"age\")); mb.setEmail(rs.getString(\"email\")); mb.setId(rs.getString(\"id\")); mb.setName(rs.getString(\"name\")); mb.setPw(rs.getString(\"pw\")); mb.setReg_date(rs.getTimestamp(\"reg_date\")); //여기까지가 한 행의 데이터를 변수mb에 저장한 것임. while로 모든 행을 반복해서 변수mb에 저장 //가변배열(ArrayList)에 위의 데이터mb를 저장 //즉 배열 한 칸에 회원 1명의 정보를 저장함. memberList.add(mb); //업캐스팅 (MemberBean -&gt; Object) //System.out.println(memberList); 배열한 칸에 잘 들어갔는지 콘솔로 확인 } System.out.println(\"정보검색완료\"); //System.out.println(memberList); } catch (SQLException e) { // TODO Auto-generated catch block e.printStackTrace(); } finally { closeDB(); } return memberList;}","link":"/2020/07/15/200715jspi3/"},{"title":"7월 우아한테크세미나 : 주니어개발자로 성장하는 우아한 방법들","text":"1. 소개 1-1. 프론트엔드 개발자가 되기 위한 10가지 방법 by 윤지수 강연소개웹프론트엔드 개발자 채용 수요가 꾸준히 증가 중입니다.하지만 여전히 기업에서는 괜찮은 웹 프론트엔드 개발자가 없다고 아우성입니다.기업이 원하는 인재상과 개발자를 준비하는 사람들 간에는 어떤 차이가 있는걸까요?2020년 현재, 웹프론트엔드 개발자가 되기 위해서 준비해야할 것 10가지를 알아봅니다. 1-2. 우아한테크캠프에서 공부하는 법 by 정호영 강연소개요즘 우아한 테크캠프가 여름의 열기보다 더 뜨겁게 진행중입니다.많은 개발자 지망생 분들이 오고 싶어하는 우아한테크캠프에서는 무엇을 어떻게 배우고 있을까요?그리고 테크캠프에 아쉽게 합류 못하신 분들과 준비중인 분들을 위한 팁도 살짝 알려드립니다. 2. 중요포인트 깃헙 이슈/프로젝트로 일감 만들어서 관리하기 PR보내기 코드리뷰 깃브런치 전략 주변에 사람이 없다면? 커뮤니티를 활용해서 사람들과 함께하기 자료구조와 알고리즘 중요 = 기초체력임. 시간재고 코드푸는 거 연습 한 문제를 다양한 방법으로 푸는 연습 다른 사람 코드보는 거 쉬운 문제를 여러번 풀어서 지속가능한 공부를 하기 네트워크 중에서 HTTP는 필수다! HTTP중심으로 알아야한다 :HTTP 기본기 추천도서 : ​모두의 네트워크, 그림 HTTP, HTTP 완벽 가이드 개인적으로 그림으로 쉽게 배우는 HTTP 라는 책으로 빠르게 한 번 훝고 HTTP 완벽 가이드 같은 두꺼운책으로 넘어가는게 좋은거 같아요 개발자도구의 네트워크탭의 항목을 모조리 다 이해하려고 노력해야한다. 서비스업체는 모든 키워드를 알아야한다. NODE.JS를 중심으로 웹애플리케이션 서버와 연동하는 것 필수 SSR을 위한 서버를 운영해야한다면? 에 답을 공부해보기 조금 더 욕심내자면 DATABASE, OS, 클라우드(AWS)등의 지식 Component 기반 개발이 표준이 된 세상 : html css js를 따로 개발하기보다 함께 개발해야 하는 시대. 주니어는 양보다 질이다. 기억에 남은 면접자는 하나를 깊게 판 면접자가 기억에 남는다. 프레임워크 코딩테스트는 프로그래머스 레벨 3까지 풀어보시고 백준에서 골드 3이하 문제 풀어보면 도움이 된다 바닐라js로 프레임워크 흉내내는거 도전해보기 피드백받을 수 있는 방법 찾아보기 : 커뮤니티, 세미나 나가서 멘토를 찾아라. 좋은 회사기준 : 그 회사의 채용공고를 이전것들까지 찾아보면 됨. 면접에서 내가 털리면 좋은 회사 웹은 SOP, 쿠키,세션,https 도 중요한 키워드이다! 3. 포트폴리오/프로젝트 아이디어 바닐라JS에서 웹펙 바벨 연동가능 포트폴리오는 깃헙소스코드를 주로본다. 화면구현에 올인하지말것. 프로젝트주제는 크게 상관없고 자신이 무엇을 했는지 중요 자신이 사용하는 사이트에서 불편했던 걸 개선해보는 경험이 오히려 더 중요하다 4. 면접팁 프로토타입설명 : 상속틀징 const와 let의 차이 설명 현업에서 가장 큰 이슈는 협엽, 협업에서 일어난 의사소통문제를 어떻게 해결했는지는 무조건 물어본다 5. 답변듣고싶었던 질문들 프로젝트를 구현 시 필요한 프레임워크를 선택하는 기준이 궁금합니다. 각 프로젝트 성향마다 알맞는 프레임워크가 있는데 그 프레임워크를 선택하실때 프로토타입을 제작해보시나요? 일정이 촉박하다면 어떻게 선택하시나요? 예시 : (ex리덕스, 몹엑스) 비슷한 라이브러리가 존재할 시 깃허브 별 개수로 정하기 등등 코드리뷰 도입 시 자존심이 강한 동료분들이 있을수도 있고 계급으로 인해 의견을 제시하기 힘든 경우가 있을거라 생각합니다. 이러한 상황을 겪어보셨다면 어떻게 해결하셨는지 궁금합니다. 프론트 엔드 포폴 만들려면 nodejs로 curd부터 만들어야 붙일 수 있지 않나요? 결국에 그렇다면 풀스택 공부해야 포트폴리오 제작 할 수 있는거 아닌가요?포폴정도의 정적 페이지면 프론트 빌드하고 S3 정적 페이지 서비스 이용하시면 서버 없어도 괜찮았습니다. 6. 후기연사님 두분 다 어쩜 그렇게 말씀을 재미있게 하시는 지 강연하는 두시간내내 빵빵터지며 재미있게 들었다.역시 중요키워드는 의사소통이다.그리고 IT업계는 변화의 속도가 빠른데 거기서 적응하는 것도 중요하다. 우아한테크캠프같은 경우 이번년에 도전했는데 아쉽지않게(?) 떨어졌다.도전을 했으니 실패가 있는 거겠지.도전하지않았으면 실패도 없었을거라는 마음가짐으로 가볍게 털고 다시 공부를 시작했다. 강연을 들으면서 토이프로젝트에 대해 많이 생각해보게되었고 좋은 리프레시시간이었다. 그런데 강연에서 말해준 중요한 것들이 이렇게나 많고 해야할 것들도 이렇게나 많으면 결국 프론트앤드니 백앤드니한 경계는 사라지고 풀스택개발자가 되어야만 한다는 느김이 들었다.ㅋㅋㅋㅋㅋ열심히하자!","link":"/2020/07/15/200715webina/"},{"title":"[ITWILL : JSP]Wrapper클래스, 오토 박싱과 오토 언박싱, hierarchy확인법","text":"ITWILL학원 : 26강 JSP기초 BY 정규태강사1. Wrapper클래스 기본형 데이터를 객체로 사용할 수 있도록 만든 클래스 기본형 데이터의 본질은 그대로두고, 해당 인터페이스만 제공하는 클래스이다. 자바는 대소문자를 구분하기때문에 아래 두 형태는 서로 다른 값이다. 기본형데이터타입은 상속이 불가능하다. why? 객체가 아니니까. 상속은 객체간의 관계를 표현하는 것. 기본형데이터타입 Wrapper클래스(참조형데이터타입) byte Byte short Short int Integer float Float double Double boolean Boolean char Character 2. 오토 박싱과 오토 언박싱기본적인 박싱과 언박싱이 있던 개념이지만 JDK6이후로 오토박싱과 오토언박싱이 가능해졌음이건 새로운 개념이며 형변환개념과 다르다. 박싱 : 값 형식의 데이터(기본형데이터타입)를 참조형데이터타입인 Wrapper클래스로 변환하는 것 메모리상에서 stack에 있는 값을 heap에 전달함. 언박싱 : Wrapper클래스를 기본형데이터타입으로 변환하는 것 heap에 있는 값을 stack에 전달함. 예시 12345678910111213141516int num01 = 100;int num02; //래퍼런스만 준비Integer inum01 = new Integer(200); //인티져는 객체이기때문에 생성해줘야함Integer inum02; //래퍼런스만 준비//JDK1.6이전inum02 = new Integer(num01); //박싱 : 직접 객체안에 담아야함num02 = inum01.intValue(); //언박싱System.out.printf(\"박싱 : %d, 언박싱 : %d%n\", inum02, num02);//JDK1.6이후inum02 = num01; //오토박싱num02 = inum01; //오토언박싱System.out.printf(\"박싱 : %d, 언박싱 : %d%n\", inum02, num02); 3. inner 클래스접근제어자(Access Modifier) public 누구나 접근 가능하다 public클래스는 main메서드를 포함하고 있는 클래스이다. 하나의 파일에 하나의 public클래스만 있어야한다. 진짜 딱 하나만 사용가능할까? inner 클래스에서 public클래스 추가 생성이 가능하다 12345class a{ public class b{ //이너클래스 }} 4. 클래스명에서 키보드 f3, f4를 누르면클래스명에서 아래 키보드를 누르면 상속관계(hierarchy)를 확인할 수 있다. f3 : 어떤 클래스나 인터페이스를 상속받는 지 알수있음. f4 : 계층도를 나타냄.","link":"/2020/07/16/200716jspi/"},{"title":"[ITWILL : JSP]자료구조1 : Collections Framwork(Set계열, List계열)","text":"ITWILL학원 : 26강 JSP기초 BY 정규태강사 1. 컬렉션 클래스의 제네릭 (Collections.Generic) 컬렉션프레임워크 또는 컬렉션 클래스 또는 컨테이너라고도 부른다. 즉 값을 담는 그릇이라는 의미이다. 그런데 그 값의 성격에 따라서 컨테이너의 성격이 조금씩 달라진다. 자바에서는 다양한 상황에서 사용할 수 있는 다양한 컨테이너를 제공하는데 이것을 컬렉션즈 프래임워크라고 부른다. 참고링크 : 생활코딩 컬렉션즈프레임워크 JDK5 버전이후부터 사용가능 자료구조 학문을 구현한 클래스이다. 요소라는 데이터를 가변인자의 객체에 저장하는 형태이다. 컬렉션 클래스들은 Collections 인터페이스의 하위 클래스/인터페이스이다. Collections인터페이스의 상위클래스는 Object클래스(최상위객체)이다. 컬렉션 클래스들은 toString()메서드가 구현되어있다. 공통 장점 : 데이터의 삽입, 삭제, 검색기능이 뛰어남. 주요 종류 : Set List Map(Table포함) 공통메서드 : 변수명.add : 데이터저장 변수명.get(index) : 배열의 index에 위치해 있는 값 출력 변수명.set(idx, 변경값) : 데이터변경 변수명.size() : 길이를 반환 iterator() 2. Iterator Iterator는 반복자, 즉 반복문의 동작을 할 수 있는 인터페이스이다. 해당 컬렉션에서 현재위치, 다음단계로의 이동동작을 반복가능하게 한다. 모든 컬렉션클래스들은 슈퍼클래스의 iterator()메서드를 모두 사용가능하다. Iterator 패턴 : 디자인패턴중의 하나로 중급개발자로 가는 길목에 이다. [디자인패턴](https://gmlwj d9405.github.io/2018/07/06/design-pattern.html)은 필수이므로 꼭 따로 학습 해볼것 3. Set계열의 컬렉션 클래스 서로 다른타입의 데이터를 저장가능함. why? Object로 업캐스팅을 할 것이기때문에! 순서를 포함하지 않음 데이터 중복을 허용하지 않음. Set계열은 중복x, 순서정보가 없기때문에 반복문을 사용할 수가 없다 -&gt; 반복문 대신 interator 사용 예 : HashSet 클래스 : Set 인터페이스를 구현한 서브클래스이다. 1234567891011121314151617181920212223242526272829303132333435363738public static void main(String[] args) { // TODO Auto-generated method stub //Set&lt;E&gt; //Set set = new Set(); //인터페이스는 객체를 생성할 수 없다 Set set = new HashSet(); //업캐스팅(HashSet -&gt; Set) System.out.println(\"요소의 갯수 : \"+set.size()); set.add(\"하나\"); set.add(\"2\"); set.add(\"3.14\"); set.add(\"c\"); set.add(5); set.add(5); set.add(5); System.out.println(\"요소의 갯수 : \"+set.size()); System.out.println(set); System.out.println(\"ㅡㅡㅡㅡㅡSet계열 반복문사용\"); //Set계열은 중복x, 순서정보가 없기때문에 반복문을 사용할 수가 없다 //이때 사용하는 것이 interator이다 Iterator is = set.iterator(); while(is.hasNext()){ System.out.println(is.next()); }}//출력값요소의 갯수 : 0요소의 갯수 : 5 //중복을 허용하지않는다.[2, c, 5, 3.14, 하나] //중복을 허용하지않는다. 내가 넣은 순서대로 출력되지않는다.ㅡㅡㅡㅡㅡSet계열 반복문사용2c53.14하나 4. List계열의 컬렉션 클래스 서로 다른타입의 데이터를 저장가능함. why? Object로 업캐스팅을 할 것이기때문에! 순서가 저장됨 how? 저장할때 요소의 위치(index)값을 사용하기때문에! 요소의 위치는 배열처럼 0부터 접근하면 됨 데이터 중복 허용 Set계열보다 List계열을 더 많이 사용함 예 : ArrayList, Vector, Stack, LinkedList 4-1. ArrayList 장점 : 고정길이 배열의 단점을 보완. 저장공간의 크기가 필요에 따라 자동으로 증가함.가장 많이 사용한다. 예시 : ArrayList 데이터 입력 및 출력 123456789101112131415161718ArrayList list = new ArrayList();list.add(\"하나\");list.add(\"2\");list.add(\"3.14\");list.add(\"c\");list.add(5);list.add(5);list.add(5);System.out.println(\"요소의 갯수 : \"+ list.size());System.out.println(list);System.out.println(list.get(3));//출력값요소의 갯수 : 7[하나, 2, 3.14, c, 5, 5, 5]c 예시 : ArrayList 반복문사용순서(index)값이 저장되기때문에 Iterator가 아닌 반복문을 사용할 수 있다.전체 데이터를 출력하는 반복문이다. System.out 대신 System.err 입력하면 에러형태(빨간글자)로 콘솔에 출력된다 123456789101112131415161718192021222324252627282930System.out.println(\"ㅡㅡㅡㅡㅡfor문\");for(int i=0; i&lt;list.size(); i++){ System.out.println(list.get(i));}System.out.println(\"ㅡㅡㅡㅡㅡ확장for문\");//확장 for문 for-each//for(해당 타입의 요소 변수명 : 반복할배열/컬렉션){}for(Object i : list){ //System.err.println(i); 에러형태(빨간글자)로 콘솔에 출력 System.out.println(i);}//출력값ㅡㅡㅡㅡㅡfor문하나23.14c555ㅡㅡㅡㅡㅡ확장for문하나23.14c555 예시 : index활용 1234567891011121314151617181920System.out.println(\"ㅡㅡㅡㅡㅡindexof 사용\");System.out.println(list.indexOf(5)); System.out.println(\"ㅡㅡㅡㅡㅡindex활용한 add/set\");//기존데이터System.out.println(list);//데이터추가list.add(3, \"안녕하세요\");System.out.println(list);//데이터변경list.set(3, \"하이\");System.out.println(list);//출력값ㅡㅡㅡㅡㅡindexof4ㅡㅡㅡㅡㅡindex활용한 add[하나, 2, 3.14, c, 5, 5, 5][하나, 2, 3.14, 안녕하세요, c, 5, 5, 5][하나, 2, 3.14, 하이, c, 5, 5, 5] 예시 : 조건에 따른 데이터변경(반복문 사용)배열에 “2”가 있는 경우 “two”로 변경해보자 내코드 123456789//내코드for(int i=0; i&lt;list.size(); i++){ if(list.get(i) == \"2\"){ list.set(i, \"two\"); }}System.out.println(list);//출력값[하나, two, 3.14, 하이, c, 5, 5, 5] 강사님코드 indexOf()는 데이터가 존재할 경우 index값을 출력하고 없는 경우 -1을 출력한다. 12345678910//강사님코드System.out.println(list.indexOf(\"2\")); //\"2\"의 index위치찾기int value = list.indexOf(\"2\");if(value != -1){ //데이터가 존재할 경우 list.set(value, \"two\");}System.out.println(list);//출력값1[하나, two, 3.14, 하이, c, 5, 5, 5] 비교 : 조건에 따른 데이터변경(Iterator사용) 다음요소를 가지고있으면 true-&gt;반복문실행 없으면 false-&gt;반복문종료 12345//list객체를 반복할 수 있도록 iterator 객체로 변환Iterator iter = list.iterator();while(iter.hasNext()){ //다음요소를 가지고있으면 true-&gt;반복문실행 없으면 false-&gt;반복문종료 System.out.println(iter.next());} 4-2. Vector Vector : 자동으로 길이가 늘어나는 가변list ArrayList - 동기화 기능 X : 상대적으로 클라이언트측에서 많이 사용함 Vector - 동기화 기능 O : 상대적으로 서버측에서 많이 사용함 거의 대부분이 ArrayList를 쓰는 상황이다. 주니어레벨에서는 잘 모르겠다싶으면 ArrayList를 사용하면 됨. 1234567891011121314151617181920212223242526272829303132//1. Vector 생성// Vector생성시 4칸짜리 배열생성 후 필요시마다 3칸씩 추가됨 -&gt; 효율적사용가능Vector vec = new Vector(4,3);//2. Vector 크기체크System.out.println(\"백터의 크기 : \"+vec.size());//3 Vector 용량체크System.out.println(\"백터의 용량 : \"+vec.capacity());//4.실무에서 더미데이터를 담을때 for문을 주로 사용한다for(int i=0; i&lt;5; i++){ vec.add(i*10);}System.out.println(vec);System.out.println(\"백터의 크기 : \"+vec.size());System.out.println(\"백터의 용량 : \"+vec.capacity());System.out.println(\"백터첫번째요소 : \"+vec.firstElement());System.out.println(\"백터두번째요소 : \"+vec.get(1));//System.out.println(\"백터마지막요소 : \"+vec.lastElement());//출력값백터의 크기 : 0 =&gt; //출력값이 4가 아니라 0인 이유는? size는 요소의 값이다. 요소가 없으면 값은 0이 출력된다. 0 백터의 용량 : 4[0, 10, 20, 30, 40]백터의 크기 : 5백터의 용량 : 7백터첫번째요소 : 0백터두번째요소 : 10백터마지막요소 : 40 4-3. 배열을 생성해보자 내코드내코드는 for문을 사용했다. 12345678910111213System.out.println(\"ㅡㅡㅡㅡㅡ 배열생성\");//대괄호안에 인자를 넣으면 에러가 발생함. 대괄호안에 숫자 넣으면 안됨!//주로 안드로이드에서 아래의 배열생성방식을 사용함.double[] arr = new double[]{1.1,1.2,1.3,1.4,1.5,1.6,1.7};Vector vec2 = new Vector(5,5); //백터생성//내코드for(int i=0; i&lt;arr.length; i++){ vec2.add(arr[i]);}System.out.println(vec2);//출력값//[1.1, 1.2, 1.3, 1.4, 1.5, 1.6, 1.7] 강사님코드강사님은 for-each를 사용한 코드이다. 123456789double[] arr = new double[]{1.1,1.2,1.3,1.4,1.5,1.6,1.7};Vector vec2 = new Vector(5,5); //백터생성//강사님코드for(double d : arr){ vec2.add(d);}System.out.println(vec2);//출력값//[1.1, 1.2, 1.3, 1.4, 1.5, 1.6, 1.7] 4-4. 요소검색1234567891011121314151617181920212223242526272829303132333435System.out.println(\"ㅡㅡㅡㅡㅡ요소검색\");//[1.5]요소가 있으면 해당요소의 위치출력, 없으면 -1출력int result = vec2.indexOf(1.5);if(result != -1){ System.out.println(\"검색성공 : \"+result);}else{ System.out.println(\"검색실패 : \"+result);}System.out.println(\"ㅡㅡㅡㅡㅡ요소삭제1 : indexOf사용\");//[1.6]요소가 있으면 해당요소를 삭제int result2 = vec2.indexOf(1.7);if(result2 != -1){ vec2.remove(result2); System.out.println(\"삭제성공 : \"+vec2);}else{ System.out.println(\"삭제실패 : \"+result2);}System.out.println(\"ㅡㅡㅡㅡㅡ요소삭제2 : contains\");double delValue = 45.6;if(vec2.contains(delValue)){ //괄호한의 delValue가 포함되어 있으면 true vec2.remove(delValue); System.out.println(\"삭제성공 : \"+vec2);}else{ System.out.println(\"삭제실패 : \"+vec2);}//출력값ㅡㅡㅡㅡㅡ요소검색검색성공 : 4ㅡㅡㅡㅡㅡ요소삭제1 : indexOf사용삭제성공 : [1.1, 1.2, 1.3, 1.4, 1.5, 1.6]ㅡㅡㅡㅡㅡ요소삭제2 : contains삭제실패 : [1.1, 1.2, 1.3, 1.4, 1.5, 1.6]","link":"/2020/07/16/200716jspi2/"},{"title":"[ITWILL : JAVA] JAVA전체목록List","text":"ITWILL학원 : JAVA BY 윤미영강사자바기초 컴퓨터와 자바 기초이론 자바접근자 public과 private, 자바 데이터 형태, 모든 연산자들, A++과 ++A의 차이, (조건)? TRUE:FALSE Scanner라이브러리와 equals()를 이용한 사칙연산계산기, if문과 switch문 변환 예시, 반복문과 break Method, 변수와 상수, 배열 Array, new키워드 기본 반복문암기, String인지 체크(typeof), N개의 양수를 받아 최대값 출력, char와 String의 차이점 산술연산자 리터럴(literal), byte + byte가 왜 에러날까, int VS Integer, void와 int차이 비트연산자, 이진수와 십진수 변환 자바포맷스트링, Random 숫자 뽑기, 상황별 반복문 추천(for, while, do~while) 369게임만들기 배열과 함께쓰는 메서드 클래스 객체지향언어, 클래스 : 멤버변수vs지역변수 클래스 : 메서드, 객체생성(객체화 = 인스턴스화), 오버로딩(overloading) 클래스 : 생성자, new역할, this키워드용법 클래스 : 매개변수위치에 따른 차이(생성자 vs 메서드), private멤버변수 getter와 setter로 가져다쓰기 클래스 : 상속, 메서드 오버라이딩, super() 클래스 : 다형성(Polymorphism) 클래스 : 패키지, 임포트, 접근제어자, 데이터 은닉과 보호, 싱글턴디자인패턴 기본클래스 이외에 자바 구성요소 기본클래스 이외에 자바 구성요소1 : 추상클래스, 인터페이스 기본클래스 이외에 자바 구성요소2 : enum 기본클래스 이외에 자바 구성요소3 : annotation, generic 자바개념 예외처리 로깅, 디버깅 내부클래스","link":"/2020/11/16/javaList/"},{"title":"[ITWILL : DB]트랜잭션(Transaction), 치환변수, save명령어, 리소스부족에러발생시","text":"ITWILL학원 : 14강 Database BY 정지윤강사1. 트랜잭션(Transaction) 아주 중요한 개념 하나의 논리적인 작업단위 논리적이다보니 언제 트랜잭션이 시작되고 끝나는지 눈에 보이지않는 작업이다. 여러 DML이 모여서 하나의 트랜잭션으로 구성되기도 함 : insert, update, delete DML 작업 후 commit, rollback으로 트랜잭션 종료해야함 하나의 DDL 구문이 하나의 트랜잭션으로 구성되기도 함 : create, alter, drop, truncate 하나의 DCL 구문이 하나의 트랜잭션으로 구성되기도 함 : grant, revoke 1-1. 트랜잭션 시작 및 종료 트랜잭션 시작 : 첫번째 DML구문이 실행 시 트랜잭션 종료 : commit, rollback실행 시 DDL 또는 DCL구문 실행 시 (autocommit) SQL PLUS 정상 종료 시 (autocommit) 터미널창 X를 닫는 건 비정상적인 종료 터미널창에서 EXIT() 명령어를 통한 종료는 정상적인 종료 SQL Developer 정상 종료 시 (autocommit) SQL Developer의 X를 누르면 저장하시겠습니까 팝업이 뜨는데 저장 안하고 종료하면 비정상적인 종료 SQL Developer의 X를 누르면 저장하시겠습니까 팝업이 뜨는데 저장하고 종료하면 정상적인 종료 시스템 장애 시 (autorollback) savepoint 트랜잭션안에서만 사용가능 1$ savepoint 세이브포인트명 2. 치환변수아래 쿼리에서 모든 건 다 똑같고 employee_id만 100,101,102,… 변화시키고싶다.이때 치환변수를 이용하면 훨씬 용이하다 123$ select employee_id, last_name, salary$ from employees$ where employee_id = 치환변수 치환변수사용법 : &변수명 변수명은 항상 의미있게 작성해야한다. 문자, 날짜가 들어와야하는 데이터인 경우는 ‘&변수명’로 입력하면 된다. 문자는 대소문자를 구분하므로 lower()나 upper()를 양쪽변에 같이 써서 맞춰주면 된다. 123456789//데이터가 숫자$ select employee_id, last_name, salary$ from employees$ where employee_id = &amp;emp_id//데이터가 문자나 날짜$ select employee_id, last_name, salary$ from employees$ where lower(last_name) = lower('&amp;last_name') 쿼리구문을 작성하면 자동으로 변수를 물어봐준다. 이에 응답하면 데이터를 출력해준다. 3. save명령어 : 자주 실행되는 쿼리구문 저장하기만약 회사가 department를 자주 생성하는 회사이다.이럴경우 치환변수를 넣어 쿼리구문을 저장하고 필요할때마다 편하게꺼내서 실행할 수 있다.자주 실행되는 쿼리구문은 save 명령어로 저장한다 3-1. save명령어로 쿼리구문을 저장하는 방법 sql plus에서만 있는 명령어. sql develoepr는 save 명령어가 없다. why? 걍 저장버튼을 누르면 되기때문 1234567//1. SQL구문입력$ insert into departments$ values (&amp;dept_id, '&amp;dept_name', &amp;mgr_id, &amp;loc_id)//2. 첫 치환변수들 물음에 답하기//3. insert성공//4. save명령어작성 save 저장원하는경로/저장할이름.sql 3-2. save명령어 저장된 쿼리구문 사용하는 방법 sql plus에서만 있는 명령어. sql develoepr는 @명령어가 없다. why? 걍 열기버튼을 누르면 되기때문 1$ @/저장한경로/저장한이름.sql 예시 1$ @/home/oracle/new_dept.sql 4. 터미널창에서 리소스부족에러 발생시보통은 유저가 많이 접속된 경우에 리소스부족에러가 자주 발생한다.따라서 제일 먼저 의심해봐야하는 건 유저가 동시접속되어있지않은가이다.터미널창에서 exit 명령어를 이용해서 접속되어있는 유저 한명씩 종료시켜준다. 마지막 한 유저만 남을 때까지.","link":"/2020/07/17/200717dbi/"},{"title":"[ITWILL : DB] DB전체목록List","text":"ITWILL학원 : Database BY 정지윤강사리눅스와 SQL 간단 리눅스명령어(복붙포함), Oracle 명령어, DB작동방법, 접속순서 virtualBox로 가상컴퓨터만들어서 리눅스Linux 설치하기 CUI환경 VS GUI환경, 리눅스명령어자세히, vi단축키 SQL DEVELOPER사용방법 DB기초 DB기초이론, DBMS 데이터베이스기초활용 SQL 명령어 제약조건의 컬럼레벨과 테이블레벨문법, 제약조건 5가지, 버퍼에 있는 자주 사용할 쿼리구문을 저장하는 방법 select as from where, order by, 동일유저 동시접속 가능, 트랜잭션 commit과 rollback SQL 중요개념 트랜잭션(Transaction), 치환변수, save명령어, 리소스부족에러발생시 Select 구문 Select 구문을 사용한 데이터 검색, null VS 0 VS 공백, Distinct 테이블 전체목록조회, 테이블구조조회, WHERE(조건문)절 Order by 정렬 단일행함수 단일행함수 : 문자함수 단일행함수 : 숫자함수, 날짜함수 단일행함수 : 변환함수, 일반함수 여러행함수 여러행함수 : 그룹함수 여러행함수 : Group by절, Having절 중요 구문 JOIN Subquery, inlineview 데이터조작어 (DML) / 데이터정의어 (DDL) 데이터조작어DML : insert/update/delete구문 데이터정의어DDL : table 생성 table 복사, varchar2와 varchar와 char비교 데이터정의어DDL : 테이블수정(컬럼수정, 제약조건수정, 컬럼명수정, 제약조건명수정), 테이블명변경, 테이블삭제, 테이블절단, truncate과 delete과 drop차이 SQL의 OBJECT 종류 SQL의 OBJECT종류 : SQL의 OBJECT종류, view SQL의 OBJECT종류 : 시퀀스(Sequence) SQL의 OBJECT종류 : 인덱스(Index), 시노님(Synonym)","link":"/2020/11/16/DBList/"},{"title":"[ITWILL : DB]JOIN","text":"ITWILL학원 : 12강 Database BY 정지윤강사1. join 조인여러 테이블에 있는 데이터를 합쳐서 출력.join은 FROM절에 작성된다.join은 정말 많이 사용된다. join(조인) 유형 Natural Join Using On : self-join, Nonequijoin Outer join : left, right, full Cartesian Product : cross join 2. Natural Join오라클이 다중 테이블을 뒤져봐서 컬럼명이 같고 데이터타입이 같은 컬럼을 기준으로 join을 하여 데이터를 보여준다. 예시 :test1테이블과 test2테이블을 natural join해서 오라클이 직접 두 테이블을 찾아보고 컬럼명과 데이터타입리 같은 컬럼을 기준으로 모든 컬럼을 출력한다.이때 오라클이 자동으로 찾은 기준 컬럼은 양쪽 테이블에서 컬럼명이 같고 데이터타입이 같다 12$ select * $ from test1 natural join test2; 만약 컬럼명이 같도 데이터타입이 같은 컬럼이 한 개이상이면 어떻게 될까?해당 컬럼들의 조합값으로 기준으로 조인을 시켜준다. 3. Using 여러 컬럼의 이름은 동일하지만 데이터 유형이 다른 경우 using 절을 사용한다. 꼭 괄호를 작성하고 그 괄호안에 컬럼명을 넣어줘야한다 예시 :test1테이블과 test2테이블을 ex이라는 컬럼을 기준으로 join해서 모든 컬럼을 출력한다.test1과 test2테이블의 name컬럼명이 같지만 데이터 유형이 다를때 using사용한다. 123$ select * $ from test1 join test2$ using (ex); 테이블의 엘리아스를 사용하여 컬럼들이 어느 소속인지 엘리아스 접두어를 컬럼앞에 붙여주면 명령문 구문 분석 속도를 향상시킨다. 하지만 using절에서 참조하고 있는 컬럼은 절대 엘리야스 붙이면 안된다. 4. On 가장 기본이 되는 join유형이고 가장 많이 사용한다. 컬럼명이 달르고 데이터타입이 달라도 상관없이 사용가능하다. 예시 :test1테이블과 test2테이블을 ex이라는 컬럼을 기준으로 join해서 모든 컬럼을 출력한다.test1과 test2테이블의 name컬럼명도 다르고 데이터 유형이 달라도 사용할 수 있는 것이 on이다. 123$ select * $ from test1 join test2$ on (test1.ex = test2.example); self-join : 하나의 테이블을 엘리아스를 달리 주면 한 개의 테이블로 join이 가능하다많이 사용된다. 예를 들면 회사의 매니저들이 어떤 사원들을 관리하고 있는지 출력하고 싶다.이때 회사의 매니저들도 사원이기에 employee_id가 있기에 결국 내 테이블을 2번 참조해야하는 self-join이 된다 123$ select manager.name, worker.name$ from employees worker join employees manager$ on worker.manager_id = manager.employee_id); 5. Natural Join, Useing, On 비교 절종류 컬럼명 데이터타입 엘리아스 Natural Join 일치 일치 join할 테이블의 컬럼명들 중 같은 컬럼명 있다면 필수 useing 일치 상관없음 컬럼의 엘리아스 쓰면안됨 on 상관없음 상관없음 필수 비교 : 아래 세개는 결과값이 똑같다. from departments natural join location from departments d join location l using(location_id) from departments d join location l on d.location_id = l.loc_id) 6. non-equi join과 equi join 비교equi(이퀴)조건과 non-equi(넌 이퀴)조건을 비교해보자 절종류 특징 종류 non-equi join 조인조건에 동등연산자가 사용된 조인 유형 Natural join, Using join, On(=) join equi join 조인조건에 동등연산자가 아닌 그 외 다른 비교연산자가 사용된 조인 유형 On(=이 아닌 비교연산자) join 7. inner join과 outer join 비교 절종류 특징 종류 inner join 조인조건을 만족하는 행만 반환하는 조인 유형 Natural join, Using join, On join outer join 조인조건을 만족하는 행과 조인조건을 만족하지않는 행을 모두 반환하는 조인 유형 left outer join, right outer join, full outer join 8.Cartesian Product (카테시안 곱 = 곱집합) 한 테이블의 모든 행을 다른 테이블의 모든 행과 조인한다. 모든 경우의 수를 나열. 다수의 행을 생성하므로 결과는 그다지 유용하지 않다. 9. cross join 두 테이블의 Cartesian Product 를 생성하는 join작업이다. 123$ select last_name, department_name$ from employees$ cross join departments 10. join 예시employees 테이블로부터 모든 사원의 last_name, employee_id, 매니저이름, manager_id를 함께 출력하는 쿼리를 작성하시오 join에 있어 자주 틀리는 오답도 확인해둬야한다. 12345678910111213141516//첫번째 방법$ select e1.last_name as &quot;Employee&quot;, e1.employee_id as &quot;Emp#&quot;, e2.last_name as &quot;Manager&quot;, e1.manager_id as &quot;Mgr#&quot;$ from employees e1 join employees e2$ on (e1.manager_id = e2.employee_id);//두번째 방법$ select e1.last_name as &quot;Employee&quot;, e1.employee_id as &quot;Emp#&quot;, e2.last_name as &quot;Manager&quot;, e2.employees_id as &quot;Mgr#&quot;$ from employees e1 join employees e2$ on (e1.manager_id = e2.employee_id);//오답$ select e1.last_name as &quot;Employee&quot;, e1.employee_id as &quot;Emp#&quot;, e2.last_name as &quot;Manager&quot;, e2.manager_id as &quot;Mgr#&quot;$ from employees e1 join employees e2$ on (e1.manager_id = e2.employee_id);","link":"/2020/07/10/200710dbi2/"},{"title":"[ITWILL : WEB]더미텍스트&#x2F;이미지만들기(Lorem Ipsum&#x2F;placeholder), 기본선택자 종류 및 우선순위, 섹션요소","text":"ITWILL학원 : 9강 WEB(HTML, CSS) BY 김영희1. 더미데이터 만들기1-1. Lorem Ipsum 로렘입숨 : 더미텍스트만들기 줄여서 립숨, lipsum 임의의 텍스트를 넣어서 HTML구조와 CSS 디자인을 보고싶을때 자주 사용 vscode에서는 lorem검색하고 tab치면 자동완성 이클립스(Eclipse)는 아래 사이트에서 원하는 모양대로 설정뒤에 복붙하면 된다 참고링크 : 입숨 1-2. placeholder : 더미이미지만들기123&lt;img src=\"http://via.placeholder.com/가로길이x세로길이/바탕색코드/글자색코드?text=이미지안글자\" /&gt;//예시&lt;img src=\"http://via.placeholder.com/400x600/000000/ffffff?text=400x600\"&gt; 참고링크 : placeholder 2. 기본 선택자 종류 및 우선순위선택자는 기본선택자와 가상선택자가 있다 그 중 기본선택자를 보자. 기본선택자종류 선택자 우선순위기본적으로 가까울수록 우선순위가 높다.아래 이미지로 대략적으로 확인할 수 있고 위의 이미지처럼 계산할 수 있다계산해주는 사이트도 있다 참고링크 : css 선택자 우선순위 계산사이트 주요 가상선택자종류 3. 섹션요소홈페이지 용도별 태그명이 다르다. BODY, HEADER, NAV, SECTION, ARTICLE, MAIN, ASIDE, FOOTER","link":"/2020/07/17/200717webi/"},{"title":"[ITWILL : WEB]폰트속성","text":"ITWILL학원 : 9강 WEB(HTML, CSS) BY 김영희1. font속성(폰트속성)속성은 크게 두가지 그룹이 있다 font text 그 중 폰트속성 먼저 알아보면 아래와 같다. font 속성종류 특징 font-size 글자 크기 font-weight 글자 두께 font-style 글자 기울기 font-family 글자(서체) 지정 2. font-size다양한 단위가 있다.실무에서 주로 쓰이는 단위는 px, pt(포인트)이다. 참고링크 : 폰트사이즈변환 3.font-family한글 본문은 고민하지말고 맑은 고딕으로 쓰면 된다. 기본폰트 :기본글꼴종류는 크게 세 가지로 나뉜다 Sans-serif 고딕형 : sans의 의미는 without이다. 글자의 끝이 딱 떨어지는 느낌, 가독성이 제일 좋음 Serif : 끝에 장식이 있는 클래식한 느낌 Monospace : 고정글꼴. width가 same한 글꼴이다.글꼴이름을 넣을때는 쌍따옴표를 넣고 글꼴종류를 적을때는 쌍따옴표를 적으면 안된다. 참고링크 : w3schol 웹폰트 :폰트패밀리로 기본폰트를 지정해주었을 때, 만약 사용자의 컴퓨터에 해당 폰트가 없다면 폰트 적용이 아예 안된다.이를 예방하기위해 웹폰트를 사용할 수 있다. 사용자가 굳이 다운로드하지않더라고 웹폰트가 적용된 채로 홈페이지를 볼 수 있다. 웹폰트는 무료도 있고 유료도 있지만 제일 유명한 구글폰트는 무료이다. 구글웹폰트 구글웹폰트깃허브 : 한글 눈누 : 한글폰트로 유로뿐만 아니라 무료상업용웹폰트도 쉽게 찾을 수 있다. 웹폰트 사용법은 간단하다. 해당 웹폰트의 html의 link태그를 복사하여 head태그 사이에 붙여넣기. 해당 웹폰트의 css코드를 복사하여 css페이지에 붙여넣기.","link":"/2020/07/17/200717webi2/"},{"title":"오픈소스참여를 위한 GIT&#x2F;GITHUB 실습","text":"1. GIT 버전관리 및 GIT 설정(GIT CONFIG)1-1. 깃이란? git은 텍스트파일로 변화내역(역사)를 관리하는 것 참고링크 : git 버전관리 1-2. 오픈소스 개발 참여를 위한 Git config(깃설정) Github ID/PW 캐싱데이터 삭제 삭제해도 문제없음 목적 : 다른 github계정과 충돌방지 12$ git config --global --unset credential.helper$ git config --system --unset credential.helper 내 github계정연결 차후 소스코드 커밋파일에 저자정보에 기입됨 12$ git config --global user.email \"본인이메일주소\"$ git config --global user.name \"본인이름\" 12$ git config --global user.email \"본인이메일주소\"$ git config --global user.name \"본인이름\" 소스코드 수정할 기본 편집기 설정 원하는 편집기 설정가능 : vim, emacs, nano, notepad 등 12345# 예시 : nano편집기로 설정$ git config --global core.editor nano# nano편집기 사용시 설치필요$ sudo apt install -y nano git 설정 내용 확인 수정원할시 위의 명령어로 재입력하면 덮어쓰기됨. 1$ git config --list 2. 오픈소스 참여를 위한 GIT 순서 (팀협업)오픈소스에 참여하기 위해서는 공식 오픈소스 프로젝트 레포지토리에서 프로젝트를 복사하여 내 로컬에서 사용할 수 있게해야한다. 공식 레포에가서 Fork버튼을 누른다. Fork해온 레포의 code를 클릭하여 Clone with HTTPS를 복사한다. git bash 또는 IDE의 터미널을 연다. 아래 명령어를 입력한다. 123456# 오픈소스 프로젝트 소스코드 준비$ git clone 복사한 https://github.com/본인깃허브ID/fork한프로젝트명.git$ cd fork완료한폴더 -&gt; (master) 라는 브랜치명이 생성됨. # remote저장소에 공식레포 upstream으로 준비$ git remote add upstream 공식레포주소 코딩 후 커밋한다.내 fork레포에 저장됨 123456789101112131415161718# 1. 내가 수정한 파일 add하기$ git add 내가수정한파일명# 2. add상태확인$ git status# 3. commit하기$ git commit -m \"커밋이유 자세히\"# 4. 내가 작성한 커밋 확인하기# q키 누르면 나감.$ git show# 5. 현재 작업 브랜치 확인$ git branch# 6. 내 fork저장소에 업로드하기$ git push origin 브랜치명 공식저장소에 PR하기현재 내 커밋은 내가 fork해 온 내 레포에만 있다.내가 수정한 코드를 공식 레포에 올려달라고(Merge) 요청해야한다(Pull request).하지만 내가 코드수정하는 동안 공식레포의 base가 달라질수있다.따라서 rebase한 뒤 내 커밋을 얹어서 함께 push해야한다. fetch : 최신 base가져오기 rebase : rewind : 내 커밋전의 과거시점으로 감 가져온 fetch를 그 위에 올린다(다른사람의 PR한 커밋포함) 그 위에 내 커밋을 올린다 (이때 다른사람의 커밋과 내커밋이 충돌날수있다) 자동PR됨 123456789101112131415161718192021222324252627282930# 원격저장소확인$ git remote -v# 공식 upstream 저장소에서 최신 commit history가져오기$ git fetch upstream master# 최신 comit history 기준으로 베이스 갱신 = rebase 감기$ git rebase upstream/master# 충돌 상황확인하기$ git status$ git diff# 충돌부분 수정후 add하기$ vi 수정할려는파일명(GIT BASH상에서) 또는 IDE상에서는 패널에 파일열어서 수정가능$ git add 수정할려는파일명# rebase 풀기$ git rebase --continue# PR 하기 두가지방법# 첫번째 : 추천방법$ git push origin 브랜치명# PR 하기 예시 : master 브랜치인 겨우$ git push origin master -f# 두번째 : PR시 force push(강제푸시)사용# 두번째 방법을 이용하면 내 fork한 저장소가 수정되면서 PR자동갱신된다. 따라서 아래 7번8번을 생략할수있다.# 강제푸시이므로 팀프로젝트에 이용시 꼬일 수 있다$ git push --force origin master upstream저장소의 pull request게시판에서 회색 merge버튼이 초록색으로 변했는지 확인후 maintainer에게 merge요청하기 내 fork저장소도 갱신하기.내 fork한 저장소도 갱신해야한다. 1234567# upstream(팀프로젝트)에서 새로운 commit가져오기$ git fetch upstream master# 내 fork한 레포에 최신 master브랜치에 가져온commit내용 갱신하기$ git checkout master$ git reset --hard upstream/master$ git push origin master -f 2-1.fetch 와 pull 차이 pull은 하는 순간 merge가 된다. fetch + merge = pull 2-2. force push fork한 저장소가 꼬인 경우는 로컬에서 잘 정리해서 force push(강제푸시)를 쓰면된다. 나혼자 쓰니까 괜찬. 하지만 다같이쓰는 저장소는 절대 force를 쓰면 안된다. 2-3. origin의 의미 수업중 질문 : origin은 master처럼 기본적으로 지정된 폴더 이름인가요? origin이 어떤 의미를 가지는지 알고싶습니다 답변 : origin이나 upstream은 remote repository에 붙이는 이름표같은거라고 생각하시면되요. 그런데 대부분의 튜토리얼들이 fork뜬 저장소는 origin으로, 원본 저장소는 upstream이라고 식별한걸 가정하고 진행되기때문에 미리 알아두시는게 좋구요 3. 개발자가 오픈소스를 읽는 방법(Git project Reading Skill) 오픈소스개발자입장에서 프로젝트 내용 확인해보려고하는 명령어들 프로젝트를 볼때 커밋히스토리를 기준으로 소스코드리딩하면 훨씬 전략적으로 읽을 수 있다. 프로젝트레포지토리에 있는 Contributing을 꼭 읽어야한다. 그래야 공통작성하는 방법은 코딩스타일을 확인할 수있다. 정해놓은 코딩스타일로 꼭 작성해야한다 ex) 빈칸, 중괄호위치 등등 commit ID는 소스파일이 수정될때마다 생기거나 바뀌는 고유한 ID(SHA1해시값) 속성 | wc -l : 파일 라인개수를 측정. | nl : 파일의 line number명시(순위표시용으로 사용) --no-merges : 머지커밋은 병합커밋(빈커밋)으로 수정내역을 보고자할때 굳이 필요없기에 no-merges 옵션사용. --reverse : 옛날 것부터 출력 123456789101112131415161718192021222324252627282930# 1. 전체 소스파일 커밋 리스트# `q`키 눌러서 나가기$ git log --oneline# 2. 전체 소스파일 커밋 자세히 보기# oneline보다 자세하게 전체 소스파일 수정내역을 확인할 수 있다.$ git log -p# 3. 전체 소스파일 커밋 리스트(Merges커밋제외)$ git log --oneline --no-merges# 4. 전체 소스파일 수정내역 개수 세기# | wc -l속성으로 커밋개수를 확인할 수 있다.$ git log --oneline | wc -l# 5. ID값으로 어떤 커밋을 언제 어떻게 커밋했는지 확인가능$ git show ID값 # 6. 요약 소스파일 리스트$ git shortlog -sn# 7. 특정날짜기준 커밋리스트# 날짜를 기준(inclusive)으로 커밋리스트를 확인할 수 있다# 예시 : 2020년1월1일부터 2020년6월30일까지의 커밋리스트를 확인$ git log --oneline --after=2020-01-01 --before=2020-06-30# 예시 : 2020년6월1일부터 2020년6월30일까지의 폴더명(mnist)의 커밋리스트 갯수(|wc -l)를 확인$ git log --oneline --after=2020-06-01 --before=2020-06-30 -- mnist/ | wc -l# 8. 옛날 것부터 소스파일 커밋리스트보기$ git log --reverse 4. 브랜치(Branch)활용 브랜치 : 같은 폴더인데 다른 세상처럼 이용할 수 있음 기본 브랜치 : master 브랜치생성 : 브랜치네이밍을 할때 꼭 작업키워드에 맞출것 1234$ git checkout -b 브랜치명# 예시 : fix-mnist브랜치 만들기$ git checkout -b fix-mnist 브랜치 master로 변경 1234$ git checkout 연결할브랜치명# 예시 : 현재 작업중인 브랜치를 master브랜치로 변경$ git checkout master 브랜치삭제 속성 -d와 -D의 차이 -d는 정상적인 상황일 때 사용가능한 옵션 -D는 강제로 처리하게 하는 옵션 1234# 추가생성한 브랜치 삭제를 위해 master브랜치로 이동$ git checkout master# 브랜치삭제$ git branch -d fix-mnist 어떤 브랜치에 접속되어있는지 확인 git status는 정말 다양한 정보를 가지고 있는데 그 중 현재 내가 작업진행중인 브랜치를 알려준다. 1$ git status 4. 파일 다루기4-1 add 명령 취소하기123456789$ git add 파일명# git status에서 add 되어있는지 확인 (초록색)$ git status # add 명령 취소$ git reset# git status에서 add 취소되어있는지 확인 (빨간색)$ git status 4-2 commit 메세지 수정하기 = commit amend 최신 히스토리 기준으로 커밋명 수정 가능 수정하면 커밋ID는 바뀌게 된다 1$ git commit --amend 4-3. commit 삭제하기커밋이 크면 어떻게 나누는게 적당할까? 그리고 커밋이 크다는 건 어느정도를 말할까? 정답 : 테스트의 단위로 나누는 것이 좋다. 123456789101112131415$ git add 파일명$ git commit -m \"커밋메세지입력\"# 생성한 커밋정보확인$ git show$ git log --oneline -1# commit 정보삭제# 예시 : 가장 최근 commit 한개 삭제하기# HEAD위치 확인$ git log --oneline# HEAD의 커밋 한개 삭제$ git reset --hard HEAD~1# 삭제 후 최신 commit 확인$ git log --oneline -1 4-4. 라이센스넣어서 커밋하기 일반 커밋이외에 라이센스를 넣어서 커밋을 할 수 있다. 어떤 경우에 사용할까? 라이센스를 정확히 이해했을때 오픈소스 커밋시 의무사항인 곳도 있다. 자신의 라이센스 권리를 주장할 수 있다. 12라이센스를 이해하고 넣는 속성 `-sm`.$ git commit -sm \"커밋명\" 5. rebase 리베이스12345678910111213141516# rebase -i :인터렉트 즉, 되감기를 하겠다는 의미$ git rebase -i --root# 감았던 rebase 풀기$ git rebase --continue# rebase 취소하는 것$ git rebase --abort# rebase 초기화# rebase$ git reset --hard HEAD~1$ git reset --hard origin/master# vi편집기 나가기:wq -&gt; write and quit(저장하고 나가기의 줄임말) 5-1. 리베이스 예시 : 커밋추가가장 오래된 것부터 두번째 커밋 이후에 새로운 커밋 3개 추가하기 1234567891011121314151617181920212223242526# 리베이스감기 : 오래된 것부터 두번째 커밋에 pick을 edit으로 변경$ git rebase -i --root# 새로운 커밋 3개 추가$ touch 새로운파일1.txt$ git add 새로운파일1.txt$ git commit -n \"Added 새로운파일1\"$ touch 새로운파일2.txt$ git add 새로운파일2.txt$ git commit -n \"Added 새로운파일2\"$ touch 새로운파일3.txt$ git add 새로운파일3.txt$ git commit -n \"Added 새로운파일3\"# HEAD위치 확인$ git log --oneline# 리베이스풀기$ git rebase --continue# 커밋이 잘 추가되었는지 결과확인$ git shortlog$ git log --oneline$ gitk 5-2. 리베이스 예시 : 커밋수정위에서 추가한 커밋 1번2번3번 중에 2번과 3번을 커밋을 한 개로 합치고 싶다면? rebase -i --root에서 커밋3번에 pick을 edit로 변경해야한다. 그 뒤 커밋 3번을 reset --soft HEAD~1를 해주면 커밋에서는 사라졌지만 파일은 남아있다. commit --amend를 해주면 커밋3번이 커밋2번에 흡수된다. show 커밋ID를 검색하면 2번과 3번이 합쳐진것을 볼 수 있다. 12345678910111213141516171819202122# 리베이스감기$ git rebase -i --root# 위의 세번째커밋에 pick을 edit으로 변경해준다.# HEAD위치 확인$ git log --oneline# 세번째커밋삭제$ git reset --soft HEAD~1$ git status# 두번째커밋에 흡수 합치기$ git commit --amend$ git show 커밋ID# 리베이스풀기$ git rebase --continue# 커밋이 잘 수정되었는지 결과확인$ git log --oneline$ git show 합쳐진commitID 5-3. 리베이스 예시 : 커밋삭제가장 오래된 것부터 두번째 커밋 “Add secondCommit” 삭제하려면? 12345678910$ git rebase -1 -root# 두번째 pick Add secondCommit을 edit으로 바꿈$ git status$ git reset --hard HEAD~1$ git rebase --continue# 커밋이 잘 삭제되었는지 결과확인$ git log --oneline$ git shortlog$ gitk 6. blame 특정 소스라인에 대해서 누가 마지막으로 수정을 했는지 commit ID로 추적가능하다. /class 첫글자대문자키워드 : string검색가능 ex)/class Parser } 닫힘 중괄호같은 경우 수정되지 않을 가능성이 많기때문에 옛날것 그대로 유지할 확률이 높다. 복구 (clone받은 데이터로) : git reset --hard origin/master 예시 : git blame이용하여 exam.txt파일에서 Parser클래스를 만든 최초의 commit을 찾아보기 123$ git blame exam.txt;# /class Parser 검색하기 -&gt; 검색결과 하이라이팅됨 -&gt; 해당 커밋ID복사$ git show 커밋ID 7. 편집기 나가기 명령어 nano 편집기 나가기q : 나가기 vi편집기 나가기:wq : write and quit(저장하고 나가기의 줄임말)","link":"/2020/07/18/200718opensource/"},{"title":"[ITWILL : JAVA]기본클래스 이외에 자바 구성요소2 : enum","text":"ITWILL학원 : 18강 JAVA BY 윤미영강사1. enum(이넘)의 정의 enum은 열거형 데이터 타입이라고 한다. 데이터가 몇 가지 한정된 상수값으로 구성될때 주로 사용. ex) 계절을 나타낼때 String타입보다 enum을 생성하여 봅, 여름, 가을, 겨울의 딱 4개의 값만 설정하는 것이다. 2. enum 사용법 키워드 class대신 enum사용, enum내부에는 상수값 나열 -&gt; 이 상수값들을 enum상수라고 부름 대소문자 구분함 123enum Season{ SPRING, SUMMER, FALL, WINTER //=&gt;각각 0,1,2,3의 ordinal값을 가짐} 선언위치에 따른 변화 같은 클래스 내부에서 enum사용시 (innerEnum) : Season.SPRING 외부 클래스에서 enum사용시 (OuterEnum) : 해당클래스명.Season.SPRING 3. 일반 클래스와 enum 차이점 접근제어자 : public, default만 사용가능 내부적으로 java.lang.Enum클래스 상속 -&gt; 따라서 별도로 다른 클래스 상속받을 수 없다. 여러 인터페이스를 구현하는 것은 상관없다. enum을 이용하면 비교할때 단순히 값만을 비교하는 것이 아니라 타입까지 비교한다. =&gt; 안정적인 프로그래밍가능 4. enum메서드enum타입들은 java.lang.Enum 클래스를 기본적으로 상속받고 있기 때문에 java.lang.Enum 클래스에 선언된 메서드들을 사용가능하다. 메서드명 선언부 설명 name() public final String name() enum상수의 이름을 문자열로 리턴한다 ordinal() public final int ordinal() 0부터 시작하는 enum 상수의 순서를 리턴한다 comparedTo() public final int com[aredTo(E o) enum상수의 ordinal 차이를 리턴한다 values() public static T[] values() enum타입에 선언된 enum상수를 배열로 리턴한다 valueOf() public static T<extends Enum<T>> T valueOf(Class<T> enumType, String name) 문자열로 매핑된 enum상수 객체를 리턴한다 5. enum상수를 이용한 연산 enum상수는 주로 비교연산에서 사용된다. enum을 사용하여 계절별로 다른 출력값을 나타내는 코드를 작성해보자. OuterEnum사용 첫번째방법 : if조건문 + comparedTo() 두번째방법 : switch 1234567891011121314151617181920212223242526272829303132333435363738394041424344enum Season{ SPRING, SUMMER, FALL, WINTER}public class SeasonEnumTest { //첫번째방법 : if조건문 + comparedTo() public void compareEnum(Season s){ if(s.equals(Season.SPRING)){ System.out.println(s.compareTo(Season.WINTER)); System.out.println(\"따뜻한 봄\"); }else if(s.compareTo(Season.WINTER) &lt; 0){ System.out.println(s.compareTo(Season.WINTER)); System.out.println(\"최소한 겨울은 아니잖아요\"); }else{ System.out.println(s.compareTo(Season.WINTER)); System.out.println(\"추운 겨울\"); } } //두번째방법 : switch public void enumSwitch(Season s){ switch(s){ case SPRING : System.out.println(\"봄\"); break; case SUMMER : System.out.println(\"여름\"); break; case FALL : System.out.println(\"가을\"); break; default: System.out.println(\"겨울\"); } } public static void main(String[] args) { // TODO Auto-generated method stub SeasonEnumTest set = new SeasonEnumTest(); set.compareEnum(Season.SPRING); set.enumSwitch(Season.SPRING); }} 6. enum에 멤버 추가 가능 enum에도 사용자가 원하는 멤버변수와 멤버메서드를 추가할 수 있다 주의점 : enum상수들만을 정의할때는 세미콜론이 필료없지만 별도의 멤버를 추가하는 경우에는 세미콜론을 추가해서 상수 선언이 끝나는 것을 표시해줘야한다. 7. enum에 생성자 추가 가능 enum의 생성자의 접근 제어자 : private만 가능하고 생략가능. 외부에서 해당 생성자를 호출할 수는 없으며 내부에서 상수를 정의하면서 파라미터로 전달.","link":"/2020/07/20/200720javai/"},{"title":"[ITWILL : JAVA]기본클래스 이외에 자바 구성요소3 : annotation, generic","text":"ITWILL학원 : 18강 JAVA BY 윤미영강사1. annotation 애노테이션 사전적 의미는 주석이다 애노테이션은 개발자가 읽기 위한 주석이 아니라 컴파일러등에게 전달하는 일종의 메타데이터이다. 메타데이터란 : 다른 데이터를 설명해주는 데이터로 속성 정보라고도 한다. 애노테이션 설명 @Override 컴파일러에게 재정의된 메서드라고 알려줌 @Deprecated 앞으로 없어질 수 있으니 사용을 자제하라고 알려줌 ex)보안적인 이슈가 발생했거나 더 좋은 성능의 메서드로 대체를 권장할 때 사용함 @SupressWarnings(“all/unused”) 컴파일러에게 특정 경고 메시지를 무시하라고 알려줌 ex)경고내용에 이미 알고 있으니 컴파일러가 보여주지 않아도 될때 사용함 @Functionallnterface 함수형 인터페이스라는 것을 알려줌 2. Generic 제네릭의 사전적 의미 : 일반화 장점 : 컴파일 시점에서 사용할 수 있는 객체타입을 체크함 -&gt; 프로그램의 안정성이 획기적으로 향상되고 코드도 줄어듬. 타입 파라미터를 사용하면 클래스에 넘겨줄 수 있는 데이터타입을 제한할 수 있다. 123456// 꺽쇠 전체&lt;T&gt;를 제네릭이라고 부른다.//그 안의 파라미터 T를 타입파라미터라고 부른다.class test&lt;T&gt;{} 사용처 : 데이터 저장 구조 사용 주의점 타입 파라미터는 인스턴스변수임 -&gt; static멤버에는 타입파라미터 적용못함. 타입 파라미터를 이용해서 객체생성 못함 why? new 연산자는 컴파일 타입에 정확한 타입을 알아야하는데 클래스 내부에서 파라미터만 보아선 타입을 알 길이 없기때문에. 타입 파라미터에서 사용가능한 메서드는 Object에 선언된 것으로 한정한다 why? 아직 타입이 정해지지 않은 상태에서 누구의 메서드를 가져다 쓸 수 없기때문에 최상위클래스인 Object의 메서드들만 사용가능. 2-1. 사용 가능한 파라미터 타입의 제한 가변인자 : 파라미터의 갯수를 모를때 가변인자를 사용할 수 있다 가변인자 파라미터 타입의 제한 제네릭 예시 : 1234567891011121314151617181920212223242526272829class NumberBox&lt;T extends Number&gt;{ public void addSomes(T ... ts){ //가변인자 double d =0; for (T t: ts){ //d = t+d; //t가 뭔지 모르기때문에 double과 더할수가없다. //따라서 t를 double로 바꿔줌. //Number클래스의 doubleValue()메서드를 사용하면 된다. d = t.doubleValue() + d; } System.out.println(\"총 합은 : \"+ d); }}public class ExtndsTest { public static void main(String[] args) { NumberBox&lt;Number&gt; numBox = new NumberBox&lt;&gt;(); numBox.addSomes(1.5, 5, 4L); NumberBox&lt;Integer&gt; intBox = new NumberBox&lt;&gt;(); intBox.addSomes(1,2,3); //Number의 하위 클래스만 사용 가능. //NumberBox&lt;String&gt; strBox = new NumberBox&lt;&gt;(); }} 메서드 오버로딩과 가변인자의 차이점은 무엇일까? 메서드 오버로딩 : 다양한 데이터 타입 받을 수 있음 가변인자 : 데이터타입 한 종류만 받을 수 있음 메서드 오버로딩 예시 : 12345678910111213141516171819OverloadConstructorPerson(String name, int age, boolean isHungry){ this.name = name; this.age = age; this.isHugry = false;}OverloadConstructorPerson(String name, int age){ //this()용법사용 this(name, age, false);}OverloadConstructorPerson(String name){ //this()용법사용 this(name, 0, false);}OverloadConstructorPerson(){ //아무 코드도 없으면 기존 멤버변수값이 출력된다.} 2-2. 메서드에 선언된 제네릭12345678910111213141516171819202122232425262728293031323334353637public class TypeParam&lt;T&gt; { T some; //데이터타입 : T, 변수명 = some T some1; //데이터타입 : T, 변수명 = some1 public TypeParam(T some, T s1){ //생성자 (파라미터2개 : 파라미터의 데이터타입은 T이다) this.some = some; //멤벼변수와 파라미터 이름이 같아서 this를 사용 some1 = s1; //멤버변수와 파라미터 이름 달리해서 this생략가능 } public &lt;P&gt; void method1(P p){ //파라미터 데이터 타입이 p System.out.println(\"클래스 레벨의 T : \"+some.getClass().getName()); System.out.println(\"파라미터 : \"+p.getClass().getName()); } public &lt;P&gt; P method2(P p){ //리턴값의 데이터타입 p인 메서드 System.out.println(\"클래스 레벨의 T : \"+some.getClass().getName()); System.out.println(\"파라미터 : \"+ p.getClass().getName()); return p; } public static void main(String[] args) { //데이터타입 T -&gt; String으로 지정 후 객체생성 TypeParam&lt;String&gt; tpmt = new TypeParam&lt;&gt;(\"멤버변수some값설정\", \"멤버변수some1값설정\"); //some에다가 파람값 넣어줌 //멤버변수출력 System.out.println(tpmt.some); System.out.println(tpmt.some1); //파라미터 타입 명시하지않음 : 컴파일러가 매개변수의 값을 보고 파라미터 p의 데이터 타입을 결정 tpmt.method1(10); tpmt.method2(10); //파라미터 타입 직접 지정 : 파라미터타입 p -&gt; Long으로 지정 tpmt.&lt;Long&gt;method2(20L); }} 만약 객체생성시 TypeParam&lt;String&gt; tpmt = new TypeParam&lt;&gt;()하고싶다면 어떻게하면될까?생성자 오버로딩을 하면된다. 1234//생성자오버로딩 public TypeParam(){ //생성자 ( }TypeParam&lt;String&gt; tpmt = new TypeParam&lt;&gt;(); 에러가 뜨지않고 객체생성은 잘되지만 멤버변수의 데이터타입이 제네릭이기때문에 멤버변수에 값을 넣을수도없고 파라미터도 없기때문에 현 코드에서는 쓸수있는 방법이 없다. 2-3. 와일드카드의 사용 제네릭 메서드에서는 사용되는 타입 파라미터에 제한을 두기 위해 와일드카드로 ‘?’를 사용 단독사용 가능 extends나 super와 함께 사용가능. &lt;?&gt; : 타입의 제한이 없으며 &lt;? extends Object&gt;와 동일 &lt;? extends T&gt; : 와일드카드의 상한을 제한. 이 타입 파라미터에는 T와 T를 상속받은 자손만 대입할 수 있다. &lt;? super T&gt; : 와일드카드의 하한을 제한. 이 타입 파라미터에는 T와 그 조상타입만 대입할 수 있다. 예시 : getClass() : 객체가 속하는 클래스의 정보를 알아내는 메소드이다. getName() : 클래스의 이름을 리턴하는 메소드이다. 123456789101112131415161718192021222324252627282930313233class Person{};class SpiderMan extends Person{};class PersonBox&lt;T&gt;{};public class wildTypeTest { //일반클래스 //제네릭메서드 public void method1(PersonBox&lt;?&gt; some){} //제네릭메서드 + 일반클래스상속 public void method2(PersonBox&lt;? extends Person&gt; some){} //제네릭메서드 + Person의 조상인 Object클래스 상속 public void method3(PersonBox&lt;? super Person&gt; some){} public static void main(String[] args) { wildTypeTest wtt = new wildTypeTest(); //객체생성 //메서드1의 파라미터는 사실상 제약이 없다. wtt.method1(new PersonBox&lt;Object&gt;()); wtt.method1(new PersonBox&lt;Person&gt;()); wtt.method1(new PersonBox&lt;SpiderMan&gt;()); //메서드2의 파라미터는 Person또는 Person을 상속받은 클래스를 타입 파라미터로 받을 수 있다. //wtt.method2(new PersonBox&lt;Object&gt;()); wtt.method2(new PersonBox&lt;Person&gt;()); wtt.method2(new PersonBox&lt;SpiderMan&gt;()); //메서드3의 파라미터는 Person또는 Person조상만 가능. wtt.method3(new PersonBox&lt;Object&gt;()); wtt.method3(new PersonBox&lt;Person&gt;()); //wtt.method3(new PersonBox&lt;SpiderMan&gt;()); }}","link":"/2020/07/20/200720javai2/"},{"title":"[ITWILL : JSP]자료구조2 : Stack클래스, Queue인터페이스, Map인터페이스","text":"ITWILL학원 : 27강 JSP기초 BY 정규태강사 1. 자료구조 : Stack 클래스 top에서만 데이터의 입출력 발생하기 때문. LIFO 구조(FILO 구조) : 가장 먼저 들어온 데이터가 가장 마지막에 나가는 구조. 데이터 입력 -&gt; push 데이터 빼내기 -&gt; pop 장점 : 특정 자료구조의 형태로 처리했을때 데이터처리가 가장 효율적이다. 12345678910111213141516171819202122Stack st = new Stack();//데이터삽입st.push(\"1-java\");st.push(\"2-jsp\");st.push(\"3-web\");st.push(\"4-db\");System.out.println(st);//데이터 빼내기while(! st.isEmpty()){ //스택클래스가 비어있지 않은 경우 System.out.println(st.pop()); //LIFO}System.out.println(st);//출력값[1-java, 2-jsp, 3-web, 4-db]4-db3-web2-jsp1-java[] 출력값을 보면 데이터가 빠져나가는 순서가 LIFO이다. 2. 자료구조 : Queue 인터페이스 FIFO/LILO : 먼저 들어온 데이터가 먼저 처리되는 구조. 즉 입력된 순서대로 처리되는 구조 First Input First Output Last Input Last Output 스택은 클래스이지만 큐는 인터페이스이다 -&gt; 따라서 큐는 객체생성을 할수없지만 구현을 통해서 생성가능하다 LinkedList 클래스 : 큐인터페이스를 구현한 클래스 인터페이스는 업캐스팅이 가능할까? ㅇㅇ 가능! 1234567891011121314151617181920Queue que = new LinkedList(); //업캐스팅(LinkedList클래스-&gt;Queue인터페이스)//데이터입력que.offer(\"1-java\");que.offer(\"2-jsp\");que.offer(\"3-web\");que.offer(\"4-db\");System.out.println(que);//데이터빼내기//peek() : Queue안에 데이터가 있는지 없는지 판단하는 메서드 -&gt; 없으면 null리턴while(que.peek() != null){ // 큐 안에 데이터가 있는지 없는지 판단, 없을경우 null System.out.println(que.poll());}//출력값[1-java, 2-jsp, 3-web, 4-db]1-java2-jsp3-web4-db 출력값을 보면 빠져나가는 순서가 FIFO이다. 3. 자료구조 : Map인터페이스 Map, table 접미어가 붙은 자료구조이다. 데이터저장시 (키, 데이터)쌍으로 저장하여 사용하는 구조 map은 인터페이스이므로 객체생성을 할수없지만 구현을 통해서 생성가능하다 hashtable 클래스 : 맵인터페이스를 구현한 클래스 키값을 사용해서 검색 인덱스생성 -&gt; 데이터 검색시간이 짧음. 예시 : Map계열의 hashtable 12345678910111213141516Map m = new Hashtable(); //업캐스팅//데이터입력m.put(\"사과\", \"apple\");m.put(\"오렌지\", \"orange\");m.put(\"복숭아\", \"peach\");System.out.println(m);//데이터출력하기System.out.println(m.get(\"복숭아\"));System.out.println(m.get(\"바나나\"));//출력값{오렌지=orange, 사과=apple, 복숭아=peach}peachnull","link":"/2020/07/20/200720jspi/"},{"title":"[ITWILL : JSP]Javabean 6 : 게시판만들기(글쓰기)","text":"ITWILL학원 : 27강 JSP기초 BY 정규태강사1. 웹 개발의 기초 : CRUD 기본 로직 : 게시판 글쓰기 = 데이터입력 글 리스트 = 데이터검색 글 본문보기 = 데이터검색 글 수정 = 데이터 수정 글 삭제 = 데이터 삭제 추가할 로직 : 답글쓰기 (댓글과 다른 답글기능) 파일업로드 / 썸네일 위와 같은 두 개의 로직은 요구사항분석이라고도 부른다 1-1. 개발순서 사용자 요구사항 분석 데이터 테이블 설계 = DB 테이블생성 테이블명 itwill_board 글번호 : bno 글쓴이 : name 글 비밀번호 : pw 글 제목 : subject 글 내용 : content 조회수 : readcount 답글 : re_ref, re_lev, re_seq 글쓴날짜 : date 파일 : file varchar(200)를 쓰는 이유는 글쓴이의 IP주소 : ip writeForm.jsp 작성 writePro.jsp 작성 BoardBean.java 생성 BoardDAO.java 에서 getCon() DB연결메서드 구현 BoardDAO.java 에서 insertBoard() 글쓰기메서드 구현 1-2. 데이터 테이블 설계 = DB테이블생성 테이블명 itwill_board을 생성한 뒤 아래처럼 컬럼을 작성한다. 글번호 : bno - INT NOT NULL, PRIMARY KEY (bno) 글번호는 AI(Auto Increment)를 해야한다 말아야한다는 의견이 분분하다. 실습에선 AI없이 진행. 글쓴이 : name - VARCHAR(45) NOT NULL 글 비밀번호 : pw - VARCHAR(45) NOT NULL 글 제목 : subject - VARCHAR(45) NOT NULL 글 내용 : content - VARCHAR(2000) NOT NUL 조회수 : readcount - INT NULL 답글 : re_ref, re_lev, re_seq - 세 컬럼 다 INT NULL 글쓴날짜 : date - DATE NULL 파일 : file - VARCHAR(200) NULL varchar(200)를 쓰는 이유는 파일은 DB가 아닌 서버에 저장되고 DB는 이름만 저장해놓기때문. 글쓴이의 IP주소 : ip - VARCHAR(45) NULL 1-3. writeForm.jsp 작성123456789101112&lt;fieldset&gt;&lt;legend&gt;게시판 글쓰기&lt;/legend&gt; &lt;form action=\"writePro.jsp\" method=\"post\" name=\"fr\"&gt; 글쓴이 : &lt;input type=\"text\" name=\"name\"&gt;&lt;br&gt; 비밀번호 : &lt;input type=\"password\" name=\"pw\"&gt;&lt;br&gt; 제목 : &lt;input type=\"text\" name=\"subject\"&gt;&lt;br&gt; 내용 : &lt;br&gt; &lt;textarea rows=\"10\" cols=\"35\" name=\"content\" placeholder=\"여기에 작성해주세요\"&gt;&lt;/textarea&gt;&lt;br&gt; &lt;input type=\"submit\" value=\"글쓰기\"&gt; &lt;button type=\"reset\"&gt;초기화&lt;/button&gt; &lt;/form&gt;&lt;/fieldset&gt; 1-4. writePro.jsp 작성글쓰기를 처리하는 페이지이다.입력창에서 받은 데이터를 DB로 이동시킨 뒤 사용자는 글목록페이지로 이동 jsp:setProperty 의 동작방식 String name = request.getParameter(“bno”) bb.setbno(bno) 모든 변수에 위의 1번,2번동작을 처리 전달정보 확인위한 출력 System.out.println(bb) System.out.println(bb.toString()) 위의 두 코드는 동일한 출력값을 가진다. 로그인한사람만 글쓸수있게 처리 1234567891011121314151617181920212223242526272829303132333435&lt;%//1. 한글처리request.setCharacterEncoding(\"UTF-8\");%&gt;//6. 로그인한사람만 글쓸수있게처리String id = (String) session.getAttribute(\"id\");if( id == null){ %&gt; &lt;script type=\"text/javascript\"&gt; alert(\"로그인 후 이용가능합니다\"); history.back(); &lt;/script&gt; &lt;%}&lt;!-- 2. 액션태그사용 : 전달된 정보를 저장(bno, name, pw 등등) - 자바빈객체에 저장--&gt;&lt;jsp:useBean id=\"bb\" class=\"com.itwillbs.board.BoardBean\" /&gt;&lt;!-- 2-1. 파라미터 값 저장 : jsp:setProperty --&gt;&lt;jsp:setProperty property=\"*\" name=\"bb\"/&gt;&lt;%//2-2. 전달정보 확인위한 출력 : null인 값들은 별로도 추가해줘야한다.System.out.println(bb); //bb.toString()과 동일한 동작//2-3. IP정보를 추가System.out.println(request.getRemoteAddr());bb.setIp(request.getRemoteAddr());System.out.println(bb);//2-4. date정보//3. 디비처리작업진행 : boardDAO객체 생성BoardDAO bdao = new BoardDAO();//4. 데이터처리 : BoardDAO객체 안의 메서드 중 글스기 기능을 하는 메서드 호출bdao.insertBoard(bb);// 5. 글목록 페이지로 이동response.sendRedirect(\"boardList.jsp\"); 1-5. BoardBean.java 생성1234567891011121314151617181920212223242526272829303132333435363738394041424344454647484950//1번규칙만족 : 클래스는 publicpublic class BoardBean { //2번규칙만족 : 멤버변수선언 private private int bno; private String name; private String pw; private String subject; private String content; private int readcount; private int re_ref; private int re_lev; private int re_seq; private Date date; private String file; private String ip; //4번규칙만족 : 기본생성자존재하지만 생략됨 //public BoardBean(){} //3번규칙만족 : 멤버변수마다 별도의 get/set메소드가 존재해야한다. public int getBno() { return bno; } public void setBno(int bno) { this.bno = bno; } public String getName() { return name; } public void setName(String name) { this.name = name; } //(중략) public String getIp() { return ip; } public void setIp(String ip) { this.ip = ip; } //5. toString() @Override public String toString() { return \"BoardBean [bno=\" + bno + \", name=\" + name + \", pw=\" + pw + \", subject=\" + subject + \", content=\" + content + \", readcount=\" + readcount + \", re_ref=\" + re_ref + \", re_lev=\" + re_lev + \", re_seq=\" + re_seq + \", date=\" + date + \", file=\" + file + \", ip=\" + ip + \"]\"; } 1-6. BoardDAO.java 에서 getCon() DB연결메서드 구현드라이브로드, DB연결 메서드인 getCon()구현 getCon() 작성순서 : 리턴값없이 진행 라이브러리설치 (WEB-INF, LIB에 추가) /META-INF/context.xml 파일생성 /WEB-INF/web.xml 파일수정 DAO 처리 예외처리 throws 방법 : 메서드를 호출하는 시점에 예외처리를 함 1234567891011121314151617181920212223242526272829303132333435public class BoardDAO { Connection con = null; String sql = \"\"; PreparedStatement pstmt = null; ResultSet rs = null; //DB연결메서드 구현 private void getCon() throws Exception{ //Context 객체 생성 //Context인터페이스이기때문에 직접객체생성할 수 없어서 InitialContext클래스를 사용해서 객채생성 //예외처리 : throws사용하는 방법 Context init = new InitialContext(); //업캐스팅 //디비연결정보를 불러오기 -&gt;DataSource 타입으로 저장 // 고정문구\"java:comp/env/다른문구context파일의 name값입력\" DataSource ds = (DataSource) init.lookup(\"java:comp/env/jdbc/mysqlDB\"); //ds 사용해서 연결 //멤버변수는 static이 아니기때문에 new BoardDAO();객체생성 후에 멤버변수들이 생성된다. //그리고 getCon()메서드를 하면 멤버변수 con에 데이터(ds.getConnection();)가 담기게 된다. //따라서 이때 return하지 않고 써도된다. con = ds.getConnection(); System.out.println(\"디비연결성공 + con\"); }//getCon닫음 //자원해제 메서드 구현 public void closeDB(){ try{ if(rs != null) rs.close(); if(pstmt != null) pstmt.close(); if(con != null) con.close(); } catch (SQLException e) { e.printStackTrace(); } }//closeDB닫음 }BoardDAO클래스닫음 1-7. BoardDAO.java 에서 insertBoard() 글쓰기 메서드 구현insertBoard()메서드 구현 if(rs.next())가 끝나는 종료되는 순간은? 글이 없으면 null인데 어떻게 조건문이 true가 되어 구현될수있을까? rs가 faluse가 되는 시점은 EOF만나는 순간이다. 즉, NULL이 있어도 진행된다. getInt()사용법 두가지 getInt(컬럼명)사용 : num = rs.getInt(“max(bno)”)+1; getInt(idx)사용 : 둘다 동일한 결과. idx사용하면 컬럼명보다 데이터 처리속도도 빠르다- /getInt =&gt; 데이터 값을 리턴, 값이 SQL-NULL경우 0리턴 1234567891011121314151617181920212223242526272829303132333435363738394041424344454647484950515253545556575859//글쓰기 메서드 구현public void insertBoard(BoardBean bb){ //글번호를 저장하는 변수 생성 int num = 0; try { //1. 디비연결 getCon(); //2. SQL구문작성 &amp; pstmt //3. 글번호계산 : 지금 있는 글 번호중 가장 큰 번호가 뭔지 확인하기만 하면 되니까 sql = \"select max(bno) from itwill_board\"; pstmt = con.prepareStatement(sql); //4. 글번호계산한거 실행 rs = pstmt.executeQuery(); //5. 데이터처리(글번호 계산) if(rs.next()){ //글이 없으면 null이 어떻게 조건문을 돌수있을까? rs가 faluse가 되는 시점은 EOF만나는 순간이다. //즉, NULL이 있어도 진행된다. //getInt(컬럼명)사용 : num = rs.getInt(\"max(bno)\")+1; //getInt(idx)사용 : 둘다 동일한 결과. idx사용하면 컬럼명보다 데이터 처리속도도 빠르다 //getInt =&gt; 데이터 값을 리턴, 값이 SQL-NULL경우 0리턴 num = rs.getInt(1)+1; } System.out.println(\"글번호 : \"+num); //6. 글쓰기(저장) : 실무에서는 물음표가 기본 20개이상이다. 5개씩 잘라서 String연결하면 헷갈리지않는다. //Date는 now()메서드를 이용한다. //now() : 자동으로 SQL구문 실행시 시스템시간 정보를 불러옴 sql = \"insert into itwill_board value(\" +\"?,?,?,?,?,\" +\"?,?,?,?,now(),\" +\"?,?)\"; pstmt = con.prepareStatement(sql); pstmt.setInt(1, num);//bno는 가지고있는게 아니라 계산해서 만든것이므로 num사용 pstmt.setString(2, bb.getName()); pstmt.setString(3, bb.getPw()); pstmt.setString(4, bb.getSubject()); pstmt.setString(5, bb.getContent()); pstmt.setInt(6, 0);//조회수는 글쓰지마자 올라가지않는다. 글쓰는 당시에는 조회수가 0이니까 초기화한다. pstmt.setInt(7, num);//답변글 그룹번호이므로 일반글번호와 동일하다. pstmt.setInt(8, 0);//답변글 들여쓰기(처음 작성하는 일반 글의 들여쓰기는 0이므로 초기화한다) pstmt.setInt(9, 0);//답변글순서(처음 작성하는 일반글이므로 일반글 제일위쪽(0)으로 초기화한다) pstmt.setString(10, bb.getFile()); pstmt.setString(11, bb.getIp()); //7. 실행 pstmt.executeUpdate(); System.out.println(\"게시판글쓰기 성공\"); } catch (Exception e) { // TODO Auto-generated catch block System.out.println(\"게시판글쓰기 실패\"); e.printStackTrace(); } finally { //자원해제 closeDB(); }} //insertBoard메서드닫음 2. 예외처리 차이점(try catch와 throws) try catch 방법 throws 방법 자바 예외처리(try catch, throws)try catch는 예외를 직접 처리하기 때문에 메서드를 호출해도 더 이상 예외처리를 할 필요가 없습니다.하지만 throws같은 경우는 호출하는 쪽에다가 예외처리를 맡겨버리는(?) 느낌?그래서 호출하는 메소드에 throws가 있으면호출하는 쪽에서도 예외처리를 다시 해줘야되요!","link":"/2020/07/20/200720jspi2/"},{"title":"[ITWILL : JSP]Javabean 7 : 게시판만들기(글 총갯수, 글목록, 페이징처리)","text":"ITWILL학원 : 28강 JSP기초 BY 정규태강사1. 순서 디비에서 전체 글목록을 읽어서 가져오기 글을 읽어오는 작업은 많은 리소스를 필요로한다. BoardList.jsp 생성 BoardDAO.java에 getBoardCount() 메서드 생성 디비에 글이 있는지 확인 후 있으면 글 모두 가져오기, 없으면 가져오지않기 BoardDAO.java에 getBoardList() 메서드 생성 최신 글이 위로 오게 정렬 (쿼리이용) 데이터역순정렬의 방법은 두가지 쿼리단계에서 가져올때부터 역순: 더욱 효율적 쿼리로 가져와서 화면에 뿌릴때 역순 페이징처리하기 페이지블럭 만들기 2. BoardList.jsp생성123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105106107108109110111112113114115116117118119120121122123124125126127128129130131132133134&lt;%//1. 디비에서 전체 글목록을 읽어서 가져오기//2. BoardDAO 객체생성BoardDAO bdao = new BoardDAO();//3. 디비에 글이 있는지 확인 후 있으면 글 모두 가져오기,없으면 가져오지않기 : getBoardCount()int cnt = bdao.getBoardCount();//7. 페이징처리 (이미 유명한 알고리즘 공식, 사용법만 알면 됨)//7-1. 한 페이지에서 보여줄 글의 개수 설정(5개, 변경가능)int pageSize = 5; //7-2. 지금 내가 몇페이지에 있는 확인//페이지번호는 숫자인데 왜 String으로 하는지 ? =&gt; 연산을 할 것이 아니라서 String이 편함String pageNum = request.getParameter(\"pageNum\");//7-3. 페이지번호정보가 없을 경우 내가 보는 페이지가 첫페이지가 되도록if(pageNum == null){ pageNum =\"1\";}//7-4. 시작행번호계산//10개씩 컬럼 나누고 2페이지에서 시작행이 11이되고 3페이지에서 시작행이 21이 되게끔 만들기int currentPage = Integer.parseInt(pageNum); //String을 integer로 변환int startRow = (currentPage-1)*pageSize + 1;//currentPage가 2인경우, (2-1)x10+1 = 11//currentPage가 3인경우, (3-1)x10+1 = 21//7-5. 끈행번호계산int endRow= currentPage * pageSize;//currentPage가 2인경우, 2*10 = 20//currentPage가 3인경우, 3*10 = 30//4. 게시판 글의 수를 화면에 데이터 출력//게시판 총 글의 수 : cnt개//5. getBoardList() 메서드생성System.out.println(bdao.getBoardList());ArrayList boardList = null;if(cnt != 0){ //일반적인 리스트호출방법, 아래는 페이징처리한 리스트호출방법 //boardList = bdao.getBoardList(); //7-6. 페이징 처리한 리스트 호출 =&gt; getBoardList()메서드만들기(메서드 오버로딩) boardList = bdao.getBoardList(startRow, pageSize);} //6. 게시판 모든 내용을 화면에 출력%&gt;&lt;fieldset&gt;&lt;legend&gt;땡땡게시판&lt;/legend&gt; &lt;div id=\"contents\"&gt; 게시판 총 글의 수 : &lt;%=cnt %&gt; 개 &lt;input id=\"writebtn\" type=\"button\" value=\"글쓰기\" onclick=\"location.href='writeForm.jsp'\"&gt; &lt;br&gt; &lt;table&gt; &lt;tr&gt; &lt;th&gt;글번호&lt;/th&gt; &lt;th&gt;제목&lt;/th&gt; &lt;th&gt;작성자&lt;/th&gt; &lt;th&gt;조회수&lt;/th&gt; &lt;th&gt;작성일&lt;/th&gt; &lt;th&gt;IP&lt;/th&gt; &lt;/tr&gt; &lt;%//반복문 //ArrayList는 가변배열이므로 length가 없고 size가 존재한다. //size()메서드는 배열의 요소의 갯수를 리턴 for(int i=0;i&lt;boardList.size(); i++){ //ArrayList 한칸의 정보 -&gt;BoardBean 객체 하나로 이동 BoardBean bb = (BoardBean) boardList.get(i); %&gt; &lt;tr&gt; &lt;td&gt;&lt;a href=\"content.jsp?bno=&lt;%=bb.getBno()%&gt;&amp;pageNum=&lt;%=pageNum%&gt;\"&gt;&lt;%=bb.getSubject() %&gt;&lt;/a&gt;&lt;/td&gt; &lt;td&gt;&lt;%=bb.getSubject() %&gt;&lt;/td&gt; &lt;td&gt;&lt;%=bb.getName() %&gt;&lt;/td&gt; &lt;td&gt;&lt;%=bb.getReadcount() %&gt;&lt;/td&gt; &lt;td&gt;&lt;%=bb.getDate() %&gt;&lt;/td&gt; &lt;td&gt;&lt;%=bb.getIp() %&gt;&lt;/td&gt; &lt;/tr&gt; &lt;% } %&gt; &lt;/table&gt; &lt;/div&gt;&lt;/fieldset&gt;&lt;%//8. 페이지 이동버튼if(cnt != 0){ //cnt는 전체 글 갯수 //8-1. 페이지갯수처리 //전체페이지 50개이고 화면에 10개씩 출력 =&gt; 5페이지만 있으면됨 //전체페이지 57개이고 화면에 10개씩 출력 =&gt; 6페이지만 있으면됨 //삼항연산자로 처리 int pageCount = cnt/pageSize + (cnt%pageSize == 0? 0:1); //8-2. 화면에 보여줄 페이지번호의 갯수(페이지블럭) int pageBlock = 3; //페이지에 10개 페이지갯수 보여줌 //8-3. 페이지블럭의 시작페이지번호 //현재 11페이지면, (11-1)/10 * 10 + 1 = 11 int startPage = ((currentPage-1)/pageBlock) * pageBlock + 1; //8-4. 페이지블럭의 끝페이지번호 int endPage = startPage + pageBlock - 1; if(endPage &gt; pageCount){ endPage = pageCount; } //8-5. 이전, 숫자, 다음처리 // 이전 %&gt; &lt;div id=\"pageBlock\"&gt; &lt;% if(startPage &gt; pageBlock){ %&gt; &lt;a href=\"boardList.jsp?pageNum=&lt;%=startPage-pageBlock%&gt;\"&gt; 이전 &lt;/a&gt; &lt;% } //숫자 for(int i=startPage; i&lt;=endPage; i++){ %&gt; &lt;a href =\"boardList.jsp?pageNum=&lt;%=i%&gt;\"&gt; &lt;%=i%&gt; &lt;/a&gt; &lt;% } //다음 if(endPage &lt; pageCount){ %&gt; &lt;a href =\"boardList.jsp?pageNum=&lt;%=startPage+pageBlock%&gt;\"&gt; 다음 &lt;/a&gt; &lt;% } %&gt; &lt;/div&gt; &lt;% }%&gt; 3. BoardDAO.java에 getBoardCount() 메서드생성BoardDAO.java에 getBoardCount() 메서드 생성 12345678910111213141516171819202122232425public int getBoardCount(){ int count = 0; try { //디비연결 getCon(); //sql작성, pstmt sql = \"select count(*) from itwill_board\"; pstmt = con.prepareStatement(sql); //실행 -&gt; rs저장 rs = pstmt.executeQuery(); //데이터처리 if(rs.next()){ count = rs.getInt(1); // 데이터가 없으면 null이고 return 0값이 된다. //count = rs.getInt(\"count(*)\"); 위와 동일한 결과 System.out.println(\"게시판 글 갯수 확인 :\"+ count); } } catch (Exception e) { e.printStackTrace(); } finally { closeDB(); } return count;}//getBoardCount닫기 4. BoardDAO.java에 getBoardList() 메서드생성BoardDAO.java에 getBoardList() 메서드 생성 1234567891011121314151617181920212223242526272829303132333435363738394041424344454647//DB에서 게시글 전체 가져오는 메서드 구현public ArrayList getBoardList(){ //가변길이 배열 생성 ArrayList boardList = new ArrayList(); try { //1. 디비연결 getCon(); //2. sql작성, pstmt //sql = \"select * from itwill_board\"; //정렬(최신글이 가장 위쪽으로 보이게) : re_ref(그룹번호) 내림차순 sql = \"select * from itwill_board order by re_ref desc\"; pstmt = con.prepareStatement(sql); //3. 실행 -&gt; rs저장 rs = pstmt.executeQuery(); //4. 데이터처리 //정보의 갯수가 몇개인지 모르기때문에 while 반복문을 사용 while(rs.next()){ //4-1.BoardBean 객체생성해서 그 안에 rs데이터 저장 BoardBean bb = new BoardBean(); bb.setBno(rs.getInt(\"bno\")); bb.setContent(rs.getString(\"content\")); bb.setDate(rs.getDate(\"date\")); bb.setFile(rs.getString(\"file\")); bb.setIp(rs.getString(\"ip\")); bb.setName(rs.getString(\"name\")); bb.setPw(rs.getString(\"pw\")); bb.setRe_lev(rs.getInt(\"re_lev\")); bb.setRe_ref(rs.getInt(\"re_ref\")); bb.setRe_seq(rs.getInt(\"re_seq\")); bb.setReadcount(rs.getInt(\"readcount\")); bb.setSubject(rs.getString(\"subject\")); //여기까지가 한 행의 데이터를 저장한 것임. while로 모든 행을 반복 //가변배열(ArrayList)에 위의 데이터 저장 //즉 배열 한칸에 회원 1명의 정보를 저장함. boardList.add(bb); //업캐스팅 } } catch (Exception e) { e.printStackTrace(); } finally { closeDB(); } return boardList; }//getBoardcontent닫기 5. 페이징처리 : BoardDAO.java에 getBoardList(int startRow, int pageSize) 오버로딩 메서드 만들기getBoardList(int startRow, int pageSize) 오버로딩 메서드만들고 sql구문 변경하기 1234567891011121314151617181920212223//DB에서 게시글 전체 가져오는데 페이징처리한 메서드 구현 (메서드 오버로딩)public ArrayList getBoardList(int startRow, int pageSize){ //가변길이 배열 생성 ArrayList boardList = new ArrayList(); try { //1. 디비연결 getCon(); //2. sql작성, pstmt //게시판의 데이터 목록중에서 10개씩 정렬해서 가져오기 //re_ref(그룹번호) 내림차순 + re_seq(답글순서결정)오름차순으로 정렬 //데이터 짤라서 가져오기 limit 시작행-1, 페이지갯수 =&gt; 해당 위치부터 개수만큼 가져오기 sql = \"select * from itwill_board order by re_ref desc, re_seq asc\" +\"limit ?,?\"; pstmt = con.prepareStatement(sql); pstmt.setInt(1, startRow-1); pstmt.setInt(2, pageSize); //3. 실행 -&gt; rs저장 rs = pstmt.executeQuery(); while(rs.next())이후로 getBoardList()와 동일 }}","link":"/2020/07/21/200721jspi/"},{"title":"[ITWILL : DB]데이터정의어DDL : table 생성 table 복사, varchar2와 varchar와 char비교","text":"ITWILL학원 : 15강 Database BY 정지윤강사1. Table 생성테이블 생성시 규칙이 있다. 1-1. 테이블이름 작성규칙 이름시작시 : 반드시 문자로 시작 (숫자,특수문자로 시작할수없음) 30byte까지만 작성가능 포함가능 : 특수문자는 (_ , # , $)만 포함가능 포함불가능 : 공백 1-2. 컬럼의 데이터타입 가변길이문자열 : varchar2(컬럼사이즈) 고정길이문자열 : char(컬럼사이즈) 숫자 : Number(p, s) p는 정수자리수 s는 소수점이하 자리수 (ex) number(4) =&gt; 0 ~ 9999 (음수포함) (ex) number(4,2) =&gt; 0 ~ 9999.99 (음수포함) 날짜 : date 컬럼사이즈없음 1-3. varchar2와 varchar와 char비교데이터를 저장할때 두가지 크게 고정길이와 가변길이 형식으로 쓸 수 있다공간효율 : 메모리가 아니고 디스크의 물리적 공간을 의미. char : 고정길이 문자열 형식예를 들어 char(20)는 20byte를 가지는 문자열 형식이 있다여기에 ninano라는 6자짜리 문자열을 넣으면 남은 공간인 14byte는 공백으로 채워 총 20byte를 사용한다따라서 고정길이가 정확한 문자열에만 사용해야한다 아니면 공간의 낭비가 발생할 수 있다 장점 : 성능 상대적으로 좋음. 즉,데이터입력속도가 빠름 (고정길이기때문에 길이계산할 필요가 없다) 단점 : 공간효율이 안좋음. (고정길이기때문에 공간을 다 쓰지않아도 공간을 잡고있음) varchar2 : 가변길이 문자열 형식길이정보도 같이 저장되는 문자열 형식이다.예를들어 varchar2(20)일때 ninano라는 6자짜리 문자열을 넣으면 6byte + 길이정보저장공간 1byte까지 총 7byte만 사용한다.공간을 적게 차지할 수 있기에 보통 varchar2를 이용한다 장점 : 공간효율이 좋음 (가변길이기때문에 필요한만큼만 공간을 잡음) 단점 : 성능이 상대적으로 안좋음 상황에 맞게 char나 varchar2를 선택해서 사용하면되지만 오라클의 권장사항은 varchar2이다. why? 성능차이가 크게 나지않지만 공간효율의 차이는 티가 확난다. 참고로 varchar1은 없다. varchar와 varchar2만 있을뿐…ㅋㅋㅋㅋㅋ varchar와 char 비교링크 1-4. 옵션 : default값, 제약조건 테이블생성시 필수가 아님. default값이 선언되어있는 폴더는 insert나 update시 null값이 아닌 자동으로 기본값이 입력된다. 컬럼마다 차이가 있지만 보통 컬럼명과 제약조건 사이에 작성한다 디폴트값작성위치에 따라 오류가 나타날 수 있다. 예시 : 123456create table dept(deptno number(2), dname varchar2(14), loc varchar2(13), join_date date CONSTRAINT mk_jd_nn not null default sysdate);//출력값ORA-00907: 누락된 우괄호 - \"missing right parenthesis\" 이때 디폴트값을 제약조건앞에 위치하게 하면 에러가 해결된다 123456create table dept(deptno number(2), dname varchar2(14), loc varchar2(13), join_date date default sysdate CONSTRAINT mk_jd_nn not null);//출력값테이블생성완료 1-5. 테이블생성 및 테이블복사 명령어 테이블생성 1234567create table 테이블명컬럼명 컬럼데이터타입(컬럼사이즈) constraint 제약조건명 제약조건 //예시create table employee (employee_id number(6) constraint emp_emp_id_pk privary key,first_name varchar2(20)); 테이블복사 (서브쿼리구문 사용) : 기존테이블을 복사한 테이블을 생성할 수 있다. 주 사용처 : 백업 테스트 : 뭔가를 테스트하고싶을 때 원본테이블을 복사한 뒤 복사본에 테스트를 하여 안전성을 높인다. * : 전체 컬럼과 그 안의 데이터 전체를 복사함. 컬럼명설정 : 원하는 컬럼과 그 안의 데이터만 복사함. 테이블을 복사하면 제약조건도 같이 복사될까? NOPE. NOT NULL 제약조건만 복사되고 나머지 제약조건은 필요시 직접 추가해야한다. 12345678910//서브쿼리 구문을 사용한 테이블 생성create table 테이블명as select 원하는컬럼명 또는 *from 복사하고싶은테이블//서브쿼리 구문을 사용하는데 데이터는 빈채로 틀만 가져오고싶을때create table 테이블명as select *from 복사하고싶은테이블where 1 = 2; //항상 거짓이기때문에 컬럼틀만 복사되고 안의 데이터는 복사되지않는다. 예시 : 123456//서브쿼리 구문을 사용한 테이블 생성create table dept80as select employee_id, last_name, salary*12 annsal, hire_datefrom employeeswhere department_id = 80; 2. 제약조건 테이블에 부정확한 데이터 입력 방지를 위해 필수! 2-1. 제약조건명 제약조건 작성시 필수 입력 제약조건명은 중복불가 제약조건 사용처 : 제약조건 정보 확인할때, 해당 제약조건삭제할때. 의미있는 제약조건명필수 오라클 권장 : 테이블명약자_컬럼명약자_제약조건유형약자 ex) emp_empid_pk ex) dept_dname_nn ex) emp_mgrid_fk ex) sal_ck ex) emp_email_uk 제약조건명을 꼭 적야아할까? NOPE! 생략가능. 생략하면 oracle이 자동으로 고유한 제약조건명 지정 ex) sys_cXXXXX(X는 숫자) : 이런 패턴의 제약조건명을 자동으로 지정 하지만 전혀의미없는 제약조건명이므로 제약조건명 지정 권장! 2-2. 제약조건 선언하는 시기 테이블 생성 시 : 일반사용 서브쿼리구문 사용 : 기존테이블을 복사한 테이블을 생성할 수 있다. 주 사용처 : 백업 테스트 : 뭔가를 테스트하고싶을 때 원본테이블을 복사한 뒤 복사본에 테스트를 하여 안전성을 높인다. * : 전체 컬럼과 그 안의 데이터 전체를 복사함. 컬럼명설정 : 원하는 컬럼과 그 안의 데이터만 복사함. 12create table 테이블명컬럼명 컬럼데이터타입(컬럼사이즈) constraint 제약조건명 제약조건 예시 : 123create table employee (employee_id number(6) constraint emp_emp_id_pk privary key,first_name varchar2(20)); 테이블 성성 후 : 문법이 두가지이다. : 테이블레벨문법과 컬럼레벨문법 1234567//테이블레벨 문법alter table 테이블명add constraint 고유한제약조건명 제약조건유형(컬럼명);//컬럼레벨 문법alter table 테이블명modify 컬럼명 contsraint 고유한제약조건명 제약조건유형; 2-3. 제약조건문법 2가지 Column-level 문법 Not Null 제약조건사용시 column-level문법으로 작성해야한다! 예시123create table employee (employee_id number(6) constraint emp_emp_id_pk_ privary key,first_name varchar2(20)); Table-level 문법 예시1234create table employee (employee_id number(6),first_name varchar2(20),constraint emp_emp_id_pk_ privary key(employee_id)); 참고링크 : 제약조건문법 2가지 2-4. 제약조건종류 5가지 참고링크 : 제약조건 5가지 3. 제약조건 확인하는 쿼리 저장해놓고 필요시에 불러서 사용가능. 저장시 파일확장자는 .sql 123select constraint_name, constraint_type, search_condition, r_constraint_namefrom user_constraintswhere lower(table_name) = lower( '&amp;table_name');","link":"/2020/07/21/200721dbi/"},{"title":"[ITWILL : JSP]Javabean 8 : 게시판만들기(글내용보기, 글수정하기)","text":"ITWILL학원 : 29강 JSP기초 BY 정규태강사1. 순서 content.jsp 생성 html 테이블작성 boardDAO.java에 updateReadCount(int bno)메서드 생성 boardDAO.java에 getBoard(int bno)메서드 생성 글수정할 수 있는 updateForm.jsp 생성 글수정할 수 있는 updatePro.jsp 생성 boardDAO.java에 updateBoard(bb)메서드 생성 2. content.jsp 생성글목록에서 제목을 눌렀을때 컨텐츠를 볼 수 있게 만드는 페이지이다. 목록으로 되돌아가는 버튼 만들때 주의점 location.href=boardList.jsp만 하면 5페이지보고있다가 다시 1페이지로 돌아가버린다 이때 historyback하면 조회수가 올라가지않는다. 따라서 pageNum을 가져와서 사용하면된다 location.href=boardList.jsp?pageNum=&lt;%=pageNum%&gt;으로 해줘야한다. 123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263&lt;%//1. html테이블작성//글번호(pk제약조건의 컬럼필수)에 해당하는 글의 정보를 가져오기//2. 전달된 데이터 저장(bno, pageNum)int bno = Integer.parseInt(request.getParameter(\"bno\"));String pageNum = request.getParameter(\"pageNum\");//3. DAO객체생성BoardDAO bdao = new BoardDAO();//4. 글의 조회수정보를 1증가 : DB에서처리 -&gt; DAO객체에 updateReadCount(bno)메서드 생성bdao.updateReadCount(bno);//5. 화면(테이블)에 출력 (getBoard(bno))// DAO객체에 글정보를 가져오는 메서드 생성BoardBean bb = bdao.getBoard(bno);//System.out.println(bdao.getBoard(bno));%&gt;&lt;fieldset&gt;&lt;legend&gt;글 내용 보기&lt;/legend&gt; &lt;table border=\"solid,1px\"&gt; &lt;tr&gt; &lt;th&gt;글번호&lt;/th&gt; &lt;td&gt;&lt;%=bno%&gt;&lt;/td&gt; &lt;th&gt;조회수&lt;/th&gt; &lt;td&gt;&lt;%=bb.getReadcount()%&gt;&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;th&gt;작성자&lt;/th&gt; &lt;td&gt;&lt;%=bb.getName() %&gt;&lt;/td&gt; &lt;th&gt;작성일&lt;/th&gt; &lt;td&gt;&lt;%=bb.getDate() %&gt;&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;th&gt;제목&lt;/th&gt; &lt;td colspan=\"3\"&gt;&lt;%=bb.getSubject() %&gt;&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;th&gt;첨부파일&lt;/th&gt; &lt;td colspan=\"3\"&gt;&lt;%=bb.getFile() %&gt;&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;th&gt;내용&lt;/th&gt; &lt;td colspan=\"3\" height=\"300px\"&gt;&lt;%=bb.getContent() %&gt;&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td colspan=\"4\" style=\"text-align:center\"&gt; &lt;input type=\"button\" value=\"글수정\" class=\"btn\" onclick=\"location.href='updateForm.jsp?bno=&lt;%=bb.getBno()%&gt;&amp;pageNum=&lt;%=pageNum%&gt;'\"&gt; &lt;input type=\"button\" value=\"글삭제\" class=\"btn\"&gt; &lt;input type=\"button\" value=\"답글쓰기\" class=\"btn\"&gt; &lt;input type=\"button\" value=\"목록으로\" class=\"btn\" onclick=\"location.href='boardList.jsp?pageNum=&lt;%=pageNum%&gt;'\"&gt; &lt;!-- location.href='boardList.jsp만 하면 5페이지보고있다가 다시 1페이지로 돌아가버린다 이때 historyback하면 조회수가 올라가지않는다. 따라서 pageNum을 가져와서 사용하면된다 --&gt; &lt;/td&gt; &lt;/tr&gt; &lt;/table&gt;&lt;/fieldset&gt; 3. boardDAO.java에 updateReadCount(int bno)메서드 생성조회수 올리는 메서드를 생성하자 1234567891011121314151617181920public void updateReadCount(int bno){ try { //1. 디비연결 getCon(); //2. sql작성 &amp; pstmt생성 //select를 안하는 이유? 기존의 데이터를 굳이 가져올 필요가 없기 때문 sql = \"update itwill_board set readcount=readcount+1 where bno=?\"; pstmt = con.prepareStatement(sql); pstmt.setInt(1, bno); //3. 실행 pstmt.executeUpdate(); System.out.println(\"조회수 1증가 완료\"); } catch (Exception e) { System.out.println(\"조회수 1증가 실패\"); e.printStackTrace(); } finally { //4. 자원해제 closeDB(); }} 4. boardDAO.java에 getBoard(int bno)메서드 생성글 내용을 다 가져와서 오는 메서드를 만들어보자이는 글제목을 클릭시 화면에 내용을 보여줄때 사용된다. 내코드 123456789101112131415161718192021222324252627282930313233343536373839public BoardBean getBoard(int bno){ BoardBean bb = new BoardBean(); try { //1. 디비연결 getCon(); //2. sql작성, pstmt //sql = \"select * from itwill_board\"; sql = \"select * from itwill_board where bno=?\"; pstmt = con.prepareStatement(sql); pstmt.setInt(1, bno); //3. 실행 -&gt; rs저장 rs = pstmt.executeQuery(); //4. 데이터처리 if(rs.next()){ //4-1.BoardBean 객체생성해서 그 안에 rs데이터 저장 bb.setBno(rs.getInt(\"bno\")); bb.setContent(rs.getString(\"content\")); bb.setDate(rs.getDate(\"date\")); bb.setFile(rs.getString(\"file\")); bb.setIp(rs.getString(\"ip\")); bb.setName(rs.getString(\"name\")); bb.setPw(rs.getString(\"pw\")); bb.setRe_lev(rs.getInt(\"re_lev\")); bb.setRe_ref(rs.getInt(\"re_ref\")); bb.setRe_seq(rs.getInt(\"re_seq\")); bb.setReadcount(rs.getInt(\"readcount\")); bb.setSubject(rs.getString(\"subject\")); //여기까지가 한 행의 데이터를 저장한 것임 } } catch (Exception e) { e.printStackTrace(); } finally { closeDB(); } return bb;}//getBoard닫음 강사님코드 BoardBean객체를 언제 생성하는 지가 내 코드와 달랐다. BoardBean객체를 미리 생성할 필요가 없었다. try catch로 예외가 발생하거나, rs에 데이터가 없는 경우에는 객체를 생성할 필요가 없기 때문이다. 글정보 저장완료 후 리턴값 bb정보를 습관적으로 확인하자. 123456789101112131415161718192021222324252627282930313233343536373839//글 정보를 가져오는 메서드구현public BoardBean getBoard(int bno){ //rs에 데이터가 없으면 객체생성할 필요가 없음. 따라서 객채생성안하고 null함. BoardBean bb = null; try { //1. 디비연결 getCon(); //2. sql작성, pstmt //sql = \"select * from itwill_board\"; sql = \"select * from itwill_board where bno=?\"; pstmt = con.prepareStatement(sql); pstmt.setInt(1, bno); //3. 실행 -&gt; rs저장 rs = pstmt.executeQuery(); //4. 데이터처리 if(rs.next()){ //4-1.BoardBean 객체생성해서 그 안에 rs데이터 저장 // 글내용에서 보이지 않는 컴럼들도 만들어야할까? // 만들기를 추천함 why? 매개변수인 bno자체가 pk를 가졌다. // 지금뿐만아니라 다음 기능이 필요할때 불러와서 사용할 수 있다. // 재사용성 bb = new BoardBean(); bb.setBno(rs.getInt(\"bno\")); (중략) bb.setSubject(rs.getString(\"subject\")); //여기까지가 한 행의 데이터를 저장한 것임 } //글정보 저장완료 후 정보확인 System.out.println(\"해당 글 저장 완료\"); System.out.println(bb); } catch (Exception e) { e.printStackTrace(); } finally { closeDB(); } return bb;}//getBoard닫음 5. updateForm.jsp생성글을 수정할수있는 페이지를 만들어보자. 아래 태그 두개는 동일할까? &lt;input type=&quot;button&quot; value=&quot;목록으로&quot; class=&quot;btn&quot; onclick=&quot;location.href='boardList.jsp?bno=&lt;%=bno%&gt;'&quot;&gt; &lt;input type=&quot;button&quot; value=&quot;목록으로&quot; class=&quot;btn&quot; onclick=&quot;location.href='boardList.jsp?bno=&lt;%=bb.getBno()%&gt;'&quot;&gt; YES! 동일하다! 인풋 히튼타입 : 화면에는 보이지않지만 데이터 저장 및 전달이 가능해서 데이터 이동용으로 주로 사용 BoardBean안에 포함되지 않는 pageNum 변수등은 어떻게 전달할까? 액션페이지 주소줄에 get방식으로 전달 만약 (BoardBean에 포함되지않은) 전달될 데이터가 개인정보등 중요한 데이터라면 get방식으로 전달해선 절대 안된다(=&gt;정보유출문제발생) 그럼 중요한 정보들은 전달할수없는걸까? CAN! 1. 클로저이용 또는 2.BoardBean구조자체를 변경 결론: 가능하면 BoardBean형태의 데이터만 저장해서 처리할 수 있도록 해야한다. 123456789101112131415161718192021222324&lt;%//1. 파라미터저장int bno = Integer.parseInt(request.getParameter(\"bno\"));String pageNum = request.getParameter(\"pageNum\");BoardDAO bdao = new BoardDAO();BoardBean bb = bdao.getBoard(bno);%&gt;&lt;fieldset&gt;&lt;legend&gt;게시판 글쓰기&lt;/legend&gt; &lt;form action=\"updatePro.jsp?pageNum=&lt;%=pageNum %&gt;\" method=\"post\" name=\"fr\"&gt; &lt;!-- 인풋 히튼타입 : 화면에는 보이지않지만 데이터 저장 및 전달이 가능해서 데이터 이동용으로 주로 사용 --&gt; &lt;input type=\"hidden\" name=\"bno\" value=\"&lt;%=bb.getBno() %&gt;\"&gt; 글쓴이 : &lt;input type=\"text\" name=\"name\" required value=\"&lt;%=bb.getName() %&gt;\"&gt;&lt;br&gt; 비밀번호 : &lt;input type=\"password\" name=\"pw\" required &gt;&lt;br&gt; 제목 : &lt;input type=\"text\" name=\"subject\" required value=\"&lt;%=bb.getSubject() %&gt;\"&gt;&lt;br&gt; 내용 : &lt;br&gt; &lt;textarea rows=\"10\" cols=\"35\" name=\"content\" placeholder=\"여기에 작성해주세요\" required&gt; &lt;%=bb.getContent() %&gt;&lt;/textarea&gt;&lt;br&gt; &lt;input type=\"submit\" value=\"수정하기\" class=\"btn\"&gt; &lt;button type=\"reset\" class=\"btn\"&gt;초기화&lt;/button&gt; &lt;input type=\"button\" value=\"목록으로\" class=\"btn\" onclick=\"location.href='boardList.jsp'\"&gt; &lt;/form&gt;&lt;/fieldset&gt; 6. updatePro.jsp생성1234567891011121314151617181920212223242526272829303132333435&lt;%//1. 한글처리request.setCharacterEncoding(\"UTF-8\");//2. 파라미터저장(액션태그사용 &amp; pageNum은 파라미터로) String pageNum = request.getParameter(\"pageNum\");%&gt;&lt;jsp:useBean id=\"bb\" class=\"com.itwillbs.board.BoardBean\"&gt;&lt;/jsp:useBean&gt;&lt;jsp:setProperty property=\"*\" name=\"bb\"/&gt;&lt;% //3. DAO생성BoardDAO bdao = new BoardDAO();//4. 정보수정메서드 updateBoard(bb) // -&gt; 결과를 정수형 데이터로 리턴 (1=&gt;정상처리, 0=&gt;비번오류, -1=&gt;해당글없음)int result = bdao.updateBoard(bb);if( result == 1){ %&gt; &lt;script type=\"text/javascript\"&gt; alert(\"글 수정 완료!\"); location.href=\"boardList.jsp?pageNum=&lt;%=pageNum%&gt;\"; &lt;/script&gt; &lt;%}else if(result == 0){ %&gt; &lt;script type=\"text/javascript\"&gt; alert(\"비번이 일치하지않습니다\"); history.back(); &lt;/script&gt; &lt;%}else{ %&gt; &lt;script type=\"text/javascript\"&gt; alert(\"존재하지 않는 글입니다\"); history.back(); &lt;/script&gt; &lt;%}%&gt; 7. boardDAO.java에 updateBoard(bb)메서드 생성123456789101112131415161718192021222324252627282930313233343536373839404142434445public int updateBoard(BoardBean bb){ int result = 0; try { //DB연결 getCon(); System.out.println(\"디비연결완료\"); //sql &amp; pstmt sql = \"select pw from itiwill_board where bno=?\"; pstmt = con.prepareStatement(sql); System.out.println(\"pstmt 객체생성완료\"); pstmt.setInt(1, bb.getBno()); rs = pstmt.executeQuery(); System.out.println(\"pstmt 실행\"); if(rs.next()){ //비번비교 후 일치하면 update 쿼리실행 if(bb.getPw().equals(rs.getString(\"pw\"))){ sql=\"update itwill_board set name=?, subject=?, content=? where bno=?\"; pstmt = con.prepareStatement(sql); pstmt.setString(1, bb.getName()); pstmt.setString(2, bb.getSubject()); pstmt.setString(3, bb.getContent()); pstmt.setInt(4, bb.getBno()); pstmt.executeUpdate(); System.out.println(\"글수정완료 - 비번일치\"); //리컨값 변경 result =1; }else{//비번불일치 System.out.println(\"글수정실패 - 비번불일치\"); result = 0; } }else{ System.out.println(\"글수정실패 - 해당글없음\"); result = -1; } } catch (Exception e) { // TODO Auto-generated catch block e.printStackTrace(); } finally { closeDB(); } return result; }//updateBoard닫음","link":"/2020/07/22/200722jspi/"},{"title":"[ITWILL : JAVA]예외처리","text":"ITWILL학원 : 19강 JAVA BY 윤미영강사1. 오류 Error 발생하면 복구하거나 되돌릴 수 없는 심각한 상황. 발생상황 예시 : 메모리부족, 메서드끼리 호출을 무한반복등등. 처리방법 : 오류를 발생하는 요인을 찾아서 업애는 디버깅. 예방법 : 코드 짜임새있게 짜기.즉, 프로그램을 잘 짜는 것만이 대안이기때문에 예외처리와 무관하다. 2. 예외 Exception 오류와 비교하면 심각도가 낮으며 프로그램의 정상적인 흐름을 방해하는 상황. 발생상황 예시 : 네트워크 연결 끊기는 상황, 해당 파일을 읽지 못하는 상황등등. 예외처리란 : 예외가 발생했을때 비정상적인 종료를 막고 계속해서 사용할 수 있도록 처리하는 것 예외처리 라이브러리 = 최상위 클래스 = Throwable RuntiomeException = unchecked Exception : 중간에 throws 할 필요없다 그 외 예외 = checked Exception 3. 예외 처리 기법3-1. try catch finally구문 단축키 : ctrl + space try catch finally : finally블록은 무조건 실행. 예외 발생 여부와 상관없이 반드시 실행되어야하는 내용을 작성. 심지어 return문을 만날때에도 먼저 finally 블록을 실행 후 메서드가 리턴된다. finally 주요 목적 : try블록에서 사용한 시스템 자원(System Resource)의 반납처리. 1234567891011121314151617181920212223242526272829public class TryCatchFinallyFlow { public static void main(String[] args) { int num = new Random().nextInt(2); try{ System.out.println(\"코드1 : \"+ num); int i = 1/num; System.out.println(\"랜덤숫자 1일경우 예외없음\"); return; } catch (ArithmeticException e){ System.out.println(\"랜덤숫자0일경우 예외처리완료\"); } finally { System.out.println(\"코드4 : 파이널리 항상 실행\"); } System.out.println(\"코드5\"); }}//랜덤숫자가 1일경우 출력값 - return때문에 코드5출력되지않음코드1 : 1랜덤숫자 1일경우 예외없음코드4 : 파이널리 항상 실행//랜덤숫자가 0일경우 출력값코드1 : 0랜덤숫자0일경우 예외처리완료코드4 : 파이널리 항상 실행코드5 3-2. Exception 객체 정보 활용참고링크 : Throwable 메서드 getMessage()사용 123456789101112131415public class SimpleException { public static void main(String[] args) { int[] intArr = {10}; try { System.out.println(intArr[2]); } catch (Exception e) { System.out.println(\"예외발생 - 배열확인필요 : \"+ e.getMessage()); } System.out.println(\"프로그램을 종료합니다.\"); }}//출력값예외발생 - 배열확인필요 : 2프로그램을 종료합니다. printStackTrace()사용 123456789101112131415public class SimpleException { public static void main(String[] args) { int[] intArr = {10}; try { System.out.println(intArr[2]); } catch (Exception e) { e.printStackTrace(); } System.out.println(\"프로그램을 종료합니다.\"); }}//출력값java.lang.ArrayIndexOutOfBoundsException: 2프로그램을 종료합니다. at ch9.SimpleException.main(SimpleException.java:8) 3-3. try with resources 구문 try catch finally 코드가 길다. 따라서 java 7버전에서 새롭게 추가된 기능이 try with resources구문이다. 12345try (리소스타입1 res1 = 초기화; 리소스타입2 res2 = 초기화; ...){ //예외 발생 코드}catch(Exception e){ //예외 처리 코드} 4. throws 키워드를 통한 예외처리 위임예외 처리의 두번째방법은 throws 키워드를 통한 위임 또는 전달이다. throws 키워드 throws는 메서드에서 처리해야 할 하나 이상의 예외를 메서드를 호출한 곳으로 던져버린다. 이러한 위임은 처리와는 다름. 첫번째 방법이었던 try catch 에서 catch블록은 예외를 처리해서 없애 버림 BUT 위임은 예외를 없애지 못하고 그냥 호출한 곳으로 예외를 전달만 함. 예외를 전달받은 메서드는 다시 예외 처리 책임이 발생함. throw를 왜 사용할까? 항상 try catch로 처리하는 것은 좋지않다 WHY? 특히 API나 다른 모듈에서 사용되는 기능을 제공하는 경우 예외를 전달해서 그 예외에 대해 적절히 대응할 수 있는 코드를 작성할 수 있게 해줄 필요가 있기때문이다. 예 : 어떤 프로그램을 인스톨할때 5. 사용자 정의 예외 예외가 unchecked exception계열이면 중간에 throws절차가 필요없다. (ex : runtiomeException) 고급스러운 코딩이 가능하다. 6. throw와 throws 차이둘 다 Exception을 발생시키지만 큰 차이가 있다. throws : 예외를 발생시켜주는 예약어 throw : 억지로 예외를 발생시키는 예약어, 즉 사용자 정의에 의한 exception = 인위적인 exception이다. 생성자에 exception을 넣으면 예외 문구로 출력된다. 1throw = new throw(\"나만의 예외메세지\");","link":"/2020/07/22/200722javai/"},{"title":"[ITWILL : JSP]Javabean 9 : 게시판만들기(글삭제하기)","text":"ITWILL학원 : 30강 JSP기초 BY 정규태강사1. 글삭제하기기능구현 순서 deleteForm.jsp 작성 deletePro.jsp 작성 BoardDAO.java에서 bdao.deleteBoard(bno, pw)메서드 생성 기존의 boardList.jsp에 id가 있을 경우 추가 기존의 content.jsp 로그인상태에 따라 다르게 보이는 버튼 추가 2. deleteForm.jsp 작성123456789101112131415161718&lt;%//1. 한글처리request.setCharacterEncoding(\"UTF-8\");//2. 파라미터저장int bno = Integer.parseInt(request.getParameter(\"bno\"));String pageNum = request.getParameter(\"pageNum\");%&gt;&lt;fieldset&gt; &lt;legend&gt;게시글 삭제&lt;/legend&gt; &lt;form action=\"deletePro.jsp?pageNum=&lt;%=pageNum%&gt;\" method=\"post\"&gt; &lt;input type=\"hidden\" name=\"bno\" value=\"&lt;%=bno%&gt;\"&gt; 비밀번호 : &lt;input type=\"password\" name=\"pw\"&gt;&lt;br&gt; &lt;input type=\"submit\" value=\"글삭제하기\" class=\"btn\"&gt; &lt;input type=\"button\" value=\"뒤로가기\" class=\"btn\" onclick=\"history.back()\"&gt; &lt;/form&gt;&lt;/fieldset&gt; 3. deletePro.jsp 작성1234567891011121314151617181920212223242526272829303132333435&lt;%//1. 한글처리request.setCharacterEncoding(\"UTF-8\");//2. 파라미터저장(액션태그사용 &amp; pageNum은 파라미터로) int bno = Integer.parseInt(request.getParameter(\"bno\"));String pageNum = request.getParameter(\"pageNum\");String pw = request.getParameter(\"pw\");//3. DAO생성BoardDAO bdao = new BoardDAO();//4. 정보수정메서드 updateBoard(bb) // -&gt; 결과를 정수형 데이터로 리턴 (1=&gt;정상처리, 0=&gt;비번오류, -1=&gt;해당글없음)int result = bdao.deleteBoard(bno, pw);if(result == 1){ %&gt; &lt;script type=\"text/javascript\"&gt; alert(\"정상적으로 글 삭제되었습니다\"); location.href=\"boardList.jsp\"; &lt;/script&gt; &lt;% }else if(result == 0){ %&gt; &lt;script type=\"text/javascript\"&gt; alert(\"비밀번호 오류\"); history.back(); &lt;/script&gt; &lt;% }else{ %&gt; &lt;script type=\"text/javascript\"&gt; alert(\"존재하지않는 게시글입니다\"); history.back(); &lt;/script&gt; &lt;%}%&gt; 3. BoardDAO.java에서 bdao.deleteBoard(bno, pw)메서드 생성123456789101112131415161718192021222324252627282930313233public int deleteBoard(int bno, String pw){ int result = -1; try { getCon(); sql=\"select pw from itwill_board where bno=?\"; pstmt = con.prepareStatement(sql); pstmt.setInt(1, bno); rs = pstmt.executeQuery(); if(rs.next()){ if(pw.equals(rs.getString(\"pw\"))){ sql=\"delete from itwill_board where bno=?\"; pstmt = con.prepareStatement(sql); pstmt.setInt(1, bno); pstmt.executeUpdate(); System.out.println(\"글삭제 성공\"); result = 1; }else{ result = 0; System.out.println(\"글삭제 중 비번오류\"); } }else{ result = -1; System.out.println(\"글삭제 중 select오류\"); } } catch (Exception e) { // TODO Auto-generated catch block e.printStackTrace(); } finally { closeDB(); } return result;}//deleteBoard()닫음 4. 기존의 main.jsp에 게시판바로가기 버튼 추가글삭제의 경우 아무나 할 수 없어야한다.따라서 로그인한 사람만이 글을 쓰고 글을 삭제할 수 있도록 구현해보자.이전에 구현했던 main.jsp에 게시판글바로볼 수 있는 버튼을 추가하고 location.href='../board/boardList.jsp을 연결해보자. 1234567891011121314151617181920212223242526&lt;%//1.한글처리, 파라미터 request.setCharacterEncoding(\"UTF-8\");String id = (String) session.getAttribute(\"id\");//object를 string으로 다운캐스팅String name = request.getParameter(\"name\");//1-1. id없이는 진입불가, id없는 경우 로그인페이지로 이동if(id == null){ response.sendRedirect(\"loginForm.jsp\");}%&gt;&lt;h2&gt;&lt;%=id %&gt;님 환영합니다.&lt;/h2&gt;&lt;%=name %&gt;&lt;br&gt;&lt;input type=\"button\" value=\"ITWILL게시판가기\" class=\"btn\" onclick=\"location.href='../board/boardList.jsp'\"&gt;&lt;input type=\"button\" value=\"회원정보조회\" class=\"btn\" onclick=\"location.href='memberinfo.jsp'\"&gt;&lt;input type=\"button\" value=\"회원정보수정\" class=\"btn\" onclick=\"location.href='updateForm.jsp'\"&gt;&lt;input type=\"button\" value=\"로그아웃\" class=\"btn\" onclick=\"location.href='logout.jsp'\"&gt;&lt;input type=\"button\" value=\"회원탈퇴\" class=\"btn\" onclick=\"location.href='deleteForm.jsp'\"&gt;&lt;!-- 관리자일때만 메뉴확인가능 --&gt;&lt;% if(id != null){ if(id.equals(\"admin\")){ %&gt; &lt;input type=\"button\" value=\"회원전체목록(관리자용)\" class=\"btn\" onclick=\"location.href='memberList.jsp'\"&gt;&lt;% }}%&gt; 5. 기존의 boardList.jsp에 id가 있을 경우 추가 id가 없을 경우 : 로그인버튼만 표시 id가 있을 경우 : 로그아웃, 글쓰기버튼 표시 1234567891011121314151617181920212223242526272829303132333435363738394041424344454647&lt;fieldset&gt;&lt;legend&gt;땡땡게시판&lt;/legend&gt; &lt;div id=\"contents\"&gt; 게시판 총 글의 수 : &lt;%=cnt%&gt; 개 &lt;% if(id == null){ %&gt; &lt;input class=\"btn\" type=\"button\" value=\"로그인\" onclick=\"location.href='../member/main.jsp'\"&gt; &lt;% }else if( id != null){ %&gt; &lt;input class=\"btn\" type=\"button\" value=\"로그아웃\" onclick=\"location.href='../member/logout.jsp'\"&gt; &lt;input class=\"btn\" type=\"button\" value=\"글쓰기\" onclick=\"location.href='writeForm.jsp'\"&gt; &lt;% } %&gt; &lt;br&gt; &lt;table&gt; &lt;tr&gt; &lt;th&gt;글번호&lt;/th&gt; &lt;th&gt;제목&lt;/th&gt; &lt;th&gt;작성자&lt;/th&gt; &lt;th&gt;조회수&lt;/th&gt; &lt;th&gt;작성일&lt;/th&gt; &lt;th&gt;IP&lt;/th&gt; &lt;/tr&gt; &lt;%//반복문 //ArrayList는 가변배열이므로 length가 없고 size가 존재한다. //size()메서드는 배열의 요소의 갯수를 리턴 for(int i=0;i&lt;boardList.size(); i++){ //ArrayList 한칸의 정보 -&gt;BoardBean 객체 하나로 이동 BoardBean bb = (BoardBean) boardList.get(i); %&gt; &lt;tr&gt; &lt;td&gt;&lt;%=bb.getBno()%&gt;&lt;/td&gt; &lt;td&gt;&lt;a href=\"content.jsp?bno=&lt;%=bb.getBno()%&gt;&amp;pageNum=&lt;%=pageNum%&gt;\"&gt;&lt;%=bb.getSubject()%&gt;&lt;/a&gt;&lt;/td&gt; &lt;td&gt;&lt;%=bb.getName()%&gt;&lt;/td&gt; &lt;td&gt;&lt;%=bb.getReadcount()%&gt;&lt;/td&gt; &lt;td&gt;&lt;%=bb.getDate()%&gt;&lt;/td&gt; &lt;td&gt;&lt;%=bb.getIp()%&gt;&lt;/td&gt; &lt;/tr&gt; &lt;% } %&gt; &lt;/table&gt; &lt;/div&gt;&lt;/fieldset&gt; 6. 기존의 content.jsp 로그인상태에 따라 다르게 보이는 버튼 추가 아이디가 있을 경우 로그아웃버튼, 글쓰기버튼이 보임 글 수정 및 삭제, 답글쓰기 버튼 보임 아이디가 없을 경우 로그인버튼만 보임. 로그아웃,글쓰기버튼 안보임 글 수정 및 삭제, 답글쓰기버튼 안보임 12345678910111213141516171819202122232425262728293031323334353637383940414243444546474849505152&lt;fieldset&gt;&lt;legend&gt;글 내용 보기&lt;/legend&gt; &lt;table border=\"solid,1px\"&gt; &lt;tr&gt; &lt;th&gt;글번호&lt;/th&gt; &lt;td&gt;&lt;%=bno%&gt;&lt;/td&gt; &lt;th&gt;조회수&lt;/th&gt; &lt;td&gt;&lt;%=bb.getReadcount()%&gt;&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;th&gt;작성자&lt;/th&gt; &lt;td&gt;&lt;%=bb.getName()%&gt;&lt;/td&gt; &lt;th&gt;작성일&lt;/th&gt; &lt;td&gt;&lt;%=bb.getDate()%&gt;&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;th&gt;제목&lt;/th&gt; &lt;td colspan=\"3\"&gt;&lt;%=bb.getSubject()%&gt;&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;th&gt;첨부파일&lt;/th&gt; &lt;td colspan=\"3\"&gt;&lt;%=bb.getFile()%&gt;&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;th&gt;내용&lt;/th&gt; &lt;td colspan=\"3\" height=\"300px\"&gt;&lt;%=bb.getContent()%&gt;&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td colspan=\"4\" style=\"text-align:center\"&gt; &lt;% //현재페이지에 로그인 정보가 없거나 글쓴이 이름과 아이디가 다를 경우 수정,삭제버튼을 숨긴다 //1.세션값 가져오기 String id = (String) session.getAttribute(\"id\");//object를 string으로 다운캐스팅 //2. 아이디가 존재하면서 이름과 아이디가 같은 경우 if( id != null &amp;&amp; id.equals(bb.getName())){ %&gt; &lt;input type=\"button\" value=\"글수정\" class=\"btn\" onclick=\"location.href='updateForm.jsp?bno=&lt;%=bb.getBno()%&gt;&amp;pageNum=&lt;%=pageNum%&gt;'\"&gt; &lt;input type=\"button\" value=\"글삭제\" class=\"btn\" onclick=\"location.href='deleteForm.jsp?bno=&lt;%=bb.getBno()%&gt;&amp;pageNum=&lt;%=pageNum%&gt;'\"&gt; &lt;input type=\"button\" value=\"답글쓰기\" class=\"btn\" onclick=\"location.href='reWriteForm.jsp?bno=&lt;%=bb.getBno()%&gt;&amp;re_ref=&lt;%=bb.getRe_ref() %&gt;&amp;re_lev=&lt;%=bb.getRe_lev()%&gt;&amp;re_seq=&lt;%=bb.getRe_seq()%&gt;'\"&gt; &lt;% } %&gt; &lt;input type=\"button\" value=\"목록으로\" class=\"btn\" onclick=\"location.href='boardList.jsp?pageNum=&lt;%=pageNum%&gt;'\"&gt; &lt;!-- location.href='boardList.jsp만 하면 5페이지보고있다가 다시 1페이지로 돌아가버린다 이때 historyback하면 조회수가 올라가지않는다. 따라서 pageNum을 가져와서 사용하면된다 --&gt; &lt;/td&gt; &lt;/tr&gt; &lt;/table&gt;&lt;/fieldset&gt;","link":"/2020/07/23/200723jspi/"},{"title":"[ITWILL : JAVA]로깅, 디버깅","text":"ITWILL학원 : 20강 JAVA BY 윤미영강사1. 로깅(Logging) 로깅 : 사용자의 요청사항을 출력하는 것 이외에 애플리케이션에서 발생하는 사건들을 기록하는 것. 참고링크 : java.util.Logging.Logger의 메서드 123456789101112131415161718192021222324public class SimpleLoggingFile { private final static Logger logger = Logger.getLogger(SimpleLoggingFile.class.getName()); public static void main(String[] args) throws SecurityException, IOException { FileHandler fHandler = new FileHandler(\"mylog_%g.log\"); logger.addHandler(fHandler); logger.log(Level.INFO, \"INTO LOG\"); logger.info(\"메서드 타입 인포 로그\"); logger.warning(\"메서드 타입 경고 로그\"); logger.severe(\"메서드 타입 시비어 로그\"); }}//출력값7월 23, 2020 11:11:40 오전 ch9.SimpleLoggingFile main정보: INTO LOG7월 23, 2020 11:11:40 오전 ch9.SimpleLoggingFile main정보: 메서드 타입 인포 로그7월 23, 2020 11:11:40 오전 ch9.SimpleLoggingFile main경고: 메서드 타입 경고 로그7월 23, 2020 11:11:40 오전 ch9.SimpleLoggingFile main심각: 메서드 타입 시비어 로그 더불어 mylog_0.log파일이 생성되었다. 출력된 로그는 콘솔과 함께 파일에도 기록된다. 실무에서는 logging패키지의 클래스보다 주로 logback과 같은 별도의 로깅 프레임워크들을 사용함. 2. 디버깅 리커시브방법 : 함수가 자기 자신을 계속 호출하는 구조 = 재귀함수 데이터처리 -&gt; for문과 동일한 결과이기에 실무에선 반복문을 많이 사용한다. 참고링크 : 데이터구조 - 재귀함수 break point : 프로그램 동작 중 디버깅을 위해서 동작을 멈추는 지점 중단점을 지정해 놓으면 그 전까지 프로그램이 동작하다가 브레이크포인트에서 사용자의 다음동작을 기다린다. step into를 하면 변수뷰창에서 valables가 어떻게 변화하는지 알수있다.","link":"/2020/07/23/200723javai/"},{"title":"[ITWILL : JAVA]내부클래스","text":"ITWILL학원 : 20강 JAVA BY 윤미영강사1. 내부클래스 클래스가 서로 밀접한 관련이 있을때 객체생성없이 사용하기 용이하다 주로 이미 만들어진 내부클래스라이브러리를 사용. 내부클래스의 종류 4가지 : 1-2. 인스턴스 내부클래스1234567891011121314151617181920212223242526public class InstanceInner { private int outerMember = 1; private void outerMethod(){ Inner inner = new Inner(); inner.innnerMember = 11; inner.innerMethod(); } class Inner{ int innnerMember = 10; //static int staticMember = 10; staitc멤버변수 선언 불가 static final int finalStaticMember = 20; //단 static final형태는 선언할 수 있다. private void innerMethod(){ System.out.printf(\"out : %d, inner %d%n\", outerMember, innnerMember); } } public static void main(String[] args) { InstanceInner ilt = new InstanceInner(); Inner inner = ilt.new Inner(); inner.innerMethod(); }}","link":"/2020/07/23/200723javai2/"},{"title":"[ITWILL : JSP]Javabean 10 : 게시판만들기(답글쓰기)","text":"ITWILL학원 : 30강 JSP기초 BY 정규태강사1. 답글처리구현 순서 일반글 = 답글이 아닌 글. num : 일반글+답글 둘 다 작성할때마다 계속 증가된 값으로 사용(순차적) re_ref : 답글의 그룹번호(일반글번호와 동일), 답글을 다는 원글의 그룹번호를 사용 re_lev (level) : 답글의 레벨값 (깊이), 원글을 기준으로한다 ex)한번내려가면1 두번내려가면 2 re_seq (sequence) : 답글의 순서, 원글에 답글이 몇개인지하는 순서대로 카운트. 일반글은 ref만 num값과 동일하게 초기화 답글은 lev, seq는 0으로 초기화 만약 여기서 3번글의 답글 1개를 추가한다면?6 / 답급3-1 / 3 / 1 / 1 만약 여기서 3번글의 답글 1개를 추가한다면?6 / 답글3-1 / 3 / 1 / 1 만약 여기서 3번글의 답글 1개를 또 추가한다면?7 / 답글3-2 / 3 / 1 / 2 만약 여기서 3번답글인 3-1에 답글 1개를 추가한다면?8 / 답글3-1-1 / 3 / 2 / 3 만약 여기서 4번밑에 답글을 단다면?9 / 답글4-1 / 4 / 1 / 1 만약 여기서 일반글 작성한다면?10 / 일반글 / 10 / 0 / 0 만약 여기서 답글4-1에 답글을 단다면?11 / 답글4-1-1 / 4 / 2 / 2 2. reWriteForm.jsp 작성123456789101112131415161718192021222324252627282930&lt;%//한글처리request.setCharacterEncoding(\"UTF-8\");//전달한 데이터 저장 (bno,re_ref, re_lev, &amp;re_seq)int bno = Integer.parseInt(request.getParameter(\"bno\"));int re_ref = Integer.parseInt(request.getParameter(\"re_ref\"));int re_lev = Integer.parseInt(request.getParameter(\"re_lev\"));int re_seq = Integer.parseInt(request.getParameter(\"re_seq\"));//어떻게 가져갈 것인가? 폼태그안에 담아갈까? 주소창에 GET방식으로 가져갈까?//bean의 멤버변수에 있는 변수는 폼태그안에 담아가면된다. =&gt;hidden 인풋태그%&gt;&lt;fieldset&gt;&lt;legend&gt;게시판 답글쓰기&lt;/legend&gt; &lt;form action=\"reWritePro.jsp\" method=\"post\" name=\"fr\"&gt; &lt;input type=\"hidden\" name=\"bno\" value=\"&lt;%=bno%&gt;\"&gt; &lt;input type=\"hidden\" name=\"re_ref\" value=\"&lt;%=re_ref%&gt;\"&gt; &lt;input type=\"hidden\" name=\"re_lev\" value=\"&lt;%=re_lev%&gt;\"&gt; &lt;input type=\"hidden\" name=\"re_seq\" value=\"&lt;%=re_seq%&gt;\"&gt; 글쓴이 : &lt;input type=\"text\" name=\"name\" required&gt;&lt;br&gt; 비밀번호 : &lt;input type=\"password\" name=\"pw\" required&gt;&lt;br&gt; 제목 : &lt;input type=\"text\" name=\"subject\" maxlength=\"15\" value=\"[답글] \" required&gt;&lt;br&gt; 내용 : &lt;br&gt; &lt;textarea rows=\"10\" cols=\"35\" name=\"content\" placeholder=\"여기에 답글을 작성해주세요\" required&gt;&lt;/textarea&gt;&lt;br&gt; &lt;input type=\"submit\" value=\"답글등록\" class=\"btn\"&gt; &lt;button type=\"reset\" class=\"btn\"&gt;초기화&lt;/button&gt; &lt;input type=\"button\" value=\"목록으로\" class=\"btn\" onclick=\"location.href='boardList.jsp'\"&gt; &lt;/form&gt;&lt;/fieldset&gt; 3. reWritePro.jsp 작성1234567891011121314151617181920&lt;%// 한글 처리 request.setCharacterEncoding(\"UTF-8\");// 액션태그 사용 파라미터값 저장// useBean,setProperty%&gt;&lt;jsp:useBean id=\"bb\" class=\"com.itwillbs.board.BoardBean\"/&gt;&lt;jsp:setProperty property=\"*\" name=\"bb\"/&gt; &lt;%System.out.println(bb);// ip 정보 저장bb.setIp(request.getRemoteAddr());// BoardDAO 객체 생성 - reInsertBoard(객체)BoardDAO bdao = new BoardDAO();bdao.reInsertBoard(bb); // 페이지 이동(글 목록)response.sendRedirect(\"boardList.jsp\");%&gt; 4. BoardDAO.java에서 reInsertBoard(BoardBean bb)메서드 만들기1234567891011121314151617181920212223242526272829303132333435363738394041424344454647484950515253545556public void reInsertBoard(BoardBean bb){ //1.지역변수생성 int num = 0; //2. 디비연결 try { getCon(); //sql(게시판의 글번호 중 최댓값 계산) &amp; pstmt //2-1. 답글번호 계산 sql = \"select max(bno) from itwill_board\"; pstmt = con.prepareStatement(sql); // 실행 rs = pstmt.executeQuery(); // 데이터 처리 if(rs.next()){ num = rs.getInt(1)+1; } System.out.println(\" 답글 번호 : \"+num); //2-2. 답글 순서 재배치 //re_ref(같은 그룹기준)으로 re_seq값이 기존의 값보다 큰 값이 있을경우 seq값을 1증가시킴 sql = \"update itwill_board set re_seq=re_seq+1 \" + \"where re_ref=? and re_seq&gt;?\"; pstmt = con.prepareStatement(sql); pstmt.setInt(1, bb.getRe_ref()); pstmt.setInt(2, bb.getRe_seq()); pstmt.executeUpdate(); //2-3. 답글 추가 동작 sql=\"insert into itwill_board \" + \"values(?,?,?,?,?\" + \",?,?,?,?,now()\" + \",?,?)\"; pstmt = con.prepareStatement(sql); pstmt.setInt(1, num);//bno는 가지고있는게 아니라 계산해서 만든것이므로 num사용 pstmt.setString(2, bb.getName()); pstmt.setString(3, bb.getPw()); pstmt.setString(4, bb.getSubject()); pstmt.setString(5, bb.getContent()); pstmt.setInt(6, bb.getReadcount()); pstmt.setInt(7, bb.getRe_ref()); //기존 원글의 그룹번호와 동일 pstmt.setInt(8, bb.getRe_lev()+1); // 기존의 값 + 1 pstmt.setInt(9, bb.getRe_seq()+1); // 기존의 값 + 1 pstmt.setString(10, bb.getFile()); pstmt.setString(11, bb.getIp()); //3. 실행 pstmt.executeUpdate(); System.out.println(\"답글쓰기 성공\"); } catch (Exception e) { e.printStackTrace(); } finally { closeDB(); } } //reInsertBoard닫음 5. BoardList.jsp에서 답글 들여쓰기 추가 구현이미지와 조건문을 통해 구현 img src=”level.gif” width=”&lt;%=wid%&gt;” height=”15” img src=”re.gif” 12345678910111213141516171819202122232425262728293031323334353637383940414243444546474849505152535455565758&lt;fieldset&gt;&lt;legend&gt;땡땡게시판&lt;/legend&gt; &lt;div id=\"contents\"&gt; 게시판 총 글의 수 : &lt;%=cnt%&gt; 개 &lt;% if(id == null){ %&gt; &lt;input class=\"btn\" type=\"button\" value=\"로그인\" onclick=\"location.href='../member/main.jsp'\"&gt; &lt;% }else if( id != null){ %&gt; &lt;input class=\"btn\" type=\"button\" value=\"로그아웃\" onclick=\"location.href='../member/logout.jsp'\"&gt; &lt;input class=\"btn\" type=\"button\" value=\"글쓰기\" onclick=\"location.href='writeForm.jsp'\"&gt; &lt;% } %&gt; &lt;br&gt; &lt;table&gt; &lt;tr&gt; &lt;th&gt;글번호&lt;/th&gt; &lt;th&gt;제목&lt;/th&gt; &lt;th&gt;작성자&lt;/th&gt; &lt;th&gt;조회수&lt;/th&gt; &lt;th&gt;작성일&lt;/th&gt; &lt;th&gt;IP&lt;/th&gt; &lt;/tr&gt; &lt;%//반복문 //ArrayList는 가변배열이므로 length가 없고 size가 존재한다. //size()메서드는 배열의 요소의 갯수를 리턴 for(int i=0;i&lt;boardList.size(); i++){ //ArrayList 한칸의 정보 -&gt;BoardBean 객체 하나로 이동 BoardBean bb = (BoardBean) boardList.get(i); %&gt; &lt;tr&gt; &lt;td&gt;&lt;%=bb.getBno()%&gt;&lt;/td&gt; &lt;td&gt; &lt;% //답글일때만 이미지넣기 //변수 wid를 이용하여 들여쓰기 처리 int wid = 0; if(bb.getRe_lev() &gt; 0){ wid= 10 * bb.getRe_lev(); //레벨값의 10을 곱한 값만큼 이미지 가로길이를 길게해줌 %&gt; &lt;img src=\"level.gif\" width=\"&lt;%=wid%&gt;\" height=\"15\"&gt; &lt;img src=\"re.gif\"&gt; &lt;% } %&gt; &lt;a href=\"content.jsp?bno=&lt;%=bb.getBno()%&gt;&amp;pageNum=&lt;%=pageNum%&gt;\"&gt;&lt;%=bb.getSubject()%&gt;&lt;/a&gt;&lt;/td&gt; &lt;td&gt;&lt;%=bb.getName()%&gt;&lt;/td&gt; &lt;td&gt;&lt;%=bb.getReadcount()%&gt;&lt;/td&gt; &lt;td&gt;&lt;%=bb.getDate()%&gt;&lt;/td&gt; &lt;td&gt;&lt;%=bb.getIp()%&gt;&lt;/td&gt; &lt;/tr&gt; &lt;% } %&gt; &lt;/table&gt; &lt;/div&gt;&lt;/fieldset&gt;","link":"/2020/07/23/200723jspi2/"},{"title":"[ITWILL : DB]데이터정의어DDL : 테이블수정(컬럼수정, 제약조건수정, 컬럼명수정, 제약조건명수정), 테이블명변경, 테이블삭제, 테이블절단, truncate과 delete과 drop차이","text":"ITWILL학원 : 16강 Database BY 정지윤강사1. 테이블 수정 : 컬럼1-1. 컬럼추가 괄호생략가능 12alter table 테이블명add (추가할 쿼리); 예시 : 123//잡아이디컬럼을 추가하는 예시alter table dept80add (job_id varchar2(9)); 1-2. 컬럼수정 괄호생략가능 수정가능한 데이터 데이터타입 : 항상 되는 건 아니다. 현재 들어가 있는 데이터에 따라 다를 수 있다. number -&gt; varchar2 변경가능 number -&gt; date 변경불가능 date -&gt; varchar2 변경가능 date -&gt; number 변경불가능 varchar2 -&gt; number 변경불가능, , BUT 컬럼 안 모든 데이터가 number형식인 경우 변경가능. varchar2 -&gt; date 변경불가능, BUT 컬럼 안 모든 데이터가 date형식인 경우 변경가능. 컬럼사이즈 : 컬럼사이즈 늘리는 건 언제나 가능한데 컬럼사이즈를 줄이는 건 에러가 발생할 수도 있다. 에러 : 오류 보고 - ORA-01441: 일부 값이 너무 커서 열 길이를 줄일 수 없음. 01441. 00000 - “cannot decrease column length because some value is too big” default값 등등 12alter table 테이블명modify (수정할 쿼리); 예시 : 123//컬럼사이즈를 30으로 수정alter table dept80modify last_name varchar(30); 1-3. 컬럼삭제 column명 생략가능 -&gt; 생략시 삭제조건에 괄호필수 12345alter table 테이블명drop column 삭제하고싶은컬럼명;//또는alter table 테이블명drop (삭제하고싶은컬럼명); 예시 : 12345alter table dept80drop COLUMN job_id;//또는alter table dept80drop (job_idd); 1-4. 컬럼명변경123456alter table 테이블명rename 기존컬럼명 to 새로운컬럼명;//예시alter table emp2rename cloumn employee_id to emp_number; 2. 테이블 수정 : 제약조건2-1. 기존테이블에 제약조건 추가문법이 두가지이다. 1234567//테이블레벨 문법 : PK, FK, UK, CK사용가능alter table 테이블명add constraint 고유한제약조건명 제약조건유형(컬럼명);//컬럼레벨 문법 : PK, FK, UK, CK, NN사용가능alter table 테이블명modify 컬럼명 contsraint 고유한제약조건명 제약조건유형; 예시 1234567891011121314151617//테이블레벨 문법 - primary key 추가alter table emp2add constraint e2_eid_pk PRIMARY KEY(employee_id);//컬럼레벨 문법 - primary key 추가alter table emp2modify employee_id constraint e2_eid_pk PRIMARY KEY//테이블레벨 문법 - Foreign Key 추가alter table emp2add constraint e2_did_fk foreign key(department_id) references departments(department_id);//컬럼레벨 문법 -Foreign Key 추가alter table emp2modify department_id constraint e2_did_fkreferences departments(department_id); 제약조건 확인하는 쿼리 123select constraint_name, constraint_type, search_condition, r_constraint_namefrom user_constraintswhere lower(table_name) = lower( '&amp;table_name'); 2-2. 기존테이블의 제약조건 삭제 제약조건을 삭제하고싶으면 해당 제약조건명을 알고 있어야한다 제약조건명을 모르는 경우 위의 제약조건 확인하는 쿼리로 검색해서 알아내면됨 primary key 경우 제약조건명을 알지못해도 제약조건 삭제 가능. WHY? 테이블당 PK는 한번만 가능하기때문에. 헷갈리지않음 BUT, PK컬럼에 FK가 걸려있는 경우 삭제할 수 없다. 만약 FK 먼저 삭제해주면 PK삭제가능 cascade 옵션 : PK삭제시 걸림돌이 되는 제약조건까지 함께 삭제하겠다는 의미. 12345678910alter table 테이블명drop constraint 제약조건명;//primary key인경우alter table 테이블명drop primary key;//PK컬럼에 FK가 걸려있는데도 삭제하고싶은경우 (캐스캐이드옵션사용)alter table 테이블명drop primary key cascade; 예시 : 12alter table emp2drop constraint e2_eid_pk 2-3. 제약조건명 변경123456alter table 테이블명rename constraint 기존제약조건명 to 새로운제약조건명;//예시alter table emp2rename constraint employee_id to emp_number; 3. 테이블명 변경alter 명령어가 아니다. 1234rename 테이블명 to 새로운테이블명//예시rename emp2 to emp3; 4. 테이블 삭제 가장 신중하게 명령어입력할 것. DDL구문은 오토트랜잭션에 의해 rollback 안됨. oracle은 휴지통에 잘못삭제한 테이블이 있으면 flashback가능. oracle은 휴지통을 거치지않고 테이블삭제 가능(purge) : 보안때문에 완벽하게 테이블을 지울때 사용 언제까지 휴지통에 데이터가 남아있을까? 기준은 시간이 아니라 덮어쓰여지는 작업량이다. 내가 삭제한 후 삭제됐던 테이블이 많이 없을경우 일년이 지나도 flashback할수있다. 휴지통에 버려지면 테이블명만 자동으로 바뀐 후(object_name) 일정 데이터가 휴지통에 차면 이전에 있던 데이터가 덮어쓰여지게된다. 123456789101112drop table 테이블명//1oracle만 가능한 flashback//1-1. 오라클 휴지통에 내가 drop한 테이블있는 지 확인select original_name, object_name, operation, droptimefrom recyclebin;//1-2. flashbackflashback table emp3 to before drop;//1-3. 휴지통을 거치지않고 테이블삭제 가능drop table emp3 purge; 5. 테이블절단 truncate table 테이블 구조는 남겨두고 테이블의 모든 행 제거함 DLL구문으로 rollback안됨. 추가가능한 속성값없음. 딱 아래 코드 한 줄이 다름. 응용없음. 1truncate table table_name; 6. truncate과 delete, drop 차이 면접질문에서 자주 물어봄 기본이 다르다. delete의 기본 : 특정행 삭제, 단 where절 생략시 모든 행 삭제도 가능. DML이다. truncate의 기본 : 모든 행 삭제, DDL이다 drop의 기본 : 테이블삭제, DDL이다.","link":"/2020/07/24/200724dbi/"},{"title":"[ITWILL : WEB]TEXT속성","text":"ITWILL학원 : 10강 WEB(HTML, CSS) BY 김영희1. text속성속성은 크게 두가지 그룹이 있다 font text 그 중 텍스트속성에 알아보면 아래와 같다. text 속성종류 특징 text-align 글자 정렬 text-decoration 링크속성에서 밑줄없앨때 사용 text-indent 글자 들여쓰기 text-transform 영문글자의 대소문자 지정 text-shadow 글자 그림자효과 2. text-align text-align: justy : 웹에서 많이 쓰지않지만 양끝정렬이다. 내용텍스트가 많아야 효과가 있다. 3. text-decoration 글자의 여러 줄들 active : 꾸욱 누르고있을때 나타낼수있는 속성 보통 두개를 같이 사용, 순서바뀌면 안됨 -&gt; a:link, a:visited 보통 두개를 같이 사용, 순서바뀌면 안됨 -&gt; a:hover, a:active See the Pen WNrmZgV by sowon-dev (@gracehopperdev) on CodePen. 4. text-indent 글자들여쓰기와 text-transform 영문 글자의 대소문자 지정 See the Pen oNbVGap by sowon-dev (@gracehopperdev) on CodePen.","link":"/2020/07/24/200724webi/"},{"title":"[ITWILL : WEB]마진과 패딩, 인라인과 블록 차이","text":"ITWILL학원 : 10강 WEB(HTML, CSS) BY 김영희1. margin 마진 테두리기준 바깥여백 margin왼쪽값과 오른쪽값이 서로 같으면 요소는 항상 중앙에 온다. 따라서 margin의 좌우값을 auto를 지정 margin : 위 오른 아래 왼 2. padding 패딩 테두기리준 안쪽여백 padding : 위 오른 아래 왼 3. margin과 padding 차이 4. inline과 block 차이 참고링크 : HTML 정의태그 dl, dt, dd 태그, code 태그, block VS inline VS inline-block 인라인요소(한줄에 나란히 오는 요소, 줄바꿈이 없는 요소) : 상하 margin과 height와 width 아예 적용 안됨 좌우 margin가능 img태그와 input태그는 예외","link":"/2020/07/24/200724webi2/"},{"title":"오픈소스컨트리뷰톤 킥오프미팅 후기","text":"1. 계기첫만남은 항상 중요하다.온라인보다 오프라인으로 함께 할 팀원들과 멘토님을 직접 대면하고 싶어 서울로 올라갔다.오바인가싶었지만 역시 직접 만나봐야 어떤 사람인지 서로를 알 수 있고 친밀감이 생긴다.결론적으로 가길 잘했다. 환영1 격한환영2 킥오프미팅 선물 2. 정보 아래 두 코드의 차이점은 무엇일까? 12$ git --version$ node -v : 여기서 V는 버전의 약자 깃허브에 버전관리할때 node_modules파일은 올릴 필요가 없다. why? 항상 인터넷에서 다운로드할수있으니까 gitignore에 기재하여 깃허브에 올라가지않도록 하기 참고링크 : gitignore 항상 localhost:3000/intro에서 꼭 확인하고 버그있는지 확인하고 푸쉬하기 (새로고침 안해도 바로 보임) 매번 사이트구동하기 나가는 방법 : ctrl + c 엔터를 md에서 치면 lf(맥)이거나 crlf(윈도우)일수도 있는데 머지했을때 충돌이 일어날수있다. 따라서 원본과 번역본의 라인 수가 같아야지 번역 머지를 해줌. 기본 세팅은 lf(맥)이다 =&gt; 코어자바스크립트 문자열 : https://ko.javascript.info/string 3. 추천 책 추천 : 리눅스 커맨드라인 완벽입문서 에디터 : 웹스톰, vs코드 중에 웹스톤을 추천큰 회사는 스프링기반으로 백앤드를 한다.프론트개발자도 서버를 써야하니까 인텔리제이를 추천한다.(유료)왠만한 회사는 다 인텔리제이를 쓴다. 자바개발 인텔리제이 이클립스 자바스크립트개발 vs코드 웹스톰 4. 진행사항 파트1(코어단JS) : 이미지번역 svg 파트2(브라우저별JS)번역 2020 오픈소스 컨트리뷰톤 - 발대식 라떼는말이야(방진호) 2020 오픈소스 컨트리뷰톤 - 컨트리뷰톤 지난 3년간의 회고(나동희) 4-1. 주간활동계획 8월 1일 시작 그 전까지 깃플로우 완강, 번역할 아티클 잡기 1주차 : 기여목표설정, PR 2개 올리기 2주차 : 번역진행 3주차 … 등등 4-2. 미팅 온라인 : 주2회 (주중 모임 저녁 9시이후) 오프라인 + zoom미팅: 2주1회(8월1일, 2일,8일,9일,22일,23일,9월12일,13일) 5. 정해야할 것 Hotlist = goodFirstBug 라벨검색 보통 오타수정등이 있음. 간단한거 2개정도 돌리고 큰 빌드를 하면 시스템흐름을 알 수 있어 좋다. 빌드하는 법, 테스트돌리는법, 이슈트래커관리하는법이 중요 배울거리이다. 오픈소스에 내 패치를 보낸다 = 많은 사람들에게 내 의견을 설득하는 과정이다. 구체적인 목표를 정하기 : (이상적)최소한 일주일에 3개 패치. 하루3시간이상씩 오픈소스에 쓸 것. 이슈 -&gt; 대시보드 남기고 -&gt; 컨벤션시작 (PM과정) =&gt; 지금은 PR 마스터에 반영(BUT 실무에서는 브랜치는 나눔 git flow방법론 사용예정) 6주면 파트1다볼수있다. =&gt; 마음 맞는 사람과 스터디진행하면 좋을 듯 pull보단 fetch를 자주 씀 6. 오픈소스컨트리뷰톤 대회심사기준커밋수, 리뷰수, 커뮤니케이션 활발한지를 중점으로 평가","link":"/2020/07/25/200725opensource/"},{"title":"[ITWILL : JSP]Javabean 11 : MultipartRequest클래스","text":"ITWILL학원 : 31강 JSP기초 BY 정규태강사 MultipartRequest클래스 (p305)MultipartRequest 클래스의 생성자와 메소드들을 사용하여 파일 업로드 기능 구현 1. 라이브러리 설치 servlets페이지 방문. 왼쪽 카테고리 COS File Upload Library 클릭 하여 com.oreilly.servlet로 이동. 맨 하단에 Download 에서 Version 밑에 zip압축파일 다운로드. lib폴더 안의 cos.jar복사하여 프로젝트의 WebContent\\WEB-INF\\lib에 붙여넣기. 2. fwriteForm.jsp 작성 cos.jar라이브러리설치 (위에 내용 참고) 폼태그속성 enctype=”multipart/form-data”, method=”post” get방식은 처리되지 않음. enctype속성때문에 참고링크 : 속성종류 3가지 D드라이브에 `upfile’ 폴더생성 D드라이브말고 원하는 경로 지정가능. 123456789101112131415161718192021222324252627282930&lt;%String id = (String) session.getAttribute(\"id\");if( id == null){ %&gt; &lt;script type=\"text/javascript\"&gt; alert(\"로그인 후 이용가능합니다\"); location.href=\"../member/loginForm.jsp\" &lt;/script&gt; &lt;%}//1. cos.jar라이브러리설치 (위에 내용 참고)//2. 폼태그속성 enctype=\"multipart/form-data\", method=\"post\" get방식은 처리되지 않음.//3. D드라이브에 `upfile' 폴더생성- D드라이브말고 원하는 경로 지정가능.%&gt;&lt;fieldset&gt;&lt;legend&gt;게시판 글쓰기(p305~)&lt;/legend&gt; &lt;form action=\"fwritePro.jsp\" method=\"post\" enctype=\"multipart/form-data\"&gt; 글쓴이 : &lt;input type=\"text\" name=\"name\" required&gt;&lt;br&gt; 비밀번호 : &lt;input type=\"password\" name=\"pw\" required&gt;&lt;br&gt; 제목 : &lt;input type=\"text\" name=\"subject\" maxlength=\"15\" required&gt;&lt;br&gt; 내용 : &lt;br&gt; &lt;textarea rows=\"10\" cols=\"35\" name=\"content\" placeholder=\"여기에 작성해주세요\" required&gt;&lt;/textarea&gt;&lt;br&gt; 파일 : &lt;input type=\"file\" name=\"file\"&gt; &lt;input type=\"submit\" value=\"글등록\" class=\"btn\"&gt; &lt;button type=\"reset\" class=\"btn\"&gt;초기화&lt;/button&gt; &lt;input type=\"button\" value=\"목록으로\" class=\"btn\" onclick=\"location.href='boardList.jsp'\"&gt; &lt;/form&gt;&lt;/fieldset&gt; 3. fwritePro.jsp 작성파일업로드구현 파일 업로드 =&gt; cos.jar (MultipartRequest 클래스) 파일이 저장되는 위치 (D:/upfile) 파일 업로드 최대 크기 크기를 왜 지정해야할까? 그 전에 파일을 업로드하면 어디로 저장되는지 알아야한다 서버의 upfile폴더안으로 들어간다. 따라서 유한한 디스크이고 메모리라서 최대 크기 지정이 필수이다. 보통 20~250MB이다. 1MB = 1024바이트 * 1024바이트 계산 꼭 하기 MultipartRequest생성 : import하기 (다운받았던 cos.jar라이브러리) 아래 코드처럼 객채생성하면 에러메세지가 뜬다1MultipartRequest multi = new MultipartRequest(); The constructor MultipartRequest() is undefined 기본생성자가 없는 클래스이다 따라서 아래처럼 괄호안에 오버로딩되는 생성자를 작성해야한다. MultipartRequest(요청정보,파일 업로드할 폴더,파일 업로드 제한 크기,인코딩방식,파일 이름동일시 처리객체)1MultipartRequest multi = new MultipartRequest(request, savePath, maxSize, &quot;UTF-8&quot;, new DefaultFileRenamePolicy()); new DefaultFileRenamePolicy 객체의 역할 : 우리가 동일한 파일을 다운로드받는 경우 파일명에 파일명(1), 파일명(2)등등 자동으로 구분할 수 있도록 rename해주는 역할을 한다. 즉 중복처리하는 객체. 1234567891011121314&lt;%//파일 업로드 =&gt; cos.jar (MultipartRequest 클래스)//1. 파일이 저장되는 위치 (D:/upfile)String savePath = \"d:\\\\upfile\"; //2. 파일 업로드 최대 크기 =&gt; 5MBint maxSize = 5 * 1024 * 1024;//3. MultipartRequest 객체생성MultipartRequest multi = new MultipartRequest(request, savePath, maxSize,\"UTF-8\", new DefaultFileRenamePolicy());//4. 파일 업로드 완료 확인out.println(\"파일 업로드 완료!\");%&gt; 테스트하면 만들었던 upfile폴더안에 저장되어있다. 성!공!적! 하지만 이 방법은 보안상 매우 위험하다 누구나 주소를 입력하여 upfile폴더에 접근가능하기때문이다. 이제 디비와 연결해보자. 4. 디비연결위의 코드에서 아래 코드를 더 추가해야한다. multi객체 안에 request가 있으므로 request.getParameter()가 아닌 multi.getParameter()로 가지고 와야한다. 1234567891011121314151617181920212223242526//6. 파일의 정보 + 글 정보를 디비에 저장//6-1. 글정보저장하는 객체생성BoardBean bb = new BoardBean();//6-2. 전달되는 정보 저장// bb.setName(request.getParameter(\"name\")); enctype과 함께 쓸 수없다bb.setName(multi.getParameter(\"name\"));bb.setPw(multi.getParameter(\"pw\"));bb.setSubject(multi.getParameter(\"subject\"));bb.setContent(multi.getParameter(\"content\"));// bb.setFile(multi.getParameter(\"file\")); //DB에 파일저장 불가-&gt;아래코드로 진행bb.setFile(multi.getFilesystemName(\"file\"));System.out.println(\"upfile에 저장된 파일명 : \"+multi.getFilesystemName(\"file\"));System.out.println(\"사용자가 올린 원본 파일명 : \"+multi.getOriginalFileName(\"file\"));//6-3. 따로 저장한 정보 저장bb.setIp(request.getRemoteAddr());//7. boardDAO객체생성BoardDAO bdao = new BoardDAO();//8. 글쓰기 메서드 호출bdao.insertBoard(bb);//9. 목록페이지로 이동response.sendRedirect(\"boardList.jsp\"); DB에도 잘 들어가는 걸 확인할 수 있다.동일한 페이지 두번 작성하면 upfile에 저장된 파일명은 자동적으로 뒤에 숫자가 붙어 고유한 파일명으로 업로드가능하다.","link":"/2020/07/27/200727jspi/"},{"title":"[ITWILL : JSP]Javabean 12 : 게시판만들기(파일업로드), UTF-8과 EUC-KR차이","text":"ITWILL학원 : 31강 JSP기초 BY 정규태강사1. 새로운 프로젝트 fileUpload 생성 새로운 다이나믹 앱 프로젝트 생성 : 프로젝트명 fileUpload 라이브러리 추가 : cos.jar를 복사하여 D:\\fileUpload\\WebContent\\WEB-INF\\lib에 복붙하기 WebContent하위에 fileUP폴더 생성 후 그 안에 up.html페이지 생성(아래 단계) 2. up.html 작성 up.html의 meta charset=&quot;UTF-8&quot; 에서 meta charset=&quot;euc-kr&quot;로 변경 UTF-8과 euc-kr 둘 다 한글을 처리하는 메타태그임. UTF-8 : 한글 조합형의 유니코드 인코딩방식 EUC-KR : 한글 완성형의 유니코드 인코딩방식. 한글 2BYTE로 사용. 참고링크 : UTF-8과 EUC-KR의 차이점 12345678&lt;fieldset&gt;&lt;legend&gt;파일업로드&lt;/legend&gt;&lt;form action=\"up.jsp\" method=\"post\" enctype=\"multipart/form-data\"&gt; 이름 : &lt;input type=\"text\" name=\"name\"&gt;&lt;br&gt; 파일 : &lt;input type=\"file\" name=\"upfile\"&gt;&lt;br&gt; &lt;input type=\"submit\" value=\"파일업로드\"&gt;&lt;/form&gt;&lt;/fieldset&gt; 3. up.jsp 작성 에러해결 : java build path &gt; library &gt; add library &gt; server runtime &gt; 톰캣 추가 UTF-8을 euc-kr로 싹 다 바꾸기 onclick에 function을 넣어도 되고 location.href넣어도 둘 다 동일한 결과 출력된다. input type=”button” value=”파일삭제” onclick=”delfile()” input type=”button” value=”파일삭제” onclick=”location.href=’./delup.jsp’” 참고링크1 : Enumeration 참고링크2 : Enumeration 참고링크3 : Enumeration 1234567891011121314151617181920212223242526272829303132333435363738394041424344454647484950515253545556&lt;%//1. 전달되는 데이터 인코딩request.setCharacterEncoding(\"euc-kr\");//2. 업로드 폴더 지정(절대경로 = 파일을 직접적으로 접근하는 방식)String savePath = \"d:\\\\upfile\"; //3. 업로드 파일 크기 =&gt; 10MBint maxSize = 10 * 1024 * 1024;//4. 파일 이름 저장하는 변수 생성String fileName=\"\";String originalFileName=\"\";//5. 예외처리 포함한 파일업로드try{ MultipartRequest multi = new MultipartRequest(request, savePath, maxSize, \"euc-kr\", new DefaultFileRenamePolicy()); //여기까지 파일업로드완료 //6. 파일업로드 결과를 화면에 출력 //6-1. 폼의 이름 반환 Enumeration formNames = multi.getFileNames(); //업캐스팅 //6-2. 전달된 파일의 정보를 저장 String formname = (String) formNames.nextElement(); //위의 업캐스팅한 걸 다운캐스팅 //7. 서버에 저장된 파일의 이름저장 fileName = multi.getFilesystemName(formname); //8. 원래 파일의 이름 저장 originalFileName = multi.getOriginalFileName(formname); //9.파일업로드 성공시 해당 정보 출력 if(fileName == null){ out.println(\"파일업로드 실패!\"); }else{ out.print(\"업로드한 사람 : \"+multi.getParameter(\"name\") +\"&lt;br&gt;업로드 파일이름(서버저장) : \"+fileName+\"&lt;br&gt;업로드 파일이름(원본): \"+originalFileName +\"&lt;br&gt;file태그정보 : \"+formname); } }catch(Exception e){ out.println(\"파일업로드 중 예외상황발생\"); e.printStackTrace();}%&gt;&lt;fieldset&gt;&lt;form method=\"post\" name=\"myform\"&gt; &lt;input type=\"text\" name=\"filename\" value=\"&lt;%=fileName%&gt;\"&gt; //onclick에 function을 넣어도 되고 location.href넣어도 동일한 결과 출력 &lt;input type=\"button\" value=\"파일삭제\" onclick=\"delfile()\"&gt; &lt;input type=\"button\" value=\"파일삭제\" onclick=\"location.href='./delup.jsp'\"&gt; &lt;input type=\"button\" value=\"파일다운로드\"&gt;&lt;/form&gt; &lt;/fieldset&gt; 4. delup.jsp 생성한글파일빼고는 삭제가 잘 진행된다.인코딩방식의 문제이므로 나중에 처리하기로한다 12345678910111213141516&lt;%//1. 전달된 파일 이름 저장String filename = request.getParameter(\"filename\");//2. 파일 객체 생성 -&gt; 삭제//File f = new File(\"해당파일의 위치+파일명\");//객체를 만든 순간 = 해당 폴더로 이동해서 파일을 선택한 상황임.File f = new File(\"D:\\\\upfile/\"+filename);//3. 파일삭제f.delete();out.println(\"파일삭제완료\");//3-1. 한글파일빼고는 삭제가 잘 진행된다.out.println(filename);%&gt;","link":"/2020/07/27/200727jspi2/"},{"title":"[ITWILL : JSP]Javabean 13 : 게시판만들기(파일다운로드)","text":"ITWILL학원 : 31강 JSP기초 BY 정규태강사이 부분은 어렵다. 반복해서 보자. 1. up.jsp에 onclick이벤트 연결 onclick에 function을 넣어도 되고 location.href넣어도 둘 다 동일한 결과 출력된다. input type=”button” value=”파일삭제” onclick=”downfile()” input type=”button” value=”파일삭제” onclick=”location.href=’./down.jsp’” 12345678910111213141516171819&lt;fieldset&gt;&lt;form method=\"post\" name=\"myform\"&gt; &lt;input type=\"text\" name=\"filename\" value=\"&lt;%=fileName%&gt;\"&gt; &lt;input type=\"button\" value=\"파일삭제\" onclick=\"delfile()\"&gt; &lt;input type=\"button\" value=\"파일다운로드\" onclick=\"downfile()\"&gt;&lt;/form&gt; &lt;/fieldset&gt;&lt;script type=\"text/javascript\"&gt; function delfile(){ document.myform.action=\"./delup.jsp\"; //myform이름의 폼태그의 action값을 설정 document.myform.submit(); } function downfile(){ document.myform.action=\"./down.jsp\"; //myform이름의 폼태그의 action값을 설정 document.myform.submit(); }&lt;/script&gt; 2. down.jsp생성 인코딩 모든 UTF-8을 EUC-KR(euc-kr)로 변경해준다. 대소문자 둘 다 가능. string은 그냥 담아도 되고 객체에 담아도 된다. 즉 1번과 2번이 동일 WHY? String의 특징! 1번 : String filename=request.getParameter(“filename”) 2번 : String filename= new String(request.getParameter(“filename”)); java.io 아래에 있는 입출력 객체를 import한다 참고링크 : 스트림 개념 12345678910111213141516171819202122232425262728293031323334353637383940414243444546474849505152535455565758596061626364656667&lt;%@page import=\"java.io.FileNotFoundException\"%&gt;&lt;%@page import=\"java.io.FileInputStream\"%&gt;&lt;%@page import=\"java.io.File\"%&gt;&lt;%@page import=\"java.io.OutputStream\"%&gt;&lt;%@page import=\"java.io.InputStream\"%&gt;&lt;%@ page language=\"java\" contentType=\"text/html; charset=euc-kr\" pageEncoding=\"euc-kr\"%&gt;&lt;!DOCTYPE html PUBLIC \"-//W3C//DTD HTML 4.01 Transitional//EN\" \"http://www.w3.org/TR/html4/loose.dtd\"&gt;&lt;html&gt;&lt;head&gt;&lt;meta http-equiv=\"Content-Type\" content=\"text/html; charset=euc-kr\"&gt;&lt;title&gt;Insert title here&lt;/title&gt;&lt;/head&gt;&lt;body&gt;&lt;h2&gt;다운로드페이지&lt;/h2&gt;&lt;%//1. 인코딩//string은 그냥 담아도 (=String filename=request.getParameter(\"filename\"))되고 객체에 담아도된다//String filename= new String(request.getParameter(\"filename\"));//파라미터 데이터를 가져와서 8859_1 인코딩방식으로 바꾼 뒤 EUC-KR로 한번 더 바꾸는 것String filename = new String((request.getParameter(\"filename\")).getBytes(\"8859_1\"),\"euc-kr\");//2. 파일저장경로(절대경로)String filePath = \"D:/upfile\"; //3. 입출력시 필요한 객체 생성InputStream in = null;OutputStream os = null;File file = null;File viewFile = null;//3-1. 추가 레퍼런스생성boolean skip = false; //플래그만들기String client = \"\";// 4. 예외처리try{ //5. 변수생성 : 인코딩시 변경되는 string 따로 저장하려고 3개 변수 만듬 String fname1 = \"\"; String fname2 = \"\"; String fname = \"\"; fname = filename; fname1 = new String(fname.getBytes(\"8859_1\"), \"euc-kr\"); //9. try catch구문으로 묶기 try{ //6. 전달된 파일 경로,이름 사용해서 파일 객체 생성 file = new File(filePath, fname); viewFile = new File(filePath,fname1); //확인차 페이지에 출력 out.print(\"file : \"+file+\"&lt;br&gt;\"); out.print(\"viewfile : \"+viewFile); //8. 파일을 읽어오기 위해서 입력 통로를 생성 // 객체를 만든 순간 = 해당 폴더로 이동해서 파일을 선택한 상황임. // InputStream in = null; in = new FileInputStream(file); //업캐스팅 }catch(FileNotFoundException e){ skip = true; } //10. String변수만들어주기 fname2 = new String(fname1.getBytes(\"euc-kr\"), \"8859_1\"); //11. 응답객체초기화 for 다운로드 팝업창 생성된 것처럼 보이게끔하여 다운로드 진행중임을 표시 response.reset(); 2-1. down.jsp에 다운로드기능 구현 코드다운로드 기능을 구현하고자한다. 위의 코드에 이어서 작성해보자 MIME타입 : 웹에서 데이터를 표현하는 방법이다. 참고링크 : MIME 타입 참고링크 : 바이트스트림 123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051 //12. 다운로드처리 //12-1. 클라이언트가 다운로드 요청시 사용자 웹브라우저 정보필요 //why? 브라우저별로 설정해줘야하는 것들이 다르기 때문 client = request.getHeader(\"User-Agent\"); //System.out.println(\"client :\" + client); //12-2. 사용자브라우저에 따른 처리 //12-2-1. mine 타입이용하여 값세팅하기 response.setContentType(\"application/x-msdownload\"); response.setHeader(\"Content-Description\", \"JS Generated Data\"); //12-2-2. 브라우저마자 실행 제어 if(!skip){ //false항상실행 if(client.indexOf(\"MSIE 5.5\") != -1){ response.setHeader(\"Content-Type\", \"doesn/matter; charset=euc-kr\"); response.setHeader(\"Content-Disposition\", \"filename\"+ new String(fname.getBytes(\"euc-kr\"),\"8859_1\")); }else{ response.setHeader(\"Content-Type\", \"application/octet-stream; charset=euc-kr\"); response.setHeader(\"Content-Disposition\", \"attachment; filename=\"+new String(fname.getBytes(\"euc-kr\"),\"8859_1\")); } //12-2-3. 문자열만들기 response.setHeader(\"Content-Transfer-Encoding\", \"binary;\"); response.setHeader(\"Content-Length\", \"\"+file.length()); response.setHeader(\"Pragma\", \"no-cache;\"); response.setHeader(\"Expires\", \"-1;\"); //12-3. 데이터출력할 수 있는 통로 생성 os = response.getOutputStream(); //12-3-1. 바이트스트림 byte[] b = new byte[4096]; int leng = 0; //12-3-2. 파일을 읽어서 leng에 저장이 될 것이고 데이터가 있을 경우에만 진행 //leng은 데이터가 없으면 -1값을가진다 while((leng = in.read(b))&gt; 0){ //데이터출력(다운로드) os.write(b,0,leng); } }else{ out.print(\"파일다운로드 실패\"); return; } }catch(Exception e){ System.out.println(\"다운로드도중 에러발생\"); e.printStackTrace();}finally{ if(in != null) in.close(); if(os != null) os.close();}%&gt;","link":"/2020/07/27/200727jspi3/"},{"title":"[ITWILL : JSP]Javabean 14 : 게시판만들기(ServletContext사용하여 파일업로드와 다운로드)","text":"ITWILL학원 : 32강 JSP기초 BY 정규태강사UTF-8인코딩을 기본으로 ServletContext이용하여 가상경로에 파일을 저장하는 파일업로드와 다운로드기능 구현 1. webcontent 하위 새로운 폴더 2개 생성 : fileuputf, upload앞으로 파일다운로드기능구현시 생성되는 jsp, html페이지를 이 폴더(fileuputf)안에 생성한다.업로드되는 파일들은 upload라는 폴더안에 들어가게 된다.=&gt; 가상경로라고 부른다. 2. fileUploadForm.jsp 생성12345678&lt;fieldset&gt; &lt;form action=\"fileUploadPro.jsp\" method=\"post\" enctype=\"multipart/form-data\"&gt; 작성자 : &lt;input type=\"text\" name=\"name\"&gt;&lt;br&gt; 제목 : &lt;input type=\"text\" name=\"subject\"&gt;&lt;br&gt; 파일 : &lt;input type=\"file\" name=\"file\"&gt;&lt;br&gt; &lt;input type=\"submit\" value=\"파일업로드\"&gt; &lt;/form&gt;&lt;/fieldset&gt; 3. fileUploadPro.jsp 생성 가상경로 MultipartRequest객체생성 : request정보를 직접 가져올 수 없고 multi를 통해서 가져올 수 있다. Enumeration : 다음 요소가 있으면 반환해주는 인터페이스. 참고링크1 : Enumeration 참고링크2 : Enumeration 참고링크3 : Enumeration 파일업로드 기능은 예외가 많이때문에 예외처리를 해야한다 사용자가 입력한 데이터를 fileCheck.jsp로 전달하기 123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778&lt;!-- 파일 업로드 처리 --&gt;&lt;%//1. 파일 저장 위치 (가상경로) 만들기// D:\\workspace_jsp7\\.metadata\\.plugins\\org.eclipse.wst.server.core\\tmp0\\wtpwebapps\\fileUpload/upload//System.out.println(\"가상경로 : \"+request.getRealPath(\"/upload\"));String uploadPath = request.getRealPath(\"/upload\");//2. 저장 크기 지정 (10MB)int maxSize = 10 * 1024 * 1024;//3. 정보를 저장하는 변수 만들기String name =\"\";String subject =\"\";String filename = \"\"; //서버에 올라갈 파일명String OFilename = \"\"; //오리지널 파일명//6. 예외처리try{//4. MultipartRequest 객체생성//4-1. cos 라이브러리 추가//4-2. 객체 생성//request정보를 직접가져올 수 없고 multi를 통해서 가져올 수 있다.MultipartRequest multi = new MultipartRequest(request, uploadPath, maxSize, \"UTF-8\", new DefaultFileRenamePolicy());//5. 파일업로드완료//5-1. 전달되는 이름, 제목 저장name = multi.getParameter(\"name\");subject = multi.getParameter(\"subject\");//5-2. 전달된 파일의 이름 확인Enumeration files = multi.getFileNames(); //업캐스팅String file1 = (String) files.nextElement(); //위의 업캐스팅한 걸 다운캐스팅//5-3. 서버에 저장되는 파일 이름filename = multi.getFilesystemName(file1);System.out.println(\"filename : \"+filename);//5-4. 원래 파일이름OFilename = multi.getOriginalFileName(file1);System.out.println(\"OFilename : \"+OFilename);//여기까지 업로드 기능 구현 완료! =&gt; 6. 파일업로드는 예외가 많이때문에 예외처리를 해야한다}catch(Exception e){ e.printStackTrace();}%&gt;&lt;!-- 데이터를 전달하기enctype안적어도 될까? 업로드 유무로 판단!업로드할꺼면 필요, 업로드하지않을거면 필요하지않다아래처럼 input type을 text로 그냥 가져가면 중요한 정보들이 유출될 수있다.보안을 위해 2가지 방법이 있다.1안은 submit버튼사용 2안은 a태그사용한 방법이다. 편한 걸로하면되지만 보통 2안으로 많이한다--&gt;&lt;%-- &lt;form action=\"fileCheck.jsp\" method=\"post\"&gt; &lt;input type=\"text\" name=\"name\" value=\"&lt;%=name %&gt;\" readonly&gt;&lt;br&gt; &lt;input type=\"text\" name=\"subject\" value=\"&lt;%=subject %&gt;\"&gt;&lt;br&gt; &lt;input type=\"text\" name=\"filename\" value=\"&lt;%=filename %&gt;\"&gt;&lt;br&gt; &lt;input type=\"text\" name=\"ofilename\" value=\"&lt;%=OFilename %&gt;\"&gt;&lt;br&gt; &lt;input type=\"submit\" value=\"확인하기\"&gt;&lt;/form&gt; --%&gt;&lt;!-- 1안 : form태그는 보여주지않는 않고 fileCheck에서 출력할 것이므로 hidden으로 type을 지정 후 submit버튼 이용--&gt;&lt;form action=\"fileCheck.jsp\" method=\"post\"&gt; &lt;input type=\"hidden\" name=\"name\" value=\"&lt;%=name %&gt;\" readonly&gt;&lt;br&gt; &lt;input type=\"hidden\" name=\"subject\" value=\"&lt;%=subject %&gt;\"&gt;&lt;br&gt; &lt;input type=\"hidden\" name=\"filename\" value=\"&lt;%=filename %&gt;\"&gt;&lt;br&gt; &lt;input type=\"hidden\" name=\"ofilename\" value=\"&lt;%=OFilename %&gt;\"&gt;&lt;br&gt; &lt;input type=\"submit\" value=\"올린 파일 정보하기\"&gt;&lt;/form&gt;&lt;!-- 2안 : hidden때문에 생성된 submit버튼 위의 빈칸이 신경쓰이면 a태그를 이용가능.a태그를 이용하여 post방식 어떻게 데이터를 전달할수있을까? 이때 js를 사용한다 onclick=\"javascript:filecheck.submit\" --&gt;&lt;form action=\"fileCheck.jsp\" method=\"post\" name=\"filecheck\"&gt; &lt;input type=\"hidden\" name=\"name\" value=\"&lt;%=name%&gt;\"&gt;&lt;br&gt; &lt;input type=\"hidden\" name=\"subject\" value=\"&lt;%=subject%&gt;\"&gt;&lt;br&gt; &lt;input type=\"hidden\" name=\"filename\" value=\"&lt;%=filename%&gt;\"&gt;&lt;br&gt; &lt;input type=\"hidden\" name=\"ofilename\" value=\"&lt;%=OFilename%&gt;\"&gt;&lt;br&gt; &lt;/form&gt;&lt;a href=\"#\" onclick=\"javascript:filecheck.submit();\"&gt;업로드 확인 및 다운로드 페이지로 이동&lt;/a&gt; 4. fileCheck.jsp생성 사용자가 입력한 정보를 체크하고 파일명을 눌렀을때 다운로드 가능하도록 file_down.jsp로 이동하는 기능 구현 서버에 저장된 파일명의 a태그에서 get방식으로 파라미터로 정보를 전달한다. 1234567891011121314151617&lt;h2&gt;업로드하지 않고 확인용으로 전달받은 데이터 화면에 출력&lt;/h2&gt;&lt;%request.setCharacterEncoding(\"UTF-8\");String name = request.getParameter(\"name\");String subject = request.getParameter(\"subject\");String filename = request.getParameter(\"filename\");String ofilename = request.getParameter(\"ofilename\");%&gt;&lt;fieldset&gt;&lt;legend&gt;업로드 정보 확인용&lt;/legend&gt; 작성자명 : &lt;%=name %&gt;&lt;br&gt; 제목 : &lt;%=subject %&gt;&lt;br&gt; 서버에 저장된 파일명 : &lt;a href=\"file_down.jsp?file_name=&lt;%=filename %&gt;\"&gt; &lt;%=filename %&gt;&lt;/a&gt;&lt;br&gt; 원본파일명 : &lt;%=ofilename %&gt;&lt;br&gt;&lt;/fieldset&gt; 5. file_down.jsp 생성 servletContext : 지금 쓰고있는 내 프로젝트 정보. MIME타입 : 클라이언트에게 전송되는 데이터(문서)를 다양하게 처리 가능하도록 하는 메커니즘웹에서 파일의 확장자는 큰 의미가 없음(스트림형태로 데이터가 전달) -&gt; 스트림형태일때는 데이터 구분못함.따라서 각 데이터(문서)에서 올바른 형태의 데이터를 전달하도록 MIME 타입을 지정브라우저들이 응답정보(리소스)를 받았을때 어떤 형태로 처리해야하는지 판단하는 기준마임타입을 가져오는 방법은 getServletContext().getMimeType()으로 가능 브라우저에 따른 데이터 처리(대응) 왜 인터넷익스플로러를 기준으로 나눌까? 인터넷익스폴러는 다운로드시 한글파일이 깨짐 -&gt; 따라서 파일을 인코딩해서 다운로드함 이때 공백문자가 플러스(+)기호로 나옴 -&gt; 이걸 %20으로 변경 인터넷익스플로러인지 아닌지는 어떻게 구분할까? 접속한 사용자정보(User-Agent)를 불러와서 indexOf사용하여 MSIE이나 Trident이 들어가 있으면 익스플로러이다.123String agent = request.getHeader(\"User-Agent\");System.out.println(\"agent : \"+ agent);boolean ieBrowser = agent.indexOf(\"MSIE\") &gt; -1 || agent.indexOf(\"Trident\") &gt; -1; 데이터다운로드 처리 브라우저가 응답정보를 읽어서(해석) 처리시 “Content-Disposition” 설정값이 “attachment;” 모든 데이터 다운로드 처리한다. 만약 설정안하게되면 어떻게 될까? 브라우저의 기본값에 의해 처리한다. 데이터 출력(다운로드) flush() : 데이터가 담긴 배열이 꽉 차지 않았을때는 데이터를 출력하지않는다. 이때 flush가 배열의 빈 공간을 공백으로 채워서 데이터 출력되도록 만들어준다. 123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596&lt;%@page import=\"java.net.URLEncoder\"%&gt;&lt;%@page import=\"javax.activation.MimeType\"%&gt;&lt;%@page import=\"java.io.FileInputStream\"%&gt;&lt;%@ page language=\"java\" contentType=\"text/html; charset=UTF-8\" pageEncoding=\"UTF-8\"%&gt;&lt;!DOCTYPE html PUBLIC \"-//W3C//DTD HTML 4.01 Transitional//EN\" \"http://www.w3.org/TR/html4/loose.dtd\"&gt;&lt;html&gt;&lt;head&gt;&lt;meta http-equiv=\"Content-Type\" content=\"text/html; charset=UTF-8\"&gt;&lt;title&gt;Insert title here&lt;/title&gt;&lt;/head&gt;&lt;body&gt;&lt;% //1. 전달받은 데이터 저장String filename = request.getParameter(\"file_name\");System.out.println(\" 전달된 파일 명 : \"+filename);//2. 파일 다운로드할 위치(= 파일 업로드 위치) =&gt;가상경로//savepath는 저장되는 폴더명String savepath = \"upload\";//3. 내 프로젝트 정보(ServletContext)안에서 가상경로를 실제경로로 계산해줘야한다.//3-1. 서버안에 있는 물리적 위치 확인ServletContext context = getServletContext();String DownloadPath = context.getRealPath(savepath);System.out.println(\"DownloadPath : \"+DownloadPath);//3-2. 다운로드할 파일의 전체 경로//역슬러시 두개는 이스케이프문자로서 역슬러시 1개만 표현됨String FilePath = DownloadPath+\"\\\\\"+filename;//여기까지다운로드기능완료//4. 데이터 응답처리를 다운로드 형태로 구현//4-1. 파일을 한번에 처리하기위한 배열byte[] b = new byte[4069];//4-2. 파일입출력을 처리하는 파일 입력 스트림 객체생성(즉, 파일을 읽어오는 통로만들기)FileInputStream fis = new FileInputStream(FilePath);//4-3. 다운로드할 파일의 마임타입 확인(mime) //=&gt; 클라이언트에게 전송되는 데이터(문서)를 다양하게 처리 가능하도록 하는 메커니즘String MimeType = getServletContext().getMimeType(FilePath);System.out.println(\"Mime type: \"+MimeType);if(MimeType == null){ //기본값 지정 - 이진파일을 처리하기위한 기본타입 //-&gt; 잘 알려지지 않은 파일을 의미하기때문에 //-&gt; 브라우저는 보통 자동실행을 안하고 대화상자를 이용하여 사용자에게 실행할지 질문함 MimeType = \"application/octet-stream\";}//4-4내 응답정보를 마임타입으로 지정response.setContentType(MimeType);//5. 브라우저에 따른 데이터 처리(대응)//왜 인터넷익스플로러를 기준으로 나눌까?//인터넷익스폴러는 다운로드시 한글파일이 깨짐 -&gt; 따라서 파일을 인코딩해서 다운로드함 //이때 공백문자가 플러스(+)기호로 나옴 -&gt; 이걸 %20(공백)으로 변경//익스인지 아닌지는 어떻게 알까? String agent = request.getHeader(\"User-Agent\");System.out.println(\"agent : \"+ agent);boolean ieBrowser = agent.indexOf(\"MSIE\") &gt; -1 || agent.indexOf(\"Trident\") &gt; -1; if(ieBrowser){ // IE 일때 : +를 %20(공백)으로 변경 filename = URLEncoder.encode(filename, \"UTF-8\").replaceAll(\"\\\\+\", \"%20\");}else{ // IE 아닐때 : 데이터인코딩(한글깨짐방지) filename = new String(filename.getBytes(\"UTF-8\"), \"iso-8859-1\");}//6. 데이터다운로드 처리//브라우저가 응답정보를 읽어서(해석) 처리시 //\"Content-Disposition\" 설정값이 \"attachment;\" 모든 데이터 다운로드 처리 response.setHeader(\"Content-Disposition\", \"attachment; filename=\"+filename);//7. 데이터출력(다운로드)ServletOutputStream out2 = response.getOutputStream();//7-1. 데이터출력 통로 생성int data = 0;while((data = fis.read(b,0,b.length)) != -1){ //데이터출력시 파일이 있을동안 계속 진행 out2.write(b,0,data); //배열에다가 data를 담아서 출력 out2.flush();}//8. 자원해제out2.close();fis.close();//9. java.lang.IllegalStateException://이 응답을 위해 getOutputStream()이 이미 호출되었습니다.// =&gt; JSP-&gt;Servlet 변환시 out 객체가 자동생성, 추가로 OutputStream 객체 생성시// 오류 메세지 출력( 다운로드 문제 X, 서버에 에러 메세지 로그 쌓임)out.clear();out = pageContext.pushBody();%&gt; 5-1. java.lang.IllegalStateException에러java.lang.IllegalStateException: 이 응답을 위해 getOutputStream()이 이미 호출되었습니다. jsp가 실행될때 java파일로 변환되어 실행되고 그 바뀌는 걸 servlet이라고 한다.이 변환시에 out이라는 객체가 자동 생성된다.만약 추가로 OutputStream 객체생성시 IllegalStateException에러가 발생한다. 다운로드기능에는 문제가 없으나 에러가 실행될때마다 서버에 에러 메세지 로그 쌓이기때문에 처리해야한다. 12out.clear();out = pageContext.pushBody();","link":"/2020/07/28/200728jspi/"},{"title":"[ITWILL : DB]SQL의 OBJECT종류 : 뷰(View)","text":"ITWILL학원 : 17강 Database BY 정지윤강사코드블록상에 [] 대괄호는 생략가능하다는 의미이다. 1. SQL의 OBJECT 종류 지금까지 테이블(table) object에 관한 것을 배웠다. 이제 다른 object들을 배워보자. Object 특징 사용방법 정의방법 테이블(Table) 행과 열의 조합으로 구성된 기본 저장단위 select, insert, update, delete create table, alter table, drop table, truncate table 뷰(View) 하나 또는 그 이상의 base테이블로부터 논리적으로 데이터를 추출한 부분집합으로 가상의 논리적인 테이블 select, insert, update, delete create [or replace] view, drop view 시퀀스(Sequence) 자동으로 고유한 숫자값을 생성해주며 주로 기본키 값을 생성하기 위해 사용 시퀀스명.nextval, 시퀀스명.currval create sequence, alter sequence, drop sequence 인덱스(Index) 쿼리(Query) 속도를 향상시키기 위해 사용 X create index, alter index, drop index 시노님(Synonym) object에 대한 또다른 이름의 alias역할 X create synonym, drop synonym 2. View 하나 이상의 base table을 기반으로 생성은 되었으나 물리적으로 존재하지 않고 data dictionary에 select 구문 형태로 정의만 되어 있는 가상의 논리적인 테이블 테이블도 아무나 만들 수 없듯이 뷰도 뷰권한을 가진 유저만이 사용할 수 있다. create biew 권한을 가진 유저만이 뷰를 생성할 수 있다. 가상테이블도 테이블이므로 사용방법은 테이블과 동일하다. (insert, update, select, delete가능) 사용방법 : select, insert, update, delete 정의방법 : create [or replace] view, drop view DDL이라 오토커밋발생하기에 rollback안됨. 뷰 장점 : 보안성 좋음 보안성이 좋아서 table대신 table컬럼의 필요한 컬럼을 모아 view를 사용 공간적 효율성이 좋음 편의성이 높음 두 테이블을 join해서 자주 보는 경우 귀찮기때문에 아예 두 테이블에 자주 보는 정보를 join한 채로 view를 만들어서 편리하게 사용할 수 있다. 쿼리를 save하는 것과의 차이점은 save는 스크립트파일을 운영체제안에 저장. view는 DB안에 저장. 따라서 다른 개발자들과 함께 save쿼리를 사용하려면 스크립트파일을 서버컴퓨터에 저장하거나 USB로 공유해야하는 번거로움이 있다. 이럴때 VIEW를 사용하면 권한을 가진 모든 개발자들이 누군가가 만들어놓은 VIEW를 사용할 수 있다. 2-1. 뷰 생성 옵션 [force|noforce] force : VIEW를 생성할 때 쿼리 컴파일하지 않고 생성. subquery 조건만족여부와 관계없이 무조건 만들어라는 명령. view가 만들어지지만 만들어진 뷰를 볼수는 없다. 사용도 안되는 옵션이 왜 필요할까? 사용예시1 : base테이블을 곧 만들 예정이고 일단 view먼저 만들어놓을때 사용. 사용예시2 : 설계를하는 사람과 테이블을 만드는 사람은 실제 분리되어있기 때문에 설계를 하는 쪽에서 미리 테이블 정의서를 확인하고 VIEW를 만들어 놓기 위해 FORCE 옵션을 사용해서 테이블이 구축되기 이전에 생성시 사용 noforce : VIEW를 생성할 때 쿼리 컴파일을 진행. (기본값) 참고링크 : oracle view 사용법 및 정리 12345678910111213//기본create view 뷰명 [(alias[, alias ...])] as subquery형태로_정의;//예시create view empvu80as select employee_id, last_name, salaryfrom employeeswhere department_id = 80;desc empvu80;select * from empvu80; 2-2. 뷰 수정 뷰는 alter구문이 없다. 대신 or replace라는 옵션이 있다. 뷰명이 동일하면 수정해서 교체. 뷰명이 다르면 새롭게 생성. 12create or replace view 뷰명 [(alias[, alias ...])] as subquery형태로_정의; 2-3. 뷰 삭제 뷰를 삭제하면? =&gt; base테이블의 데이터가 이전으로 돌아가지않는다. 이미 오토커밋했기때문에. 뷰를 rollback하는 방법은 없다. 뷰를 잘못삭제하면 돌릴 방법은 없다. 다시 만들어야한다. 1drop view 뷰명 2-4. 만든 뷰 전체 목록 조회 가지고 있는 테이블 전체를 조회하는 명령어가 있는 것처럼 가지고 있는 뷰 목록을 조회하는 명령어가 있다. 뷰의 경우 컬럼이 많기때문에 desc로 먼저 원하는 컬럼을 설정한 뒤 목록을 조회하는 것을 추천한다. 12345678910//가지고 있는 테이블전체를 조회하는 명령어select * from tab;//가지고 있는 뷰전체를 조회하는 명령어select * from user_views;//뷰가 가지고 있는 컬럼이 많기때문에 원하는 컬럼만 골라서 뷰리스트보는 것을 추천//예시 : view_name으로 전체 뷰 목록 조회desc user_views;select view_name from user_views;","link":"/2020/07/28/200728dbi/"},{"title":"[ITWILL : JSP]홈페이지만들기1 : 회원가입페이지구현","text":"ITWILL학원 : 33강 JSP기초 BY 정규태강사html로 만들어진 홈페이지를 jsp로 변경해보자. 1. main.jsp 생성 path설정 / 와 ./는 현재폴더 ../는 상위폴더 페이지 인클루드 2가지방법 12345678&lt;!-- JSP 지시어 : 공통으로 사용되는 변수를 파일에 지정해서 추가 --&gt;&lt;%@ include ~ %&gt;&lt;!-- 액션태그 : 공통으로 사용되는 메뉴들을(페이지) 특정 공간에 추가 --&gt;&lt;jsp:include page=\"\"&gt;&lt;!-- 예시 --&gt;&lt;jsp:include page=\"../inc/top.jsp\"&gt;&lt;/jsp:include&gt; 코드블록 : 12345678910111213141516171819&lt;body&gt;&lt;div id=\"wrap\"&gt; &lt;!-- 헤더파일들어가는 곳 (page Include)--&gt; &lt;jsp:include page=\"../inc/top.jsp\"&gt;&lt;/jsp:include&gt; &lt;!-- 헤더파일들어가는 곳 (page Include)--&gt; &lt;!-- 메인이미지 들어가는곳 --&gt; &lt;!-- 메인이미지 들어가는곳 --&gt; &lt;!-- 메인 콘텐츠 들어가는 곳 --&gt; &lt;!-- 메인 콘텐츠 들어가는 곳 --&gt; &lt;!-- 푸터 들어가는 곳 --&gt; &lt;jsp:include page=\"../inc/bottom.jsp\"&gt;&lt;/jsp:include&gt; &lt;!-- 푸터 들어가는 곳 --&gt; &lt;/div&gt;&lt;/body&gt; 2. index.jsp생성1234&lt;%//프로젝트의 시작페이지 구현response.sendRedirect(\"./main/main.jsp\");%&gt; 3. top.jsp 생성화면상단에 위치하는 메뉴바 처리페이지 123456789101112131415161718192021&lt;!-- html코드가 필요없다 (html body태그안에 넣어도 되고 html태그 없어도 됨)--&gt;&lt;% //화면상단에 위치하는 메뉴바 처리페이지%&gt;&lt;header&gt;&lt;div id=\"login\"&gt;&lt;a href=\"../member/login.html\"&gt;login&lt;/a&gt; | &lt;a href=\"../member/join.html\"&gt;join&lt;/a&gt;&lt;/div&gt;&lt;div class=\"clear\"&gt;&lt;/div&gt;&lt;!-- 로고들어가는 곳 --&gt;&lt;div id=\"logo\"&gt;&lt;img src=\"../images/logo.gif\" width=\"265\" height=\"62\"&gt;&lt;/div&gt;&lt;!-- 로고들어가는 곳 --&gt;&lt;nav id=\"top_menu\"&gt;&lt;ul&gt; &lt;li&gt;&lt;a href=\"../index.jsp\"&gt;HOME&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=\"../company/welcome.html\"&gt;COMPANY&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=\"#\"&gt;SOLUTIONS&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=\"../center/notice.html\"&gt;CUSTOMER CENTER&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=\"#\"&gt;CONTACT US&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;&lt;/nav&gt;&lt;/header&gt; 4. bottom.jsp 생성화면하단에 위치하는 footer 처리페이지 12345678910111213141516&lt;!-- html코드가 필요없다 (html body태그안에 넣어도 되고 html태그 없어도 됨)--&gt;&lt;% //화면하단에 위치하는 footer 처리페이지%&gt;&lt;footer&gt;&lt;hr&gt;&lt;div id=\"copy\"&gt;All contents Copyright 2011 FunWeb 2011 FunWeb Inc. all rights reserved&lt;br&gt;Contact mail:funweb@funwebbiz.com Tel +82 64 123 4315Fax +82 64 123 4321&lt;/div&gt;&lt;div id=\"social\"&gt;&lt;img src=\"../images/Instagram.gif\" width=\"33\" height=\"33\" alt=\"Instagram\"&gt;&lt;img src=\"../images/twitter.gif\" width=\"34\" height=\"34\" alt=\"Twitter\"&gt;&lt;/div&gt;&lt;/footer&gt; 5. joinForm.jsp 생성원하는 회원가입 폼양식 생성하면 된다.코드블록은 생략하도록 한다. 6. joinPro.jsp 생성자바빈을 작성하려면 테이블이 생성되어있어야한다.joinPro.jsp의 남은 코드는 순서대로 아래에 추가해서 작성할 예정이다. 12345&lt;%// 한글처리 request.setCharacterEncoding(\"UTF-8\");// 전달되는 데이터 입력(저장) =&gt; 자바빈 이용%&gt; 7. MySQL에서 테이블생성 자바빈을 작성하려면 테이블이 생성되어있어야한다. 회원테이블 정보 : 제약조건 아이디(id) : pk 비밀번호(pw) : nn 이름(name) : nn 이메일(email) : nn, uq 생년월일(birth) : nn 성별(gender) : nn 주소(addr) 휴대폰번호(mobile) re_date : 가입일자 팁 전화번호 : 보통 실무에서 varchar를 이용하는 것이 편하다 생년월일 : int나 varchar를 쓰는데, 실무에선 varchar로 받아서 바로 이용하는 것이 편하다 8. MemberBean.java생성12345678910111213141516171819202122232425262728293031323334353637383940414243package com.itwillbs.member;import java.sql.Date;//1번규약 :public 클래스public class MemberBean {//자바빈은 항상 패키지를 포함해야한다.//데이터를 저장하는 객체(한번에 회원정보를 저장가능한 객체) =&gt; DB에 데이터전달 //2번 규약: private멤버변수 private String id; private String pw; private String name; private String email; private int birth; private String gender; private String addr; private String mobile; private Date re_date; //4번규약 : 디폴트생성자 //3번규약 : getter, setter public String getId() { return id; } public void setId(String id) { this.id = id; } (중략) //5번 선택: toString /* (non-Javadoc) * @see java.lang.Object#toString() */ @Override public String toString() { return \"MemberBean [id=\" + id + \", pw=\" + pw + \", name=\" + name + \", email=\" + email + \", birth=\" + birth + \", gender=\" + gender + \", addr=\" + addr + \", mobile=\" + mobile + \", re_date=\" + re_date + \"]\"; }}","link":"/2020/07/29/200729jspi/"},{"title":"[ITWILL : DB]SQL의 OBJECT종류 : 시퀀스(Sequence)","text":"ITWILL학원 : 18강 Database BY 정지윤강사1. SQL의 OBJECT 종류 Object 특징 사용방법 정의방법 테이블(Table) 행과 열의 조합으로 구성된 기본 저장단위 select, insert, update, delete create table, alter table, drop table, truncate table 뷰(View) 하나 또는 그 이상의 base테이블로부터 논리적으로 데이터를 추출한 부분집합으로 가상의 논리적인 테이블 select, insert, update, delete create [or replace] view, drop view 시퀀스(Sequence) 자동으로 고유한 숫자값을 생성해주며 주로 기본키 값을 생성하기 위해 사용 시퀀스명.nextval, 시퀀스명.currval create sequence, alter sequence, drop sequence 인덱스(Index) 쿼리(Query) 속도를 향상시키기 위해 사용 X create index, alter index, drop index 시노님(Synonym) object에 대한 또다른 이름의 alias역할 X create synonym, drop synonym 2. 시퀀스 생성(create sequence) 자동으로 고유한 번호를 반환해 주는 번호생성기와 같은 오브젝트. 주로 PK제약조건과 함께 사용한다. 주로 insert와 update사용한다. 옵션여러개 기입시 콤마(,)필요없다! 절대 찍지말것! 시퀀시 생성시 사용가능한 옵션 increment by 숫자 : 시퀀스번호사이에 간격을 지정하는 옵션. default값은 1이다. 생략하면 1씩 증가하는 값을 반환해주는 시퀀스가 생성된다. 예시 : increment by 5 : 5씩 증가하는 값을 반환해주는 시퀀스를 만든다는 의미. 예시 : increment by -1 : 1씩 감소하는 값을 반환해주는 시퀀스를 만든다는 의미. start with 숫자 : 시퀀스번호의 시작값을 지정하는 옵션. default값은 1이다. 예시 : start with 100 : 100부터 시작하는 시퀀스를 만든다는 의미. maxvalue와 minvalue :시퀀스번호의 최댓값, 최소값을 지정하는 옵션. default값은 nomaxvalue와 nominvalue이다. 즉 시스템에 정의되어있는 최대값과 최소값을 쓰겠다는 의미. 시스템 최대값 : 10의 27승 시스템 최소값 : 10의 -26승 cycle 사용하고자하는 컬럼이 PK나 UQ제약조건이 있는 경우 cycle 옵션을 건 경우 중복값이 발생해 에러가 발생할 수 있다. 디폴트값은 nocycle이다. maxvalue나 minvalue를 끝으로 순환한다 즉 다시 처음부터 시작한다. 예시 : maxvalue가 100이면 100값이 지난뒤 다시 1부터 시작 cache 숫자 원하는 숫자만큼 미리 만들어 Shared Pool의 Library Cache에 상주시킴. 메모리에 시퀀스 값을 미리 할당 for 성능향상. 디폴트값은 cache 20이다. cache를 사용하고싶지않다면 nocache를 입력해야한다. CACHE는 시스템 번호를 생성하는 데 필요한 디스크 IO 수를 최소화하여 시퀀스 개체를 사용하는 응용 프로그램의 성능을 향상시킵니다. 전원 오류와 같은 예기치 않은 종료로 인해 캐시에 남아 있는 시퀀스 번호가 손실될 수 있습니다. 값을 1로 설정하는 경우 캐쉬가 없이 스퀀스가 실행되므로 디스크 IO가 매번 일어 납니다. 예시 : cache 5인경우, 시퀀스가 호출될때 미리 만들어진 캐시메모리를 빨리 전달해줌. 1234567891011121314151617//기본 =&gt; 모든 옵션생략시 6개의 옵션의 디폴트값으로 적용됨create sequence 시퀀스명//기본+옵션create sequence 시퀀스명 [increment by n] [start with n] [maxvalue n 또는 nomaxvalue] [minvalue n 또는 nominvalue] [cycle 또는 nocycle] [cache n 또는 nocache]; //예시 (옵션여러개 기입시 콤마필요없다! 절대 찍지말것)create sequence dept_id_seq increment by 10 start with 350 maxvalue 1000; 3. 시퀀스 사용(nextval와 currval) 시퀀스사용하는 방법은 두가지이다 : nextval와 currval 컬럼과 데이터 삽입시 시퀀스 활용하면 용이하다. 여러 테이블에 사용가능하다. 테이블 바뀐다고해서 시퀀스가 처음값으로 반환되는 건 아니다. 시퀀스는 insert, update, select구문을 날릴때마다 시퀀스 값이 올라간다 따라서 의미없는 시퀀스 사용을 자제해야한다 그렇다면 시퀀스를 쓰지않고 마지막 시퀀스 사용값을 어떻게 확인 할 수 있을까? nextval대신 currval을 쓰면 된다 = &gt; select dept_id_seq.currval from dual; WHY? 데이터딕셔너리에 값이 남기때문에! 예시 : A테이블에서 기본 시퀀스를 쓰며 컬럼을 INSERT 5번(마지막 시퀀스 5)했다. 그리고 테이블을 바꿔서 B테이블에서 INSERT를 1번했다 그렇다면 B테이블의 첫번째컬럼 시퀀스는 몇번일까? 정답은 6이다. A테이블에서 마지막 시퀀스 5였으므로 B테이블의 첫번째컬럼은 시퀀스 6이다. 12345678910111213//기본 두가지시퀀스명.nextval시퀀스명.currval//예시 : nextvalinsert into departmentsvalues(dept_id_seq.nextval, 'XXX', 108, 1700);select * from departments;//예시 : currvalselect dept_id_seq.currvalfrom dual; 4. 시퀀스사용시 갭발생하는 이유 주로 rollback때문에 발생한다. rollback때문에 gab이 발생할 수 있다. rollback은 테이블과 관련되어있는 DML을 취소시켜주는 것이지 시퀀스를 취소시켜주는 것은 아니다. 시퀀스를 돌이킬수는 없다. 따라서 갭이 발생했다면 수동으로 데이터를 처리(insert, update등)하면 된다. 예시 : A테이블에서 기본 시퀀스를 쓰며 컬럼을 INSERT 5번(마지막 시퀀스 5)한 뒤 commit을 했다. 그리고 테이블을 바꿔서 B테이블에서 INSERT를 1번했다가 B테이블의 첫번째컬럼 시퀀스는 몇번일까? 정답은 6이다. A테이블에서 마지막 시퀀스 5였으므로 B테이블의 첫번째컬럼은 시퀀스 6이다. 5. 시퀀스 수정(alter) 변경가능 : 시퀀스간격, 최대값, 최소값, cycle옵션, cache옵션 변경불가능 : 시작값 (start with n) 시작값(start with n)을 변경하고 싶다면 시퀀스 삭제하고 새로 생성하면 된다. 1234567891011121314//기본alter sequence 시퀀스명 [increment by n] [maxvalue n 또는 nomaxvalue] [minvalue n 또는 nominvalue] [cycle 또는 nocycle] [cache n 또는 nocache];//예시alter sequence dept_deptid_seq increment by 20 maxvalue n 9999 nocycle nocache; 6. 시퀀스 삭제(drop)12345//기본drop sequence 시퀀스명;//예시drop sequence dept_deptid_seq;","link":"/2020/07/29/200729dbi/"},{"title":"[ITWILL : DB]SQL의 OBJECT종류 : 인덱스(Index), 시노님(Synonym)","text":"ITWILL학원 : 18강 Database BY 정지윤강사1. SQL의 OBJECT 종류 Object 특징 사용방법 정의방법 테이블(Table) 행과 열의 조합으로 구성된 기본 저장단위 select, insert, update, delete create table, alter table, drop table, truncate table 뷰(View) 하나 또는 그 이상의 base테이블로부터 논리적으로 데이터를 추출한 부분집합으로 가상의 논리적인 테이블 select, insert, update, delete create [or replace] view, drop view 시퀀스(Sequence) 자동으로 고유한 숫자값을 생성해주며 주로 기본키 값을 생성하기 위해 사용 시퀀스명.nextval, 시퀀스명.currval create sequence, alter sequence, drop sequence 인덱스(Index) 쿼리(Query) 속도를 향상시키기 위해 사용 X create index, alter index, drop index 시노님(Synonym) object에 대한 또다른 이름의 alias역할 X create synonym, drop synonym 2. 인덱스 개발자에게 table 다음으로 중요한 object! oracle 서버에서 포인터를 사용하여 행의 검색 속도를 높이기 위해 사용하는 object. 테이블이 작거나 자주 갱신이 되는 컬럼 또는 자주 사용하지 않는 컬럼에는 인덱스 생성 권장하지 않음. 자주 변경되는 컬럼인 경우, 오라클은 데이터가 변경될때마다 테이블과 인덱스까지 같이 변경해줘야해서 오히려 성능저하가 생길 수 있음. 자주 사용하지 않는 컬럼인 경우, 인덱스도 오브젝트를 생성하는 것이기때문에 생성할 추가 공간이 필요해서 오히려 성능저하가 나타날 수 있음. 구조 : B Tree (Balanced Tree)구조 참고링크 : B Tree (Balanced Tree) 인덱스 검색 절차 예시 : 인덱스가 없는 컬럼을 기준으로 작업을 요청 -&gt; full table scan작업방식 : 처리속도가 느리다. 인덱스가 있는 컬럼 -&gt; index scan작업방식 : 처리속도가 훨씬 빠르다. 2-1. 인덱스생성(create index) 과 수정과 삭제. 자동생성 : PK 또는 UNIQUE 제약조건이 정의된 컬럼에 자동 생성됨. 수동생성 : 행에 엑세스하는 속도를 높이기 위해 인덱스 생성 가능. 12345678910//생성 기본create index 인덱스명on 테이블명(컬럼명);//수정 기본alter index 인덱스명on 테이블명(칼럼명);//삭제 기본drop index 인덱스명; 3. 시노님(Synonym) = 동의어 객체에 다른 이름을 부여해 주는 object 엘리야스와 뭐가 다를까? 테이블 엘리야스는 쿼리구문안에서만 유효. 쿼리가 끝나면 사라진다. 시노님을 이용하면 DB가 켜져있는 내내 다양한 곳에서 사용가능 하나의 객체에 시노님이 여러개 부여할 수 있을까? 가능! 3-1. 시노님사용법12345678910//생성 기본create synonym 시노님명for 원본object명;//생성 예시create synonym d_sumfor dept_sum_vu;//삭제 기본drop synonym d_sum;","link":"/2020/07/29/200729dbi2/"}],"tags":[{"name":"TIL","slug":"TIL","link":"/tags/TIL/"},{"name":"HTML&amp;CSS","slug":"HTML-CSS","link":"/tags/HTML-CSS/"},{"name":"Review","slug":"Review","link":"/tags/Review/"},{"name":"Web Game","slug":"Web-Game","link":"/tags/Web-Game/"},{"name":"Journal","slug":"Journal","link":"/tags/Journal/"},{"name":"생활코딩","slug":"생활코딩","link":"/tags/%EC%83%9D%ED%99%9C%EC%BD%94%EB%94%A9/"},{"name":"패스트캠퍼스(파이썬웹개발)","slug":"패스트캠퍼스-파이썬웹개발","link":"/tags/%ED%8C%A8%EC%8A%A4%ED%8A%B8%EC%BA%A0%ED%8D%BC%EC%8A%A4-%ED%8C%8C%EC%9D%B4%EC%8D%AC%EC%9B%B9%EA%B0%9C%EB%B0%9C/"},{"name":"ITWILL(JAVA)","slug":"ITWILL-JAVA","link":"/tags/ITWILL-JAVA/"},{"name":"Oracle","slug":"Oracle","link":"/tags/Oracle/"},{"name":"List","slug":"List","link":"/tags/List/"},{"name":"MySQL","slug":"MySQL","link":"/tags/MySQL/"},{"name":"GIT","slug":"GIT","link":"/tags/GIT/"}],"categories":[{"name":"코드스테이츠 PRE35기","slug":"코드스테이츠-PRE35기","link":"/categories/%EC%BD%94%EB%93%9C%EC%8A%A4%ED%85%8C%EC%9D%B4%EC%B8%A0-PRE35%EA%B8%B0/"},{"name":"제주코딩베이스캠프 10기","slug":"제주코딩베이스캠프-10기","link":"/categories/%EC%A0%9C%EC%A3%BC%EC%BD%94%EB%94%A9%EB%B2%A0%EC%9D%B4%EC%8A%A4%EC%BA%A0%ED%94%84-10%EA%B8%B0/"},{"name":"JavaScript","slug":"JavaScript","link":"/categories/JavaScript/"},{"name":"Lectures &amp; Seminars","slug":"Lectures-Seminars","link":"/categories/Lectures-Seminars/"},{"name":"JAVA","slug":"JAVA","link":"/categories/JAVA/"},{"name":"Journal","slug":"Journal","link":"/categories/Journal/"},{"name":"Python","slug":"Python","link":"/categories/Python/"},{"name":"JSP","slug":"JSP","link":"/categories/JSP/"},{"name":"HTML&amp;CSS","slug":"HTML-CSS","link":"/categories/HTML-CSS/"},{"name":"Database","slug":"Database","link":"/categories/Database/"},{"name":"Django","slug":"Django","link":"/categories/Django/"},{"name":"Version control","slug":"Version-control","link":"/categories/Version-control/"},{"name":"오픈소스컨트리뷰톤2020","slug":"오픈소스컨트리뷰톤2020","link":"/categories/%EC%98%A4%ED%94%88%EC%86%8C%EC%8A%A4%EC%BB%A8%ED%8A%B8%EB%A6%AC%EB%B7%B0%ED%86%A42020/"}]}